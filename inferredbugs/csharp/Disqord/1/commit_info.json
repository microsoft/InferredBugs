{
    "hash": "a94e11e98635e109fb8fdb212e903df2ab5564f1",
    "message": "Made GUILD_MEMBER_UPDATE cache members.",
    "file_num_lines": 32,
    "diff_parsed": {
        "added": [
            [
                11,
                "            CachedMember oldMember = null;"
            ],
            [
                12,
                "            IMember newMember = null;"
            ],
            [
                13,
                "            if (CacheProvider.TryGetMembers(model.GuildId, out var memberCache))"
            ],
            [
                15,
                "                if (memberCache.TryGetValue(model.User.Value.Id, out var member))"
            ],
            [
                16,
                "                {"
            ],
            [
                17,
                "                    newMember = member;"
            ],
            [
                18,
                "                    var oldUser = member.SharedUser.Clone() as CachedSharedUser;"
            ],
            [
                19,
                "                    oldMember = member.Clone() as CachedMember;"
            ],
            [
                20,
                "                    oldMember.SharedUser = oldUser;"
            ],
            [
                21,
                "                    newMember.Update(model);"
            ],
            [
                22,
                "                }"
            ],
            [
                23,
                "                else if (CacheProvider.TryGetUsers(out var userCache))"
            ],
            [
                24,
                "                {"
            ],
            [
                25,
                "                    newMember = Dispatcher.GetOrAddMember(userCache, memberCache, model.GuildId, model);"
            ],
            [
                26,
                "                }"
            ],
            [
                29,
                "            newMember ??= new TransientMember(Client, model.GuildId, model);"
            ],
            [
                30,
                ""
            ]
        ],
        "deleted": [
            [
                11,
                "            CachedMember oldMember;"
            ],
            [
                12,
                "            IMember newMember;"
            ],
            [
                13,
                "            if (CacheProvider.TryGetMembers(model.GuildId, out var cache) && cache.TryGetValue(model.User.Value.Id, out var member))"
            ],
            [
                15,
                "                newMember = member;"
            ],
            [
                16,
                "                var oldUser = member.SharedUser.Clone() as CachedSharedUser;"
            ],
            [
                17,
                "                oldMember = member.Clone() as CachedMember;"
            ],
            [
                18,
                "                oldMember.SharedUser = oldUser;"
            ],
            [
                19,
                "                newMember.Update(model);"
            ],
            [
                20,
                "            }"
            ],
            [
                21,
                "            else"
            ],
            [
                22,
                "            {"
            ],
            [
                23,
                "                oldMember = null;"
            ],
            [
                24,
                "                newMember = new TransientMember(Client, model.GuildId, model);"
            ]
        ]
    },
    "num_lines_added": 17,
    "num_lines_removed": 13
}