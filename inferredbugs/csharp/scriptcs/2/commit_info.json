{
    "hash": "98068e25cb8b0e2d6c11fd1f50d80502fe92f337",
    "message": "refactor:\n - redundant code\n - line length\n - guard clauses\n - EOL at end of file\n - readonly fields\n - replace if with null coalesce\n - replace if with inline conditional\n - whitespace",
    "file_num_lines": 89,
    "diff_parsed": {
        "added": [
            [
                1,
                "\ufeffusing Common.Logging;"
            ],
            [
                12,
                "        private readonly IDictionary<string, AssemblyInfo> _assemblyInfoMap;"
            ],
            [
                13,
                ""
            ],
            [
                19,
                "        public AppDomainAssemblyResolver("
            ],
            [
                20,
                "            ILog logger,"
            ],
            [
                21,
                "            IFileSystem fileSystem,"
            ],
            [
                22,
                "            IAssemblyResolver resolver,"
            ],
            [
                23,
                "            IAssemblyUtility assemblyUtility,"
            ],
            [
                24,
                "            IDictionary<string, AssemblyInfo> assemblyInfoMap = null,"
            ],
            [
                25,
                "            Func<object, ResolveEventArgs,"
            ],
            [
                26,
                "            Assembly> resolveHandler = null)"
            ],
            [
                28,
                "            _assemblyInfoMap = assemblyInfoMap ?? new Dictionary<string, AssemblyInfo>();"
            ],
            [
                43,
                "        {"
            ],
            [
                44,
                "            AssemblyInfo assemblyInfo;"
            ],
            [
                46,
                ""
            ],
            [
                48,
                "            {"
            ],
            [
                49,
                "                lock (assemblyInfo)"
            ],
            [
                50,
                "                {"
            ],
            [
                52,
                "                    {"
            ],
            [
                54,
                "                    }"
            ],
            [
                56,
                ""
            ],
            [
                60,
                ""
            ],
            [
                78,
                "            Guard.AgainstNullArgument(\"assemblyPaths\", assemblyPaths);"
            ],
            [
                79,
                ""
            ],
            [
                82,
                "                var info = new AssemblyInfo { Path = assemblyPath };"
            ],
            [
                86,
                "                AssemblyInfo foundInfo;"
            ],
            [
                87,
                "                var found = _assemblyInfoMap.TryGetValue(name.Name, out foundInfo);"
            ],
            [
                91,
                "                    // if the assembly being passed is a higher version"
            ],
            [
                92,
                "                    // and an assembly with it's name has already been resolved"
            ],
            [
                95,
                "                        _logger.WarnFormat("
            ],
            [
                96,
                "                            \"Conflict: Assembly {0} with version {1} cannot be added as it has already been resolved\","
            ],
            [
                97,
                "                            assemblyPath,"
            ],
            [
                98,
                "                            info.Version);"
            ],
            [
                99,
                ""
            ],
            [
                102,
                ""
            ]
        ],
        "deleted": [
            [
                1,
                "\ufeffusing System.Data;"
            ],
            [
                2,
                "using Common.Logging;"
            ],
            [
                5,
                "using System.Linq;"
            ],
            [
                7,
                "using System.Text;"
            ],
            [
                8,
                "using System.Threading.Tasks;"
            ],
            [
                20,
                "        private IDictionary<string, AssemblyInfo> _assemblyInfoMap;"
            ],
            [
                22,
                "        public AppDomainAssemblyResolver(ILog logger, IFileSystem fileSystem, IAssemblyResolver resolver, IAssemblyUtility assemblyUtility, IDictionary<string, AssemblyInfo> assemblyInfoMap = null, Func<object, ResolveEventArgs, Assembly> resolveHandler = null)"
            ],
            [
                24,
                "            _assemblyInfoMap = assemblyInfoMap;"
            ],
            [
                25,
                "            if (_assemblyInfoMap == null)"
            ],
            [
                26,
                "            {"
            ],
            [
                27,
                "                _assemblyInfoMap = new Dictionary<string, AssemblyInfo>();"
            ],
            [
                28,
                "            }"
            ],
            [
                29,
                ""
            ],
            [
                31,
                ""
            ],
            [
                45,
                "        {"
            ],
            [
                46,
                "            AssemblyInfo assemblyInfo = null;"
            ],
            [
                48,
                ""
            ],
            [
                50,
                "            {"
            ],
            [
                51,
                "                lock(assemblyInfo)"
            ],
            [
                52,
                "                {"
            ],
            [
                78,
                "                var info = new AssemblyInfo {Path = assemblyPath};"
            ],
            [
                82,
                "                AssemblyInfo foundInfo = null;"
            ],
            [
                83,
                "                var found = _assemblyInfoMap.TryGetValue(name.Name, out foundInfo );"
            ],
            [
                87,
                "                    //if the assembly being passed is a higher version and an assembly with it's name has already been resolved"
            ],
            [
                90,
                "                        _logger.WarnFormat(\"Conflict: Assembly {0} with version {1} cannot be added as it has already been resolved\", assemblyPath, info.Version);"
            ]
        ]
    },
    "num_lines_added": 35,
    "num_lines_removed": 25
}