        private void InitializeComponent()
        {
            #region Commands

            saveCommand = new Command();
            saveAsCommand = new Command();
            exportCommand = new Command();
            importCommand = new Command();

            #endregion

            #region Controls

            #region Buttons

            saveButton = new ButtonToolStripItem
            {
                Command = saveCommand,
                Image = MenuSaveResource
            };

            saveAsButton = new ButtonToolStripItem
            {
                Command = saveAsCommand,
                Image = MenuSaveAsResource
            };

            exportButton = new ButtonToolStripItem
            {
                Command = exportCommand,
                Image = MenuExportResource
            };

            importButton = new ButtonToolStripItem
            {
                Command = importCommand,
                Image = MenuImportResource
            };

            #endregion

            #region Default

            images = new ListBox
            {
                ItemImageBinding = Binding.Property<Image>(nameof(ImageElement.Image)),
                ItemTextBinding = Binding.Property<string>(nameof(ImageElement.Text)),
            };

            imageView = new ImageViewEx();
            imagePalette = new PaletteView { Size = new Size(200, -1),  };

            var widthLabel = new Label { Text = "Width:" };
            var heightLabel = new Label { Text = "Height:" };
            var formatLabel = new Label { Text = "Format:" };
            var paletteLabel = new Label { Text = "Palette:" };

            width = new Label();
            height = new Label();
            formats = new ComboBox();
            palettes = new ComboBox();

            #endregion

            #region Toolstrip

            var mainToolStrip = new ToolStrip
            {
                Items =
                {
                    saveButton,
                    saveAsButton,
                    new SplitterToolStripItem(),
                    exportButton,
                    importButton
                }
            };

            #endregion

            #region Layouts

            var imageLayout = new StackLayout
            {
                Spacing = 3,
                Orientation = Orientation.Vertical,
                HorizontalContentAlignment = HorizontalAlignment.Stretch,
                Items =
                {
                    new StackLayoutItem(imageView) { Expand = true, HorizontalAlignment = HorizontalAlignment.Stretch },
                    new TableLayout
                    {
                        Spacing = new Size(3, 3),
                        Rows =
                        {
                            new TableRow
                            {
                                Cells =
                                {
                                    widthLabel,
                                    width,
                                    heightLabel,
                                    height,
                                    new TableCell { ScaleWidth = true }
                                }
                            },
                            new TableRow
                            {
                                Cells =
                                {
                                    formatLabel,
                                    formats,
                                    paletteLabel,
                                    palettes,
                                    new TableCell { ScaleWidth = true }
                                }
                            }
                        }
                    }
                }
            };

            var listLayout = new StackLayout
            {
                Spacing = 3,
                VerticalContentAlignment = VerticalAlignment.Stretch,
                Orientation = Orientation.Vertical,
                Items =
                {
                    new StackLayoutItem(images, true) { HorizontalAlignment = HorizontalAlignment.Stretch },
                    new StackLayoutItem(imagePalette, true)
                }
            };

            var mainLayout = new TableLayout
            {
                Spacing = new Size(3, 3),
                Rows =
                {
                    new TableRow
                    {
                        Cells =
                        {
                            new TableCell(imageLayout) { ScaleWidth = true },
                            listLayout
                        }
                    }
                }
            };

            #endregion

            #endregion

            Content = new TableLayout
            {
                Rows =
                {
                    new TableRow(new Panel { Content = mainToolStrip, Size = new Size(-1, (int)ToolStripItem.Height + 6) }),
                    mainLayout
                }
            };
        }