{
    "hash": "57801f40cb6ebfa8049e9d4928b3cc775617ced0",
    "message": "Make description and Synopsis work and add a bunch of copy-pasted code",
    "file_num_lines": 165,
    "diff_parsed": {
        "added": [
            [
                114,
                "                            // SYNOPSIS"
            ],
            [
                117,
                "                            AddSynopsis();"
            ],
            [
                119,
                ""
            ],
            [
                120,
                "                            // DESCRIPTION"
            ],
            [
                121,
                "                            PushTag(\"maml:description\");"
            ],
            [
                122,
                "                            AddDescription();"
            ],
            [
                123,
                "                            PopTag(\"maml:description\");"
            ],
            [
                124,
                ""
            ],
            [
                137,
                "        private void AddSynopsis()"
            ],
            [
                138,
                "        {"
            ],
            [
                139,
                "            var node = GetNextNode();"
            ],
            [
                140,
                ""
            ],
            [
                141,
                "            // check for appropriate header"
            ],
            [
                142,
                "            if (node.NodeType != MarkdownNodeType.Heading)"
            ],
            [
                143,
                "            {"
            ],
            [
                144,
                "                throw new HelpSchemaException(\"Expect ###SYNOPSIS\");"
            ],
            [
                145,
                "            }"
            ],
            [
                146,
                ""
            ],
            [
                147,
                "            var headingNode = node as HeadingNode;"
            ],
            [
                148,
                "            if (headingNode.HeadingLevel != COMMAND_ENTRIES_HEADING_LEVEL)"
            ],
            [
                149,
                "            {"
            ],
            [
                150,
                "                throw new HelpSchemaException(\"Expect ###SYNOPSIS\");"
            ],
            [
                151,
                "            }"
            ],
            [
                152,
                ""
            ],
            [
                153,
                "            if (StringComparer.OrdinalIgnoreCase.Compare(headingNode.Text, \"SYNOPSIS\") != 0)"
            ],
            [
                154,
                "            {"
            ],
            [
                155,
                "                throw new HelpSchemaException(\"Expect ###SYNOPSIS\");"
            ],
            [
                156,
                "            }"
            ],
            [
                157,
                ""
            ],
            [
                158,
                "            node = GetNextNode();"
            ],
            [
                159,
                "            if (node.NodeType != MarkdownNodeType.Paragraph)"
            ],
            [
                160,
                "            {"
            ],
            [
                161,
                "                throw new HelpSchemaException(\"Expect SYNOPSIS text\");"
            ],
            [
                162,
                "            }"
            ],
            [
                163,
                ""
            ],
            [
                164,
                "            PushTag(\"maml:description\");"
            ],
            [
                165,
                "            PushTag(\"maml:para\");"
            ],
            [
                166,
                "            _stringBuilder.AppendLine((node as ParagraphNode).Text);"
            ],
            [
                167,
                "            PopTag(2);"
            ],
            [
                168,
                "        }"
            ],
            [
                169,
                ""
            ],
            [
                174,
                "            if (node == null)"
            ],
            [
                175,
                "            {"
            ],
            [
                176,
                "                return;"
            ],
            [
                177,
                "            }"
            ],
            [
                178,
                ""
            ],
            [
                188,
                "                throw new HelpSchemaException(\"Expect ###SYNOPSIS\");"
            ],
            [
                191,
                "            if (StringComparer.OrdinalIgnoreCase.Compare(headingNode.Text, \"SYNOPSIS\") != 0)"
            ],
            [
                193,
                "                throw new HelpSchemaException(\"Expect ###SYNOPSIS\");"
            ],
            [
                199,
                "                throw new HelpSchemaException(\"Expect SYNOPSIS text\");"
            ]
        ],
        "deleted": [
            [
                15,
                "        private enum State"
            ],
            [
                16,
                "        {"
            ],
            [
                17,
                "            None,"
            ],
            [
                18,
                "            Command,"
            ],
            [
                19,
                ""
            ],
            [
                20,
                "        }"
            ],
            [
                24,
                "        private State _state;"
            ],
            [
                83,
                "            _state = State.None;"
            ],
            [
                121,
                "                            _state = State.Command;"
            ],
            [
                125,
                "                            AddDescription();"
            ],
            [
                152,
                "                throw new HelpSchemaException(\"Expect ###DESCRIPTION\");"
            ],
            [
                155,
                "            if (StringComparer.OrdinalIgnoreCase.Compare(headingNode.Text, \"DESCRIPTION\") != 0)"
            ],
            [
                157,
                "                throw new HelpSchemaException(\"Expect ###DESCRIPTION\");"
            ],
            [
                163,
                "                throw new HelpSchemaException(\"Expect DESCRIPTION text\");"
            ]
        ]
    },
    "num_lines_added": 50,
    "num_lines_removed": 14
}