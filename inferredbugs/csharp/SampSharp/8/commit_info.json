{
    "hash": "21fec7ab467a2c5e30736cf254091f95fe9f1b6b",
    "message": "Detect and automatically use hosted game mode client. Release coreclr module after cleanup.",
    "file_num_lines": 283,
    "diff_parsed": {
        "added": [
            [
                18,
                "using System.Linq;"
            ],
            [
                19,
                "using System.Net;"
            ],
            [
                20,
                "using System.Net.Sockets;"
            ],
            [
                42,
                ""
            ],
            [
                43,
                "        private const string DefaultUnixDomainSocketPath = \"/tmp/SampSharp\";"
            ],
            [
                44,
                "        private const string DefaultPipeName = \"SampSharp\";"
            ],
            [
                45,
                "        private const string DefaultTcpIp = \"127.0.0.1\";"
            ],
            [
                46,
                "        private const int DefaultTcpPort = 8888;"
            ],
            [
                47,
                ""
            ],
            [
                50,
                "        ///     Initializes a new instance of the <see cref=\"GameModeBuilder\"/> class."
            ],
            [
                54,
                "            ParseArguments();"
            ],
            [
                57,
                "        #region Communication"
            ],
            [
                58,
                ""
            ],
            [
                60,
                "        ///     Use the specified communication client to communicate with the SampSharp server."
            ],
            [
                62,
                "        /// <param name=\"communicationClient\">The communication client.</param>"
            ],
            [
                64,
                "        public GameModeBuilder UseCommunicationClient(ICommunicationClient communicationClient)"
            ],
            [
                66,
                "            _communicationClient = communicationClient ?? throw new ArgumentNullException(nameof(communicationClient));"
            ],
            [
                72,
                "        ///     Use a named pipe with the specified <paramref name=\"pipeName\" /> to communicate with the SampSharp server."
            ],
            [
                74,
                "        /// <param name=\"pipeName\">Name of the pipe.</param>"
            ],
            [
                76,
                "        public GameModeBuilder UsePipe(string pipeName)"
            ],
            [
                78,
                "            if (pipeName == null) throw new ArgumentNullException(nameof(pipeName));"
            ],
            [
                79,
                "            return UseCommunicationClient(new NamedPipeClient(pipeName));"
            ],
            [
                81,
                ""
            ],
            [
                101,
                "            return UseCommunicationClient(new TcpCommunicationClient(DefaultTcpIp, port));"
            ],
            [
                116,
                "        #endregion"
            ],
            [
                117,
                ""
            ],
            [
                118,
                "        #region Encoding"
            ],
            [
                119,
                ""
            ],
            [
                121,
                "        ///     Use the specified <paramref name=\"encoding\"/> when en/decoding text messages sent to/from the server."
            ],
            [
                123,
                "        /// <param name=\"encoding\">The encoding to use when en/decoding text messages send to/from the server.</param>"
            ],
            [
                125,
                "        public GameModeBuilder UseEncoding(Encoding encoding)"
            ],
            [
                127,
                "            _encoding = encoding ?? throw new ArgumentNullException(nameof(encoding));"
            ],
            [
                132,
                "        ///     Use the code page described by the file at the specified <paramref name=\"path\"/> when en/decoding text messages sent to/from the server."
            ],
            [
                134,
                "        /// <param name=\"path\">The path to the code page file.</param>"
            ],
            [
                136,
                "        public GameModeBuilder UseEncoding(string path)"
            ],
            [
                138,
                "            if (path == null) throw new ArgumentNullException(nameof(path));"
            ],
            [
                139,
                "            return UseEncoding(CodePageEncoding.Load(path));"
            ],
            [
                143,
                "        ///     Use the code page described by the specified <paramref name=\"stream\"/> when en/decoding text messages sent to/from the server."
            ],
            [
                145,
                "        /// <param name=\"stream\">The stream containing the code page definition.</param>"
            ],
            [
                147,
                "        public GameModeBuilder UseEncoding(Stream stream)"
            ],
            [
                149,
                "            return UseEncoding(CodePageEncoding.Load(stream));"
            ],
            [
                152,
                "        #endregion"
            ],
            [
                153,
                ""
            ],
            [
                154,
                "        #region Game Mode Provider"
            ],
            [
                155,
                ""
            ],
            [
                177,
                "        #endregion"
            ],
            [
                178,
                ""
            ],
            [
                179,
                "        /// <summary>"
            ],
            [
                180,
                "        ///     Redirect the console output to the server."
            ],
            [
                181,
                "        /// </summary>"
            ],
            [
                182,
                "        /// <returns>The updated game mode configuration builder.</returns>"
            ],
            [
                183,
                "        public GameModeBuilder RedirectConsoleOutput()"
            ],
            [
                184,
                "        {"
            ],
            [
                185,
                "            _redirectConsoleOutput = true;"
            ],
            [
                186,
                "            return this;"
            ],
            [
                187,
                "        }"
            ],
            [
                188,
                ""
            ],
            [
                189,
                "        #region Logging"
            ],
            [
                190,
                ""
            ],
            [
                214,
                "        #endregion"
            ],
            [
                215,
                ""
            ],
            [
                216,
                "        /// <summary>"
            ],
            [
                217,
                "        ///     Indicate the game mode will be hosted in the SA-MP server process."
            ],
            [
                218,
                "        /// </summary>"
            ],
            [
                219,
                "        /// <returns>The updated game mode configuration builder.</returns>"
            ],
            [
                220,
                "        public GameModeBuilder UseHosted()"
            ],
            [
                221,
                "        {"
            ],
            [
                222,
                "            _hosted = true;"
            ],
            [
                223,
                "            return RedirectConsoleOutput();"
            ],
            [
                224,
                "        }"
            ],
            [
                225,
                ""
            ],
            [
                230,
                "        /// <remarks>The exit behaviour is ignored when using a hosted game mode environment.</remarks>"
            ],
            [
                267,
                "            ApplyDefaults();"
            ],
            [
                268,
                ""
            ],
            [
                269,
                "            if (!_hosted && _communicationClient == null)"
            ],
            [
                310,
                "        private void ParseArguments()"
            ],
            [
                311,
                "        {"
            ],
            [
                312,
                "            var args = Environment.GetCommandLineArgs();"
            ],
            [
                313,
                ""
            ],
            [
                314,
                "            if (args == null || args.Length == 0)"
            ],
            [
                315,
                "            {"
            ],
            [
                316,
                "                return;"
            ],
            [
                317,
                "            }"
            ],
            [
                318,
                ""
            ],
            [
                319,
                "            for (int i = 0; i < args.Length; i++)"
            ],
            [
                320,
                "            {"
            ],
            [
                321,
                "                string option = null;"
            ],
            [
                322,
                "                string value;"
            ],
            [
                323,
                "                if (args[i].Length < 2 || !args[i].StartsWith(\"-\"))"
            ],
            [
                324,
                "                    continue;"
            ],
            [
                325,
                ""
            ],
            [
                326,
                "                if (args[i].StartsWith(\"--\"))"
            ],
            [
                327,
                "                {"
            ],
            [
                328,
                "                    option = args[i];"
            ],
            [
                329,
                "                    value = args.Length > i + 1"
            ],
            [
                330,
                "                        ? args[i + 1]"
            ],
            [
                331,
                "                        : null;"
            ],
            [
                332,
                "                }"
            ],
            [
                333,
                "                else"
            ],
            [
                334,
                "                {"
            ],
            [
                335,
                "                    option = args[i].Substring(0, 2);"
            ],
            [
                336,
                "                    value = args[i].Length > 2"
            ],
            [
                337,
                "                        ? args[i].Substring(2)"
            ],
            [
                338,
                "                        : args.Length > i + 1"
            ],
            [
                339,
                "                            ? args[i + 1]"
            ],
            [
                340,
                "                            : null;"
            ],
            [
                341,
                "                }"
            ],
            [
                342,
                ""
            ],
            [
                343,
                "                switch (option)"
            ],
            [
                344,
                "                {"
            ],
            [
                345,
                "                    case \"--hosted\":"
            ],
            [
                346,
                "                    case \"-h\":"
            ],
            [
                347,
                "                        UseHosted();"
            ],
            [
                348,
                "                        break;"
            ],
            [
                349,
                "                    case \"--redirect-console-output\":"
            ],
            [
                350,
                "                    case \"-r\":"
            ],
            [
                351,
                "                        RedirectConsoleOutput();"
            ],
            [
                352,
                "                        break;"
            ],
            [
                353,
                "                    case \"--pipe\":"
            ],
            [
                354,
                "                    case \"-p\":"
            ],
            [
                355,
                "                        if (value != null && !value.StartsWith(\"-\"))"
            ],
            [
                356,
                "                        {"
            ],
            [
                357,
                "                            UsePipe(value);"
            ],
            [
                358,
                "                            i++;"
            ],
            [
                359,
                "                        }"
            ],
            [
                360,
                "                        else"
            ],
            [
                361,
                "                        {"
            ],
            [
                362,
                "                            UsePipe(DefaultPipeName);"
            ],
            [
                363,
                "                        }"
            ],
            [
                364,
                "                        break;"
            ],
            [
                365,
                "                    case \"--unix\":"
            ],
            [
                366,
                "                    case \"-u\":"
            ],
            [
                367,
                "                        if (value != null && !value.StartsWith(\"-\"))"
            ],
            [
                368,
                "                        {"
            ],
            [
                369,
                "                            UseUnixDomainSocket(value);"
            ],
            [
                370,
                "                            i++;"
            ],
            [
                371,
                "                        }"
            ],
            [
                372,
                "                        else"
            ],
            [
                373,
                "                        {"
            ],
            [
                374,
                "                            UseUnixDomainSocket(DefaultUnixDomainSocketPath);"
            ],
            [
                375,
                "                        }"
            ],
            [
                376,
                "                        break;"
            ],
            [
                377,
                "                    case \"--tcp\":"
            ],
            [
                378,
                "                        var ip = DefaultTcpIp;"
            ],
            [
                379,
                "                        var port = DefaultTcpPort;"
            ],
            [
                380,
                ""
            ],
            [
                381,
                "                        if (value != null && !value.StartsWith(\"-\"))"
            ],
            [
                382,
                "                        {"
            ],
            [
                383,
                "                            var colon = value.IndexOf(\":\", StringComparison.Ordinal);"
            ],
            [
                384,
                ""
            ],
            [
                385,
                "                            if (colon < 0)"
            ],
            [
                386,
                "                            {"
            ],
            [
                387,
                "                                if (IPAddress.TryParse(value.Substring(0, colon), out var addr) && addr.AddressFamily == AddressFamily.InterNetwork)"
            ],
            [
                388,
                "                                    ip = value.Substring(0, colon);"
            ],
            [
                389,
                "                                int.TryParse(value.Substring(colon + 1), out port);"
            ],
            [
                390,
                "                            }"
            ],
            [
                391,
                "                            else"
            ],
            [
                392,
                "                            {"
            ],
            [
                393,
                "                                int.TryParse(value, out port);"
            ],
            [
                394,
                "                            }"
            ],
            [
                395,
                ""
            ],
            [
                396,
                "                            i++;"
            ],
            [
                397,
                "                        }"
            ],
            [
                398,
                ""
            ],
            [
                399,
                "                        UseTcpClient(ip, port);"
            ],
            [
                400,
                "                        break;"
            ],
            [
                401,
                "                    case \"--log-level\":"
            ],
            [
                402,
                "                    case \"-l\":"
            ],
            [
                403,
                "                        if (value == null)"
            ],
            [
                404,
                "                            break;"
            ],
            [
                405,
                ""
            ],
            [
                406,
                "                        if (Enum.TryParse<CoreLogLevel>(value, out var level))"
            ],
            [
                407,
                "                            UseLogLevel(level);"
            ],
            [
                408,
                ""
            ],
            [
                409,
                "                        i++;"
            ],
            [
                410,
                "                        break;"
            ],
            [
                411,
                "                    case \"--start-behaviour\":"
            ],
            [
                412,
                "                    case \"-s\":"
            ],
            [
                413,
                "                        if (value == null)"
            ],
            [
                414,
                "                            break;"
            ],
            [
                415,
                ""
            ],
            [
                416,
                "                        if (Enum.TryParse<GameModeStartBehaviour>(value, out var startBehaviour))"
            ],
            [
                417,
                "                            UseStartBehaviour(startBehaviour);"
            ],
            [
                418,
                ""
            ],
            [
                419,
                "                        i++;"
            ],
            [
                420,
                "                        break;"
            ],
            [
                421,
                "                    case \"--exit-behaviour\":"
            ],
            [
                422,
                "                    case \"-e\":"
            ],
            [
                423,
                "                        if (value == null)"
            ],
            [
                424,
                "                            break;"
            ],
            [
                425,
                ""
            ],
            [
                426,
                "                        if (Enum.TryParse<GameModeExitBehaviour>(value, out var exitBehaviour))"
            ],
            [
                427,
                "                            UseExitBehaviour(exitBehaviour);"
            ],
            [
                428,
                ""
            ],
            [
                429,
                "                        i++;"
            ],
            [
                430,
                "                        break;"
            ],
            [
                431,
                "                }"
            ],
            [
                432,
                "            }"
            ],
            [
                433,
                "        }"
            ],
            [
                434,
                ""
            ],
            [
                435,
                "        private void ApplyDefaults()"
            ],
            [
                436,
                "        {"
            ],
            [
                437,
                "            if (_communicationClient == null && !_hosted)"
            ],
            [
                438,
                "            {"
            ],
            [
                439,
                "                if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))"
            ],
            [
                440,
                "                    _communicationClient = new UnixDomainSocketCommunicationClient(DefaultUnixDomainSocketPath);"
            ],
            [
                441,
                "                else if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows))"
            ],
            [
                442,
                "                    _communicationClient = new NamedPipeClient(DefaultPipeName);"
            ],
            [
                443,
                "            }"
            ],
            [
                444,
                "        }"
            ],
            [
                445,
                ""
            ]
        ],
        "deleted": [
            [
                41,
                "        ///     Initializes a new instance of the <see cref=\"GameModeBuilder\" /> class."
            ],
            [
                45,
                "            if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))"
            ],
            [
                46,
                "                _communicationClient = new UnixDomainSocketCommunicationClient(\"/tmp/SampSharp\");"
            ],
            [
                47,
                "            else if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows))"
            ],
            [
                48,
                "                _communicationClient = new NamedPipeClient(\"SampSharp\");"
            ],
            [
                52,
                "        ///     Use a named pipe with the specified <paramref name=\"pipeName\" /> to communicate with the SampSharp server."
            ],
            [
                54,
                "        /// <param name=\"pipeName\">Name of the pipe.</param>"
            ],
            [
                56,
                "        public GameModeBuilder UsePipe(string pipeName)"
            ],
            [
                58,
                "            if (pipeName == null) throw new ArgumentNullException(nameof(pipeName));"
            ],
            [
                59,
                "            return UseCommunicationClient(new NamedPipeClient(pipeName));"
            ],
            [
                60,
                "        }"
            ],
            [
                62,
                "        /// <summary>"
            ],
            [
                63,
                "        ///     Use the specified <paramref name=\"encoding\"/> when en/decoding text messages sent to/from the server."
            ],
            [
                64,
                "        /// </summary>"
            ],
            [
                65,
                "        /// <param name=\"encoding\">The encoding to use when en/decoding text messages send to/from the server.</param>"
            ],
            [
                66,
                "        /// <returns>The updated game mode configuration builder.</returns>"
            ],
            [
                67,
                "        public GameModeBuilder UseEncoding(Encoding encoding)"
            ],
            [
                68,
                "        {"
            ],
            [
                69,
                "            _encoding = encoding ?? throw new ArgumentNullException(nameof(encoding));"
            ],
            [
                74,
                "        ///     Use the code page described by the file at the specified <paramref name=\"path\"/> when en/decoding text messages sent to/from the server."
            ],
            [
                75,
                "        /// </summary>"
            ],
            [
                76,
                "        /// <param name=\"path\">The path to the code page file.</param>"
            ],
            [
                77,
                "        /// <returns>The updated game mode configuration builder.</returns>"
            ],
            [
                78,
                "        public GameModeBuilder UseEncoding(string path)"
            ],
            [
                79,
                "        {"
            ],
            [
                80,
                "            if (path == null) throw new ArgumentNullException(nameof(path));"
            ],
            [
                81,
                "            return UseEncoding(CodePageEncoding.Load(path));"
            ],
            [
                82,
                "        }"
            ],
            [
                83,
                ""
            ],
            [
                84,
                "        /// <summary>"
            ],
            [
                85,
                "        ///     Use the code page described by the specified <paramref name=\"stream\"/> when en/decoding text messages sent to/from the server."
            ],
            [
                87,
                "        /// <param name=\"stream\">The stream containing the code page definition.</param>"
            ],
            [
                89,
                "        public GameModeBuilder UseEncoding(Stream stream)"
            ],
            [
                91,
                "            return UseEncoding(CodePageEncoding.Load(stream));"
            ],
            [
                93,
                ""
            ],
            [
                113,
                "            return UseCommunicationClient(new TcpCommunicationClient(\"127.0.0.1\", port));"
            ],
            [
                129,
                "        ///     Use the specified communication client to communicate with the SampSharp server."
            ],
            [
                131,
                "        /// <param name=\"communicationClient\">The communication client.</param>"
            ],
            [
                133,
                "        public GameModeBuilder UseCommunicationClient(ICommunicationClient communicationClient)"
            ],
            [
                135,
                "            _communicationClient = communicationClient ?? throw new ArgumentNullException(nameof(communicationClient));"
            ],
            [
                140,
                "        ///     Indicate the game mode will be hosted in the SA-MP server process."
            ],
            [
                143,
                "        public GameModeBuilder UseHosted()"
            ],
            [
                145,
                "            _hosted = true;"
            ],
            [
                146,
                "            return RedirectConsoleOutput();"
            ],
            [
                150,
                "        ///     Redirect the console output to the server."
            ],
            [
                153,
                "        public GameModeBuilder RedirectConsoleOutput()"
            ],
            [
                155,
                "            _redirectConsoleOutput = true;"
            ],
            [
                156,
                "            return this;"
            ],
            [
                243,
                "            if (_communicationClient == null)"
            ]
        ]
    },
    "num_lines_added": 211,
    "num_lines_removed": 49
}