{
    "hash": "4a680e6b763a935ce63c6b23d5903e658e85103c",
    "message": "fix(module: table): Unify FieldName, add DisplayAttribute for DiplayName, fix Filter for DataIndex (#1372)\n\n* fix(module: table): Unify FieldName value\r\n\r\n* fix(module: table): Get column name from DisplayAttribute\r\n\r\n* fix(module: table): Filter for DataIndex\r\n\r\n* docs(module: table): Intuitive sorterCompare for Filter demo\r\n\r\n* fix(module: table): fix header title doesn't display when Sortable is false\r\n\r\nCo-authored-by: James Yeung <shunjiey@hotmail.com>",
    "file_num_lines": 97,
    "diff_parsed": {
        "added": [
            [
                26,
                "        private LambdaExpression _getFieldExpression;"
            ],
            [
                30,
                "        public FilterModel(LambdaExpression getFieldExpression, string fieldName, Expression<Func<TField, TField, bool>> onFilter, IList<TableFilter<TField>> filters, TableFilterType filterType)"
            ],
            [
                32,
                "            this._getFieldExpression = getFieldExpression;"
            ],
            [
                33,
                "            this.FieldName = fieldName;"
            ],
            [
                53,
                ""
            ],
            [
                54,
                "            var sourceExpression = _getFieldExpression.Parameters[0];"
            ],
            [
                59,
                "                lambda = Expression.Constant(false, typeof(bool));"
            ],
            [
                72,
                "                    lambda = Expression.OrElse(lambda!, Expression.Invoke(OnFilter, Expression.Constant(filter.Value, typeof(TField)), _getFieldExpression.Body));"
            ],
            [
                74,
                "                else // TableFilterType.FeildType"
            ],
            [
                79,
                "                        constantExpression = Expression.Constant(null, typeof(TField));"
            ],
            [
                85,
                "                    var expression = filterExpression!.GetFilterExpression(filter.FilterCompareOperator, _getFieldExpression.Body, constantExpression);"
            ]
        ],
        "deleted": [
            [
                26,
                "        private PropertyInfo _propertyInfo;"
            ],
            [
                30,
                "        public FilterModel(PropertyInfo propertyInfo, Expression<Func<TField, TField, bool>> onFilter, IList<TableFilter<TField>> filters, TableFilterType filterType)"
            ],
            [
                32,
                "            this._propertyInfo = propertyInfo;"
            ],
            [
                33,
                "            this.FieldName = _propertyInfo.Name;"
            ],
            [
                53,
                "            var sourceExpression = Expression.Parameter(typeof(TItem));"
            ],
            [
                54,
                "            var propertyExpression = Expression.Property(sourceExpression, _propertyInfo);"
            ],
            [
                59,
                "                lambda = Expression.Invoke((Expression<Func<bool>>)(() => false));"
            ],
            [
                72,
                "                    lambda = Expression.OrElse(lambda, Expression.Invoke(OnFilter, Expression.Constant(filter.Value, typeof(TField)), propertyExpression));"
            ],
            [
                74,
                "                else"
            ],
            [
                76,
                ""
            ],
            [
                80,
                "                        constantExpression = Expression.Constant(null, _propertyInfo.PropertyType);"
            ],
            [
                86,
                "                    var expression = filterExpression.GetFilterExpression(filter.FilterCompareOperator, propertyExpression, constantExpression);"
            ]
        ]
    },
    "num_lines_added": 11,
    "num_lines_removed": 12
}