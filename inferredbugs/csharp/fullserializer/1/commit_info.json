{
    "hash": "73edd844a9c7894719f5c94bc312dad739ac97a7",
    "message": "Fix deserializing into an existing list",
    "file_num_lines": 95,
    "diff_parsed": {
        "added": [
            [
                49,
                "            // For general strategy, instance may already have items in it. We will try to deserialize into"
            ],
            [
                50,
                "            // the existing element."
            ],
            [
                53,
                "            var getMethod = storageType.GetFlattenedMethod(\"get_Item\");"
            ],
            [
                54,
                "            var setMethod = storageType.GetFlattenedMethod(\"set_Item\");"
            ],
            [
                55,
                "            if (setMethod == null) TryClear(storageType, instance);"
            ],
            [
                56,
                "            var existingSize = TryGetExistingSize(storageType, instance);"
            ],
            [
                62,
                "                if (getMethod != null && i < existingSize) {"
            ],
            [
                63,
                "                    itemInstance = getMethod.Invoke(instance, new object[] { i });"
            ],
            [
                64,
                "                }"
            ],
            [
                71,
                "                if (setMethod != null && i < existingSize) {"
            ],
            [
                72,
                "                    setMethod.Invoke(instance, new object[] { i, itemInstance });"
            ],
            [
                73,
                "                }"
            ],
            [
                74,
                "                else {"
            ],
            [
                75,
                "                    addMethod.Invoke(instance, new object[] { itemInstance });"
            ],
            [
                76,
                "                }"
            ],
            [
                101,
                "        private static void TryClear(Type type, object instance) {"
            ],
            [
                102,
                "            var clear = type.GetFlattenedMethod(\"Clear\");"
            ],
            [
                103,
                "            if (clear != null) {"
            ],
            [
                104,
                "                clear.Invoke(instance, null);"
            ],
            [
                105,
                "            }"
            ],
            [
                106,
                "        }"
            ],
            [
                107,
                ""
            ],
            [
                108,
                "        private static int TryGetExistingSize(Type type, object instance) {"
            ],
            [
                109,
                "            var count = type.GetFlattenedProperty(\"Count\");"
            ],
            [
                110,
                "            if (count != null) {"
            ],
            [
                111,
                "                return (int)count.GetGetMethod().Invoke(instance, null);"
            ],
            [
                112,
                "            }"
            ],
            [
                113,
                "            return 0;"
            ],
            [
                114,
                "        }"
            ],
            [
                115,
                ""
            ]
        ],
        "deleted": [
            [
                62,
                "                addMethod.Invoke(instance, new object[] { itemInstance });"
            ]
        ]
    },
    "num_lines_added": 30,
    "num_lines_removed": 1
}