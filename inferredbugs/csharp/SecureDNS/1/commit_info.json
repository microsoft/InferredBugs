{
    "hash": "6117be71e98e8b6dfbf4d1cefe00887fc24d39b0",
    "message": "\u2714 Cleanup",
    "file_num_lines": 109,
    "diff_parsed": {
        "added": [],
        "deleted": [
            [
                59,
                "            var BitStream = new BitStream(Packet, true);"
            ],
            [
                60,
                ""
            ],
            [
                61,
                "            BitStream.Seek(BoundStream.GlobalPosition.TotalByteCount, 0);"
            ],
            [
                62,
                ""
            ],
            [
                63,
                "            ReadLabels(BitStream);"
            ],
            [
                64,
                ""
            ],
            [
                65,
                "            Seek(BoundStream);"
            ],
            [
                66,
                "        }"
            ],
            [
                67,
                ""
            ],
            [
                68,
                "        private static void Seek(BoundedStream BoundedStream)"
            ],
            [
                69,
                "        {"
            ],
            [
                70,
                "            while (true)"
            ],
            [
                71,
                "            {"
            ],
            [
                72,
                "                var Byte = BoundedStream.ReadByte();"
            ],
            [
                73,
                ""
            ],
            [
                74,
                "                switch (Byte)"
            ],
            [
                75,
                "                {"
            ],
            [
                76,
                "                    case 0b00000000:"
            ],
            [
                77,
                "                        return;"
            ],
            [
                78,
                ""
            ],
            [
                79,
                "                    case 0b11000000:"
            ],
            [
                80,
                "                        BoundedStream.ReadByte();"
            ],
            [
                81,
                "                        return;"
            ],
            [
                82,
                "                }"
            ],
            [
                83,
                "            }"
            ],
            [
                84,
                "        }"
            ],
            [
                85,
                ""
            ],
            [
                86,
                "        private void ReadLabels(BitStream BitStream)"
            ],
            [
                87,
                "        {"
            ],
            [
                88,
                "            while (true)"
            ],
            [
                89,
                "            {"
            ],
            [
                90,
                "                var LabelType = (LabelType)(BitStream.ReadByte(2) >> 6);"
            ],
            [
                91,
                ""
            ],
            [
                92,
                "                switch (LabelType)"
            ],
            [
                93,
                "                {"
            ],
            [
                94,
                "                    case LabelType.Normal:"
            ],
            [
                95,
                "                        {"
            ],
            [
                96,
                "                            var Length = BitStream.ReadByte(6) >> 2; //Compensate for MSB"
            ],
            [
                97,
                ""
            ],
            [
                98,
                "                            if (Length == 0) return;"
            ],
            [
                99,
                ""
            ],
            [
                100,
                "                            Labels.Add(new Label"
            ],
            [
                101,
                "                            {"
            ],
            [
                102,
                "                                Type = LabelType.Normal,"
            ],
            [
                103,
                "                                Count = (ushort)Length,"
            ],
            [
                104,
                "                                Text = BitStream.ReadString(Length),"
            ],
            [
                105,
                "                            });"
            ],
            [
                106,
                ""
            ],
            [
                107,
                "                            continue;"
            ],
            [
                108,
                "                        }"
            ],
            [
                109,
                "                    case LabelType.Compressed:"
            ],
            [
                110,
                "                        {"
            ],
            [
                111,
                "                            var Pointer = BitStream.ReadByte(6) + BitStream.ReadByte();"
            ],
            [
                112,
                ""
            ],
            [
                113,
                "                            BitStream.Seek(Pointer, 0);"
            ],
            [
                114,
                ""
            ],
            [
                115,
                "                            continue;"
            ],
            [
                116,
                "                        }"
            ],
            [
                117,
                "                    case LabelType.Extended:"
            ],
            [
                118,
                "                    case LabelType.Unallocated:"
            ],
            [
                119,
                "                        throw new NotImplementedException(Enum.GetName(typeof(LabelType), LabelType));"
            ],
            [
                120,
                "                    default:"
            ],
            [
                121,
                "                        throw new ArgumentOutOfRangeException(nameof(LabelType));"
            ],
            [
                122,
                "                }"
            ],
            [
                123,
                "            }"
            ]
        ]
    },
    "num_lines_added": 0,
    "num_lines_removed": 65
}