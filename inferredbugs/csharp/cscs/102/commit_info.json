{
    "hash": "86c49f0a37e2f9bdb80a4d154ba3764d28d2aa83",
    "message": "bug fixes",
    "file_num_lines": 2318,
    "diff_parsed": {
        "added": [
            [
                5,
                "using System.Text;"
            ],
            [
                1403,
                "    class ToByteArrayFunction : ParserFunction, INumericFunction"
            ],
            [
                1404,
                "    {"
            ],
            [
                1405,
                "        protected override Variable Evaluate(ParsingScript script)"
            ],
            [
                1406,
                "        {"
            ],
            [
                1407,
                "            List<Variable> args = script.GetFunctionArgs();"
            ],
            [
                1408,
                "            Utils.CheckArgs(args.Count, 1, m_name);"
            ],
            [
                1409,
                ""
            ],
            [
                1410,
                "            string arg = Utils.GetSafeString(args, 0);"
            ],
            [
                1411,
                "            string pass = Utils.GetSafeString(args, 1);"
            ],
            [
                1412,
                ""
            ],
            [
                1413,
                "            var encoded = !string.IsNullOrWhiteSpace(pass);"
            ],
            [
                1414,
                ""
            ],
            [
                1415,
                "            var bytes = encoded ? Utils.EncryptStringToBytes(arg, pass) :"
            ],
            [
                1416,
                "                                  Encoding.UTF8.GetBytes(arg);"
            ],
            [
                1417,
                ""
            ],
            [
                1418,
                "            return new Variable(bytes);"
            ],
            [
                1419,
                "        }"
            ],
            [
                1420,
                "    }"
            ],
            [
                1421,
                "    class EncodeDecodeFunction : ParserFunction, IStringFunction"
            ],
            [
                1422,
                "    {"
            ],
            [
                1423,
                "        bool m_encode;"
            ],
            [
                1424,
                "        internal EncodeDecodeFunction(bool encode = true)"
            ],
            [
                1425,
                "        {"
            ],
            [
                1426,
                "            m_encode = encode;"
            ],
            [
                1427,
                "        }"
            ],
            [
                1428,
                "        protected override Variable Evaluate(ParsingScript script)"
            ],
            [
                1429,
                "        {"
            ],
            [
                1430,
                "            List<Variable> args = script.GetFunctionArgs();"
            ],
            [
                1431,
                "            Utils.CheckArgs(args.Count, 2, m_name);"
            ],
            [
                1432,
                ""
            ],
            [
                1433,
                "            string arg = Utils.GetSafeString(args, 0);"
            ],
            [
                1434,
                "            string pass = Utils.GetSafeString(args, 1);"
            ],
            [
                1435,
                ""
            ],
            [
                1436,
                "            var result = m_encode ? Utils.EncryptString(arg, pass) :"
            ],
            [
                1437,
                "                                    Utils.DecryptString(arg, pass);"
            ],
            [
                1438,
                ""
            ],
            [
                1439,
                "            return new Variable(result);"
            ],
            [
                1440,
                "        }"
            ],
            [
                1441,
                "    }"
            ],
            [
                1476,
                "            if (arg.Type == Variable.VarType.BYTE_ARRAY && !string.IsNullOrWhiteSpace(format))"
            ],
            [
                1477,
                "            {"
            ],
            [
                1478,
                "                var decoded = Utils.DecryptStringFromBytes(arg.AsByteArray(), format);"
            ],
            [
                1479,
                "                return new Variable(decoded);"
            ],
            [
                1480,
                "            }"
            ],
            [
                1481,
                ""
            ]
        ],
        "deleted": []
    },
    "num_lines_added": 46,
    "num_lines_removed": 0
}