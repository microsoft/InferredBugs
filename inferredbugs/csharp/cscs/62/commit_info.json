{
    "hash": "1f69c80570046f07351e58a56dcc6c9e15226d68",
    "message": "Namespaces added",
    "file_num_lines": 1944,
    "diff_parsed": {
        "added": [
            [
                564,
                "    public class NamespaceFunction : ParserFunction"
            ],
            [
                565,
                "    {"
            ],
            [
                566,
                "        protected override Variable Evaluate(ParsingScript script)"
            ],
            [
                567,
                "        {"
            ],
            [
                568,
                "            string namespaceName = Utils.GetToken(script, Constants.NEXT_OR_END_ARRAY);"
            ],
            [
                569,
                "            //Utils.CheckNotEnd(script, m_name);"
            ],
            [
                570,
                "            Variable result = null;"
            ],
            [
                571,
                ""
            ],
            [
                572,
                "            ParserFunction.AddNamespace(namespaceName);"
            ],
            [
                573,
                "            try"
            ],
            [
                574,
                "            {"
            ],
            [
                575,
                "                string scriptExpr = Utils.GetBodyBetween(script, Constants.START_GROUP,"
            ],
            [
                576,
                "                                                         Constants.END_GROUP);"
            ],
            [
                577,
                "                script.MoveForwardIf(Constants.END_GROUP);"
            ],
            [
                578,
                ""
            ],
            [
                579,
                "                Dictionary<int, int> char2Line;"
            ],
            [
                580,
                "                string body = Utils.ConvertToScript(scriptExpr, out char2Line);"
            ],
            [
                581,
                ""
            ],
            [
                582,
                "                ParsingScript tempScript = new ParsingScript(body);"
            ],
            [
                583,
                "                //tempScript.ScriptOffset = newClass.ParentOffset;"
            ],
            [
                584,
                "                tempScript.Char2Line = script.Char2Line;"
            ],
            [
                585,
                "                tempScript.Filename = script.Filename;"
            ],
            [
                586,
                "                tempScript.OriginalScript = script.OriginalScript;"
            ],
            [
                587,
                "                tempScript.ParentScript = script;"
            ],
            [
                588,
                "                tempScript.InTryBlock = script.InTryBlock;"
            ],
            [
                589,
                "                tempScript.DisableBreakpoints = true;"
            ],
            [
                590,
                "                tempScript.MoveForwardIf(Constants.START_GROUP);"
            ],
            [
                591,
                ""
            ],
            [
                592,
                "                Debugger debugger = script != null && script.Debugger != null ? script.Debugger : Debugger.MainInstance;"
            ],
            [
                593,
                "                if (debugger != null)"
            ],
            [
                594,
                "                {"
            ],
            [
                595,
                "                    result = debugger.StepInFunctionIfNeeded(tempScript).Result;"
            ],
            [
                596,
                "                }"
            ],
            [
                597,
                ""
            ],
            [
                598,
                "                while (tempScript.Pointer < body.Length - 1 &&"
            ],
            [
                599,
                "                      (result == null || !result.IsReturn))"
            ],
            [
                600,
                "                {"
            ],
            [
                601,
                "                    result = tempScript.ExecuteTo();"
            ],
            [
                602,
                "                    tempScript.GoToNextStatement();"
            ],
            [
                603,
                "                }"
            ],
            [
                604,
                "            }"
            ],
            [
                605,
                "            finally"
            ],
            [
                606,
                "            {"
            ],
            [
                607,
                "                ParserFunction.PopNamespace();"
            ],
            [
                608,
                "            }"
            ],
            [
                609,
                ""
            ],
            [
                610,
                "            return result;"
            ],
            [
                611,
                "        }"
            ],
            [
                612,
                "    }"
            ],
            [
                613,
                ""
            ],
            [
                740,
                "            if (NamespaceData  != null)"
            ],
            [
                741,
                "            {"
            ],
            [
                742,
                "                var vars = NamespaceData.Variables;"
            ],
            [
                743,
                "                string prefix = NamespaceData.Name + \".\";"
            ],
            [
                744,
                "                foreach (KeyValuePair<string, ParserFunction> elem in vars)"
            ],
            [
                745,
                "                {"
            ],
            [
                746,
                "                    string key = elem.Key.StartsWith(prefix, StringComparison.OrdinalIgnoreCase) ?"
            ],
            [
                747,
                "                        elem.Key.Substring(prefix.Length) : elem.Key;"
            ],
            [
                748,
                "                    stackLevel.Variables[key] = elem.Value;"
            ],
            [
                749,
                "                }"
            ],
            [
                750,
                "            }"
            ],
            [
                751,
                ""
            ],
            [
                950,
                "        public StackLevel NamespaceData { get; set; }"
            ],
            [
                951,
                ""
            ],
            [
                1728,
                "            if (ParserFunction.TryAddToNamespace(prop, name, varValue))"
            ],
            [
                1729,
                "            {"
            ],
            [
                1730,
                "                return varValue.DeepClone();"
            ],
            [
                1731,
                "            }"
            ],
            [
                1732,
                ""
            ],
            [
                1768,
                "            if (ParserFunction.TryAddToNamespace(prop, name, varValue))"
            ],
            [
                1769,
                "            {"
            ],
            [
                1770,
                "                return varValue.DeepClone();"
            ],
            [
                1771,
                "            }"
            ],
            [
                1772,
                ""
            ]
        ],
        "deleted": []
    },
    "num_lines_added": 74,
    "num_lines_removed": 0
}