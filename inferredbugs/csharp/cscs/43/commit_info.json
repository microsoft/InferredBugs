{
    "hash": "4eab1f65c3548cb72a82e7fb53091c312ce2a835",
    "message": "Introduced Enums",
    "file_num_lines": 1843,
    "diff_parsed": {
        "added": [
            [
                359,
                "    class EnumFunction : ParserFunction"
            ],
            [
                360,
                "    {"
            ],
            [
                361,
                "        protected override Variable Evaluate(ParsingScript script)"
            ],
            [
                362,
                "        {"
            ],
            [
                363,
                "            List<string> properties = Utils.ExtractTokens(script);"
            ],
            [
                364,
                ""
            ],
            [
                365,
                "            if (properties.Count == 1 && properties[0].Contains(\".\"))"
            ],
            [
                366,
                "            {"
            ],
            [
                367,
                "                return UseExistingEnum(properties[0]);"
            ],
            [
                368,
                "            }"
            ],
            [
                369,
                ""
            ],
            [
                370,
                "            Variable enumVar = new Variable(Variable.VarType.ENUM);"
            ],
            [
                371,
                "            for (int i = 0; i < properties.Count; i++)"
            ],
            [
                372,
                "            {"
            ],
            [
                373,
                "                enumVar.SetEnumProperty(properties[i], new Variable(i));"
            ],
            [
                374,
                "            }"
            ],
            [
                375,
                ""
            ],
            [
                376,
                "            return enumVar;"
            ],
            [
                377,
                "        }"
            ],
            [
                378,
                ""
            ],
            [
                379,
                "        static Variable UseExistingEnum(string enumName)"
            ],
            [
                380,
                "        {"
            ],
            [
                381,
                "            Type enumType = GetEnumType(enumName);"
            ],
            [
                382,
                "            if (enumType == null || !enumType.IsEnum)"
            ],
            [
                383,
                "            {"
            ],
            [
                384,
                "                return Variable.EmptyInstance;"
            ],
            [
                385,
                "            }"
            ],
            [
                386,
                ""
            ],
            [
                387,
                "            var names = Enum.GetNames(enumType);"
            ],
            [
                388,
                ""
            ],
            [
                389,
                "            Variable enumVar = new Variable(Variable.VarType.ENUM);"
            ],
            [
                390,
                "            for (int i = 0; i < names.Length; i++)"
            ],
            [
                391,
                "            {"
            ],
            [
                392,
                "                var numValue = Enum.Parse(enumType, names[i], true);"
            ],
            [
                393,
                "                enumVar.SetEnumProperty(names[i], new Variable((int)numValue));"
            ],
            [
                394,
                "            }"
            ],
            [
                395,
                ""
            ],
            [
                396,
                "            return enumVar;"
            ],
            [
                397,
                "        }"
            ],
            [
                398,
                ""
            ],
            [
                399,
                "        public static Type GetEnumType(string enumName)"
            ],
            [
                400,
                "        {"
            ],
            [
                401,
                "            string[] tokens = enumName.Split('.');"
            ],
            [
                402,
                ""
            ],
            [
                403,
                "            Type enumType = null;"
            ],
            [
                404,
                "            int index = 0;"
            ],
            [
                405,
                "            string typeName = \"\";"
            ],
            [
                406,
                "            while(enumType == null && index < tokens.Length)"
            ],
            [
                407,
                "            {"
            ],
            [
                408,
                "                if (!string.IsNullOrWhiteSpace(typeName))"
            ],
            [
                409,
                "                {"
            ],
            [
                410,
                "                    typeName += \".\";"
            ],
            [
                411,
                "                }"
            ],
            [
                412,
                "                typeName += tokens[index];"
            ],
            [
                413,
                "                enumType = GetType(typeName);"
            ],
            [
                414,
                "                index++;"
            ],
            [
                415,
                "            }"
            ],
            [
                416,
                ""
            ],
            [
                417,
                "            for (int i = index; i < tokens.Length && enumType != null; i++)"
            ],
            [
                418,
                "            {"
            ],
            [
                419,
                "                enumType = enumType.GetNestedType(tokens[i]);"
            ],
            [
                420,
                "            }"
            ],
            [
                421,
                ""
            ],
            [
                422,
                "            if (enumType == null || !enumType.IsEnum)"
            ],
            [
                423,
                "            {"
            ],
            [
                424,
                "                return null;"
            ],
            [
                425,
                "            }"
            ],
            [
                426,
                ""
            ],
            [
                427,
                "            return enumType;"
            ],
            [
                428,
                "        }"
            ],
            [
                429,
                ""
            ],
            [
                430,
                "        public static Type GetType(string typeName)"
            ],
            [
                431,
                "        {"
            ],
            [
                432,
                "            var assemblies = AppDomain.CurrentDomain.GetAssemblies();"
            ],
            [
                433,
                "            foreach (var assembly in assemblies)"
            ],
            [
                434,
                "            {"
            ],
            [
                435,
                "                var type = assembly.GetType(typeName, false, true);"
            ],
            [
                436,
                "                if (type != null)"
            ],
            [
                437,
                "                {"
            ],
            [
                438,
                "                    return type;"
            ],
            [
                439,
                "                }"
            ],
            [
                440,
                "            }"
            ],
            [
                441,
                "            return null;"
            ],
            [
                442,
                "        }"
            ],
            [
                443,
                "    }"
            ],
            [
                444,
                ""
            ],
            [
                1262,
                "                Variable propValue = m_value.Type == Variable.VarType.ENUM ?"
            ],
            [
                1263,
                "                                     m_value.GetEnumProperty(temp, script) :"
            ],
            [
                1264,
                "                                     m_value.GetProperty(temp, script);"
            ],
            [
                1312,
                ""
            ],
            [
                1313,
                "                Variable propValue = m_value.Type == Variable.VarType.ENUM ?"
            ],
            [
                1314,
                "                         m_value.GetEnumProperty(temp, script) :"
            ],
            [
                1315,
                "                         await m_value.GetPropertyAsync(temp, script);"
            ]
        ],
        "deleted": [
            [
                1176,
                "                Variable propValue = m_value.GetProperty(temp, script);"
            ],
            [
                1224,
                "                Variable propValue = await m_value.GetPropertyAsync(temp, script);"
            ]
        ]
    },
    "num_lines_added": 93,
    "num_lines_removed": 2
}