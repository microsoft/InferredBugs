{
    "hash": "53ec2c6516ff13789e3843b6e736f14aae78c254",
    "message": "Periodically rotate DTLS HMAC keys",
    "file_num_lines": 907,
    "diff_parsed": {
        "added": [
            [
                150,
                "        private HMAC previousCookieHmac;"
            ],
            [
                151,
                "        private DateTime nextCookieHmacRotation;"
            ],
            [
                152,
                "        private static readonly TimeSpan CookieHmacRotationTimeout = TimeSpan.FromHours(1.0);"
            ],
            [
                170,
                "            this.currentCookieHmac = CreateNewCookieHMAC();"
            ],
            [
                171,
                "            this.previousCookieHmac = CreateNewCookieHMAC();"
            ],
            [
                172,
                "            this.nextCookieHmacRotation = DateTime.UtcNow + CookieHmacRotationTimeout;"
            ],
            [
                184,
                "            this.previousCookieHmac?.Dispose();"
            ],
            [
                186,
                "            this.previousCookieHmac = null;"
            ],
            [
                786,
                "                if (!HelloVerifyRequest.VerifyCookie(clientHello.Cookie, peerAddress, this.previousCookieHmac))"
            ],
            [
                788,
                "                    ulong outgoingSequence = 1;"
            ],
            [
                789,
                "                    IRecordProtection recordProtection = NullRecordProtection.Instance;"
            ],
            [
                790,
                "                    if (record.Epoch != 0)"
            ],
            [
                791,
                "                    {"
            ],
            [
                792,
                "                        outgoingSequence = peer.CurrentEpoch.NextExpectedSequence;"
            ],
            [
                793,
                "                        ++peer.CurrentEpoch.NextOutgoingSequenceForPreviousEpoch;"
            ],
            [
                795,
                "                        recordProtection = peer.CurrentEpoch.RecordProtection;"
            ],
            [
                796,
                "                    }"
            ],
            [
                798,
                "                    this.SendHelloVerifyRequest(peerAddress, outgoingSequence, record.Epoch, recordProtection);"
            ],
            [
                799,
                "                    return true;"
            ],
            [
                800,
                "                }"
            ],
            [
                1140,
                "                if (!HelloVerifyRequest.VerifyCookie(clientHello.Cookie, peerAddress, this.previousCookieHmac))"
            ],
            [
                1141,
                "                {"
            ],
            [
                1142,
                "                    this.SendHelloVerifyRequest(peerAddress, 1, 0, NullRecordProtection.Instance);"
            ],
            [
                1143,
                "                    return;"
            ],
            [
                1144,
                "                }"
            ],
            [
                1162,
                "            // Do we need to rotate the HMAC key?"
            ],
            [
                1163,
                "            DateTime now = DateTime.UtcNow;"
            ],
            [
                1164,
                "            if (now > this.nextCookieHmacRotation)"
            ],
            [
                1165,
                "            {"
            ],
            [
                1166,
                "                this.previousCookieHmac.Dispose();"
            ],
            [
                1167,
                "                this.previousCookieHmac = this.currentCookieHmac;"
            ],
            [
                1168,
                "                this.currentCookieHmac = CreateNewCookieHMAC();"
            ],
            [
                1169,
                "                this.nextCookieHmacRotation = now + CookieHmacRotationTimeout;"
            ],
            [
                1170,
                "            }"
            ],
            [
                1171,
                ""
            ],
            [
                1294,
                ""
            ],
            [
                1295,
                "        /// <summary>"
            ],
            [
                1296,
                "        /// Create a new cookie HMAC signer"
            ],
            [
                1297,
                "        /// </summary>"
            ],
            [
                1298,
                "        private static HMAC CreateNewCookieHMAC()"
            ],
            [
                1299,
                "        {"
            ],
            [
                1300,
                "            const string HMACProvider = \"System.Security.Cryptography.HMACSHA1\";"
            ],
            [
                1301,
                "            return HMAC.Create(HMACProvider);"
            ],
            [
                1302,
                "        }"
            ]
        ],
        "deleted": [
            [
                167,
                "            ///TODO(mendsley): The HMAC key should be cycled periodically"
            ],
            [
                168,
                "            const string HMACProvider = \"System.Security.Cryptography.HMACSHA1\";"
            ],
            [
                169,
                "            this.currentCookieHmac = HMAC.Create(HMACProvider);"
            ],
            [
                781,
                "                ulong outgoingSequence = 1;"
            ],
            [
                782,
                "                IRecordProtection recordProtection = NullRecordProtection.Instance;"
            ],
            [
                783,
                "                if (record.Epoch != 0)"
            ],
            [
                785,
                "                    outgoingSequence = peer.CurrentEpoch.NextExpectedSequence;"
            ],
            [
                786,
                "                    ++peer.CurrentEpoch.NextOutgoingSequenceForPreviousEpoch;"
            ],
            [
                788,
                "                    recordProtection = peer.CurrentEpoch.RecordProtection;"
            ],
            [
                789,
                "                }"
            ],
            [
                791,
                "                this.SendHelloVerifyRequest(peerAddress, outgoingSequence, record.Epoch, recordProtection);"
            ],
            [
                792,
                "                return true;"
            ],
            [
                1132,
                "                this.SendHelloVerifyRequest(peerAddress, 1, 0, NullRecordProtection.Instance);"
            ],
            [
                1133,
                "                return;"
            ]
        ]
    },
    "num_lines_added": 44,
    "num_lines_removed": 14
}