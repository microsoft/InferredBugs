        public static ILoggerFactory AddSentry(
            this ILoggerFactory factory,
            Action<SentryLoggingOptions>? optionsConfiguration = null)
        {
            var options = new SentryLoggingOptions();

            optionsConfiguration?.Invoke(options);

            if (options.DiagnosticLogger == null)
            {
                var logger = factory.CreateLogger<ISentryClient>();
                options.DiagnosticLogger = new MelDiagnosticLogger(logger, options.DiagnosticsLevel);
            }

            IHub hub;
            if (options.InitializeSdk)
            {
                if (SentrySdk.IsEnabled && options.Dsn is null)
                {
                    options.DiagnosticLogger?.LogWarning("Not calling Init from {0} because SDK is already enabled and no DSN was provided to the integration", nameof(SentryLoggerFactoryExtensions));
                    hub = HubAdapter.Instance;
                }
                else
                {
                    options.DiagnosticLogger?.LogDebug("Initializing from {0} and swapping current Hub.", nameof(SentryLoggerFactoryExtensions));
                    hub = OptionalHub.FromOptions(options);
                    _ = SentrySdk.UseHub(hub);
                }
            }
            else
            {
                // Access to whatever the SentrySdk points to (disabled or initialized via SentrySdk.Init)
                hub = HubAdapter.Instance;
            }

            factory.AddProvider(new SentryLoggerProvider(hub, SystemClock.Clock, options));
            return factory;
        }