{
    "hash": "819b7154d162f3ef4f187f19b020f999c02fcf03",
    "message": "Added IDisposable to ICodedOutputStream",
    "file_num_lines": 133,
    "diff_parsed": {
        "added": [
            [
                61,
                ""
            ],
            [
                68,
                "        /// <remarks> If you do not dispose of ICodedOutputStream some formats may yield incomplete output </remarks>"
            ],
            [
                69,
                "        public static ICodedOutputStream CreateOutputStream(MessageFormatOptions options, string contentType, Stream output)"
            ],
            [
                98,
                "                                                     {"
            ],
            [
                99,
                "                                                         CheckCharacters = false,"
            ],
            [
                100,
                "                                                         NewLineHandling = NewLineHandling.Entitize,"
            ],
            [
                101,
                "                                                         OmitXmlDeclaration = true,"
            ],
            [
                102,
                "                                                         Encoding = Encoding.UTF8,"
            ],
            [
                103,
                "                                                         Indent = true,"
            ],
            [
                104,
                "                                                         IndentChars = \"  \","
            ],
            [
                105,
                "                                                         NewLineChars = Environment.NewLine,"
            ],
            [
                106,
                "                                                     };"
            ],
            [
                117,
                "            return codedOutput;"
            ],
            [
                118,
                "        }"
            ],
            [
                119,
                ""
            ],
            [
                120,
                "        /// <summary>"
            ],
            [
                121,
                "        /// Writes the message instance to the stream using the content type provided"
            ],
            [
                122,
                "        /// </summary>"
            ],
            [
                123,
                "        /// <param name=\"message\">An instance of a message</param>"
            ],
            [
                124,
                "        /// <param name=\"options\">Options specific to writing this message and/or content type</param>"
            ],
            [
                125,
                "        /// <param name=\"contentType\">The mime type of the content to be written</param>"
            ],
            [
                126,
                "        /// <param name=\"output\">The stream to write the message to</param>"
            ],
            [
                127,
                "        public static void WriteTo(this IMessageLite message, MessageFormatOptions options, string contentType, Stream output)"
            ],
            [
                128,
                "        {"
            ],
            [
                129,
                "            using (ICodedOutputStream codedOutput = CreateOutputStream(options, contentType, output))"
            ],
            [
                130,
                "            {"
            ],
            [
                131,
                "                message.WriteTo(codedOutput);"
            ],
            [
                133,
                "                // This is effectivly done by Dispose(); however, if you need to finalize a message"
            ],
            [
                134,
                "                // without disposing the underlying stream, this is the only way to do it."
            ],
            [
                135,
                "                if (codedOutput is AbstractWriter)"
            ],
            [
                136,
                "                    ((AbstractWriter)codedOutput).EndMessage();"
            ],
            [
                138,
                "                codedOutput.Flush();"
            ],
            [
                139,
                "            }"
            ]
        ],
        "deleted": [
            [
                61,
                ""
            ],
            [
                65,
                "        /// <param name=\"message\">An instance of a message</param>"
            ],
            [
                69,
                "        public static void WriteTo(this IMessageLite message, MessageFormatOptions options, string contentType, Stream output)"
            ],
            [
                98,
                "                       {"
            ],
            [
                99,
                "                           CheckCharacters = false,"
            ],
            [
                100,
                "                           NewLineHandling = NewLineHandling.Entitize,"
            ],
            [
                101,
                "                           OmitXmlDeclaration = true,"
            ],
            [
                102,
                "                           Encoding = Encoding.UTF8,"
            ],
            [
                103,
                "                           Indent = true,"
            ],
            [
                104,
                "                           IndentChars = \"  \","
            ],
            [
                105,
                "                           NewLineChars = Environment.NewLine,"
            ],
            [
                106,
                "                       };"
            ],
            [
                117,
                "            message.WriteTo(codedOutput);"
            ],
            [
                119,
                "            if (codedOutput is AbstractWriter)"
            ],
            [
                120,
                "                ((AbstractWriter) codedOutput).EndMessage();"
            ],
            [
                122,
                "            codedOutput.Flush();"
            ]
        ]
    },
    "num_lines_added": 33,
    "num_lines_removed": 16
}