{
    "hash": "9bb8d7792874f8397876997f22107581ff7e976d",
    "message": "More comments",
    "file_num_lines": 45,
    "diff_parsed": {
        "added": [
            [
                9,
                "using Newtonsoft.Json.Linq;"
            ],
            [
                19,
                "            // This synchronously reads the entire http request body into memory and it has several problems:"
            ],
            [
                20,
                "            // 1. If the request is large it could lead to out of memory problems which can result in a Denial Of Service."
            ],
            [
                21,
                "            // 2. If the client is slowly uploading, we're doing sync over async because Kestrel does *NOT* support synchronous reads."
            ],
            [
                29,
                "        /// <summary>"
            ],
            [
                30,
                "        /// This uses MVC's built in model binding to create the PokemonData object. This is the most preferred approach as it handles all of the"
            ],
            [
                31,
                "        /// correct buffering on your behalf."
            ],
            [
                32,
                "        /// </summary>"
            ],
            [
                35,
                "        {"
            ],
            [
                42,
                "            // This asynchronously reads the entire http request body into memory. It still suffers from the Denial Of Service"
            ],
            [
                43,
                "            // issue if the request body is too large but there's no threading issue."
            ],
            [
                59,
                "            // This asynchronously reads the entire payload into a JObject then turns it into the real object."
            ],
            [
                60,
                "            var obj = await JToken.ReadFromAsync(jsonReader);"
            ],
            [
                61,
                "            var rootobject = obj.ToObject<PokemonData>(serializer);"
            ]
        ],
        "deleted": [
            [
                27,
                "        {"
            ],
            [
                44,
                "            // Enable efficient buffering"
            ],
            [
                45,
                "            Request.EnableBuffering();"
            ],
            [
                46,
                ""
            ],
            [
                47,
                "            // Read the entire request body into this stream"
            ],
            [
                48,
                "            // It's optimized to buffer in memory up to a certain threshold"
            ],
            [
                49,
                "            await Request.Body.DrainAsync(HttpContext.RequestAborted);"
            ],
            [
                50,
                ""
            ],
            [
                51,
                "            // Reset the body"
            ],
            [
                52,
                "            Request.Body.Seek(0, SeekOrigin.Begin);"
            ],
            [
                53,
                ""
            ],
            [
                59,
                "            var rootobject = serializer.Deserialize<PokemonData>(jsonReader);"
            ]
        ]
    },
    "num_lines_added": 14,
    "num_lines_removed": 12
}