        private void ExecuteInput(SearchContext context, string input)
        {
            int count = 0;
            var maxReason = MaxReason.None;
            Filter contentFilter = ContentFilter!;
            Match? match = contentFilter.Match(input);

            if (match != null)
            {
                ContentWriter? contentWriter = null;
                List<Capture>? groups = null;

                try
                {
                    groups = ListCache<Capture>.GetInstance();

                    maxReason = GetCaptures(
                        match,
                        FileWriterOptions.GroupNumber,
                        context,
                        isPathWritten: false,
                        predicate: contentFilter.Predicate,
                        captures: groups);

                    if (ShouldLog(Verbosity.Normal))
                    {
                        MatchOutputInfo? outputInfo = Options.CreateOutputInfo(input, match, contentFilter);

                        contentWriter = ContentWriter.CreateReplace(
                            Options.ContentDisplayStyle,
                            input,
                            Options.ReplaceOptions,
                            FileWriterOptions,
                            outputInfo: outputInfo);
                    }
                    else
                    {
                        contentWriter = new EmptyContentWriter(FileWriterOptions);
                    }

                    WriteMatches(contentWriter, groups, context);
                    count = contentWriter.MatchCount;
                }
                finally
                {
                    contentWriter?.Dispose();

                    if (groups != null)
                        ListCache<Capture>.Free(groups);
                }
            }

            if (ShouldLog(Verbosity.Detailed)
                || Options.IncludeSummary)
            {
                Verbosity verbosity = (Options.IncludeSummary) ? Verbosity.Minimal : Verbosity.Detailed;

                WriteLine(verbosity);
                WriteCount("Replacements", count, Colors.Message_OK, verbosity);
                WriteIf(maxReason == MaxReason.CountExceedsMax, "+", Colors.Message_OK, verbosity);
                WriteLine(verbosity);
            }
        }