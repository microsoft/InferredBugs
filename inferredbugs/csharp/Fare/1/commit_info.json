{
    "hash": "a84fe187bf907d186310ab7ce61b15766ce5a362",
    "message": "Added RunAutomaton implementation.",
    "file_num_lines": 695,
    "diff_parsed": {
        "added": [
            [
                65,
                "                s.AddEpsilon(a2.Initial);"
            ],
            [
                123,
                "                            s.AddEpsilon(aa.Initial);"
            ],
            [
                143,
                "            s.AddEpsilon(a.Initial);"
            ],
            [
                145,
                "            a.Initial = s;"
            ],
            [
                157,
                "            s.AddEpsilon(a.Initial);"
            ],
            [
                162,
                "            a.Initial = s;"
            ],
            [
                218,
                "                        p.AddEpsilon(d.Initial);"
            ],
            [
                224,
                "                    p.AddEpsilon(d.Initial);"
            ],
            [
                297,
                "            var p = new StatePair(c.Initial, a1.Initial, a2.Initial);"
            ],
            [
                357,
                "            var p = new StatePair(a1.Initial, a2.Initial);"
            ],
            [
                424,
                "            s.AddEpsilon(a1.Initial);"
            ],
            [
                425,
                "            s.AddEpsilon(a2.Initial);"
            ],
            [
                426,
                "            a1.Initial = s;"
            ],
            [
                450,
                "                s.AddEpsilon(bb.Initial);"
            ],
            [
                453,
                "            a.Initial = s;"
            ],
            [
                467,
                "            initialset.Add(a.Initial);"
            ],
            [
                480,
                "            a.Initial = new State();"
            ],
            [
                481,
                "            newstate.Add(initialset, a.Initial);"
            ],
            [
                607,
                "            return a.Initial.Accept && a.Initial.Transitions.Count == 0;"
            ],
            [
                616,
                "            return !a.Initial.Accept && a.Initial.Transitions.Count == 0;"
            ],
            [
                625,
                "            if (a.Initial.Accept && a.Initial.Transitions.Count == 1)"
            ],
            [
                628,
                "                HashSet<Transition>.Enumerator enumerator = a.Initial.Transitions.GetEnumerator();"
            ],
            [
                632,
                "                return t.To == a.Initial && t.Min == Char.MinValue && t.Max == Char.MaxValue;"
            ],
            [
                653,
                "            return GetShortestExample(a.Initial, accepted);"
            ],
            [
                702,
                "                State p = a.Initial;"
            ],
            [
                721,
                "            pp.AddLast(a.Initial);"
            ],
            [
                723,
                "            bool accept = a.Initial.Accept;"
            ]
        ],
        "deleted": [
            [
                65,
                "                s.AddEpsilon(a2.InitialState);"
            ],
            [
                123,
                "                            s.AddEpsilon(aa.InitialState);"
            ],
            [
                143,
                "            s.AddEpsilon(a.InitialState);"
            ],
            [
                145,
                "            a.InitialState = s;"
            ],
            [
                157,
                "            s.AddEpsilon(a.InitialState);"
            ],
            [
                162,
                "            a.InitialState = s;"
            ],
            [
                218,
                "                        p.AddEpsilon(d.InitialState);"
            ],
            [
                224,
                "                    p.AddEpsilon(d.InitialState);"
            ],
            [
                297,
                "            var p = new StatePair(c.InitialState, a1.InitialState, a2.InitialState);"
            ],
            [
                357,
                "            var p = new StatePair(a1.InitialState, a2.InitialState);"
            ],
            [
                424,
                "            s.AddEpsilon(a1.InitialState);"
            ],
            [
                425,
                "            s.AddEpsilon(a2.InitialState);"
            ],
            [
                426,
                "            a1.InitialState = s;"
            ],
            [
                450,
                "                s.AddEpsilon(bb.InitialState);"
            ],
            [
                453,
                "            a.InitialState = s;"
            ],
            [
                467,
                "            initialset.Add(a.InitialState);"
            ],
            [
                480,
                "            a.InitialState = new State();"
            ],
            [
                481,
                "            newstate.Add(initialset, a.InitialState);"
            ],
            [
                607,
                "            return a.InitialState.Accept && a.InitialState.Transitions.Count == 0;"
            ],
            [
                616,
                "            return !a.InitialState.Accept && a.InitialState.Transitions.Count == 0;"
            ],
            [
                625,
                "            if (a.InitialState.Accept && a.InitialState.Transitions.Count == 1)"
            ],
            [
                628,
                "                HashSet<Transition>.Enumerator enumerator = a.InitialState.Transitions.GetEnumerator();"
            ],
            [
                632,
                "                return t.To == a.InitialState && t.Min == Char.MinValue && t.Max == Char.MaxValue;"
            ],
            [
                653,
                "            return GetShortestExample(a.InitialState, accepted);"
            ],
            [
                702,
                "                State p = a.InitialState;"
            ],
            [
                721,
                "            pp.AddLast(a.InitialState);"
            ],
            [
                723,
                "            bool accept = a.InitialState.Accept;"
            ]
        ]
    },
    "num_lines_added": 27,
    "num_lines_removed": 27
}