        public static IServiceCollection AddCustomizedServices(this IServiceCollection services, IConfiguration configuration)
        {
            //添加默认缓存组件
            services.AddMemoryCache();
            //添加Redis缓存组件
            services.AddSingleton(typeof(ICacheService), new RedisCacheService(new RedisCacheOptions()
            {
                Configuration = configuration.GetSection("Cache:ConnectionString").Value,
                InstanceName = configuration.GetSection("Cache:InstanceName").Value
            }));
            //添加阿里云组件
            services.AddSingleton(typeof(IAliyunSmsSend),new SmsSend(new AliyunOptions() { 
                AccessKeyId=configuration.GetSection("Aliyun:AccessKeyId").Value,
                AccessKeySecret= configuration.GetSection("Aliyun:AccessKeySecret").Value
            }, configuration.GetSection("Aliyun:Sms").Get<SmsOptions>()));
            //添加腾讯相关组件
            services.AddSingleton(typeof(ITencentCaptcha), new TencentCaptcha(configuration.GetSection("Tencent:Captcha").Get<CaptchaOptions>()));
            //添加邮件发送服务组件
            services.AddSingleton(typeof(IEMailService),new EMailService(new EMailOptions() { 
                FromName= configuration.GetSection("Email:FromName").Value,
                FromEMail= configuration.GetSection("Email:FromEMail").Value,
                SmtpServerUrl= configuration.GetSection("Email:SmtpServerUrl").Value,
                SmtpServerPort=Convert.ToInt32(configuration.GetSection("Email:SmtpServerPort").Value),
                SmtpAuthenticateEmail= configuration.GetSection("Email:SmtpAuthenticateEmail").Value,
                SmtpAuthenticatePasswordText= configuration.GetSection("Email:SmtpAuthenticatePasswordText").Value
            }));
            //添加又拍云文件服务组件
            services.AddSingleton(typeof(IUPyunService), new UPyunService(new UPyunOptions()
            {
                BucketName = configuration.GetSection("UPyun:BucketName").Value,
                BucketPassword = configuration.GetSection("UPyun:BucketPassword").Value,
                BucketFileUrl = configuration.GetSection("UPyun:BucketFileUrl").Value,
            }));
            //
            var sp= services.BuildServiceProvider();
            var moduleInitializers = sp.GetServices<IModuleInitializer>();
            foreach (var moduleInitializer in moduleInitializers)
            {
                moduleInitializer.ConfigureServices(services);
            }
            ServiceContext.RegisterServices(services);
            return services;
        }