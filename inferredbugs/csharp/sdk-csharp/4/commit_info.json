{
    "hash": "1c017d30f452de02ecdba325102e57555f9c8d40",
    "message": "Enable nullable reference types for Json.NET formatter\n\nSigned-off-by: Jon Skeet <jonskeet@google.com>",
    "file_num_lines": 365,
    "diff_parsed": {
        "added": [
            [
                123,
                "        public override async Task<CloudEvent> DecodeStructuredModeMessageAsync(Stream body, ContentType? contentType, IEnumerable<CloudEventAttribute>? extensionAttributes)"
            ],
            [
                133,
                "        public override CloudEvent DecodeStructuredModeMessage(Stream body, ContentType? contentType, IEnumerable<CloudEventAttribute>? extensionAttributes)"
            ],
            [
                143,
                "        public override CloudEvent DecodeStructuredModeMessage(ReadOnlyMemory<byte> body, ContentType? contentType, IEnumerable<CloudEventAttribute>? extensionAttributes) =>"
            ],
            [
                147,
                "        public override async Task<IReadOnlyList<CloudEvent>> DecodeBatchModeMessageAsync(Stream body, ContentType? contentType, IEnumerable<CloudEventAttribute>? extensionAttributes)"
            ],
            [
                157,
                "        public override IReadOnlyList<CloudEvent> DecodeBatchModeMessage(Stream body, ContentType? contentType, IEnumerable<CloudEventAttribute>? extensionAttributes)"
            ],
            [
                167,
                "        public override IReadOnlyList<CloudEvent> DecodeBatchModeMessage(ReadOnlyMemory<byte> body, ContentType? contentType, IEnumerable<CloudEventAttribute>? extensionAttributes) =>"
            ],
            [
                170,
                "        private IReadOnlyList<CloudEvent> DecodeJArray(JArray jArray, IEnumerable<CloudEventAttribute>? extensionAttributes, string paramName)"
            ],
            [
                187,
                "        private CloudEvent DecodeJObject(JObject jObject, IEnumerable<CloudEventAttribute>? extensionAttributes)"
            ],
            [
                194,
                "            var specVersion = CloudEventsSpecVersion.FromVersionId((string?) specVersionToken)"
            ],
            [
                195,
                "                ?? throw new ArgumentException($\"Unsupported CloudEvents spec version '{(string?)specVersionToken}'\");"
            ],
            [
                210,
                "                JToken value = keyValuePair.Value!;"
            ],
            [
                231,
                "                string? attributeValue = value.Type switch"
            ],
            [
                233,
                "                    JTokenType.String => (string?)value,"
            ],
            [
                250,
                "        private void ValidateTokenTypeForAttribute(CloudEventAttribute? attribute, JTokenType tokenType)"
            ],
            [
                299,
                "                // We know that dataToken must be non-null here, due to the above conditions."
            ],
            [
                300,
                "                DecodeStructuredModeDataProperty(dataToken!, cloudEvent);"
            ],
            [
                328,
                "            cloudEvent.Data = Convert.FromBase64String((string?)dataBase64Token);"
            ],
            [
                352,
                "                ? (string?) dataToken"
            ],
            [
                461,
                "                // We assume CloudEvent.Data is not null due to the way this is called."
            ],
            [
                462,
                "                throw new ArgumentException($\"{nameof(JsonEventFormatter)} cannot serialize data of type {cloudEvent.Data!.GetType()} with content type '{cloudEvent.DataContentType}'\");"
            ],
            [
                545,
                "        protected virtual JsonReader CreateJsonReader(Stream stream, Encoding? encoding) =>"
            ]
        ],
        "deleted": [
            [
                123,
                "        public override async Task<CloudEvent> DecodeStructuredModeMessageAsync(Stream body, ContentType contentType, IEnumerable<CloudEventAttribute> extensionAttributes)"
            ],
            [
                133,
                "        public override CloudEvent DecodeStructuredModeMessage(Stream body, ContentType contentType, IEnumerable<CloudEventAttribute> extensionAttributes)"
            ],
            [
                143,
                "        public override CloudEvent DecodeStructuredModeMessage(ReadOnlyMemory<byte> body, ContentType contentType, IEnumerable<CloudEventAttribute> extensionAttributes) =>"
            ],
            [
                147,
                "        public override async Task<IReadOnlyList<CloudEvent>> DecodeBatchModeMessageAsync(Stream body, ContentType contentType, IEnumerable<CloudEventAttribute> extensionAttributes)"
            ],
            [
                157,
                "        public override IReadOnlyList<CloudEvent> DecodeBatchModeMessage(Stream body, ContentType contentType, IEnumerable<CloudEventAttribute> extensionAttributes)"
            ],
            [
                167,
                "        public override IReadOnlyList<CloudEvent> DecodeBatchModeMessage(ReadOnlyMemory<byte> body, ContentType contentType, IEnumerable<CloudEventAttribute> extensionAttributes) =>"
            ],
            [
                170,
                "        private IReadOnlyList<CloudEvent> DecodeJArray(JArray jArray, IEnumerable<CloudEventAttribute> extensionAttributes, string paramName)"
            ],
            [
                187,
                "        private CloudEvent DecodeJObject(JObject jObject, IEnumerable<CloudEventAttribute> extensionAttributes = null)"
            ],
            [
                194,
                "            var specVersion = CloudEventsSpecVersion.FromVersionId((string) specVersionToken)"
            ],
            [
                195,
                "                ?? throw new ArgumentException($\"Unsupported CloudEvents spec version '{(string)specVersionToken}'\");"
            ],
            [
                210,
                "                var value = keyValuePair.Value;"
            ],
            [
                231,
                "                string attributeValue = value.Type switch"
            ],
            [
                233,
                "                    JTokenType.String => (string)value,"
            ],
            [
                250,
                "        private void ValidateTokenTypeForAttribute(CloudEventAttribute attribute, JTokenType tokenType)"
            ],
            [
                299,
                "                DecodeStructuredModeDataProperty(dataToken, cloudEvent);"
            ],
            [
                327,
                "            cloudEvent.Data = Convert.FromBase64String((string)dataBase64Token);"
            ],
            [
                351,
                "                ? (string) dataToken"
            ],
            [
                460,
                "                throw new ArgumentException($\"{nameof(JsonEventFormatter)} cannot serialize data of type {cloudEvent.Data.GetType()} with content type '{cloudEvent.DataContentType}'\");"
            ],
            [
                543,
                "        protected virtual JsonReader CreateJsonReader(Stream stream, Encoding encoding) =>"
            ]
        ]
    },
    "num_lines_added": 21,
    "num_lines_removed": 19
}