        private void InitializeSpawn()
        {
            Logger.LogOnOneLine(Logger.LogLevel.Info, "Initializing spawn area...", true);
            Spawn = UniversalCoords.FromWorld(Settings.Default.SpawnX, Settings.Default.SpawnY, Settings.Default.SpawnZ);

            Queue<Chunk> toRecalculate = new Queue<Chunk>();           
            Chunk chunk = GetChunkFromWorld(Spawn.WorldX, Spawn.WorldZ, true, true);
            chunk.Persistent = true;
            toRecalculate.Enqueue(chunk);

            Spawn = UniversalCoords.FromWorld(Spawn.WorldX, chunk.HeightMap[Spawn.WorldX, Spawn.WorldZ] + 4, Spawn.WorldZ);

            int chunkX = Spawn.ChunkX;
            int chunkZ = Spawn.ChunkZ;

            
            for(int x = chunkX - 4; x < chunkX + 4; ++x)
            {
                for(int z = chunkZ - 4; z < chunkZ + 4; ++z)
                {
                    if(x == chunkX && z == chunkZ)
                        continue;

                    chunk = GetChunkFromChunkSync(x, z, true, true);
                    chunk.Persistent = true;
                    toRecalculate.Enqueue(chunk);
                }
            }
#if PROFILE
            Stopwatch watch = new Stopwatch();
#endif
            while(toRecalculate.Count > 0)
            {
                chunk = toRecalculate.Dequeue();

                if (chunk.LightToRecalculate)
#if PROFILE
                {
                    watch.Reset();
                    watch.Start();
#endif
                    chunk.RecalculateHeight();
                    chunk.RecalculateSky();
#if PROFILE
                    watch.Stop();
                    Console.WriteLine("Chunk {0} - {1} skylight recalc: {2} ms", chunk.Coords.ChunkX, chunk.Coords.ChunkZ, watch.ElapsedMilliseconds);
                }
#endif

                AddChunk(chunk);
            }

            Logger.LogOnOneLine(Logger.LogLevel.Info, " Done\n", false);
        }