{
    "hash": "63a1d0f878c859b7c110296eaeee256813ff560a",
    "message": "fix unit tests",
    "file_num_lines": 308,
    "diff_parsed": {
        "added": [
            [
                9,
                "namespace FastExcel {"
            ],
            [
                13,
                "    public partial class FastExcel : IDisposable {"
            ],
            [
                16,
                ""
            ],
            [
                21,
                ""
            ],
            [
                47,
                "        public FastExcel(FileInfo excelFile, bool readOnly = false) : this(null, excelFile, true, readOnly) {"
            ],
            [
                48,
                "        }"
            ],
            [
                49,
                ""
            ],
            [
                55,
                "        public FastExcel(FileInfo templateFile, FileInfo excelFile) : this(templateFile, excelFile, false, false) {"
            ],
            [
                56,
                "        }"
            ],
            [
                65,
                "        private FastExcel(FileInfo templateFile, FileInfo excelFile, bool updateExisting, bool readOnly = false) {"
            ],
            [
                66,
                "            if (updateExisting) {"
            ],
            [
                67,
                "                if (!excelFile.Exists) {"
            ],
            [
                68,
                "                    var exceptionMessage = $\"Input file '{excelFile.FullName}' does not exist\";"
            ],
            [
                69,
                "                    throw new FileNotFoundException(exceptionMessage);"
            ],
            [
                70,
                "                }"
            ],
            [
                71,
                "            }"
            ],
            [
                72,
                "            else {"
            ],
            [
                73,
                "                if (excelFile.Exists) {"
            ],
            [
                74,
                "                    var exceptionMessage = $\"Output file '{excelFile.FullName}' already exists\";"
            ],
            [
                75,
                "                    throw new Exception(exceptionMessage);"
            ],
            [
                76,
                "                }"
            ],
            [
                77,
                "                if (!templateFile.Exists) {"
            ],
            [
                78,
                "                    var exceptionMessage = $\"Template file '{templateFile.FullName}' was not found\";"
            ],
            [
                79,
                "                    throw new FileNotFoundException(exceptionMessage);"
            ],
            [
                80,
                "                }"
            ],
            [
                81,
                "            }"
            ],
            [
                82,
                ""
            ],
            [
                83,
                "            TemplateFileStream = templateFile !=  null ? new FileStream(templateFile.FullName, FileMode.Open, FileAccess.Read) : null;"
            ],
            [
                84,
                "            ExcelFileStream = updateExisting"
            ],
            [
                85,
                "                ? new FileStream(excelFile.FullName, FileMode.Open, readOnly ? FileAccess.Read : FileAccess.ReadWrite)"
            ],
            [
                97,
                "        public FastExcel(Stream excelStream) : this(null, excelStream, true) {"
            ],
            [
                98,
                "        }"
            ],
            [
                99,
                ""
            ],
            [
                115,
                "        internal void PrepareArchive(bool openSharedStrings = true) {"
            ],
            [
                116,
                "            if (Archive == null) {"
            ],
            [
                117,
                "                if (ReadOnly) {"
            ],
            [
                118,
                "                    Archive = new ZipArchive(ExcelFileStream, ZipArchiveMode.Read);"
            ],
            [
                120,
                "                else {"
            ],
            [
                126,
                "            if (SharedStrings == null && openSharedStrings) {"
            ],
            [
                134,
                "        internal void CheckFiles() {"
            ],
            [
                135,
                "            if (_filesChecked) {"
            ],
            [
                139,
                "            if (UpdateExisting) {"
            ],
            [
                140,
                "                if (ExcelFileStream?.Length == 0) {"
            ],
            [
                144,
                "            else {"
            ],
            [
                145,
                "                if (TemplateFileStream == null) {"
            ],
            [
                149,
                "                if (ExcelFileStream == null) {"
            ],
            [
                152,
                "                else if (ExcelFileStream.Length > 0) {"
            ],
            [
                157,
                ""
            ],
            [
                164,
                "        private void UpdateRelations(bool ensureStrings) {"
            ],
            [
                165,
                "            if (!(ensureStrings ||"
            ],
            [
                166,
                "                  (DeleteWorksheets != null && DeleteWorksheets.Any()) ||"
            ],
            [
                167,
                "                  (AddWorksheets != null && AddWorksheets.Any()))) {"
            ],
            [
                172,
                "            using (Stream stream = Archive.GetEntry(\"xl/_rels/workbook.xml.rels\").Open()) {"
            ],
            [
                175,
                "                if (document == null) {"
            ],
            [
                178,
                ""
            ],
            [
                183,
                "                if (ensureStrings) {"
            ],
            [
                186,
                "                        from attribute in element.Attributes()"
            ],
            [
                187,
                "                        where attribute.Name == \"Target\" && attribute.Value.Equals(\"sharedStrings.xml\", StringComparison.OrdinalIgnoreCase)"
            ],
            [
                188,
                "                        select element).FirstOrDefault();"
            ],
            [
                190,
                "                    if (relationshipElement == null) {"
            ],
            [
                203,
                "                    (AddWorksheets != null && AddWorksheets.Any())) {"
            ],
            [
                205,
                "                        from attribute in element.Attributes()"
            ],
            [
                206,
                "                        where attribute.Name == \"Type\" && attribute.Value == \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\""
            ],
            [
                207,
                "                        select element).ToArray();"
            ],
            [
                208,
                "                    for (int i = worksheetElements.Length - 1; i > 0; i--) {"
            ],
            [
                214,
                "                if (update) {"
            ],
            [
                231,
                "        private string[] UpdateWorkbook() {"
            ],
            [
                233,
                "                  (AddWorksheets != null && AddWorksheets.Any()))) {"
            ],
            [
                239,
                "            using (Stream stream = Archive.GetEntry(\"xl/workbook.xml\").Open()) {"
            ],
            [
                242,
                "                if (document == null) {"
            ],
            [
                249,
                "                    where sheet.Name.LocalName == \"sheet\""
            ],
            [
                250,
                "                    select sheet).ToArray());"
            ],
            [
                251,
                ""
            ],
            [
                252,
                "                if (update) {"
            ],
            [
                257,
                "                        where sheet.Name.LocalName == \"sheet\""
            ],
            [
                258,
                "                        select sheet)) {"
            ],
            [
                274,
                ""
            ],
            [
                282,
                "        private void RenameAndRebildWorksheetProperties(XElement[] sheets) {"
            ],
            [
                284,
                "                  (AddWorksheets != null && AddWorksheets.Any()))) {"
            ],
            [
                288,
                ""
            ],
            [
                292,
                "                select new WorksheetProperties"
            ],
            [
                293,
                "                    () {"
            ],
            [
                294,
                "                        SheetId = int.Parse(sheet.Attribute(\"sheetId\").Value),"
            ],
            [
                295,
                "                        Name = sheet.Attribute(\"name\").Value,"
            ],
            [
                296,
                "                        CurrentIndex = int.Parse(sheet.Attribute(r + \"id\").Value)"
            ],
            [
                297,
                "                    }).ToList();"
            ],
            [
                300,
                "            if (DeleteWorksheets != null && DeleteWorksheets.Any()) {"
            ],
            [
                301,
                "                foreach (var item in DeleteWorksheets) {"
            ],
            [
                303,
                "                        where sp.SheetId == item"
            ],
            [
                304,
                "                        select sp).FirstOrDefault();"
            ],
            [
                306,
                "                    if (sheetToDelete != null) {"
            ],
            [
                313,
                "            if (AddWorksheets != null && AddWorksheets.Any()) {"
            ],
            [
                315,
                "                foreach (var item in AddWorksheets.Reverse<WorksheetAddSettings>()) {"
            ],
            [
                317,
                "                        where sp.SheetId == item.InsertAfterSheetId"
            ],
            [
                318,
                "                        select sp).FirstOrDefault();"
            ],
            [
                319,
                ""
            ],
            [
                320,
                "                    if (previousSheet == null) {"
            ],
            [
                324,
                "                    WorksheetProperties newWorksheet = new WorksheetProperties() {"
            ],
            [
                327,
                "                        CurrentIndex = 0 // TODO Something??"
            ],
            [
                334,
                "            foreach (WorksheetProperties worksheet in sheetProperties) {"
            ],
            [
                335,
                "                if (worksheet.CurrentIndex != index) {"
            ],
            [
                337,
                "                    if (entry == null) {"
            ],
            [
                342,
                ""
            ],
            [
                350,
                "        private void UpdateContentTypes(bool ensureStrings) {"
            ],
            [
                352,
                "                  (DeleteWorksheets != null && DeleteWorksheets.Any()) ||"
            ],
            [
                353,
                "                  (AddWorksheets != null && AddWorksheets.Any()))) {"
            ],
            [
                358,
                "            using (Stream stream = Archive.GetEntry(\"[Content_Types].xml\").Open()) {"
            ],
            [
                361,
                "                if (document == null) {"
            ],
            [
                364,
                ""
            ],
            [
                369,
                "                if (ensureStrings) {"
            ],
            [
                371,
                "                        from attribute in element.Attributes()"
            ],
            [
                372,
                "                        where attribute.Name == \"PartName\" && attribute.Value.Equals(\"/xl/sharedStrings.xml\", StringComparison.OrdinalIgnoreCase)"
            ],
            [
                373,
                "                        select element).FirstOrDefault();"
            ],
            [
                375,
                "                    if (overrideElement == null) {"
            ],
            [
                384,
                ""
            ],
            [
                385,
                "                if (DeleteWorksheets != null && DeleteWorksheets.Any()) {"
            ],
            [
                386,
                "                    foreach (var item in DeleteWorksheets) {"
            ],
            [
                391,
                "                            from attribute in element.Attributes()"
            ],
            [
                392,
                "                            where attribute.Name == \"PartName\" && attribute.Value == fileName"
            ],
            [
                393,
                "                            select element).FirstOrDefault();"
            ],
            [
                394,
                "                        if (overrideElement != null) {"
            ],
            [
                401,
                "                if (AddWorksheets != null && AddWorksheets.Any()) {"
            ],
            [
                402,
                "                    foreach (var item in AddWorksheets) {"
            ],
            [
                415,
                "                if (update) {"
            ],
            [
                420,
                ""
            ],
            [
                434,
                "        public int GetWorksheetIndexFromName(string name) {"
            ],
            [
                441,
                "        private void UpdateDocPropsApp(string[] sheetNames) {"
            ],
            [
                442,
                "            /* if (sheetNames == null || !sheetNames.Any())"
            ],
            [
                443,
                "             {"
            ],
            [
                444,
                "                 // Nothing to update"
            ],
            [
                445,
                "                 return;"
            ],
            [
                446,
                "             }"
            ],
            [
                447,
                ""
            ],
            [
                448,
                "             using (Stream stream = this.Archive.GetEntry(\"docProps/app.xml \").Open())"
            ],
            [
                449,
                "             {"
            ],
            [
                450,
                "                 XDocument document = XDocument.Load(stream);"
            ],
            [
                451,
                ""
            ],
            [
                452,
                "                 if (document == null)"
            ],
            [
                453,
                "                 {"
            ],
            [
                454,
                "                     throw new Exception(\"Unable to load app.xml\");"
            ],
            [
                455,
                "                 }"
            ],
            [
                456,
                ""
            ],
            [
                457,
                "                 // Update TilesOfParts"
            ],
            [
                458,
                ""
            ],
            [
                459,
                ""
            ],
            [
                460,
                ""
            ],
            [
                461,
                "                 // Update HeadingPairs"
            ],
            [
                462,
                ""
            ],
            [
                463,
                "                 if (this.AddWorksheets != null && this.AddWorksheets.Any())"
            ],
            [
                464,
                "                 {"
            ],
            [
                465,
                "                     // Add the sheets in reverse, this will add them correctly with less work"
            ],
            [
                466,
                "                     foreach (var item in this.AddWorksheets.Reverse<WorksheetAddSettings>())"
            ],
            [
                467,
                "                     {"
            ],
            [
                468,
                "                         XElement previousSheetElement = (from sheet in document.Descendants()"
            ],
            [
                469,
                "                                                          where sheet.Name.LocalName == \"sheet\""
            ],
            [
                470,
                "                                                          from attribute in sheet.Attributes()"
            ],
            [
                471,
                "                                                          where attribute.Name == \"sheetId\" && attribute.Value == item.InsertAfterIndex.ToString()"
            ],
            [
                472,
                "                                                          select sheet).FirstOrDefault();"
            ],
            [
                473,
                ""
            ],
            [
                474,
                "                         if (previousSheetElement == null)"
            ],
            [
                475,
                "                         {"
            ],
            [
                476,
                "                             throw new Exception(string.Format(\"Sheet name {0} cannot be added because the insertAfterSheetNumber or insertAfterSheetName is now invalid\", item.Name));"
            ],
            [
                477,
                "                         }"
            ],
            [
                478,
                ""
            ],
            [
                479,
                "                         XElement newSheetElement = new XElement(document.Root.GetDefaultNamespace() + \"sheet\");"
            ],
            [
                480,
                "                         newSheetElement.Add(new XAttribute(\"name\", item.Name));"
            ],
            [
                481,
                "                         newSheetElement.Add(new XAttribute(\"sheetId\", item.Index));"
            ],
            [
                482,
                ""
            ],
            [
                483,
                "                         previousSheetElement.AddAfterSelf(newSheetElement);"
            ],
            [
                484,
                "                         update = true;"
            ],
            [
                485,
                "                     }"
            ],
            [
                486,
                "                 }"
            ],
            [
                487,
                ""
            ],
            [
                488,
                "                 if (update)"
            ],
            [
                489,
                "                 {"
            ],
            [
                490,
                "                     // Re number sheet ids"
            ],
            [
                491,
                "                     XNamespace r = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\";"
            ],
            [
                492,
                "                     int id = 1;"
            ],
            [
                493,
                "                     foreach (XElement sheetElement in (from sheet in document.Descendants()"
            ],
            [
                494,
                "                                                        where sheet.Name.LocalName == \"sheet\""
            ],
            [
                495,
                "                                                        select sheet))"
            ],
            [
                496,
                "                     {"
            ],
            [
                497,
                "                         sheetElement.SetAttributeValue(r + \"id\", string.Format(\"rId{0}\", id++));"
            ],
            [
                498,
                "                     }"
            ],
            [
                499,
                ""
            ],
            [
                500,
                "                     //Set the stream to the start"
            ],
            [
                501,
                "                     stream.Position = 0;"
            ],
            [
                502,
                "                     // Clear the stream"
            ],
            [
                503,
                "                     stream.SetLength(0);"
            ],
            [
                504,
                ""
            ],
            [
                505,
                "                     // Open the stream so we can override all content of the sheet"
            ],
            [
                506,
                "                     StreamWriter streamWriter = new StreamWriter(stream);"
            ],
            [
                507,
                "                     document.Save(streamWriter);"
            ],
            [
                508,
                "                     streamWriter.Flush();"
            ],
            [
                509,
                "                 }"
            ],
            [
                510,
                "             }*/"
            ],
            [
                512,
                ""
            ],
            [
                516,
                "        public void Dispose() {"
            ],
            [
                524,
                "        protected virtual void Dispose(bool disposing) {"
            ],
            [
                525,
                "            if (Archive == null) {"
            ],
            [
                529,
                "            if (Archive.Mode != ZipArchiveMode.Read) {"
            ],
            [
                533,
                "                if (SharedStrings != null) {"
            ],
            [
                554,
                "}"
            ]
        ],
        "deleted": [
            [
                9,
                "namespace FastExcel"
            ],
            [
                10,
                "{"
            ],
            [
                14,
                "    public partial class FastExcel: IDisposable"
            ],
            [
                15,
                "    {"
            ],
            [
                16,
                ""
            ],
            [
                19,
                ""
            ],
            [
                24,
                ""
            ],
            [
                50,
                "        public FastExcel(FileInfo excelFile, bool readOnly = false) : this(null, excelFile, true, readOnly) {}"
            ],
            [
                51,
                ""
            ],
            [
                57,
                "        public FastExcel(FileInfo templateFile, FileInfo excelFile) :this(templateFile, excelFile, false, false) {}"
            ],
            [
                66,
                "        private FastExcel(FileInfo templateFile, FileInfo excelFile, bool updateExisting, bool readOnly = false)"
            ],
            [
                67,
                "        {"
            ],
            [
                68,
                "            TemplateFileStream = new FileStream(templateFile.FullName,FileMode.Open,FileAccess.Read);"
            ],
            [
                69,
                "            ExcelFileStream = updateExisting"
            ],
            [
                70,
                "                ? new FileStream(excelFile.FullName, FileMode.Open, FileAccess.ReadWrite)"
            ],
            [
                82,
                "        public FastExcel(Stream excelStream) : this(null, excelStream, true) {}"
            ],
            [
                83,
                ""
            ],
            [
                99,
                "        internal void PrepareArchive(bool openSharedStrings = true)"
            ],
            [
                100,
                "        {"
            ],
            [
                101,
                "            if (Archive == null)"
            ],
            [
                102,
                "            {"
            ],
            [
                103,
                "                if (ReadOnly)"
            ],
            [
                104,
                "                {"
            ],
            [
                105,
                "                    Archive= new ZipArchive(ExcelFileStream, ZipArchiveMode.Read);"
            ],
            [
                107,
                "                else"
            ],
            [
                108,
                "                {"
            ],
            [
                114,
                "            if (SharedStrings == null && openSharedStrings)"
            ],
            [
                115,
                "            {"
            ],
            [
                123,
                "        internal void CheckFiles()"
            ],
            [
                124,
                "        {"
            ],
            [
                125,
                "            if (_filesChecked)"
            ],
            [
                126,
                "            {"
            ],
            [
                130,
                "            if (UpdateExisting)"
            ],
            [
                131,
                "            {"
            ],
            [
                132,
                "                if (ExcelFileStream?.Length == 0)"
            ],
            [
                133,
                "                {"
            ],
            [
                137,
                "            else"
            ],
            [
                138,
                "            {"
            ],
            [
                139,
                "                if (TemplateFileStream == null)"
            ],
            [
                140,
                "                {"
            ],
            [
                144,
                "                if (ExcelFileStream == null)"
            ],
            [
                145,
                "                {"
            ],
            [
                148,
                "                else if (ExcelFileStream.Length > 0)"
            ],
            [
                149,
                "                {"
            ],
            [
                160,
                "        private void UpdateRelations(bool ensureStrings)"
            ],
            [
                161,
                "        {"
            ],
            [
                162,
                "            if (!(ensureStrings ||"
            ],
            [
                163,
                "                (DeleteWorksheets != null && DeleteWorksheets.Any()) ||"
            ],
            [
                164,
                "                (AddWorksheets != null && AddWorksheets.Any())))"
            ],
            [
                165,
                "            {"
            ],
            [
                170,
                "            using (Stream stream = Archive.GetEntry(\"xl/_rels/workbook.xml.rels\").Open())"
            ],
            [
                171,
                "            {"
            ],
            [
                174,
                "                if (document == null)"
            ],
            [
                175,
                "                {"
            ],
            [
                182,
                "                if (ensureStrings)"
            ],
            [
                183,
                "                {"
            ],
            [
                186,
                "                                                    from attribute in element.Attributes()"
            ],
            [
                187,
                "                                                    where attribute.Name == \"Target\" && attribute.Value.Equals(\"sharedStrings.xml\", StringComparison.OrdinalIgnoreCase)"
            ],
            [
                188,
                "                                                    select element).FirstOrDefault();"
            ],
            [
                190,
                "                    if (relationshipElement == null)"
            ],
            [
                191,
                "                    {"
            ],
            [
                204,
                "                (AddWorksheets != null && AddWorksheets.Any()))"
            ],
            [
                205,
                "                {"
            ],
            [
                207,
                "                                                    from attribute in element.Attributes()"
            ],
            [
                208,
                "                                                    where attribute.Name == \"Type\" && attribute.Value == \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\""
            ],
            [
                209,
                "                                                    select element).ToArray();"
            ],
            [
                210,
                "                    for (int i = worksheetElements.Length -1; i > 0; i--)"
            ],
            [
                211,
                "                    {"
            ],
            [
                217,
                "                if (update)"
            ],
            [
                218,
                "                {"
            ],
            [
                235,
                "        private string[] UpdateWorkbook()"
            ],
            [
                236,
                "        {"
            ],
            [
                238,
                "                (AddWorksheets != null && AddWorksheets.Any())))"
            ],
            [
                239,
                "            {"
            ],
            [
                245,
                "            using (Stream stream = Archive.GetEntry(\"xl/workbook.xml\").Open())"
            ],
            [
                246,
                "            {"
            ],
            [
                249,
                "                if (document == null)"
            ],
            [
                250,
                "                {"
            ],
            [
                257,
                "                                              where sheet.Name.LocalName == \"sheet\""
            ],
            [
                258,
                "                                              select sheet).ToArray());"
            ],
            [
                259,
                ""
            ],
            [
                260,
                "                if (update)"
            ],
            [
                261,
                "                {"
            ],
            [
                266,
                "                                                       where sheet.Name.LocalName == \"sheet\""
            ],
            [
                267,
                "                                                       select sheet))"
            ],
            [
                268,
                "                    {"
            ],
            [
                291,
                "        private void RenameAndRebildWorksheetProperties(XElement[] sheets)"
            ],
            [
                292,
                "        {"
            ],
            [
                294,
                "                (AddWorksheets != null && AddWorksheets.Any())))"
            ],
            [
                295,
                "            {"
            ],
            [
                302,
                "                                                         select new WorksheetProperties"
            ],
            [
                303,
                "                                                         ()"
            ],
            [
                304,
                "                                                         {"
            ],
            [
                305,
                "                                                             SheetId = int.Parse(sheet.Attribute(\"sheetId\").Value),"
            ],
            [
                306,
                "                                                             Name = sheet.Attribute(\"name\").Value,"
            ],
            [
                307,
                "                                                             CurrentIndex = int.Parse(sheet.Attribute(r + \"id\").Value)"
            ],
            [
                308,
                "                                                         }).ToList();"
            ],
            [
                311,
                "            if (DeleteWorksheets != null && DeleteWorksheets.Any())"
            ],
            [
                312,
                "            {"
            ],
            [
                313,
                "                foreach (var item in DeleteWorksheets)"
            ],
            [
                314,
                "                {"
            ],
            [
                316,
                "                                        where sp.SheetId == item"
            ],
            [
                317,
                "                                        select sp).FirstOrDefault();"
            ],
            [
                319,
                "                    if (sheetToDelete != null)"
            ],
            [
                320,
                "                    {"
            ],
            [
                327,
                "            if (AddWorksheets != null && AddWorksheets.Any())"
            ],
            [
                328,
                "            {"
            ],
            [
                330,
                "                foreach (var item in AddWorksheets.Reverse<WorksheetAddSettings>())"
            ],
            [
                331,
                "                {"
            ],
            [
                333,
                "                                                where sp.SheetId == item.InsertAfterSheetId"
            ],
            [
                334,
                "                                        select sp).FirstOrDefault();"
            ],
            [
                335,
                ""
            ],
            [
                336,
                "                    if (previousSheet == null)"
            ],
            [
                337,
                "                    {"
            ],
            [
                341,
                "                    WorksheetProperties newWorksheet = new WorksheetProperties()"
            ],
            [
                342,
                "                    {"
            ],
            [
                345,
                "                        CurrentIndex = 0// TODO Something??"
            ],
            [
                352,
                "            foreach (WorksheetProperties worksheet in sheetProperties)"
            ],
            [
                353,
                "            {"
            ],
            [
                354,
                "                if (worksheet.CurrentIndex != index)"
            ],
            [
                355,
                "                {"
            ],
            [
                357,
                "                    if (entry == null)"
            ],
            [
                358,
                "                    {"
            ],
            [
                362,
                ""
            ],
            [
                363,
                ""
            ],
            [
                372,
                "        private void UpdateContentTypes(bool ensureStrings)"
            ],
            [
                373,
                "        {"
            ],
            [
                375,
                "                (DeleteWorksheets != null && DeleteWorksheets.Any()) ||"
            ],
            [
                376,
                "                (AddWorksheets != null && AddWorksheets.Any())))"
            ],
            [
                377,
                "            {"
            ],
            [
                382,
                "            using (Stream stream = Archive.GetEntry(\"[Content_Types].xml\").Open())"
            ],
            [
                383,
                "            {"
            ],
            [
                386,
                "                if (document == null)"
            ],
            [
                387,
                "                {"
            ],
            [
                394,
                "                if (ensureStrings)"
            ],
            [
                395,
                "                {"
            ],
            [
                397,
                "                                                from attribute in element.Attributes()"
            ],
            [
                398,
                "                                                where attribute.Name == \"PartName\" && attribute.Value.Equals(\"/xl/sharedStrings.xml\", StringComparison.OrdinalIgnoreCase)"
            ],
            [
                399,
                "                                                select element).FirstOrDefault();"
            ],
            [
                401,
                "                    if (overrideElement == null)"
            ],
            [
                402,
                "                    {"
            ],
            [
                411,
                "                if (DeleteWorksheets != null && DeleteWorksheets.Any())"
            ],
            [
                412,
                "                {"
            ],
            [
                413,
                "                    foreach (var item in DeleteWorksheets)"
            ],
            [
                414,
                "                    {"
            ],
            [
                419,
                "                                                    from attribute in element.Attributes()"
            ],
            [
                420,
                "                                                    where attribute.Name == \"PartName\" && attribute.Value == fileName"
            ],
            [
                421,
                "                                                    select element).FirstOrDefault();"
            ],
            [
                422,
                "                        if (overrideElement != null)"
            ],
            [
                423,
                "                        {"
            ],
            [
                430,
                "                if (AddWorksheets != null && AddWorksheets.Any())"
            ],
            [
                431,
                "                {"
            ],
            [
                432,
                "                    foreach (var item in AddWorksheets)"
            ],
            [
                433,
                "                    {"
            ],
            [
                446,
                "                if (update)"
            ],
            [
                447,
                "                {"
            ],
            [
                452,
                ""
            ],
            [
                466,
                "        public int GetWorksheetIndexFromName(string name)"
            ],
            [
                467,
                "        {"
            ],
            [
                474,
                "        private void UpdateDocPropsApp(string[] sheetNames)"
            ],
            [
                475,
                "        {"
            ],
            [
                476,
                "           /* if (sheetNames == null || !sheetNames.Any())"
            ],
            [
                477,
                "            {"
            ],
            [
                478,
                "                // Nothing to update"
            ],
            [
                479,
                "                return;"
            ],
            [
                480,
                "            }"
            ],
            [
                481,
                ""
            ],
            [
                482,
                "            using (Stream stream = this.Archive.GetEntry(\"docProps/app.xml \").Open())"
            ],
            [
                483,
                "            {"
            ],
            [
                484,
                "                XDocument document = XDocument.Load(stream);"
            ],
            [
                485,
                ""
            ],
            [
                486,
                "                if (document == null)"
            ],
            [
                487,
                "                {"
            ],
            [
                488,
                "                    throw new Exception(\"Unable to load app.xml\");"
            ],
            [
                489,
                "                }"
            ],
            [
                490,
                ""
            ],
            [
                491,
                "                // Update TilesOfParts"
            ],
            [
                492,
                ""
            ],
            [
                493,
                ""
            ],
            [
                494,
                ""
            ],
            [
                495,
                "                // Update HeadingPairs"
            ],
            [
                496,
                ""
            ],
            [
                497,
                "                if (this.AddWorksheets != null && this.AddWorksheets.Any())"
            ],
            [
                498,
                "                {"
            ],
            [
                499,
                "                    // Add the sheets in reverse, this will add them correctly with less work"
            ],
            [
                500,
                "                    foreach (var item in this.AddWorksheets.Reverse<WorksheetAddSettings>())"
            ],
            [
                501,
                "                    {"
            ],
            [
                502,
                "                        XElement previousSheetElement = (from sheet in document.Descendants()"
            ],
            [
                503,
                "                                                         where sheet.Name.LocalName == \"sheet\""
            ],
            [
                504,
                "                                                         from attribute in sheet.Attributes()"
            ],
            [
                505,
                "                                                         where attribute.Name == \"sheetId\" && attribute.Value == item.InsertAfterIndex.ToString()"
            ],
            [
                506,
                "                                                         select sheet).FirstOrDefault();"
            ],
            [
                507,
                ""
            ],
            [
                508,
                "                        if (previousSheetElement == null)"
            ],
            [
                509,
                "                        {"
            ],
            [
                510,
                "                            throw new Exception(string.Format(\"Sheet name {0} cannot be added because the insertAfterSheetNumber or insertAfterSheetName is now invalid\", item.Name));"
            ],
            [
                511,
                "                        }"
            ],
            [
                512,
                ""
            ],
            [
                513,
                "                        XElement newSheetElement = new XElement(document.Root.GetDefaultNamespace() + \"sheet\");"
            ],
            [
                514,
                "                        newSheetElement.Add(new XAttribute(\"name\", item.Name));"
            ],
            [
                515,
                "                        newSheetElement.Add(new XAttribute(\"sheetId\", item.Index));"
            ],
            [
                516,
                ""
            ],
            [
                517,
                "                        previousSheetElement.AddAfterSelf(newSheetElement);"
            ],
            [
                518,
                "                        update = true;"
            ],
            [
                519,
                "                    }"
            ],
            [
                520,
                "                }"
            ],
            [
                521,
                ""
            ],
            [
                522,
                "                if (update)"
            ],
            [
                523,
                "                {"
            ],
            [
                524,
                "                    // Re number sheet ids"
            ],
            [
                525,
                "                    XNamespace r = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\";"
            ],
            [
                526,
                "                    int id = 1;"
            ],
            [
                527,
                "                    foreach (XElement sheetElement in (from sheet in document.Descendants()"
            ],
            [
                528,
                "                                                       where sheet.Name.LocalName == \"sheet\""
            ],
            [
                529,
                "                                                       select sheet))"
            ],
            [
                530,
                "                    {"
            ],
            [
                531,
                "                        sheetElement.SetAttributeValue(r + \"id\", string.Format(\"rId{0}\", id++));"
            ],
            [
                532,
                "                    }"
            ],
            [
                533,
                ""
            ],
            [
                534,
                "                    //Set the stream to the start"
            ],
            [
                535,
                "                    stream.Position = 0;"
            ],
            [
                536,
                "                    // Clear the stream"
            ],
            [
                537,
                "                    stream.SetLength(0);"
            ],
            [
                538,
                ""
            ],
            [
                539,
                "                    // Open the stream so we can override all content of the sheet"
            ],
            [
                540,
                "                    StreamWriter streamWriter = new StreamWriter(stream);"
            ],
            [
                541,
                "                    document.Save(streamWriter);"
            ],
            [
                542,
                "                    streamWriter.Flush();"
            ],
            [
                543,
                "                }"
            ],
            [
                544,
                "            }*/"
            ],
            [
                546,
                ""
            ],
            [
                550,
                "        public void Dispose()"
            ],
            [
                551,
                "        {"
            ],
            [
                559,
                "        protected virtual void Dispose(bool disposing)"
            ],
            [
                560,
                "        {"
            ],
            [
                561,
                "            if (Archive == null)"
            ],
            [
                562,
                "            {"
            ],
            [
                566,
                "            if (Archive.Mode != ZipArchiveMode.Read)"
            ],
            [
                567,
                "            {"
            ],
            [
                571,
                "                if (SharedStrings != null)"
            ],
            [
                572,
                "                {"
            ],
            [
                593,
                "}"
            ]
        ]
    },
    "num_lines_added": 203,
    "num_lines_removed": 242
}