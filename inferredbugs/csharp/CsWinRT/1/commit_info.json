{
    "hash": "7b4c3043975b1b69900a5f388a67fd325b6f12fa",
    "message": "Non-Throwing QI implementation and context capture for activation (#151)\n\n* Implement a non-throwing QI wrapper so we can avoid having any expected first-chance exceptions (improved debugging experience and faster).\r\n\r\n* Fix activation code-paths to correctly create an ObjectReferenceWithContext when needed.",
    "file_num_lines": 381,
    "diff_parsed": {
        "added": [
            [
                255,
                "            Marshal.ThrowExceptionForHR(_IActivationFactory.Vftbl.ActivateInstance(_IActivationFactory.ThisPtr, out IntPtr instancePtr));"
            ],
            [
                256,
                "            try"
            ],
            [
                257,
                "            {"
            ],
            [
                258,
                "                return ComWrappersSupport.GetObjectReferenceForInterface(instancePtr).As<I>();"
            ],
            [
                259,
                "            }"
            ],
            [
                260,
                "            finally"
            ],
            [
                261,
                "            {"
            ],
            [
                262,
                "                MarshalInspectable.DisposeAbi(instancePtr);"
            ],
            [
                263,
                "            }"
            ]
        ],
        "deleted": [
            [
                255,
                "            IntPtr instancePtr = IntPtr.Zero;"
            ],
            [
                256,
                "            Marshal.ThrowExceptionForHR(_IActivationFactory.Vftbl.ActivateInstance(_IActivationFactory.ThisPtr, out instancePtr));"
            ],
            [
                257,
                "            return ObjectReference<IInspectable.Vftbl>.Attach(ref instancePtr).As<I>();"
            ]
        ]
    },
    "num_lines_added": 9,
    "num_lines_removed": 3
}