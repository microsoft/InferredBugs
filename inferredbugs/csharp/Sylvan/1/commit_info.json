{
    "hash": "83128ab5d313bfae8a5cddfcee1b05f4d967c560",
    "message": "numeric parsing perf (#35)\n\n* optimize numeric values. fix parsing out of range values for rows missing columns.\r\n\r\n* datetime values with offset will be returned in UTC\r\n\r\n* refactor autodetect option",
    "file_num_lines": 819,
    "diff_parsed": {
        "added": [
            [
                397,
                "\t\t\t\treturn new ExcelColumn(\"\" + (char)('A' + ordinal));"
            ],
            [
                402,
                "\t\t\t\tpublic ExcelColumn(string name)"
            ],
            [
                903,
                "\t\t\tusing var reader = new StringReader(\"Name;Value1;Value2\\nTest;2,08;0,82\\nB;1;2\");"
            ],
            [
                907,
                "\t\t\tvar options = new CsvDataReaderOptions"
            ],
            [
                908,
                "\t\t\t{"
            ],
            [
                913,
                "\t\t\tAssert.True(csv.Read());"
            ],
            [
                914,
                "\t\t\tAssert.Equal(2.08f, csv.GetFloat(1));"
            ],
            [
                915,
                "\t\t\tAssert.Equal(0.82f, csv.GetFloat(2));"
            ],
            [
                916,
                "\t\t\tAssert.True(csv.Read());"
            ],
            [
                917,
                "\t\t\tAssert.Equal(1, csv.GetFloat(1));"
            ],
            [
                918,
                "\t\t\tAssert.Equal(2, csv.GetFloat(2));"
            ],
            [
                919,
                "\t\t}"
            ],
            [
                920,
                ""
            ],
            [
                921,
                "\t\t[Fact]"
            ],
            [
                922,
                "\t\tpublic void Binary2()"
            ],
            [
                923,
                "\t\t{"
            ],
            [
                924,
                "\t\t\tusing var reader = new StringReader(\"Name,Value\\r\\nrow1,abcdefgh\");"
            ],
            [
                925,
                "\t\t\tvar csv = CsvDataReader.Create(reader);"
            ],
            [
                926,
                "\t\t\tcsv.Read();"
            ],
            [
                927,
                "\t\t\tvar buf = new byte[0x100];"
            ],
            [
                928,
                "\t\t\tvar len = csv.GetBytes(1, 0, null, 0, 0);"
            ],
            [
                929,
                "\t\t\tAssert.Equal(6, len);"
            ],
            [
                930,
                "\t\t\tlen = csv.GetBytes(1, 0, buf, 0, buf.Length);"
            ],
            [
                931,
                "\t\t\tAssert.Equal(6, len);"
            ],
            [
                932,
                ""
            ]
        ],
        "deleted": [
            [
                397,
                "\t\t\t\treturn new ExcelColumn(\"\" + (char)('A' + ordinal), ordinal);"
            ],
            [
                402,
                "\t\t\t\tpublic ExcelColumn(string name, int ordinal)"
            ],
            [
                405,
                "\t\t\t\t\tthis.ColumnOrdinal = ordinal;"
            ],
            [
                456,
                ""
            ],
            [
                905,
                "\t\t\tusing var reader = new StringReader(\"Name;Value1;Value2\\nTest;2,08;0,82\\n\");"
            ],
            [
                909,
                "\t\t\tvar options = new CsvDataReaderOptions {"
            ],
            [
                914,
                "\t\t\tvar dt = new DataTable();"
            ],
            [
                915,
                "\t\t\tdt.Load(csv);"
            ]
        ]
    },
    "num_lines_added": 25,
    "num_lines_removed": 8
}