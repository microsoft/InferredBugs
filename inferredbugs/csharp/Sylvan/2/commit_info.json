{
    "hash": "0ce018c8e7e0eaec008c3f1e7c1d6cde5b7ae324",
    "message": "Mem stream bench (#53)\n\n* memory stream benchmarks\r\n\r\n* fix tests.\r\n\r\n* restore benchmarks",
    "file_num_lines": 121,
    "diff_parsed": {
        "added": [
            [
                3,
                "using System;"
            ],
            [
                4,
                "using System.Buffers;"
            ],
            [
                9,
                "\t[SimpleJob(1, 1, 8, 1)]"
            ],
            [
                13,
                "\t\t[ParamsSource(nameof(LengthSource))]"
            ],
            [
                14,
                "\t\tpublic int Length { get; set; }"
            ],
            [
                15,
                ""
            ],
            [
                16,
                "\t\tpublic static int[] LengthSource { get; } = new[] { 0x400, 0x100000, 0x1000000 }; //1k, 1mb, 16mb"
            ],
            [
                17,
                ""
            ],
            [
                19,
                "\t\tconst int BufferSize = 0x10000;"
            ],
            [
                20,
                ""
            ],
            [
                21,
                "\t\treadonly byte[] data;"
            ],
            [
                22,
                ""
            ],
            [
                23,
                "\t\tstatic ArrayPool<byte> CustomPool;"
            ],
            [
                24,
                ""
            ],
            [
                25,
                "\t\tstatic MemoryStreamBenchmarks()"
            ],
            [
                26,
                "\t\t{"
            ],
            [
                27,
                "\t\t\tCustomPool = ArrayPool<byte>.Create(BufferSize * 2, 0x1000000 / (1<<12));"
            ],
            [
                28,
                "\t\t}"
            ],
            [
                29,
                ""
            ],
            [
                30,
                "\t\tpublic MemoryStreamBenchmarks()"
            ],
            [
                31,
                "\t\t{"
            ],
            [
                32,
                "\t\t\tvar data = new byte[BufferSize];"
            ],
            [
                33,
                "\t\t\tvar r = new Random();"
            ],
            [
                34,
                "\t\t\tr.NextBytes(data);"
            ],
            [
                35,
                "\t\t\tthis.data = data;"
            ],
            [
                36,
                "\t\t}"
            ],
            [
                43,
                "\t\t\t\t// This is simulating that we don't know how big the data will be"
            ],
            [
                44,
                "\t\t\t\tusing var stream = new MemoryStream();"
            ],
            [
                45,
                "\t\t\t\tProcess(stream);"
            ],
            [
                46,
                "\t\t\t}"
            ],
            [
                47,
                "\t\t}"
            ],
            [
                48,
                ""
            ],
            [
                49,
                "\t\t[Benchmark]"
            ],
            [
                50,
                "\t\tpublic void MemoryStreamPreAlloc()"
            ],
            [
                51,
                "\t\t{"
            ],
            [
                52,
                "\t\t\tfor (int i = 0; i < Iterations; i++)"
            ],
            [
                53,
                "\t\t\t{"
            ],
            [
                54,
                "\t\t\t\t// benchmark performance when we know ahead of time"
            ],
            [
                55,
                "\t\t\t\tusing var stream = new MemoryStream(Length);"
            ],
            [
                56,
                "\t\t\t\tProcess(stream);"
            ],
            [
                57,
                "\t\t\t\tif (stream.Capacity != Length)"
            ],
            [
                58,
                "\t\t\t\t\tthrow new InvalidOperationException();"
            ],
            [
                59,
                "\t\t\t}"
            ],
            [
                60,
                "\t\t}"
            ],
            [
                61,
                ""
            ],
            [
                62,
                "\t\t[Benchmark]"
            ],
            [
                63,
                "\t\tpublic void PooledMemoryStreamSharedPool()"
            ],
            [
                64,
                "\t\t{"
            ],
            [
                65,
                "\t\t\tfor (int i = 0; i < Iterations; i++)"
            ],
            [
                66,
                "\t\t\t{"
            ],
            [
                67,
                "\t\t\t\tusing var stream = new PooledMemoryStream(ArrayPool<byte>.Shared);"
            ],
            [
                73,
                "\t\tpublic void PooledMemoryStreamCustomPool()"
            ],
            [
                77,
                "\t\t\t\tusing var stream = new PooledMemoryStream(CustomPool);"
            ],
            [
                84,
                "\t\t\tint c = 0;"
            ],
            [
                85,
                "\t\t\tvar length = Length;"
            ],
            [
                86,
                "\t\t\twhile (c < length)"
            ],
            [
                88,
                "\t\t\t\tvar l = Math.Min(data.Length, length - c);"
            ],
            [
                89,
                "\t\t\t\tstream.Write(data, 0, l);"
            ],
            [
                90,
                "\t\t\t\tc += l;"
            ],
            [
                99,
                "\t\t\tvar dst = new CounterStream();"
            ],
            [
                100,
                "\t\t\tstream.CopyTo(dst, BufferSize);"
            ],
            [
                101,
                "\t\t\tif (dst.Length != Length)"
            ],
            [
                102,
                "\t\t\t\tthrow new InvalidOperationException();"
            ],
            [
                103,
                "\t\t}"
            ],
            [
                104,
                ""
            ],
            [
                105,
                "\t\tclass CounterStream : Stream"
            ],
            [
                106,
                "\t\t{"
            ],
            [
                107,
                "\t\t\tlong c;"
            ],
            [
                108,
                "\t\t\tpublic CounterStream()"
            ],
            [
                109,
                "\t\t\t{"
            ],
            [
                110,
                "\t\t\t\tthis.c = 0;"
            ],
            [
                111,
                "\t\t\t}"
            ],
            [
                112,
                ""
            ],
            [
                113,
                "\t\t\tpublic override bool CanRead => false;"
            ],
            [
                114,
                ""
            ],
            [
                115,
                "\t\t\tpublic override bool CanSeek => false;"
            ],
            [
                116,
                ""
            ],
            [
                117,
                "\t\t\tpublic override bool CanWrite => true;"
            ],
            [
                118,
                ""
            ],
            [
                119,
                "\t\t\tpublic override long Length => c;"
            ],
            [
                120,
                ""
            ],
            [
                121,
                "\t\t\tpublic override long Position { get => throw new NotSupportedException(); set => throw new NotSupportedException(); }"
            ],
            [
                122,
                ""
            ],
            [
                123,
                "\t\t\tpublic override void Flush()"
            ],
            [
                124,
                "\t\t\t{"
            ],
            [
                125,
                "\t\t\t}"
            ],
            [
                126,
                ""
            ],
            [
                127,
                "\t\t\tpublic override int Read(byte[] buffer, int offset, int count)"
            ],
            [
                128,
                "\t\t\t{"
            ],
            [
                129,
                "\t\t\t\tthrow new NotSupportedException();"
            ],
            [
                130,
                "\t\t\t}"
            ],
            [
                131,
                ""
            ],
            [
                132,
                "\t\t\tpublic override long Seek(long offset, SeekOrigin origin)"
            ],
            [
                133,
                "\t\t\t{"
            ],
            [
                134,
                "\t\t\t\tthrow new NotSupportedException();"
            ],
            [
                135,
                "\t\t\t}"
            ],
            [
                136,
                ""
            ],
            [
                137,
                "\t\t\tpublic override void SetLength(long value)"
            ],
            [
                138,
                "\t\t\t{"
            ],
            [
                139,
                "\t\t\t\tthrow new NotSupportedException();"
            ],
            [
                140,
                "\t\t\t}"
            ],
            [
                141,
                ""
            ],
            [
                142,
                "\t\t\tpublic override void Write(byte[] buffer, int offset, int count)"
            ],
            [
                143,
                "\t\t\t{"
            ],
            [
                144,
                "\t\t\t\tc += count;"
            ],
            [
                145,
                "\t\t\t}"
            ]
        ],
        "deleted": [
            [
                2,
                "using BenchmarkDotNet.Jobs;"
            ],
            [
                8,
                "\t[SimpleJob(RuntimeMoniker.NetCoreApp31, launchCount: 1, warmupCount: 3, targetCount: 4)]"
            ],
            [
                13,
                ""
            ],
            [
                14,
                "\t\t[Params(100, 500, 1000, 5000)]"
            ],
            [
                15,
                "\t\tpublic int Count { get; set; }"
            ],
            [
                22,
                "\t\t\t\tusing var stream = new MemoryStream(200);"
            ],
            [
                28,
                "\t\tpublic void PooledMemoryStream()"
            ],
            [
                32,
                "\t\t\t\tusing var stream = new PooledMemoryStream();"
            ],
            [
                37,
                ""
            ],
            [
                40,
                "\t\t\tvar tw = new StreamWriter(stream);"
            ],
            [
                41,
                "\t\t\tfor (int i = 0; i < Count; i++)"
            ],
            [
                43,
                "\t\t\t\ttw.Write(\"This is a string\");"
            ],
            [
                44,
                "\t\t\t\ttw.Write(12345);"
            ],
            [
                53,
                "\t\t\tstream.CopyTo(Stream.Null);"
            ]
        ]
    },
    "num_lines_added": 106,
    "num_lines_removed": 14
}