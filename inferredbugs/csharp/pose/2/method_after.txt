        public static MethodBase GetMethodFromExpression(Expression expression, out Object instance)
        {
            switch (expression.NodeType)
            {
                case ExpressionType.MemberAccess:
                    MemberExpression memberExpression = expression as MemberExpression;
                    MemberInfo memberInfo = memberExpression.Member;
                    if (memberInfo.MemberType == MemberTypes.Property)
                    {
                        PropertyInfo propertyInfo = memberInfo as PropertyInfo;
                        instance = GetObjectInstanceFromExpression(memberExpression.Expression);
                        return propertyInfo.GetGetMethod();
                    }
                    else
                        throw new NotImplementedException("Unsupported expression");
                case ExpressionType.Call:
                    MethodCallExpression methodCall = expression as MethodCallExpression;
                    instance = GetObjectInstanceFromExpression(methodCall.Object);
                    return methodCall.Method;
                default:
                    throw new NotImplementedException("Unsupported expression");
            }
        }