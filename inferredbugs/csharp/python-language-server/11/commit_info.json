{
    "hash": "d61f63daafe0281655e429dfd763015cc375f872",
    "message": "Trying to augment argument set with Evaluator and Expression context (#1259)\n\n* Moving anyStr to its own method to prevent FromTypeVar from being called with an ArgumentSet that has no context\r\n\r\n* Trying to augment argument set with context wherever possible\r\n\r\n* Setting expression in argument set, removing null\r\n\r\n* Renaming to WithoutContext and updating comment\r\n\r\n* Check for null args in PythonFunctionOverload",
    "file_num_lines": 325,
    "diff_parsed": {
        "added": [
            [
                50,
                "                    var result = fn.Call(instance, op, ArgumentSet.Empty(expr, this));"
            ],
            [
                135,
                "                    ret = CallOperator(op.InvertComparison(), right, rightType, left, leftType, expr, tryRight: false);"
            ],
            [
                137,
                "                    ret = CallOperator(op, left, leftType, right, rightType, expr, tryLeft: false);"
            ],
            [
                149,
                "                var ret = CallOperator(op, left, leftType, right, rightType, expr, tryRight: false);"
            ],
            [
                158,
                "            var callRet = CallOperator(op, left, leftType, right, rightType, expr);"
            ],
            [
                164,
                "                callRet = CallOperator(op.InvertComparison(), right, rightType, left, leftType, expr);"
            ],
            [
                200,
                "        private IMember CallOperator(PythonOperator op, IMember left, IPythonType leftType, IMember right, IPythonType rightType, Expression expr, bool tryLeft = true, bool tryRight = true) {"
            ],
            [
                204,
                "                var ret = leftType.Call(lpi, funcName, new ArgumentSet(new[] { right }, expr, this));"
            ],
            [
                211,
                "                var ret = rightType.Call(rpi, swappedFuncName, new ArgumentSet(new[] { left }, expr, this));"
            ]
        ],
        "deleted": [
            [
                50,
                "                    var result = fn.Call(instance, op, ArgumentSet.Empty);"
            ],
            [
                135,
                "                    ret = CallOperator(op.InvertComparison(), right, rightType, left, leftType, tryRight: false);"
            ],
            [
                137,
                "                    ret = CallOperator(op, left, leftType, right, rightType, tryLeft: false);"
            ],
            [
                149,
                "                var ret = CallOperator(op, left, leftType, right, rightType, tryRight: false);"
            ],
            [
                158,
                "            var callRet = CallOperator(op, left, leftType, right, rightType);"
            ],
            [
                164,
                "                callRet = CallOperator(op.InvertComparison(), right, rightType, left, leftType);"
            ],
            [
                200,
                "        private IMember CallOperator(PythonOperator op, IMember left, IPythonType leftType, IMember right, IPythonType rightType, bool tryLeft = true, bool tryRight = true) {"
            ],
            [
                204,
                "                var ret = leftType.Call(lpi, funcName, new ArgumentSet(new[] { right }));"
            ],
            [
                211,
                "                var ret = rightType.Call(rpi, swappedFuncName, new ArgumentSet(new[] { left }));"
            ]
        ]
    },
    "num_lines_added": 9,
    "num_lines_removed": 9
}