{
    "hash": "60f8dd8523b768da0ec1d8fe4e7e0b01fa09b7cd",
    "message": "Code review fixes - use logger type for ns and refactoring a bit the AsyncLoopFactory",
    "file_num_lines": 705,
    "diff_parsed": {
        "added": [
            [
                57,
                "\t        var settings = NodeSettings.Default();"
            ],
            [
                58,
                "            TxMempool testPool = new TxMempool(new FeeRate(1000), DateTimeProvider.Default, new BlockPolicyEstimator(new FeeRate(1000), settings, settings.LoggerFactory), settings.LoggerFactory);"
            ],
            [
                123,
                "\t\t    var settings = NodeSettings.Default();"
            ],
            [
                124,
                "            var pool = new TxMempool(new FeeRate(1000), DateTimeProvider.Default, new BlockPolicyEstimator(new FeeRate(1000), settings, settings.LoggerFactory), settings.LoggerFactory);"
            ],
            [
                307,
                "\t\t    var settings = NodeSettings.Default();"
            ],
            [
                308,
                "            var pool = new TxMempool(new FeeRate(1000), DateTimeProvider.Default, new BlockPolicyEstimator(new FeeRate(1000), settings, settings.LoggerFactory), settings.LoggerFactory);"
            ],
            [
                401,
                "\t\t    var settings = NodeSettings.Default();"
            ],
            [
                402,
                "            var dateTimeSet = new DateTimeProviderSet();"
            ],
            [
                403,
                "            var pool = new TxMempool(new FeeRate(1000), dateTimeSet, new BlockPolicyEstimator(new FeeRate(1000), settings, settings.LoggerFactory), settings.LoggerFactory);"
            ],
            [
                538,
                "\t\t    var settings = NodeSettings.Default();"
            ],
            [
                539,
                "            var pool = new TxMempool(new FeeRate(1000), DateTimeProvider.Default, new BlockPolicyEstimator(new FeeRate(1000), settings, settings.LoggerFactory), settings.LoggerFactory);"
            ]
        ],
        "deleted": [
            [
                57,
                "            TxMempool testPool = new TxMempool(new FeeRate(1000), DateTimeProvider.Default, new BlockPolicyEstimator(new FeeRate(1000), NodeSettings.Default(), new LoggerFactory()), new LoggerFactory());"
            ],
            [
                122,
                "            var pool = new TxMempool(new FeeRate(1000), DateTimeProvider.Default, new BlockPolicyEstimator(new FeeRate(1000), NodeSettings.Default(), new LoggerFactory()), new LoggerFactory());"
            ],
            [
                305,
                "            var pool = new TxMempool(new FeeRate(1000), DateTimeProvider.Default, new BlockPolicyEstimator(new FeeRate(1000), NodeSettings.Default(), new LoggerFactory()), new LoggerFactory());"
            ],
            [
                398,
                "\t\t\tvar dateTimeSet = new DateTimeProviderSet();"
            ],
            [
                399,
                "            var pool = new TxMempool(new FeeRate(1000), dateTimeSet, new BlockPolicyEstimator(new FeeRate(1000), NodeSettings.Default(), new LoggerFactory()), new LoggerFactory());"
            ],
            [
                534,
                "            var pool = new TxMempool(new FeeRate(1000), DateTimeProvider.Default, new BlockPolicyEstimator(new FeeRate(1000), NodeSettings.Default(), new LoggerFactory()), new LoggerFactory());"
            ]
        ]
    },
    "num_lines_added": 11,
    "num_lines_removed": 6
}