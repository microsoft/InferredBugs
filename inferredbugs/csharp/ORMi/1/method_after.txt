        public static dynamic ExecuteStaticMethod(dynamic parameters)
        {
            var frame = new StackTrace().GetFrames().Skip(2).First(x => x.GetMethod().DeclaringType.Namespace != "System.Dynamic");

            string methodName = frame.GetMethod().Name;

            Type t = frame.GetMethod().ReflectedType;

            ManagementClass cls = new ManagementClass(TypeHelper.GetNamespace(t), TypeHelper.GetClassName(t), null);

            ManagementBaseObject inParams = cls.GetMethodParameters(methodName);

            foreach (PropertyInfo p in parameters.GetType().GetProperties())
            {
                inParams[p.Name] = p.GetValue(parameters);
            }

            ManagementBaseObject result = cls.InvokeMethod(methodName, inParams, null);

            return TypeHelper.LoadDynamicObject(result);
        }