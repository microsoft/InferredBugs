        private (string propertyName, string script) ParseRule(string propertyName)
        {   
            var propertySeparator = _tokenizer.GetNextToken();
            if (propertySeparator.Kind != TokenKind.PropertyStart)
                throw new InvalidOperationException($"Unexpected token {propertySeparator.Kind}, expected {TokenKind.PropertyStart}");

            var ruleScript = _tokenizer.GetNextToken(expectedExpression: true);
            if (ruleScript.Kind != TokenKind.PAExpression)
                throw new InvalidOperationException($"Unexpected token {ruleScript.Kind}, expected {TokenKind.PAExpression}");

            return (propertyName, ruleScript.Content);
        }