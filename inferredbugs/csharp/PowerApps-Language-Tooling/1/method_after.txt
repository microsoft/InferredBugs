        private (string propertyName, string script) ParseRule(string propertyName)
        {
            var propertySeparator = _tokenizer.GetNextToken();
            if (propertySeparator.Kind != TokenKind.PropertyStart)
            {
                _errorContainer.AddError(propertySeparator.Span, $"Unexpected token {propertySeparator.Kind}, expected {TokenKind.PropertyStart}");
                return (propertyName, null);
            }

            var ruleScript = _tokenizer.GetNextToken(expectedExpression: true);
            if (ruleScript.Kind != TokenKind.PAExpression)
            {
                _errorContainer.AddError(propertySeparator.Span, $"Unexpected token {propertySeparator.Kind}, expected expression");
                return (propertyName, null);
            }

            return (propertyName, ruleScript.Content);
        }