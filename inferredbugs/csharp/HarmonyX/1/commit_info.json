{
    "hash": "c40f67e9b56faa1751159bbdd503cdcdcba14eb1",
    "message": "Replaced DynamicMethod with MethodBuilder\nCleaned up code syntax",
    "file_num_lines": 86,
    "diff_parsed": {
        "added": [
            [
                19,
                "\t\t\t\tvar typeToDeserialize = Type.GetType(string.Format(\"{0}, {1}\", typeName, assemblyName));"
            ],
            [
                26,
                "#pragma warning disable XS0001"
            ],
            [
                27,
                "\t\t\tusing (var streamMemory = new MemoryStream())"
            ],
            [
                28,
                "\t\t\t{"
            ],
            [
                29,
                "\t\t\t\tvar formatter = new BinaryFormatter();"
            ],
            [
                30,
                "\t\t\t\tformatter.Serialize(streamMemory, patchInfo);"
            ],
            [
                31,
                "\t\t\t\treturn streamMemory.GetBuffer();"
            ],
            [
                32,
                "\t\t\t}"
            ],
            [
                33,
                "#pragma warning restore XS0001"
            ],
            [
                40,
                "#pragma warning disable XS0001"
            ],
            [
                42,
                "#pragma warning restore XS0001"
            ],
            [
                57,
                "\t\treadonly public int index;"
            ],
            [
                58,
                "\t\treadonly public string owner;"
            ],
            [
                59,
                "\t\treadonly public MethodInfo patch;"
            ],
            [
                60,
                "\t\treadonly public int priority;"
            ],
            [
                61,
                "\t\treadonly public string[] before;"
            ],
            [
                62,
                "\t\treadonly public string[] after;"
            ]
        ],
        "deleted": [
            [
                19,
                "\t\t\t\tvar typeToDeserialize = Type.GetType(String.Format(\"{0}, {1}\", typeName, assemblyName));"
            ],
            [
                26,
                "\t\t\tvar streamMemory = new MemoryStream();"
            ],
            [
                27,
                "\t\t\tvar formatter = new BinaryFormatter();"
            ],
            [
                28,
                "\t\t\tformatter.Serialize(streamMemory, patchInfo);"
            ],
            [
                29,
                "\t\t\treturn streamMemory.GetBuffer();"
            ],
            [
                51,
                "\t\tpublic int index;"
            ],
            [
                52,
                "\t\tpublic string owner;"
            ],
            [
                53,
                "\t\tpublic MethodInfo patch;"
            ],
            [
                54,
                "\t\tpublic int priority;"
            ],
            [
                55,
                "\t\tpublic string[] before;"
            ],
            [
                56,
                "\t\tpublic string[] after;"
            ]
        ]
    },
    "num_lines_added": 17,
    "num_lines_removed": 11
}