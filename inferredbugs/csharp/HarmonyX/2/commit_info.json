{
    "hash": "e89ae45c2d01be7be1f8c3378eaa4fb8c658d581",
    "message": "Makes all tests run sequential, more logging",
    "file_num_lines": 177,
    "diff_parsed": {
        "added": [
            [
                22,
                "\t\t[Test, NonParallelizable]"
            ],
            [
                53,
                "\t\t[Test, Order(1000), NonParallelizable]"
            ],
            [
                54,
                "\t\tpublic void Test_Patch_ConcreteClass()"
            ],
            [
                76,
                "\t\t[Test, Order(1001), NonParallelizable]"
            ],
            [
                77,
                "\t\tpublic void Test_Patch_Returning_Structs([Values(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)] int n, [Values(\"I\", \"S\")] string type)"
            ],
            [
                79,
                "\t\t\tvar name = $\"{type}M{n:D2}\";"
            ],
            [
                94,
                "\t\t\tTestLog.Log($\"Test_Returning_Structs: patching {name} started\");"
            ],
            [
                102,
                "\t\t\t\tTestLog.Log($\"Test_Returning_Structs: patching {name} exception: {ex}\");"
            ],
            [
                104,
                "\t\t\tTestLog.Log($\"Test_Returning_Structs: patching {name} done\");"
            ],
            [
                109,
                "\t\t\t\tTestLog.Log($\"Test_Returning_Structs: running patched {name}\");"
            ],
            [
                113,
                "\t\t\t\tvar result = original.Invoke(type == \"S\" ? null : clsInstance, new object[] { \"test\" });"
            ],
            [
                115,
                "\t\t\t\tAssert.AreEqual($\"St{n:D2}\", result.GetType().Name);"
            ],
            [
                119,
                "\t\t\t\tTestLog.Log($\"Test_Returning_Structs: running {name} exception: {ex}\");"
            ],
            [
                123,
                "\t\t[Test, NonParallelizable]"
            ],
            [
                146,
                "\t\t[Test, NonParallelizable]"
            ],
            [
                188,
                "\t\t[Test, NonParallelizable]"
            ],
            [
                215,
                "\t\t[Test, NonParallelizable]"
            ],
            [
                231,
                "\t\t[Test, NonParallelizable]"
            ]
        ],
        "deleted": [
            [
                22,
                "\t\t[Test]"
            ],
            [
                53,
                "\t\t[Test, Order(1000)]"
            ],
            [
                54,
                "\t\tpublic void Test_Special_Case1()"
            ],
            [
                76,
                "\t\t[Test, Order(1001)] public void Test_Returning_Structs_01_I() { Returning_Structs(01, false); }"
            ],
            [
                77,
                "\t\t[Test, Order(1002)] public void Test_Returning_Structs_02_I() { Returning_Structs(02, false); }"
            ],
            [
                78,
                "\t\t[Test, Order(1003)] public void Test_Returning_Structs_03_I() { Returning_Structs(03, false); }"
            ],
            [
                79,
                "\t\t[Test, Order(1004)] public void Test_Returning_Structs_04_I() { Returning_Structs(04, false); }"
            ],
            [
                80,
                "\t\t[Test, Order(1005)] public void Test_Returning_Structs_05_I() { Returning_Structs(05, false); }"
            ],
            [
                81,
                "\t\t[Test, Order(1006)] public void Test_Returning_Structs_06_I() { Returning_Structs(06, false); }"
            ],
            [
                82,
                "\t\t[Test, Order(1007)] public void Test_Returning_Structs_07_I() { Returning_Structs(07, false); }"
            ],
            [
                83,
                "\t\t[Test, Order(1008)] public void Test_Returning_Structs_08_I() { Returning_Structs(08, false); }"
            ],
            [
                84,
                "\t\t[Test, Order(1009)] public void Test_Returning_Structs_09_I() { Returning_Structs(09, false); }"
            ],
            [
                85,
                "\t\t[Test, Order(1010)] public void Test_Returning_Structs_10_I() { Returning_Structs(10, false); }"
            ],
            [
                86,
                "\t\t[Test, Order(1011)] public void Test_Returning_Structs_11_I() { Returning_Structs(11, false); }"
            ],
            [
                87,
                "\t\t[Test, Order(1012)] public void Test_Returning_Structs_12_I() { Returning_Structs(12, false); }"
            ],
            [
                88,
                "\t\t[Test, Order(1013)] public void Test_Returning_Structs_13_I() { Returning_Structs(13, false); }"
            ],
            [
                89,
                "\t\t[Test, Order(1014)] public void Test_Returning_Structs_14_I() { Returning_Structs(14, false); }"
            ],
            [
                90,
                "\t\t[Test, Order(1015)] public void Test_Returning_Structs_15_I() { Returning_Structs(15, false); }"
            ],
            [
                91,
                "\t\t[Test, Order(1016)] public void Test_Returning_Structs_16_I() { Returning_Structs(16, false); }"
            ],
            [
                92,
                "\t\t[Test, Order(1017)] public void Test_Returning_Structs_17_I() { Returning_Structs(17, false); }"
            ],
            [
                93,
                "\t\t[Test, Order(1018)] public void Test_Returning_Structs_18_I() { Returning_Structs(18, false); }"
            ],
            [
                94,
                "\t\t[Test, Order(1019)] public void Test_Returning_Structs_19_I() { Returning_Structs(19, false); }"
            ],
            [
                95,
                "\t\t[Test, Order(1020)] public void Test_Returning_Structs_20_I() { Returning_Structs(20, false); }"
            ],
            [
                96,
                "\t\t[Test, Order(1021)] public void Test_Returning_Structs_01_S() { Returning_Structs(01, true); }"
            ],
            [
                97,
                "\t\t[Test, Order(1022)] public void Test_Returning_Structs_02_S() { Returning_Structs(02, true); }"
            ],
            [
                98,
                "\t\t[Test, Order(1023)] public void Test_Returning_Structs_03_S() { Returning_Structs(03, true); }"
            ],
            [
                99,
                "\t\t[Test, Order(1024)] public void Test_Returning_Structs_04_S() { Returning_Structs(04, true); }"
            ],
            [
                100,
                "\t\t[Test, Order(1025)] public void Test_Returning_Structs_05_S() { Returning_Structs(05, true); }"
            ],
            [
                101,
                "\t\t[Test, Order(1026)] public void Test_Returning_Structs_06_S() { Returning_Structs(06, true); }"
            ],
            [
                102,
                "\t\t[Test, Order(1027)] public void Test_Returning_Structs_07_S() { Returning_Structs(07, true); }"
            ],
            [
                103,
                "\t\t[Test, Order(1028)] public void Test_Returning_Structs_08_S() { Returning_Structs(08, true); }"
            ],
            [
                104,
                "\t\t[Test, Order(1029)] public void Test_Returning_Structs_09_S() { Returning_Structs(09, true); }"
            ],
            [
                105,
                "\t\t[Test, Order(1030)] public void Test_Returning_Structs_10_S() { Returning_Structs(10, true); }"
            ],
            [
                106,
                "\t\t[Test, Order(1031)] public void Test_Returning_Structs_11_S() { Returning_Structs(11, true); }"
            ],
            [
                107,
                "\t\t[Test, Order(1032)] public void Test_Returning_Structs_12_S() { Returning_Structs(12, true); }"
            ],
            [
                108,
                "\t\t[Test, Order(1033)] public void Test_Returning_Structs_13_S() { Returning_Structs(13, true); }"
            ],
            [
                109,
                "\t\t[Test, Order(1034)] public void Test_Returning_Structs_14_S() { Returning_Structs(14, true); }"
            ],
            [
                110,
                "\t\t[Test, Order(1035)] public void Test_Returning_Structs_15_S() { Returning_Structs(15, true); }"
            ],
            [
                111,
                "\t\t[Test, Order(1036)] public void Test_Returning_Structs_16_S() { Returning_Structs(16, true); }"
            ],
            [
                112,
                "\t\t[Test, Order(1037)] public void Test_Returning_Structs_17_S() { Returning_Structs(17, true); }"
            ],
            [
                113,
                "\t\t[Test, Order(1038)] public void Test_Returning_Structs_18_S() { Returning_Structs(18, true); }"
            ],
            [
                114,
                "\t\t[Test, Order(1039)] public void Test_Returning_Structs_19_S() { Returning_Structs(19, true); }"
            ],
            [
                115,
                "\t\t[Test, Order(1040)] public void Test_Returning_Structs_20_S() { Returning_Structs(20, true); }"
            ],
            [
                116,
                "\t\tpublic void Returning_Structs(int n, bool useStatic)"
            ],
            [
                118,
                "\t\t\tTestLog.Log($\"Test_Returning_Structs{n} started\");"
            ],
            [
                130,
                "\t\t\tvar name = $\"{(useStatic ? \"S\" : \"I\")}M{n.ToString(\"D2\")}\";"
            ],
            [
                134,
                "\t\t\tTestLog.Log($\"Test_Returning_Structs{n}, patching {name} started\");"
            ],
            [
                142,
                "\t\t\t\tTestLog.Log($\"Test_Returning_Structs{n}, patching {name} exception: {ex}\");"
            ],
            [
                144,
                "\t\t\tTestLog.Log($\"Test_Returning_Structs{n}, patching {name} done\");"
            ],
            [
                149,
                "\t\t\t\tvar sn = n.ToString(\"D2\");"
            ],
            [
                150,
                "\t\t\t\tname = $\"{(useStatic ? \"S\" : \"I\")}M{sn}\";"
            ],
            [
                151,
                ""
            ],
            [
                152,
                "\t\t\t\tTestLog.Log($\"Test_Returning_Structs{n}, running patched {name}\");"
            ],
            [
                156,
                "\t\t\t\tvar result = original.Invoke(useStatic ? null : clsInstance, new object[] { \"test\" });"
            ],
            [
                158,
                "\t\t\t\tvar resultType = result.GetType();"
            ],
            [
                159,
                "\t\t\t\tAssert.AreEqual($\"St{sn}\", resultType.Name);"
            ],
            [
                163,
                "\t\t\t\tTestLog.Log($\"Test_Returning_Structs{n}, running exception: {ex}\");"
            ],
            [
                167,
                "\t\t[Test]"
            ],
            [
                190,
                "\t\t[Test]"
            ],
            [
                232,
                "\t\t[Test]"
            ],
            [
                259,
                "\t\t[Test]"
            ],
            [
                275,
                "\t\t[Test]"
            ]
        ]
    },
    "num_lines_added": 18,
    "num_lines_removed": 62
}