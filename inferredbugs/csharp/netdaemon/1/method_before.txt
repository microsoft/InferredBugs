    public CompiledAssemblyResult Compile()
    {
        CollectibleAssemblyLoadContext context = new();
        var compilation = GetSharpCompilation();

        using var peStream = new MemoryStream();
        var emitResult = compilation.Emit(peStream);

        if (emitResult.Success)
        {
            peStream.Seek(0, SeekOrigin.Begin);
            var assembly = context.LoadFromStream(peStream);
            return new CompiledAssemblyResult(context, assembly);
        }

        var error = PrettyPrintCompileError(emitResult);

        _logger.LogError("Failed to compile applications\n{error}", error);

        context.Unload();
        // Finally do cleanup and release memory
        GC.Collect();
        GC.WaitForPendingFinalizers();
        throw new InvalidOperationException();
    }