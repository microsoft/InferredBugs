        public static void Main(string[] args)
        {
            FluentSettingsForExcel();
            var tempDirPath = $@"{Environment.GetEnvironmentVariable("USERPROFILE")}\Desktop\temp\test";

            //FluentSettings.For<ppDto>()
            //    .HasSheetSetting(sheet =>
            //    {
            //        sheet.CellFilter = cell => cell.ColumnIndex <= 10;
            //    });
            //var tempExcelPath = Path.Combine(tempDirPath, "testdata.xlsx");
            //var t_list = ExcelHelper.ToEntityList<ppDto>(tempExcelPath);
            //var tempTable = ExcelHelper.ToDataTable(tempExcelPath);

            //using (var conn = new SqlConnection("server=.;uid=liweihan;pwd=Admin888;database=Reservation"))
            //{
            //    var list = conn.Select<TestEntity>(@"SELECT * FROM [Reservation].[dbo].[tabSystemSettings]").ToArray();
            //    list.ToExcelFile(ApplicationHelper.MapPath("test.xlsx"));
            //}

            //var entityList = ExcelHelper.ToEntityList<TestEntity>(ApplicationHelper.MapPath("test.xlsx"));

            //Console.WriteLine("Success!");

            //var mapping = ExcelHelper.ToEntityList<ProductPriceMapping>($@"{Environment.GetEnvironmentVariable("USERPROFILE")}\Desktop\temp\tempFiles\mapping.xlsx");

            //var mappingTemp = ExcelHelper.ToEntityList<ProductPriceMapping>($@"{Environment.GetEnvironmentVariable("USERPROFILE")}\Desktop\temp\tempFiles\mapping_temp.xlsx");

            //Console.WriteLine($"-----normal({mapping.Count}【{mapping.Select(_ => _.Pid).Distinct().Count()}】)----");
            //foreach (var shop in mapping.GroupBy(_ => _.ShopCode).OrderBy(_ => _.Key))
            //{
            //    Console.WriteLine($"{shop.Key}---{shop.Count()}---distinct pid count:{shop.Select(_ => _.Pid).Distinct().Count()}");
            //}

            //Console.WriteLine($"-----temp({mappingTemp.Count}【{mappingTemp.Select(_ => _.Pid).Distinct().Count()}】)----");
            //foreach (var shop in mappingTemp.GroupBy(_ => _.ShopCode).OrderBy(_ => _.Key))
            //{
            //    Console.WriteLine($"{shop.Key}---{shop.Count()}---distinct pid count:{shop.Select(_ => _.Pid).Distinct().Count()}");
            //}

            //Console.WriteLine("Press Enter to continue...");
            //Console.ReadLine();
            var list2 = new List<TestEntity2?>();
            list2.Add(null);
            for (var i = 0; i < 100_000; i++)
            {
                list2.Add(new TestEntity2
                {
                    Id = i + 1,
                    Title = $"Title_{i}",
                    Description = $"{Enumerable.Range(1, 200).StringJoin(",")}__{i}",
                });
            }
            list2.Add(new TestEntity2()
            {
                Id = 999,
                Title = $"{Enumerable.Repeat(1, 10).StringJoin(",")}",
                Description = null
            });
            var watch = Stopwatch.StartNew();
            list2.ToExcelFile($@"{tempDirPath}\testEntity2.xls");
            watch.Stop();
            Console.WriteLine($"ElapsedMilliseconds: {watch.ElapsedMilliseconds}ms");
            //var listTemp = ExcelHelper.ToEntityList<TestEntity2>($@"{tempDirPath}\testEntity2.xlsx");
            //var dataTableTemp = ExcelHelper.ToDataTable($@"{tempDirPath}\testEntity2.xlsx");

            Console.WriteLine("Press Enter to continue...");
            Console.ReadLine();

            var entities = new List<TestEntity>()
            {
                new TestEntity()
                {
                    PKID = 1,
                    SettingId = Guid.NewGuid(),
                    SettingName = "Setting1",
                    SettingValue = "Value1",
                    DisplayName = "dd\"d,1"
                },
                new TestEntity()
                {
                    PKID=2,
                    SettingId = Guid.NewGuid(),
                    SettingName = "Setting2",
                    SettingValue = "Value2",
                    Enabled = true,
                    CreatedBy = "li\"_"
                },
            };
            var csvFilePath = $@"{tempDirPath}\test.csv";
            entities.ToExcelFileByTemplate(
                Path.Combine(ApplicationHelper.AppRoot, "Templates", "testTemplate.xlsx"),
                ApplicationHelper.MapPath("templateTestEntities.xlsx"),
                extraData: new
                {
                    Author = "WeihanLi",
                    Title = "Export Result"
                }
            );
            entities.ToExcelFile(csvFilePath.Replace(".csv", ".xlsx"));
            entities.ToCsvFile(csvFilePath);
            var entitiesT0 = ExcelHelper.ToEntityList<TestEntity>(csvFilePath.Replace(".csv", ".xlsx"));

            var dataTable = entities.ToDataTable();
            dataTable.ToCsvFile(csvFilePath.Replace(".csv", ".datatable.csv"));
            var dt = CsvHelper.ToDataTable(csvFilePath.Replace(".csv", ".datatable.csv"));
            Console.WriteLine(dt.Columns.Count);
            var entities1 = CsvHelper.ToEntityList<TestEntity>(csvFilePath);

            entities1[1]!.DisplayName = ",tadadada";
            entities1[0]!.SettingValue = "value2,345";
            entities1.ToCsvFile(csvFilePath.Replace(".csv", ".1.csv"));
            entities1.ToDataTable().ToCsvFile(csvFilePath.Replace(".csv", ".1.datatable.csv"));

            var list = CsvHelper.ToEntityList<TestEntity>(csvFilePath.Replace(".csv", ".1.csv"));
            dt = CsvHelper.ToDataTable(csvFilePath.Replace(".csv", ".1.datatable.csv"));
            Console.WriteLine(dt.Columns.Count);
            var entities2 = CsvHelper.ToEntityList<TestEntity>(csvFilePath.Replace(".csv", ".1.csv"));

            entities.ToExcelFile(csvFilePath.Replace(".csv", ".xlsx"));

            var vals = new[] { 1, 2, 3, 5, 4 };
            vals.ToCsvFile(csvFilePath);

            var numList = CsvHelper.ToEntityList<int>(csvFilePath);
            Console.WriteLine(numList.StringJoin(","));

            Console.ReadLine();
        }