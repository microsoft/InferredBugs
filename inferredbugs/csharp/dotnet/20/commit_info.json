{
    "hash": "f0e99f1096816bed8b59181f522fdcf93f56a786",
    "message": "Adds support for \"deployment groups\", providing a way to scope how software system/container instance relationships are replicated when added to deployment nodes.",
    "file_num_lines": 380,
    "diff_parsed": {
        "added": [
            [
                13,
                "                Model.AddContainerInstance(null, null, \"Default\");"
            ],
            [
                36,
                "            ContainerInstance containerInstance1 = developmentDeploymentNode.Add(container1);"
            ],
            [
                37,
                "            ContainerInstance containerInstance2 = developmentDeploymentNode.Add(container2);"
            ],
            [
                38,
                "            ContainerInstance containerInstance3 = developmentDeploymentNode.Add(container3);"
            ],
            [
                390,
                ""
            ],
            [
                391,
                "        [Fact]"
            ],
            [
                392,
                "        public void Test_AddElementInstance_AddsElementInstancesAndReplicatesRelationshipsWithinTheDeploymentEnvironmentAndDefaultGroup()"
            ],
            [
                393,
                "        {"
            ],
            [
                394,
                "            SoftwareSystem softwareSystem1 = Model.AddSoftwareSystem(\"Software System\");"
            ],
            [
                395,
                "            Container api = softwareSystem1.AddContainer(\"API\");"
            ],
            [
                396,
                "            Container database = softwareSystem1.AddContainer(\"Database\");"
            ],
            [
                397,
                "            api.Uses(database, \"Uses\");"
            ],
            [
                398,
                ""
            ],
            [
                399,
                "            DeploymentNode liveDeploymentNode = Model.AddDeploymentNode(\"Live\", \"Deployment Node\", \"Description\", \"Technology\");"
            ],
            [
                400,
                "            ContainerInstance apiInstance1 = liveDeploymentNode.Add(api);"
            ],
            [
                401,
                "            ContainerInstance databaseInstance1 = liveDeploymentNode.Add(database);"
            ],
            [
                402,
                ""
            ],
            [
                403,
                "            ContainerInstance apiInstance2 = liveDeploymentNode.Add(api);"
            ],
            [
                404,
                "            ContainerInstance databaseInstance2 = liveDeploymentNode.Add(database);"
            ],
            [
                405,
                ""
            ],
            [
                406,
                "            Assert.Equal(2, apiInstance1.Relationships.Count);"
            ],
            [
                407,
                "            Assert.Equal(2, apiInstance2.Relationships.Count);"
            ],
            [
                408,
                ""
            ],
            [
                409,
                "            // apiInstance1 -> databaseInstance1"
            ],
            [
                410,
                "            Relationship relationship = apiInstance1.GetEfferentRelationshipWith(databaseInstance1);"
            ],
            [
                411,
                "            Assert.Equal(\"Uses\", relationship.Description);"
            ],
            [
                412,
                ""
            ],
            [
                413,
                "            // apiInstance1 -> databaseInstance2"
            ],
            [
                414,
                "            relationship = apiInstance1.GetEfferentRelationshipWith(databaseInstance2);"
            ],
            [
                415,
                "            Assert.Equal(\"Uses\", relationship.Description);"
            ],
            [
                416,
                ""
            ],
            [
                417,
                "            // apiInstance2 -> databaseInstance1"
            ],
            [
                418,
                "            relationship = apiInstance2.GetEfferentRelationshipWith(databaseInstance1);"
            ],
            [
                419,
                "            Assert.Equal(\"Uses\", relationship.Description);"
            ],
            [
                420,
                ""
            ],
            [
                421,
                "            // apiInstance2 -> databaseInstance2"
            ],
            [
                422,
                "            relationship = apiInstance2.GetEfferentRelationshipWith(databaseInstance2);"
            ],
            [
                423,
                "            Assert.Equal(\"Uses\", relationship.Description);"
            ],
            [
                424,
                "        }"
            ],
            [
                425,
                ""
            ],
            [
                426,
                "        [Fact]"
            ],
            [
                427,
                "        public void Test_AddElementInstance_AddsElementInstancesAndReplicatesRelationshipsWithinTheDeploymentEnvironmentAndSpecifiedGroup()"
            ],
            [
                428,
                "        {"
            ],
            [
                429,
                "            // in this test, container instances are added to two deployment groups: \"Service 1\" and \"Service 2\""
            ],
            [
                430,
                "            // relationships are not replicated between element instances in other groups"
            ],
            [
                431,
                ""
            ],
            [
                432,
                "            SoftwareSystem softwareSystem1 = Model.AddSoftwareSystem(\"Software System\");"
            ],
            [
                433,
                "            Container api = softwareSystem1.AddContainer(\"API\");"
            ],
            [
                434,
                "            Container database = softwareSystem1.AddContainer(\"Database\");"
            ],
            [
                435,
                "            api.Uses(database, \"Uses\");"
            ],
            [
                436,
                ""
            ],
            [
                437,
                "            DeploymentNode liveDeploymentNode = Model.AddDeploymentNode(\"Live\", \"Deployment Node\", \"Description\", \"Technology\");"
            ],
            [
                438,
                "            ContainerInstance apiInstance1 = liveDeploymentNode.Add(api, \"Service 1\");"
            ],
            [
                439,
                "            ContainerInstance databaseInstance1 = liveDeploymentNode.Add(database, \"Service 1\");"
            ],
            [
                440,
                ""
            ],
            [
                441,
                "            ContainerInstance apiInstance2 = liveDeploymentNode.Add(api, \"Service 2\");"
            ],
            [
                442,
                "            ContainerInstance databaseInstance2 = liveDeploymentNode.Add(database, \"Service 2\");"
            ],
            [
                443,
                ""
            ],
            [
                444,
                "            Assert.Equal(1, apiInstance1.Relationships.Count);"
            ],
            [
                445,
                "            Assert.Equal(1, apiInstance2.Relationships.Count);"
            ],
            [
                446,
                ""
            ],
            [
                447,
                "            // apiInstance1 -> databaseInstance1"
            ],
            [
                448,
                "            Relationship relationship = apiInstance1.GetEfferentRelationshipWith(databaseInstance1);"
            ],
            [
                449,
                "            Assert.Equal(\"Uses\", relationship.Description);"
            ],
            [
                450,
                ""
            ],
            [
                451,
                "            // apiInstance2 -> databaseInstance2"
            ],
            [
                452,
                "            relationship = apiInstance2.GetEfferentRelationshipWith(databaseInstance2);"
            ],
            [
                453,
                "            Assert.Equal(\"Uses\", relationship.Description);"
            ],
            [
                454,
                "        }"
            ],
            [
                455,
                ""
            ]
        ],
        "deleted": [
            [
                13,
                "                Model.AddContainerInstance(null, null, true);"
            ],
            [
                36,
                "            ContainerInstance containerInstance1 = Model.AddContainerInstance(developmentDeploymentNode, container1, true);"
            ],
            [
                37,
                "            ContainerInstance containerInstance2 = Model.AddContainerInstance(developmentDeploymentNode, container2, true);"
            ],
            [
                38,
                "            ContainerInstance containerInstance3 = Model.AddContainerInstance(developmentDeploymentNode, container3, true);"
            ]
        ]
    },
    "num_lines_added": 70,
    "num_lines_removed": 4
}