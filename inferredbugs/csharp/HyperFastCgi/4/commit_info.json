{
    "hash": "e14e8e509490ef0b4606cb7769513bfc54e5fe96",
    "message": "added several webapps support to combined host",
    "file_num_lines": 275,
    "diff_parsed": {
        "added": [
            [
                63,
                "\t\t\t\t//try to find single app route"
            ],
            [
                64,
                "\t\t\t\treq.Host = GetRoute (null, -1, null);"
            ],
            [
                65,
                "\t\t\t\tif (req.Host != IntPtr.Zero) {"
            ],
            [
                66,
                "\t\t\t\t\tAppHostTransportCreateRequest (req.Host, req.Hash, req.RequestNumber);"
            ],
            [
                67,
                "\t\t\t\t}"
            ],
            [
                68,
                ""
            ],
            [
                90,
                "\t\t\t\t\t//FIXME: request.Host can be null"
            ],
            [
                150,
                "\t\t\t\treq.tempKeys.Add (new KeyValuePair () {"
            ],
            [
                151,
                "\t\t\t\t\tKey = name,"
            ],
            [
                152,
                "\t\t\t\t\tValue = value,"
            ],
            [
                153,
                "\t\t\t\t\tIsHeader = isHeader"
            ],
            [
                154,
                "\t\t\t\t});"
            ],
            [
                155,
                ""
            ],
            [
                156,
                "\t\t\t\tif (req.VHost == null && name == \"SERVER_NAME\") {"
            ],
            [
                157,
                "\t\t\t\t\treq.VHost = value;"
            ],
            [
                158,
                "\t\t\t\t}"
            ],
            [
                159,
                "\t\t\t\tif (req.VPort == -1 && name == \"SERVER_PORT\") {"
            ],
            [
                160,
                "\t\t\t\t\tint.TryParse (value, out req.VPort);"
            ],
            [
                161,
                "\t\t\t\t}"
            ],
            [
                162,
                "\t\t\t\tif (req.VPath == null && name == \"SCRIPT_NAME\") {"
            ],
            [
                163,
                "\t\t\t\t\treq.VPath = value;"
            ],
            [
                164,
                "\t\t\t\t}"
            ],
            [
                165,
                ""
            ],
            [
                166,
                "\t\t\t\tif (req.VHost != null && req.VPort != -1 && req.VPath != null) {"
            ],
            [
                167,
                "\t\t\t\t\treq.Host = GetRoute (req.VHost, req.VPort, req.VPath);"
            ],
            [
                168,
                ""
            ],
            [
                169,
                "\t\t\t\t\tif (req.Host != IntPtr.Zero) {"
            ],
            [
                170,
                "\t\t\t\t\t\tAppHostTransportCreateRequest (req.Host, req.Hash, req.RequestNumber);"
            ],
            [
                171,
                ""
            ],
            [
                172,
                "\t\t\t\t\t\tforeach (KeyValuePair pair in req.tempKeys) {"
            ],
            [
                173,
                "\t\t\t\t\t\t\tif (pair.IsHeader)"
            ],
            [
                174,
                "\t\t\t\t\t\t\t\tAppHostTransportAddHeader (req.Host, req.Hash, req.RequestNumber, pair.Key, pair.Value);"
            ],
            [
                175,
                "\t\t\t\t\t\t\telse"
            ],
            [
                176,
                "\t\t\t\t\t\t\t\tAppHostTransportAddServerVariable (req.Host, req.Hash, req.RequestNumber, pair.Key, pair.Value);"
            ],
            [
                177,
                "\t\t\t\t\t\t}"
            ],
            [
                178,
                "\t\t\t\t\t} else {"
            ],
            [
                179,
                "\t\t\t\t\t\tLogger.Write (LogLevel.Error, \"Can't find app {0}:{1} {2}\", req.VHost, req.VPort, req.VPath);"
            ],
            [
                180,
                "\t\t\t\t\t\t//TODO: send EndRequest with error message"
            ],
            [
                181,
                "\t\t\t\t\t}"
            ],
            [
                182,
                "\t\t\t\t}"
            ],
            [
                183,
                "\t\t\t} else {"
            ],
            [
                184,
                "\t\t\t\tif (isHeader)"
            ],
            [
                185,
                "\t\t\t\t\tAppHostTransportAddHeader (req.Host, req.Hash, req.RequestNumber, name, value);"
            ],
            [
                186,
                "\t\t\t\telse"
            ],
            [
                187,
                "\t\t\t\t\tAppHostTransportAddServerVariable (req.Host, req.Hash, req.RequestNumber, name, value);"
            ],
            [
                188,
                "\t\t\t}"
            ]
        ],
        "deleted": [
            [
                74,
                "\t\t\t\t//TODO: find application in the route"
            ],
            [
                75,
                "\t\t\t\t//TODO: save route to the request"
            ],
            [
                76,
                "\t\t\t\t//FIXME: can be two cases: route not found (no HOST param), need to wait next params"
            ],
            [
                77,
                "\t\t\t\t//or route not found (there is no matching HOST). Send error back in the case"
            ],
            [
                78,
                ""
            ],
            [
                92,
                "\t\t\t\t//send last Params request"
            ],
            [
                112,
                "\t\t\t\t//TODO: ThreadPool.QueueUserWorkItem (we must not delay IO thread)"
            ],
            [
                113,
                "\t\t\t\t//TODO: get routed host, send request to host as is"
            ],
            [
                151,
                "\t\t\t\t//TODO: change this stub"
            ],
            [
                152,
                "\t\t\t\t//\t\t\t\tif (isHeader && name == \"Host\") {"
            ],
            [
                153,
                "\t\t\t\t//TODO: check for null after route if yes return false"
            ],
            [
                154,
                "\t\t\t\treq.Host = GetRoute (value, -1, value);"
            ],
            [
                155,
                "\t\t\t\t//TODO: check that transport is routed"
            ],
            [
                156,
                "\t\t\t\tAppHostTransportCreateRequest (req.Host, req.Hash, req.RequestNumber);"
            ],
            [
                157,
                "\t\t\t\t//TODO: send all saved headers."
            ],
            [
                158,
                "\t\t\t\t//\t\t\t\t\treq.Transport.AddHeader (req.Hash, req.RequestNumber, name, value);"
            ],
            [
                159,
                "\t\t\t\t//\t\t\t\t}"
            ],
            [
                160,
                "\t\t\t}"
            ],
            [
                161,
                "\t\t\t//\t\t\telse {"
            ],
            [
                162,
                "\t\t\tif (isHeader)"
            ],
            [
                163,
                "\t\t\t\tAppHostTransportAddHeader (req.Host, req.Hash, req.RequestNumber, name, value);"
            ],
            [
                164,
                "\t\t\telse"
            ],
            [
                165,
                "\t\t\t\tAppHostTransportAddServerVariable (req.Host, req.Hash, req.RequestNumber, name, value);"
            ],
            [
                166,
                "\t\t\t//\t\t\t}"
            ]
        ]
    },
    "num_lines_added": 46,
    "num_lines_removed": 24
}