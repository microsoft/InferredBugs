{
    "hash": "cfa684819a49d55faadf09fe9cce8b587c3457b3",
    "message": "removed hardcoded configuration",
    "file_num_lines": 295,
    "diff_parsed": {
        "added": [
            [
                52,
                "using System.Collections.Generic;"
            ],
            [
                53,
                "using Mono.WebServer.HyperFastCgi.Config;"
            ],
            [
                96,
                "\t\tprivate static AddressFamily sockType;"
            ],
            [
                98,
                "\t\tprivate static ushort port=0;"
            ],
            [
                203,
                "\t\t\t\tsockType = AddressFamily.Unix;"
            ],
            [
                205,
                ""
            ],
            [
                206,
                "\t\t\t\tLogger.Write (LogLevel.Debug,"
            ],
            [
                207,
                "\t\t\t\t\t\"Listening on file: {0}\",\tpath);"
            ],
            [
                241,
                "\t\t\t\tsockType = AddressFamily.InterNetwork;"
            ],
            [
                245,
                "\t\t\t\t\t\"Listening on port: {0}\", port);"
            ],
            [
                247,
                "\t\t\t\t\t\"Listening on address: {0}\", address_str);"
            ],
            [
                279,
                "\t\t\tList<WebAppConfig> webapps = new List<WebAppConfig> ();"
            ],
            [
                291,
                "\t\t\tif (applications != null) {"
            ],
            [
                292,
                "\t\t\t\twebapps.AddRange (ConfigUtils.GetApplicationsFromCommandLine (applications));"
            ],
            [
                293,
                "\t\t\t}"
            ],
            [
                295,
                "\t\t\tif (app_config_file != null) {"
            ],
            [
                296,
                "\t\t\t\twebapps.AddRange (ConfigUtils.GetApplicationsFromConfigFile (app_config_file));"
            ],
            [
                297,
                "\t\t\t}"
            ],
            [
                299,
                "\t\t\tif (app_config_dir != null) {"
            ],
            [
                300,
                "\t\t\t\twebapps.AddRange (ConfigUtils.GetApplicationsFromConfigDirectory (app_config_dir));"
            ],
            [
                301,
                "\t\t\t}"
            ],
            [
                352,
                "//\t\t\thost.LogLevel = Logger.Level;"
            ],
            [
                353,
                "//\t\t\thost.LogToConsole = Logger.WriteToConsole;"
            ],
            [
                354,
                "//\t\t\thost.AddTrailingSlash = (bool)configmanager [\"addtrailingslash\"];"
            ],
            [
                355,
                ""
            ],
            [
                357,
                "\t\t\tforeach (WebAppConfig app in webapps) {"
            ],
            [
                358,
                "\t\t\t\tsrv.CreateApplicationHost (app.VHost, app.VPort, app.VPath, app.RealPath,"
            ],
            [
                360,
                "\t\t\t}"
            ],
            [
                362,
                "\t\t\tNativeListener.Listen ((ushort)sockType, address, port);"
            ],
            [
                370,
                "//\t\t\t\thost.Shutdown ();"
            ],
            [
                393,
                "//\t\t\tApplicationHost host = args.VApp.AppHost as ApplicationHost;"
            ],
            [
                394,
                "//"
            ],
            [
                395,
                "//\t\t\thost.Start (sockType, address, port, keepAlive, useThreadPool);"
            ]
        ],
        "deleted": [
            [
                94,
                "\t\tprivate static GeneralSocketType sockType;"
            ],
            [
                96,
                "\t\tprivate static int port=0;"
            ],
            [
                201,
                "\t\t\t\tsockType = GeneralSocketType.Unix;"
            ],
            [
                203,
                "//\t\t\t\ttry {"
            ],
            [
                204,
                "//\t\t\t\t\tsocket = new UnixSocket (path);"
            ],
            [
                205,
                "//\t\t\t\t} catch (System.Net.Sockets.SocketException e){"
            ],
            [
                206,
                "//\t\t\t\t\tLogger.Write (LogLevel.Error,"
            ],
            [
                207,
                "//\t\t\t\t\t\t\"Error creating the socket: {0}\","
            ],
            [
                208,
                "//\t\t\t\t\t\te.Message);"
            ],
            [
                209,
                "//\t\t\t\t\treturn 1;"
            ],
            [
                210,
                "//\t\t\t\t}"
            ],
            [
                211,
                ""
            ],
            [
                212,
                "//\t\t\t\tLogger.Write (LogLevel.Debug,"
            ],
            [
                213,
                "//\t\t\t\t\t\"Listening on file: {0}\",\tpath);"
            ],
            [
                247,
                "\t\t\t\tsockType = GeneralSocketType.Tcp;"
            ],
            [
                250,
                ""
            ],
            [
                251,
                "//\t\t\t\ttry {"
            ],
            [
                252,
                "//\t\t\t\t\tsocket = new TcpSocket (new IPEndPoint(address, port));"
            ],
            [
                253,
                "//\t\t\t\t} catch (System.Net.Sockets.SocketException e){"
            ],
            [
                254,
                "//\t\t\t\t\tLogger.Write (LogLevel.Error,"
            ],
            [
                255,
                "//\t\t\t\t\t\t\"Error creating the socket: {0}\","
            ],
            [
                256,
                "//\t\t\t\t\t\te.Message);"
            ],
            [
                257,
                "//\t\t\t\t\treturn 1;"
            ],
            [
                258,
                "//\t\t\t\t}"
            ],
            [
                259,
                ""
            ],
            [
                261,
                "\t\t\t\t\t\"Listening on port: {0}\", address_str);"
            ],
            [
                263,
                "\t\t\t\t\t\"Listening on address: {0}\", port);"
            ],
            [
                306,
                "\t\t\tif (applications != null)"
            ],
            [
                307,
                "\t\t\t\tappserver.AddApplicationsFromCommandLine ("
            ],
            [
                308,
                "\t\t\t\t\tapplications);"
            ],
            [
                310,
                "\t\t\tif (app_config_file != null)"
            ],
            [
                311,
                "\t\t\t\tappserver.AddApplicationsFromConfigFile ("
            ],
            [
                312,
                "\t\t\t\t\tapp_config_file);"
            ],
            [
                314,
                "\t\t\tif (app_config_dir != null)"
            ],
            [
                315,
                "\t\t\t\tappserver.AddApplicationsFromConfigDirectory ("
            ],
            [
                316,
                "\t\t\t\t\tapp_config_dir);"
            ],
            [
                332,
                "\t\t\tVPathToHost vapp = appserver.GetSingleApp ();"
            ],
            [
                333,
                "\t\t\tif (vapp == null) {"
            ],
            [
                334,
                "\t\t\t\tLogger.Write (LogLevel.Error, \"Only one application currently supported\");"
            ],
            [
                335,
                "\t\t\t\treturn 1;"
            ],
            [
                336,
                "\t\t\t}"
            ],
            [
                337,
                "\t\t\tvapp.CreateHost (appserver, typeof(ApplicationHost));"
            ],
            [
                338,
                "\t\t\tApplicationHost host = vapp.AppHost as ApplicationHost;"
            ],
            [
                374,
                "\t\t\thost.LogLevel = Logger.Level;"
            ],
            [
                375,
                "\t\t\thost.LogToConsole = Logger.WriteToConsole;"
            ],
            [
                376,
                "\t\t\thost.AddTrailingSlash = (bool)configmanager [\"addtrailingslash\"];"
            ],
            [
                377,
                ""
            ],
            [
                378,
                "//\t\t\tif (!host.Start (sockType, address, port, keepAlive, useThreadPool))"
            ],
            [
                379,
                "//\t\t\t\treturn 1;"
            ],
            [
                380,
                "//\t\t\tMono.WebServer.HyperFastCgi.AspNetServer.AspNetApplicationHost hst ="
            ],
            [
                381,
                "//\t\t\t\tSystem.Web.Hosting.ApplicationHost.CreateApplicationHost ("
            ],
            [
                382,
                "//\t\t\t\t\ttypeof(Mono.WebServer.HyperFastCgi.AspNetServer.AspNetApplicationHost),"
            ],
            [
                383,
                "//\t\t\t\t\t\"/\", \"/var/www/nginx-mono/\")"
            ],
            [
                384,
                "//\t\t\t\tas Mono.WebServer.HyperFastCgi.AspNetServer.AspNetApplicationHost;"
            ],
            [
                385,
                "//\t\t\tstring domain1 = AppDomain.CurrentDomain.FriendlyName;"
            ],
            [
                386,
                "//\t\t\tstring domain2 = hst.Domain.FriendlyName;"
            ],
            [
                387,
                ""
            ],
            [
                388,
                "//\t\t\tstring vpath=hst.VPath;"
            ],
            [
                389,
                ""
            ],
            [
                390,
                "\t\t\tManagedFastCgiListener listener = new ManagedFastCgiListener ();"
            ],
            [
                392,
                "\t\t\tlistener.Server = srv;"
            ],
            [
                393,
                "\t\t\tvar h=(Mono.WebServer.HyperFastCgi.AspNetServer.AspNetApplicationHost)"
            ],
            [
                394,
                "\t\t\t\tsrv.CreateApplicationHost (\"ssbench3\", 81, \"/\", \"/var/www/nginx-mono/\","
            ],
            [
                396,
                "//\t\t\tlistener.Listen (\"127.0.0.1\", 9000);"
            ],
            [
                397,
                "\t\t\tvar t=h.GetListenerTransport ();"
            ],
            [
                398,
                "\t\t\th.LogLevel = Logger.Level;"
            ],
            [
                399,
                "\t\t\th.LogToConsole = Logger.WriteToConsole;"
            ],
            [
                401,
                "\t\t\tNativeListener.Listen ((ushort)AddressFamily.InterNetwork, \"127.0.0.1\", 9000);"
            ],
            [
                409,
                "\t\t\t\thost.Shutdown ();"
            ],
            [
                432,
                "\t\t\tApplicationHost host = args.VApp.AppHost as ApplicationHost;"
            ],
            [
                433,
                ""
            ],
            [
                434,
                "\t\t\thost.Start (sockType, address, port, keepAlive, useThreadPool);"
            ]
        ]
    },
    "num_lines_added": 33,
    "num_lines_removed": 72
}