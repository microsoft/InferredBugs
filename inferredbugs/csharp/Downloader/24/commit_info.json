{
    "hash": "605df0857b830d75b50b81a570d4986ed7dfdc69",
    "message": "Fixed serializability of Chunk class",
    "file_num_lines": 214,
    "diff_parsed": {
        "added": [
            [
                2,
                "using Newtonsoft.Json;"
            ],
            [
                300,
                "            var chunk = new Chunk(0, size) { Position = 1, Storage = new MemoryStorage() };"
            ],
            [
                308,
                ""
            ],
            [
                309,
                "        [TestMethod]"
            ],
            [
                310,
                "        public void SerializeChunkWhenHasFileStorageTest()"
            ],
            [
                311,
                "        {"
            ],
            [
                312,
                "            // arrange"
            ],
            [
                313,
                "            var settings = new JsonSerializerSettings();"
            ],
            [
                314,
                "            settings.Converters.Add(new StorageConverter());"
            ],
            [
                315,
                "            var data = DummyData.GenerateOrderedBytes(1024);"
            ],
            [
                316,
                "            var chunk = new Chunk(1024, 1024 + data.Length) {"
            ],
            [
                317,
                "                Position = 1,"
            ],
            [
                318,
                "                Timeout = 1000,"
            ],
            [
                319,
                "                MaxTryAgainOnFailover = 3000,"
            ],
            [
                320,
                "                Storage = new FileStorage()"
            ],
            [
                321,
                "            };"
            ],
            [
                322,
                ""
            ],
            [
                323,
                "            // act"
            ],
            [
                324,
                "            var serializedChunk = JsonConvert.SerializeObject(chunk);"
            ],
            [
                325,
                "            chunk.Storage.Close();"
            ],
            [
                326,
                "            var deserializedChunk = JsonConvert.DeserializeObject<Chunk>(serializedChunk, settings);"
            ],
            [
                327,
                ""
            ],
            [
                328,
                "            // assert"
            ],
            [
                329,
                "            Assert.IsNotNull(deserializedChunk);"
            ],
            [
                330,
                "            Assert.AreEqual(chunk.Id, deserializedChunk.Id);"
            ],
            [
                331,
                "            Assert.AreEqual(chunk.Start, deserializedChunk.Start);"
            ],
            [
                332,
                "            Assert.AreEqual(chunk.End, deserializedChunk.End);"
            ],
            [
                333,
                "            Assert.AreEqual(chunk.Length, deserializedChunk.Length);"
            ],
            [
                334,
                "            Assert.AreEqual(chunk.Position, deserializedChunk.Position);"
            ],
            [
                335,
                "            Assert.AreEqual(chunk.Timeout, deserializedChunk.Timeout);"
            ],
            [
                336,
                "            Assert.AreEqual(chunk.MaxTryAgainOnFailover, deserializedChunk.MaxTryAgainOnFailover);"
            ],
            [
                337,
                "            Assert.AreEqual(chunk.Storage.GetLength(), deserializedChunk.Storage.GetLength());"
            ],
            [
                338,
                "        }"
            ]
        ],
        "deleted": [
            [
                299,
                "            var chunk = new Chunk(0, size) { Position = 1, Storage = (new MemoryStorage()) };"
            ]
        ]
    },
    "num_lines_added": 33,
    "num_lines_removed": 1
}