{
    "hash": "7b1516527d9609ac1d916c5f9054b7edad13df36",
    "message": "Refactore ChunkTest class codes",
    "file_num_lines": 207,
    "diff_parsed": {
        "added": [
            [
                1,
                "\ufeffusing System.Runtime.Serialization;"
            ],
            [
                2,
                "using System.Runtime.Serialization.Formatters.Binary;"
            ],
            [
                3,
                "using Microsoft.VisualStudio.TestTools.UnitTesting;"
            ],
            [
                11,
                "        private readonly byte[] _testData = DummyData.GenerateOrderedBytes(1024);"
            ],
            [
                12,
                ""
            ],
            [
                34,
                "            chunk.Storage.WriteAsync(_testData, 0, 5).Wait();"
            ],
            [
                48,
                "            chunk.Storage.WriteAsync(_testData, 0, 5).Wait();"
            ],
            [
                119,
                "            var chunk = new Chunk(0, _testData.Length - 1) { Position = _testData.Length - 1, Storage = new MemoryStorage() };"
            ],
            [
                120,
                "            chunk.Storage.WriteAsync(_testData, 0, _testData.Length).Wait();"
            ],
            [
                133,
                "            var chunk = new Chunk(0, _testData.Length - 1) { Position = _testData.Length - 1, Storage = new FileStorage(\"\") };"
            ],
            [
                134,
                "            chunk.Storage.WriteAsync(_testData, 0, _testData.Length).Wait();"
            ],
            [
                148,
                "            var chunk = new Chunk(0, size) { Storage = new MemoryStorage() };"
            ],
            [
                162,
                "            var chunk = new Chunk(0, size) { Storage = new FileStorage(\"\") };"
            ],
            [
                175,
                "            var chunk = new Chunk(0, _testData.Length - 1) {"
            ],
            [
                176,
                "                Position = _testData.Length,"
            ],
            [
                177,
                "                Storage = new MemoryStorage() // overflowed"
            ],
            [
                191,
                "            var chunk = new Chunk(0, _testData.Length - 1) { Position = 7, Storage = new MemoryStorage() };"
            ],
            [
                192,
                "            chunk.Storage.WriteAsync(_testData, 0, 7);"
            ],
            [
                220,
                "            var chunk = new Chunk(0, 1024) {"
            ],
            [
                235,
                "            var chunk = new Chunk(0, 1024) {"
            ],
            [
                250,
                "            var chunk = new Chunk(0, -1) { Position = 0, Storage = new MemoryStorage() };"
            ],
            [
                263,
                "            var chunk = new Chunk(0, 1023) {"
            ],
            [
                264,
                "                Position = 1024,"
            ],
            [
                265,
                "                Storage = new MemoryStorage() // overflowed"
            ],
            [
                279,
                "            var chunk = new Chunk(0, 1024) {"
            ],
            [
                294,
                "            var chunk = new Chunk(0, 1024) { Position = 1, Storage = new MemoryStorage() };"
            ],
            [
                304,
                "        public void ChunkSerializationWhenFileStorageTest()"
            ],
            [
                311,
                "                Position = 1,"
            ]
        ],
        "deleted": [
            [
                1,
                "\ufeffusing Microsoft.VisualStudio.TestTools.UnitTesting;"
            ],
            [
                30,
                "            chunk.Storage.WriteAsync(new byte[] { 0x0, 0x1, 0x2, 0x3, 0x4 }, 0, 5).Wait();"
            ],
            [
                44,
                "            chunk.Storage.WriteAsync(new byte[] { 0x0, 0x1, 0x2, 0x3, 0x4 }, 0, 5).Wait();"
            ],
            [
                115,
                "            var size = 1024;"
            ],
            [
                116,
                "            var chunk = new Chunk(0, size - 1) { Position = size - 1, Storage = (new MemoryStorage()) };"
            ],
            [
                117,
                "            chunk.Storage.WriteAsync(DummyData.GenerateRandomBytes(size), 0, size).Wait();"
            ],
            [
                130,
                "            var size = 1024;"
            ],
            [
                131,
                "            var chunk = new Chunk(0, size - 1) { Position = size - 1, Storage = (new FileStorage(\"\")) };"
            ],
            [
                132,
                "            var dummyData = DummyData.GenerateRandomBytes(size);"
            ],
            [
                133,
                "            chunk.Storage.WriteAsync(dummyData, 0, size).Wait();"
            ],
            [
                147,
                "            var chunk = new Chunk(0, size) { Storage = (new MemoryStorage()) };"
            ],
            [
                161,
                "            var chunk = new Chunk(0, size) { Storage = (new FileStorage(\"\")) };"
            ],
            [
                174,
                "            var size = 1024;"
            ],
            [
                175,
                "            var chunk = new Chunk(0, size - 1) {"
            ],
            [
                176,
                "                Position = size,"
            ],
            [
                177,
                "                Storage = (new MemoryStorage()) // overflowed"
            ],
            [
                191,
                "            var size = 1024;"
            ],
            [
                192,
                "            var chunk = new Chunk(0, size - 1) { Position = 7, Storage = (new MemoryStorage()) };"
            ],
            [
                193,
                "            chunk.Storage.WriteAsync(new byte[] { 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7 }, 0, 7);"
            ],
            [
                221,
                "            var size = 1024;"
            ],
            [
                222,
                "            var chunk = new Chunk(0, size) {"
            ],
            [
                237,
                "            var size = 1024;"
            ],
            [
                238,
                "            var chunk = new Chunk(0, size) {"
            ],
            [
                253,
                "            var chunk = new Chunk(0, -1) { Position = 0, Storage = (new MemoryStorage()) };"
            ],
            [
                266,
                "            var size = 1024;"
            ],
            [
                267,
                "            var chunk = new Chunk(0, size - 1) {"
            ],
            [
                268,
                "                Position = size,"
            ],
            [
                269,
                "                Storage = (new MemoryStorage()) // overflowed"
            ],
            [
                283,
                "            var size = 1024;"
            ],
            [
                284,
                "            var chunk = new Chunk(0, size) {"
            ],
            [
                299,
                "            var size = 1024;"
            ],
            [
                300,
                "            var chunk = new Chunk(0, size) { Position = 1, Storage = new MemoryStorage() };"
            ],
            [
                310,
                "        public void SerializeChunkWhenHasFileStorageTest()"
            ],
            [
                317,
                "                Position = 1,"
            ]
        ]
    },
    "num_lines_added": 28,
    "num_lines_removed": 34
}