{
    "hash": "1a2f77e272ff09d6307f23c7bed023e0fe21151c",
    "message": "Refactoring classes and add GetFileNameFromUrl method",
    "file_num_lines": 382,
    "diff_parsed": {
        "added": [
            [
                14,
                "    public class DownloadService : IDownloadService"
            ],
            [
                30,
                "        protected const string HeadRequestMethod = \"HEAD\";"
            ],
            [
                31,
                "        protected const string GetRequestMethod = \"GET\";"
            ],
            [
                34,
                "        protected CancellationTokenSource GlobalCancellationTokenSource { get; set; }"
            ],
            [
                49,
                "            GlobalCancellationTokenSource = new CancellationTokenSource();"
            ],
            [
                65,
                "                GlobalCancellationTokenSource = new CancellationTokenSource();"
            ],
            [
                67,
                "                Package.Address = new Uri(address);"
            ],
            [
                95,
                "            GlobalCancellationTokenSource?.Cancel(false);"
            ],
            [
                99,
                "            GlobalCancellationTokenSource?.Dispose();"
            ],
            [
                100,
                "            GlobalCancellationTokenSource = new CancellationTokenSource();"
            ],
            [
                163,
                "            var request = withHeadRequest ? GetRequest(HeadRequestMethod, address) : GetRequest(GetRequestMethod, address);"
            ],
            [
                212,
                "                var cancellationToken = GlobalCancellationTokenSource.Token;"
            ],
            [
                247,
                "                if (GlobalCancellationTokenSource.Token.IsCancellationRequested == false)"
            ],
            [
                261,
                "                var request = GetRequest(GetRequestMethod, address);"
            ],
            [
                299,
                "                                       chunk.FailoverCount++ <= Package.Options.MaxTryAgainOnFailover)"
            ],
            [
                301,
                "                // when the host forcibly closed the connection."
            ],
            [
                349,
                "                OnDownloadProgressChanged(new DownloadProgressChangedEventArgs(null, Package.TotalFileSize, Package.BytesReceived, DownloadSpeed));"
            ],
            [
                377,
                "                OnDownloadProgressChanged(new DownloadProgressChangedEventArgs(null, Package.TotalFileSize, Package.BytesReceived, DownloadSpeed));"
            ]
        ],
        "deleted": [
            [
                14,
                "    public partial class DownloadService : IDownloadService"
            ],
            [
                32,
                "        protected CancellationTokenSource Cts { get; set; }"
            ],
            [
                38,
                "        public string MainProgressName { get; } = \"Main\";"
            ],
            [
                48,
                "            Cts = new CancellationTokenSource();"
            ],
            [
                64,
                "                Cts = new CancellationTokenSource();"
            ],
            [
                66,
                "                Package.Address = new Uri(address);"
            ],
            [
                94,
                "            Cts?.Cancel(false);"
            ],
            [
                98,
                "            Cts?.Dispose();"
            ],
            [
                99,
                "            Cts = new CancellationTokenSource();"
            ],
            [
                162,
                "            var request = withHeadRequest ? GetRequest(\"HEAD\", address) : GetRequest(\"GET\", address);"
            ],
            [
                211,
                "                var cancellationToken = Cts.Token;"
            ],
            [
                246,
                "                if (Cts.Token.IsCancellationRequested == false)"
            ],
            [
                260,
                "                var request = GetRequest(\"GET\", address);"
            ],
            [
                298,
                "                                       chunk.FailoverCount++ <= Package.Options.MaxTryAgainOnFailover) // when the host forcibly closed the connection."
            ],
            [
                347,
                "                OnDownloadProgressChanged(new DownloadProgressChangedEventArgs(MainProgressName, Package.TotalFileSize, Package.BytesReceived, DownloadSpeed));"
            ],
            [
                375,
                "                OnDownloadProgressChanged(new DownloadProgressChangedEventArgs(MainProgressName, Package.TotalFileSize, Package.BytesReceived, DownloadSpeed));"
            ]
        ]
    },
    "num_lines_added": 18,
    "num_lines_removed": 16
}