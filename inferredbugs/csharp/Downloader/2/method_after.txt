        protected HttpWebRequest GetRequest(string method, Uri address)
        {
            var request = (HttpWebRequest)WebRequest.Create(address);
            request.Timeout = -1;
            request.Method = method;

            request.Accept = Package.Options.RequestConfiguration.Accept;
            request.KeepAlive = Package.Options.RequestConfiguration.KeepAlive;
            request.AllowAutoRedirect = Package.Options.RequestConfiguration.AllowAutoRedirect;
            request.AutomaticDecompression = Package.Options.RequestConfiguration.AutomaticDecompression;
            request.UserAgent = Package.Options.RequestConfiguration.UserAgent;
            request.ProtocolVersion = Package.Options.RequestConfiguration.ProtocolVersion;
            request.UseDefaultCredentials = Package.Options.RequestConfiguration.UseDefaultCredentials;
            request.SendChunked = Package.Options.RequestConfiguration.SendChunked;
            request.TransferEncoding = Package.Options.RequestConfiguration.TransferEncoding;
            request.Expect = Package.Options.RequestConfiguration.Expect;
            request.MaximumAutomaticRedirections = Package.Options.RequestConfiguration.MaximumAutomaticRedirections;
            request.MediaType = Package.Options.RequestConfiguration.MediaType;
            request.PreAuthenticate = Package.Options.RequestConfiguration.PreAuthenticate;
            request.Credentials = Package.Options.RequestConfiguration.Credentials;
            request.ClientCertificates = Package.Options.RequestConfiguration.ClientCertificates;
            request.Referer = Package.Options.RequestConfiguration.Referer;
            request.Pipelined = Package.Options.RequestConfiguration.Pipelined;
            request.Proxy = Package.Options.RequestConfiguration.Proxy;

            if (Package.Options.RequestConfiguration.IfModifiedSince.HasValue)
                request.IfModifiedSince = Package.Options.RequestConfiguration.IfModifiedSince.Value;

            return request;
        }