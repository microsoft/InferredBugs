{
    "hash": "3e8547a817fbcc7d591659f4c67a745eb4516fb8",
    "message": "Using better ripple effect",
    "file_num_lines": 74,
    "diff_parsed": {
        "added": [
            [
                2,
                "using System.Threading.Tasks;"
            ],
            [
                9,
                "using Avalonia.Layout;"
            ],
            [
                12,
                "using Avalonia.Threading;"
            ],
            [
                15,
                "    public class RippleEffect : ContentControl"
            ],
            [
                16,
                "    {"
            ],
            [
                17,
                "        private Canvas PART_RippleCanvasRoot;"
            ],
            [
                19,
                "        private Ripple last;"
            ],
            [
                20,
                "        private short pointers;"
            ],
            [
                21,
                ""
            ],
            [
                22,
                "        public RippleEffect()"
            ],
            [
                23,
                "        {"
            ],
            [
                25,
                "                if (last != null)"
            ],
            [
                26,
                "                {"
            ],
            [
                27,
                "                    pointers--;"
            ],
            [
                28,
                ""
            ],
            [
                29,
                "                    // This way to handle pointer released is pretty tricky"
            ],
            [
                30,
                "                    // could have more better way to improve"
            ],
            [
                31,
                "                    OnReleaseHandler(last, e);"
            ],
            [
                32,
                "                    last = null;"
            ],
            [
                33,
                "                }"
            ],
            [
                36,
                "                if (pointers == 0)"
            ],
            [
                38,
                "                    // Only first pointer can arrive a ripple"
            ],
            [
                39,
                "                    pointers++;"
            ],
            [
                40,
                "                    var r = CreateRipple();"
            ],
            [
                41,
                "                    last = r;"
            ],
            [
                42,
                "                    r.SetupInitialValues(e, this);"
            ],
            [
                43,
                ""
            ],
            [
                44,
                "                    // Attach ripple instance to canvas"
            ],
            [
                45,
                "                    PART_RippleCanvasRoot.Children.Add(r);"
            ],
            [
                46,
                "                    r.RunFirstStep(e, this);"
            ],
            [
                50,
                ""
            ],
            [
                51,
                "        private void OnReleaseHandler(object sender, PointerReleasedEventArgs e)"
            ],
            [
                53,
                "            var r = sender as Ripple;"
            ],
            [
                54,
                ""
            ],
            [
                55,
                "            // Fade out ripple"
            ],
            [
                56,
                "            r.RunSecondStep(e);"
            ],
            [
                57,
                ""
            ],
            [
                58,
                "            // Remove ripple from canvas to finalize ripple instance"
            ],
            [
                59,
                "            Task.Delay(Ripple.Duration).ContinueWith((a, b) =>"
            ],
            [
                60,
                "            {"
            ],
            [
                61,
                "                Dispatcher.UIThread.InvokeAsync(() => PART_RippleCanvasRoot.Children.Remove(r));"
            ],
            [
                62,
                "            }, null);"
            ],
            [
                67,
                "            // Find canvas host"
            ],
            [
                68,
                "            PART_RippleCanvasRoot = e.NameScope.Find<Canvas>(nameof(PART_RippleCanvasRoot));"
            ],
            [
                69,
                "        }"
            ],
            [
                71,
                "        private Ripple CreateRipple()"
            ],
            [
                72,
                "        {"
            ],
            [
                73,
                "            return new Ripple(Bounds.Width, Bounds.Height)"
            ],
            [
                74,
                "            {"
            ],
            [
                75,
                "                Fill = RippleFill"
            ],
            [
                76,
                "            };"
            ]
        ],
        "deleted": [
            [
                12,
                "    public class RippleEffect : ContentControl {"
            ],
            [
                13,
                "        private Ellipse _circle;"
            ],
            [
                14,
                "        private IAnimationSetter _fromMargin;"
            ],
            [
                15,
                "        private bool _isRunning;"
            ],
            [
                16,
                "        private Animation _ripple;"
            ],
            [
                17,
                "        private IAnimationSetter _toMargin;"
            ],
            [
                18,
                "        private IAnimationSetter _toWidth;"
            ],
            [
                20,
                "        public RippleEffect() {"
            ],
            [
                22,
                "                if (Classes.Contains(\"notransitions\"))"
            ],
            [
                23,
                "                    NoTransitionsReleased();"
            ],
            [
                26,
                "                if (_isRunning) return;"
            ],
            [
                27,
                "                if (Classes.Contains(\"notransitions\"))"
            ],
            [
                29,
                "                    NoTransitionsPressed(e);"
            ],
            [
                30,
                "                    return;"
            ],
            [
                32,
                "                var pointer = e.GetPosition(this);"
            ],
            [
                33,
                "                _isRunning = true;"
            ],
            [
                34,
                "                var maxWidth = Math.Max(Bounds.Width, Bounds.Height) * 2.2D;"
            ],
            [
                35,
                "                _toWidth.Value = maxWidth;"
            ],
            [
                36,
                "                _fromMargin.Value = _circle.Margin = new Thickness(pointer.X, pointer.Y, 0, 0);"
            ],
            [
                37,
                "                _toMargin.Value = new Thickness(pointer.X - maxWidth / 2, pointer.Y - maxWidth / 2, 0, 0);"
            ],
            [
                38,
                "                _circle.Opacity = 0;"
            ],
            [
                39,
                "                await _ripple.RunAsync(_circle);"
            ],
            [
                40,
                "                _circle.Opacity = 0;"
            ],
            [
                41,
                "                _isRunning = false;"
            ],
            [
                44,
                ""
            ],
            [
                45,
                "        private void NoTransitionsReleased()"
            ],
            [
                46,
                "        {"
            ],
            [
                47,
                "            _circle.Opacity = 0;"
            ],
            [
                48,
                "            _circle.Width = 0;"
            ],
            [
                49,
                "        }"
            ],
            [
                50,
                "        private void NoTransitionsPressed(PointerPressedEventArgs e)"
            ],
            [
                52,
                "            var pointer = e.GetPosition(this);"
            ],
            [
                53,
                "            _circle.Opacity = 1;"
            ],
            [
                54,
                "            _circle.Width = Math.Max(Bounds.Width, Bounds.Height) * 2.2D;"
            ],
            [
                55,
                "            _circle.Margin = new Thickness(pointer.X - _circle.Width / 2, pointer.Y - _circle.Width / 2, 0, 0);"
            ],
            [
                57,
                ""
            ],
            [
                60,
                "            _circle = e.NameScope.Find<Ellipse>(\"Circle\");"
            ],
            [
                62,
                "            var style = _circle.Styles[0] as Style;"
            ],
            [
                63,
                "            _ripple = style.Animations[0] as Animation;"
            ],
            [
                64,
                "            _toWidth = _ripple.Children[2].Setters[1];"
            ],
            [
                65,
                "            _fromMargin = _ripple.Children[0].Setters[0];"
            ],
            [
                66,
                "            _toMargin = _ripple.Children[2].Setters[0];"
            ],
            [
                68,
                "            style.Animations.Remove(_ripple);"
            ]
        ]
    },
    "num_lines_added": 51,
    "num_lines_removed": 43
}