{
    "hash": "dad91f6b546683c9f2f72fdf8ed9d64d0a3481b1",
    "message": "Refactored tab operations to have shared abstract base class TabOperation.  And added MoveTabOperation",
    "file_num_lines": 42,
    "diff_parsed": {
        "added": [
            [
                6,
                ""
            ],
            [
                7,
                "public class AddTabOperation : TabViewOperation"
            ],
            [
                11,
                "    public AddTabOperation(Design design) : base(design)"
            ],
            [
                24,
                "            View.AddTab(_tab = new Tab(newTabName ?? \"Unamed Tab\", new View { Width = Dim.Fill(), Height = Dim.Fill() }), true);"
            ],
            [
                25,
                "            View.SetNeedsDisplay();"
            ],
            [
                34,
                "        if (_tab == null || View.Tabs.Contains(_tab))"
            ],
            [
                39,
                "        View.AddTab(_tab, true);"
            ],
            [
                40,
                "        View.SetNeedsDisplay();"
            ],
            [
                46,
                "        if (_tab == null || !View.Tabs.Contains(_tab))"
            ],
            [
                51,
                "        View.RemoveTab(_tab);"
            ],
            [
                52,
                "        View.SetNeedsDisplay();"
            ]
        ],
        "deleted": [
            [
                6,
                "public class AddTabOperation : Operation"
            ],
            [
                9,
                "    private readonly TabView _tabView;"
            ],
            [
                10,
                ""
            ],
            [
                11,
                "    public Design Design { get; }"
            ],
            [
                13,
                "    public AddTabOperation(Design design)"
            ],
            [
                15,
                "        Design = design;"
            ],
            [
                16,
                ""
            ],
            [
                17,
                "        // somehow user ran this command for a non tab view"
            ],
            [
                18,
                "        if (Design.View is not TabView)"
            ],
            [
                19,
                "            throw new ArgumentException($\"Design must be for a {nameof(TabView)} to support {nameof(AddTabOperation)}\");"
            ],
            [
                20,
                ""
            ],
            [
                21,
                "        _tabView = (TabView)Design.View;"
            ],
            [
                33,
                "            _tabView.AddTab(_tab = new Tab(newTabName ?? \"Unamed Tab\",new View{Width = Dim.Fill(),Height=Dim.Fill()}),true);"
            ],
            [
                34,
                "            _tabView.SetNeedsDisplay();"
            ],
            [
                43,
                "        if (_tab == null || _tabView.Tabs.Contains(_tab))"
            ],
            [
                48,
                "        _tabView.AddTab(_tab,true);"
            ],
            [
                49,
                "        _tabView.SetNeedsDisplay();"
            ],
            [
                55,
                "        if (_tab == null || !_tabView.Tabs.Contains(_tab))"
            ],
            [
                60,
                "        _tabView.RemoveTab(_tab);"
            ],
            [
                61,
                "        _tabView.SetNeedsDisplay();"
            ]
        ]
    },
    "num_lines_added": 11,
    "num_lines_removed": 20
}