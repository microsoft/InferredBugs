{
    "hash": "3dcff8690f48d301c694d6b2fb684db769eb78ba",
    "message": "* fixing some minor Sonar-appointed issues",
    "file_num_lines": 669,
    "diff_parsed": {
        "added": [
            [
                38,
                "        private const string SERVICE_NOT_INSTALLED = \"Service not installed\";"
            ],
            [
                40,
                "        private readonly string _serviceName;"
            ],
            [
                66,
                "                var queryString = $\"select PathName from Win32_Service where Name = '{_serviceName.Replace(\"'\", \"''\")}'\";"
            ],
            [
                67,
                "                var searcher = new ManagementObjectSearcher(queryString);"
            ],
            [
                69,
                "                _serviceExe = collection.Cast<ManagementBaseObject>()"
            ],
            [
                70,
                "                    .Select(o => o.Properties[\"PathName\"].Value.ToString())"
            ],
            [
                71,
                "                    .FirstOrDefault();"
            ],
            [
                82,
                "            var queryString = $\"select Name from Win32_Service where PathName = '{path.Replace(\"'\", \"''\").Replace(\"\\\\\", \"\\\\\\\\\")}'\";"
            ],
            [
                83,
                "            var searcher = new ManagementObjectSearcher(queryString);"
            ],
            [
                87,
                "            var svcName = collection.Cast<ManagementBaseObject>()"
            ],
            [
                88,
                "                                        .Select(item => item.Properties[\"Name\"].Value.ToString())"
            ],
            [
                89,
                "                                        .FirstOrDefault();"
            ],
            [
                90,
                "            return svcName == null"
            ],
            [
                91,
                "                    ? null"
            ],
            [
                92,
                "                    : new WindowsServiceUtil(svcName);"
            ],
            [
                102,
                "                var scm = OpenSCManager(ScmAccessRights.Connect);"
            ],
            [
                105,
                "                    var service = Win32Api.OpenService(scm, _serviceName, ServiceAccessRights.QueryStatus);"
            ],
            [
                146,
                "            var scm = OpenSCManager(ScmAccessRights.Connect);"
            ],
            [
                147,
                "            bool ret;"
            ],
            [
                150,
                "                var service = Win32Api.OpenService(scm, _serviceName, ServiceAccessRights.QueryStatus);"
            ],
            [
                151,
                "                ret = service != IntPtr.Zero;"
            ],
            [
                161,
                "        // ReSharper disable once MemberCanBePrivate.Global"
            ],
            [
                162,
                "        public uint ServiceStopTimeoutMs { get; set; }"
            ],
            [
                176,
                "            var scm = OpenSCManager(ScmAccessRights.AllAccess);"
            ],
            [
                180,
                "                var service = Win32Api.OpenService(scm, _serviceName, ServiceAccessRights.AllAccess);"
            ],
            [
                192,
                "                            throw new ServiceOperationException(_serviceName, ServiceOperationNames.UNINSTALL,"
            ],
            [
                193,
                "                                                                    lastError.ErrorCode + \": \" + lastError.Message);"
            ],
            [
                293,
                "            VerifyServiceExecutable();"
            ],
            [
                299,
                "            {"
            ],
            [
                300,
                "                throw new ServiceOperationException(_serviceName, ServiceOperationNames.INSTALL,"
            ],
            [
                301,
                "                    $\"Failed to install with executable: {_serviceExe}\\nMore info:\\n{win32Exception.Message}\");"
            ],
            [
                302,
                "            }"
            ],
            [
                307,
                "        private void VerifyServiceExecutable()"
            ],
            [
                308,
                "        {"
            ],
            [
                309,
                "            if (ServiceExe == null)"
            ],
            [
                310,
                "                throw new ServiceOperationException(_serviceName, ServiceOperationNames.INSTALL,"
            ],
            [
                311,
                "                                                    \"no ServiceExe set\");"
            ],
            [
                312,
                ""
            ],
            [
                313,
                "            if (!File.Exists(ServiceExe))"
            ],
            [
                314,
                "                throw new ServiceOperationException(_serviceName, ServiceOperationNames.INSTALL,"
            ],
            [
                315,
                "                                                    \"Can't find service executable at: \" + _serviceExe);"
            ],
            [
                316,
                "        }"
            ],
            [
                317,
                ""
            ],
            [
                382,
                "                var service = Win32Api.OpenService(scm, _serviceName,"
            ],
            [
                385,
                "                    throw new ServiceOperationException(_serviceName, ServiceOperationNames.START, SERVICE_NOT_INSTALLED);"
            ],
            [
                413,
                "                    throw new ServiceOperationException(_serviceName,"
            ],
            [
                414,
                "                                                            ServiceOperationNames.STOP,"
            ],
            [
                415,
                "                                                            SERVICE_NOT_INSTALLED);"
            ],
            [
                444,
                "                    throw new ServiceOperationException(_serviceName,"
            ],
            [
                445,
                "                                                        ServiceOperationNames.PAUSE,"
            ],
            [
                446,
                "                                                        SERVICE_NOT_INSTALLED);"
            ],
            [
                474,
                "                    throw new ServiceOperationException(_serviceName,"
            ],
            [
                475,
                "                                                        ServiceOperationNames.PAUSE,"
            ],
            [
                476,
                "                                                        SERVICE_NOT_INSTALLED);"
            ],
            [
                505,
                "                    throw new ServiceOperationException(_serviceName,"
            ],
            [
                506,
                "                                                        ServiceOperationNames.START,"
            ],
            [
                507,
                "                                                        \"Unable to start service\");"
            ],
            [
                516,
                "            var status = new Win32Api.SERVICE_STATUS();"
            ],
            [
                528,
                "                throw new ServiceOperationException(_serviceName,"
            ],
            [
                529,
                "                                                    ServiceOperationNames.STOP,"
            ],
            [
                530,
                "                                                    \"Unable to stop service\");"
            ],
            [
                537,
                "                    if (!process.WaitForExit((int) ServiceStopTimeoutMs))"
            ],
            [
                546,
                "                ThrowAppropriateExceptionFor(waitLevel, ServiceOperationNames.STOP, ex);"
            ],
            [
                550,
                "        private void ThrowAppropriateExceptionFor(int waitLevel, string operation, Exception ex)"
            ],
            [
                555,
                "                    throw new ServiceOperationException(_serviceName, operation,"
            ],
            [
                558,
                "                    throw new ServiceOperationException(_serviceName, operation,"
            ],
            [
                561,
                "                    throw new ServiceOperationException(_serviceName, operation,"
            ],
            [
                569,
                "            return $\"Service responded to stop command {subMessage} ({ex.Message})\";"
            ],
            [
                575,
                "                throw new ServiceOperationException(_serviceName,"
            ],
            [
                576,
                "                                                    ServiceOperationNames.PAUSE,"
            ],
            [
                577,
                "                                                    \"Cannot pause a service which isn't already running\");"
            ],
            [
                584,
                "                    throw new ServiceOperationException(_serviceName,"
            ],
            [
                585,
                "                                                        ServiceOperationNames.PAUSE,"
            ],
            [
                586,
                "                                                        \"Unable to pause service\");"
            ],
            [
                593,
                "                throw new ServiceOperationException(_serviceName,"
            ],
            [
                594,
                "                                                        ServiceOperationNames.CONTINUE,"
            ],
            [
                595,
                "                                                        \"Cannot continue a service not in the paused state\");"
            ],
            [
                608,
                "            var status = new Win32Api.SERVICE_STATUS();"
            ],
            [
                611,
                "                throw new ServiceOperationException(_serviceName,"
            ],
            [
                612,
                "                                                    ServiceOperationNames.GET_SERVICE_STATUS,"
            ],
            [
                613,
                "                                                    \"Failed to query service status\");"
            ],
            [
                698,
                "                        catch"
            ],
            [
                722,
                "                // ReSharper disable once EmptyGeneralCatchClause"
            ],
            [
                723,
                "                catch { }"
            ],
            [
                728,
                "        // ReSharper disable once InconsistentNaming"
            ],
            [
                731,
                "            var scm = Win32Api.OpenSCManager(null, null, rights);"
            ],
            [
                733,
                "                throw new ServiceOperationException(_serviceName,"
            ],
            [
                734,
                "                                                    ServiceOperationNames.OPEN_SC_MANAGER,"
            ],
            [
                735,
                "                                                    \"Could not connect to service control manager\");"
            ]
        ],
        "deleted": [
            [
                38,
                "        private const string _serviceNotInstalled = \"Service not installed\";"
            ],
            [
                40,
                "        private string _serviceName;"
            ],
            [
                66,
                "                var searcher = new ManagementObjectSearcher(string.Format(\"select PathName from Win32_Service where Name = '{0}'\","
            ],
            [
                67,
                "                                                                           _serviceName.Replace(\"'\", \"''\")));"
            ],
            [
                69,
                "                if (collection.Count == 0)"
            ],
            [
                70,
                "                    return null;"
            ],
            [
                71,
                "                foreach (var svc in collection)"
            ],
            [
                72,
                "                {"
            ],
            [
                73,
                "                    _serviceExe = svc[\"PathName\"].ToString();"
            ],
            [
                74,
                "                    break;"
            ],
            [
                75,
                "                }"
            ],
            [
                86,
                "            var searcher = new ManagementObjectSearcher(string.Join(string.Empty,"
            ],
            [
                87,
                "                new string[] { \"select Name from Win32_Service where PathName = '\", path.Replace(\"'\", \"''\").Replace(\"\\\\\", \"\\\\\\\\\"), \"'\" }));"
            ],
            [
                91,
                "            string svcName = null;"
            ],
            [
                92,
                "            foreach (var item in collection)"
            ],
            [
                93,
                "            {"
            ],
            [
                94,
                "                svcName = item.Properties[\"Name\"].Value.ToString();"
            ],
            [
                95,
                "                break;"
            ],
            [
                96,
                "            }"
            ],
            [
                97,
                "            if (svcName == null)"
            ],
            [
                98,
                "                return null;"
            ],
            [
                99,
                "            return new WindowsServiceUtil(svcName);"
            ],
            [
                109,
                "                IntPtr scm = OpenSCManager(ScmAccessRights.Connect);"
            ],
            [
                112,
                "                    IntPtr service = Win32Api.OpenService(scm, _serviceName, ServiceAccessRights.QueryStatus);"
            ],
            [
                153,
                "            IntPtr scm = OpenSCManager(ScmAccessRights.Connect);"
            ],
            [
                154,
                "            var ret = false;"
            ],
            [
                157,
                "                IntPtr service = Win32Api.OpenService(scm, _serviceName, ServiceAccessRights.QueryStatus);"
            ],
            [
                158,
                "                ret = (service != IntPtr.Zero);"
            ],
            [
                168,
                "        private uint _serviceStopTimeoutMS;"
            ],
            [
                169,
                "        public uint ServiceStopTimeoutMS"
            ],
            [
                170,
                "        {"
            ],
            [
                171,
                "            get { return _serviceStopTimeoutMS; }"
            ],
            [
                172,
                "            set { _serviceStopTimeoutMS = value; }"
            ],
            [
                173,
                "        }"
            ],
            [
                187,
                "            IntPtr scm = OpenSCManager(ScmAccessRights.AllAccess);"
            ],
            [
                191,
                "                IntPtr service = Win32Api.OpenService(scm, _serviceName, ServiceAccessRights.AllAccess);"
            ],
            [
                203,
                "                            throw new ServiceOperationException(_serviceName, \"Delete\", lastError.ErrorCode.ToString() + \": \" + lastError.Message);"
            ],
            [
                303,
                "            if (ServiceExe == null)"
            ],
            [
                304,
                "                throw new ServiceOperationException(_serviceName, \"Install\", \"no ServiceExe set\");"
            ],
            [
                305,
                ""
            ],
            [
                306,
                "            if (!File.Exists(ServiceExe))"
            ],
            [
                307,
                "                throw new ServiceOperationException(_serviceName, \"Install\", \"Can't find service executable at: \" + _serviceExe);"
            ],
            [
                313,
                "                throw new ServiceOperationException(_serviceName, \"Install\","
            ],
            [
                314,
                "                    string.Join(string.Empty, new string[] { \"Failed to install with executable: \" + _serviceExe, \"\\nMore info:\\n\", win32Exception.Message }));"
            ],
            [
                383,
                "                IntPtr service = Win32Api.OpenService(scm, _serviceName,"
            ],
            [
                386,
                "                    throw new ServiceOperationException(_serviceName, \"Start\", _serviceNotInstalled);"
            ],
            [
                414,
                "                    throw new ServiceOperationException(_serviceName, \"Stop\", _serviceNotInstalled);"
            ],
            [
                443,
                "                    throw new ServiceOperationException(_serviceName, \"Pause\", _serviceNotInstalled);"
            ],
            [
                471,
                "                    throw new ServiceOperationException(_serviceName, \"Pause\", _serviceNotInstalled);"
            ],
            [
                500,
                "                    throw new ServiceOperationException(_serviceName, \"Start\", \"Unable to start service\");"
            ],
            [
                509,
                "            Win32Api.SERVICE_STATUS status = new Win32Api.SERVICE_STATUS();"
            ],
            [
                519,
                "            const string op = \"Stop\";"
            ],
            [
                522,
                "                throw new ServiceOperationException(_serviceName, op, \"Unable to stop service\");"
            ],
            [
                529,
                "                    if (!process.WaitForExit((int) _serviceStopTimeoutMS))"
            ],
            [
                538,
                "                ThrowAppropriateExceptionFor(waitLevel, op, ex);"
            ],
            [
                542,
                "        private void ThrowAppropriateExceptionFor(int waitLevel, string op, Exception ex)"
            ],
            [
                547,
                "                    throw new ServiceOperationException(_serviceName, op,"
            ],
            [
                550,
                "                    throw new ServiceOperationException(_serviceName, op,"
            ],
            [
                553,
                "                    throw new ServiceOperationException(_serviceName, op,"
            ],
            [
                561,
                "            return string.Format(\"{0} {1} ({2})\","
            ],
            [
                562,
                "                \"Service responded to stop command\","
            ],
            [
                563,
                "                subMessage,"
            ],
            [
                564,
                "                ex.Message);"
            ],
            [
                570,
                "                throw new ServiceOperationException(_serviceName, \"Pause\", \"Cannot pause a service which isn't already running\");"
            ],
            [
                577,
                "                    throw new ServiceOperationException(_serviceName, \"Pause\", \"Unable to pause service\");"
            ],
            [
                584,
                "                throw new ServiceOperationException(_serviceName, \"Continue\", \"Cannot continue a service not in the paused state\");"
            ],
            [
                597,
                "            Win32Api.SERVICE_STATUS status = new Win32Api.SERVICE_STATUS();"
            ],
            [
                600,
                "                throw new ServiceOperationException(_serviceName, \"GetServiceStatus\", \"Failed to query service status\");"
            ],
            [
                685,
                "                        catch (Exception)"
            ],
            [
                709,
                "                catch (Exception) { }"
            ],
            [
                716,
                "            IntPtr scm = Win32Api.OpenSCManager(null, null, rights);"
            ],
            [
                718,
                "                throw new ServiceOperationException(_serviceName, \"OpenSCManager\", \"Could not connect to service control manager\");"
            ]
        ]
    },
    "num_lines_added": 89,
    "num_lines_removed": 72
}