        public override StringBuilder CreateExpressionString(StringBuilder sb, List<Expression> uniqueExprs,
            int lineIdent = 0, bool stripNamespace = false, Func<Type, string, string> printType = null, int identSpaces = 2)
        {
            var name = Enum.GetName(typeof(ExpressionType), NodeType);
            sb.Append(name).Append('(');
            sb.NewLineIdentExpr(Operand, uniqueExprs, lineIdent, stripNamespace, printType, identSpaces);

            if (NodeType == ExpressionType.Convert ||
                NodeType == ExpressionType.ConvertChecked ||
                NodeType == ExpressionType.Unbox ||
                NodeType == ExpressionType.Throw ||
                NodeType == ExpressionType.TypeAs)
            {
                sb.Append(',').NewLineIdent(lineIdent).AppendTypeof(Type, stripNamespace, printType);
            }

            if ((NodeType == ExpressionType.Convert || NodeType == ExpressionType.ConvertChecked)
                && Method != null)
            {
                sb.Append(',').NewLineIdent(lineIdent).AppendMethod(Method, stripNamespace, printType);
            }

            return sb.Append(')');
        }