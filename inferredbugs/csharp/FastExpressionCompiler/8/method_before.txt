        protected internal virtual Expression VisitLambda(LambdaExpression node)
        {
            var body = Visit(node.Body);
            var parameters = VisitAndConvert(node.Parameters);
            if (body == node.Body && ReferenceEquals(parameters, node.Parameters))
                return node;
            return parameters.Count == 0
                ? (body.Type == node.ReturnType 
                    ? new LambdaExpression(node.Type, body)
                    : new TypedReturnLambdaExpression(node.Type, body, node.ReturnType))
                : (body.Type == node.ReturnType 
                    ? new ManyParametersLambdaExpression(node.Type, body, parameters)
                    : (LambdaExpression)new ManyParametersTypedReturnLambdaExpression(node.Type, body, parameters, node.ReturnType));
        }