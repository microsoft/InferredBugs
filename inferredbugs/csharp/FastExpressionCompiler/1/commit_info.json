{
    "hash": "ddb5b4ea6b118173d8bb4a81fc858ac8ec554710",
    "message": "use collectionassert",
    "file_num_lines": 51,
    "diff_parsed": {
        "added": [
            [
                46,
                "            var il = ILReaderFactory.Create(convert1.Method);"
            ],
            [
                47,
                "            CollectionAssert.AreEqual(il.Select(x => x.OpCode),"
            ],
            [
                48,
                "                new[] {OpCodes.Ldarg_0, OpCodes.Brfalse, OpCodes.Ldc_I4_1, OpCodes.Br, OpCodes.Ldc_I4_0, OpCodes.Ret});"
            ]
        ],
        "deleted": [
            [
                46,
                "            var il = ILReaderFactory.Create(convert1.Method).ToList();"
            ],
            [
                47,
                "            Assert.AreEqual(il[0].OpCode, OpCodes.Ldarg_0);"
            ],
            [
                48,
                "            Assert.AreEqual(il[1].OpCode, OpCodes.Brfalse);"
            ],
            [
                49,
                "            Assert.AreEqual(il[2].OpCode, OpCodes.Ldc_I4_1);"
            ],
            [
                50,
                "            Assert.AreEqual(il[3].OpCode, OpCodes.Br);"
            ],
            [
                51,
                "            Assert.AreEqual(il[4].OpCode, OpCodes.Ldc_I4_0);"
            ],
            [
                52,
                "            Assert.AreEqual(il[5].OpCode, OpCodes.Ret);"
            ]
        ]
    },
    "num_lines_added": 3,
    "num_lines_removed": 7
}