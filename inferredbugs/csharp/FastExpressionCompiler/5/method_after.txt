        protected internal virtual Expression VisitLambda<T>(Expression<T> node) where T : System.Delegate
        {
            var body = Visit(node.Body);
            var parameters = VisitAndConvert(node.Parameters);
            if (body == node.Body && ReferenceEquals(parameters, node.Parameters))
                return node;
            return Expression.Lambda<T>(body, parameters, node.ReturnType);
        }