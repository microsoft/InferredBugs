{
    "hash": "9603e44ce28f87abeeef419037c890c4850ee7eb",
    "message": "Wrong indentation (2)",
    "file_num_lines": 136,
    "diff_parsed": {
        "added": [
            [
                187,
                "\t\t\tvar visitedForExpression = (ForExpression)(new ReplaceNullByDefaultVisitor ().Visit (forExpression));"
            ],
            [
                189,
                "\t\t\tAssert.AreNotEqual (forExpression, visitedForExpression);"
            ],
            [
                191,
                "\t\t\tAssert.AreEqual (forExpression.Variable, visitedForExpression.Variable);"
            ],
            [
                192,
                "\t\t\tAssert.AreEqual (forExpression.Initializer, visitedForExpression.Initializer);"
            ],
            [
                193,
                "\t\t\tAssert.AreEqual (forExpression.Test, visitedForExpression.Test);"
            ],
            [
                194,
                "\t\t\tAssert.AreEqual (forExpression.Step, visitedForExpression.Step);"
            ],
            [
                195,
                "\t\t\tAssert.AreEqual (ExpressionType.Default, visitedForExpression.Body.NodeType);"
            ],
            [
                196,
                "\t\t\tAssert.AreEqual (forExpression.BreakTarget, visitedForExpression.BreakTarget);"
            ],
            [
                197,
                "\t\t\tAssert.AreEqual (forExpression.ContinueTarget, visitedForExpression.ContinueTarget);"
            ]
        ],
        "deleted": [
            [
                187,
                "\t\t\t\tvar visitedForExpression = (ForExpression)(new ReplaceNullByDefaultVisitor ().Visit (forExpression));"
            ],
            [
                189,
                "\t\t\t\tAssert.AreNotEqual (forExpression, visitedForExpression);"
            ],
            [
                191,
                "\t\t\t\tAssert.AreEqual (forExpression.Variable, visitedForExpression.Variable);"
            ],
            [
                192,
                "\t\t\t\tAssert.AreEqual (forExpression.Initializer, visitedForExpression.Initializer);"
            ],
            [
                193,
                "\t\t\t\tAssert.AreEqual (forExpression.Test, visitedForExpression.Test);"
            ],
            [
                194,
                "\t\t\t\tAssert.AreEqual (forExpression.Step, visitedForExpression.Step);"
            ],
            [
                195,
                "\t\t\t\tAssert.AreEqual (ExpressionType.Default, visitedForExpression.Body.NodeType);"
            ],
            [
                196,
                "\t\t\t\tAssert.AreEqual (forExpression.BreakTarget, visitedForExpression.BreakTarget);"
            ],
            [
                197,
                "\t\t\t\tAssert.AreEqual (forExpression.ContinueTarget, visitedForExpression.ContinueTarget);"
            ]
        ]
    },
    "num_lines_added": 9,
    "num_lines_removed": 9
}