        public static Tensor Im2Col(Tensor x, Tuple<uint, uint, uint> kernalSize, uint? padding = null, uint stride = 1)
        {
            var (n, c, d, h, w) = x.GetConv3DShape();
            if (padding.HasValue)
            {
                x = x.Pad(1, padding.Value);
            }

            var list = x.NDto2DList();
            var cols = x.Transpose(1, 2, 3, 4, 0).Unfold(3, kernalSize.Item3, stride).Unfold(2, kernalSize.Item2, stride).Unfold(1, kernalSize.Item1, stride);

            return Ops.NewContiguous(cols).Reshape(c * d * h * w, -1);
        }