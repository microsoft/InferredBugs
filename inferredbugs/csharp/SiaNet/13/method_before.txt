        private void ApplyUpdate(Parameter param)
        {
            if (!ms.ContainsKey(param.Name))
                ms[param.Name] = Tensor.Constant(0, Global.Device, DType.Float32, param.Data.Shape);

            if (!vs.ContainsKey(param.Name))
                vs[param.Name] = Tensor.Constant(0, Global.Device, DType.Float32, param.Data.Shape);

            if (!vhats.ContainsKey(param.Name))
            {
                if (AmsGrad)
                    vhats[param.Name] = Tensor.Constant(0, Global.Device, DType.Float32, param.Data.Shape);
                else
                    vhats[param.Name] = Tensor.Constant(0, Global.Device, DType.Float32, 1);
            }

            var m_t = (Beta1 * ms[param.Name]) + (1 - Beta1) * param.Grad;
            var v_t = (Beta2 * vs[param.Name]) + (1 - Beta2) * Square(param.Grad);

            if (AmsGrad)
            {
                Tensor vhat_t = TOps.Maximum(vhats[param.Name], v_t);

                param.Data = param.Data - lr_t * m_t / (Sqrt(vhat_t) + EPSILON);
                vhats[param.Name] = vhat_t;
            }
            else
            {
                param.Data = param.Data - lr_t * m_t / (Sqrt(v_t) + EPSILON);
            }

            ms[param.Name] = m_t;
            vs[param.Name] = v_t;

            param.ApplyConstraint();
        }