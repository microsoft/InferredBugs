{
    "hash": "42e451f74094fc231ea946c28b196f4214a5fdd1",
    "message": "Simplied Tensor Project. Merged with Cuda Code",
    "file_num_lines": 62,
    "diff_parsed": {
        "added": [
            [
                54,
                "            Output = (x.Data * weight.Data);"
            ],
            [
                59,
                "                Output += bias.Data;"
            ],
            [
                62,
                "            if (Activation!=null)"
            ],
            [
                63,
                "                Activation.Forward(Output.ToVariable());"
            ],
            [
                68,
                "            if (Activation != null)"
            ],
            [
                69,
                "                Activation.Backward(outputgrad);"
            ],
            [
                71,
                "            Input.Grad = (outputgrad * Params[\"w\"].Data.Transpose());"
            ],
            [
                72,
                "            Params[\"w\"].Grad = Input.Data.Transpose() * outputgrad;"
            ],
            [
                73,
                "            if (UseBias)"
            ],
            [
                74,
                "                Params[\"b\"].Grad = Sum(outputgrad, 0);"
            ]
        ],
        "deleted": [
            [
                58,
                ""
            ],
            [
                59,
                "                Output = bias.Data.TVar().Expand(x.Data.Shape[0], Dim)"
            ],
            [
                60,
                "                    .Addmm(1, 1, x.Data, weight.Data)"
            ],
            [
                61,
                "                    .Evaluate();"
            ],
            [
                62,
                "            }"
            ],
            [
                63,
                "            else"
            ],
            [
                64,
                "            {"
            ],
            [
                65,
                "                Output = x.Data.TVar().Dot(weight.Data.TVar()).Evaluate();"
            ],
            [
                68,
                "            Activation.Forward(Output.ToVariable());"
            ],
            [
                73,
                "            Activation.Backward(outputgrad);"
            ],
            [
                75,
                "            Input.Grad = outputgrad.TVar().Dot(Params[\"w\"].Data.TVar().Transpose()).Evaluate();"
            ],
            [
                76,
                ""
            ],
            [
                77,
                "            Params[\"w\"].Grad = outputgrad.TVar().Dot(Params[\"w\"].Data.TVar().Transpose()).Evaluate();"
            ],
            [
                78,
                "            if(UseBias)"
            ],
            [
                79,
                "                Params[\"b\"].Grad = (Params[\"b\"].Grad + outputgrad.TVar().Sum(0)).Evaluate();"
            ]
        ]
    },
    "num_lines_added": 10,
    "num_lines_removed": 15
}