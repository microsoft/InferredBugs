        public override Paging<User> GetList<TFilter>(IFilter<TFilter> filter)
        {
            UserFilter userFilter = filter as UserFilter;

            var builder = Builders<User>.Filter;
            FilterDefinition<User> queryFilter = builder.Empty;

            userFilter.ApplyBaseFilter(builder, ref queryFilter);

            if (!string.IsNullOrEmpty(userFilter.username))
            {
                queryFilter = queryFilter & builder.Regex($"username", new BsonRegularExpression($".*{userFilter.username}.*", "i"));
            }

            if (!string.IsNullOrEmpty(userFilter.email))
            {
                queryFilter = queryFilter & builder.Eq($"email", userFilter.email);
            }

            SortDefinition<User> sort = userFilter.ApplySort<User>(
                new System.Collections.Generic.List<string>
                {
                    "username"
                },
                new System.Collections.Generic.List<short>
                {
                    1
                });

            return new Paging<User>(this.Collection, userFilter.page, queryFilter, sort, userFilter.per_page);
        }