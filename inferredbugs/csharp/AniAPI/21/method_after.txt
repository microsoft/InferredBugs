        public override Paging<UserStory> GetList<TFilter>(IFilter<TFilter> filter)
        {
            UserStoryFilter userStoryFilter = filter as UserStoryFilter;

            var builder = Builders<UserStory>.Filter;
            FilterDefinition<UserStory> queryFilter = builder.Empty;

            userStoryFilter.ApplyBaseFilter(builder, ref queryFilter);

            if (userStoryFilter.user_id != null)
            {
                queryFilter &= builder.Eq("user_id", userStoryFilter.user_id);
            }

            if (userStoryFilter.anime_id != null)
            {
                queryFilter &= builder.Eq("anime_id", userStoryFilter.anime_id);
            }

            if(userStoryFilter.status != null)
            {
                queryFilter &= builder.Eq("status", userStoryFilter.status);
            }

            if(userStoryFilter.synced != null)
            {
                queryFilter &= builder.Eq("synced", userStoryFilter.synced);
            }

            SortDefinition<UserStory> sort = userStoryFilter.ApplySort<UserStory>(
                new System.Collections.Generic.List<string>
                {
                    "creation_date"
                },
                new System.Collections.Generic.List<short>
                {
                    -1
                });

            return new Paging<UserStory>(this.Collection, userStoryFilter.page, queryFilter, sort, userStoryFilter.per_page);
        }