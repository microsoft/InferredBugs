        static void DrawKeys(KeystrokesSettings KeystrokesSettings, IBitmapEditor Editor, string Text, int FontSize, byte Opacity, float OffsetY)
        {
            var keystrokeFont = new Font(FontFamily.GenericMonospace, FontSize);

            var size = Editor.MeasureString(Text, keystrokeFont);

            int paddingX = KeystrokesSettings.HorizontalPadding, paddingY = KeystrokesSettings.VerticalPadding;

            var rect = new RectangleF(GetLeft(KeystrokesSettings, Editor.Width, size.Width),
                GetTop(KeystrokesSettings, Editor.Height, size.Height, OffsetY),
                size.Width + 2 * paddingX,
                size.Height + 2 * paddingY);
            
            Editor.FillRectangle(new SolidBrush(Color.FromArgb(Opacity, KeystrokesSettings.BackgroundColor)),
                rect,
                KeystrokesSettings.CornerRadius);
            
            Editor.DrawString(Text,
                keystrokeFont,
                new SolidBrush(Color.FromArgb(Opacity, KeystrokesSettings.FontColor)),
                new RectangleF(rect.Left + paddingX, rect.Top + paddingY, size.Width, size.Height));

            var border = KeystrokesSettings.BorderThickness;

            if (border > 0)
            {
                rect = new RectangleF(rect.Left - border / 2f, rect.Top - border / 2f, rect.Width + border, rect.Height + border);

                Editor.DrawRectangle(new Pen(Color.FromArgb(Opacity, KeystrokesSettings.BorderColor), border),
                    rect,
                    KeystrokesSettings.CornerRadius);
            }
        }