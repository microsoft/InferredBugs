{
    "hash": "3f4b27e722ced6a1eb8999bb7d934b21179f5f11",
    "message": "Improve CI reliability and performance (#1685)\n\nVarious improvements to the CI experience including:\r\n\r\n- The most common CI failure is related to when we try to listen to event source. I have attempted to fix this by both removing the lookup by event source name (instead defaulting to GUID), as well as updating the underlying dependency.\r\n- Reduced test length for some of our longer running tests.\r\n- Flaky tests are bad for both CI reliability and CI latency, as rerunning tests seems to add 1+ minutes per test to the CI. This PR tried to fix as many flaky tests as possible.\r\n- Reduced dotnet restore/build time by only building relevant projects for tests\r\n- Removed unnecessary publish step\r\n\r\nAfter this PR, the CI runs in 8-10 minutes assuming no flakey tests fail.\r\n\r\nresolves #1602",
    "file_num_lines": 32,
    "diff_parsed": {
        "added": [
            [
                24,
                "            provider.MaximumDelayTime = TimeSpan.FromSeconds(10);"
            ],
            [
                25,
                "            provider.LongRunningTimerIntervalLength = TimeSpan.FromSeconds(3);"
            ],
            [
                32,
                "            provider.MaximumDelayTime = TimeSpan.FromSeconds(10);"
            ],
            [
                33,
                "            provider.LongRunningTimerIntervalLength = TimeSpan.FromSeconds(3);"
            ]
        ],
        "deleted": [
            [
                24,
                "            provider.MaximumDelayTime = TimeSpan.FromMinutes(1);"
            ],
            [
                25,
                "            provider.LongRunningTimerIntervalLength = TimeSpan.FromSeconds(25);"
            ],
            [
                32,
                "            provider.MaximumDelayTime = TimeSpan.FromMinutes(1);"
            ],
            [
                33,
                "            provider.LongRunningTimerIntervalLength = TimeSpan.FromSeconds(25);"
            ]
        ]
    },
    "num_lines_added": 4,
    "num_lines_removed": 4
}