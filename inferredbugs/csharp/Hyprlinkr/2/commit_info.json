{
    "hash": "0d1066bc3fa79c4551bf5e9cef75e36dacf68518",
    "message": "Fixed code according to Code Analysis.",
    "file_num_lines": 117,
    "diff_parsed": {
        "added": [
            [
                200,
                "            using(var request = new HttpRequestMessage(HttpMethod.Get, uri))"
            ],
            [
                201,
                "            {"
            ],
            [
                202,
                "                var routeData = Configuration.Routes.GetRouteData(request);"
            ],
            [
                203,
                "                if (routeData == null)"
            ],
            [
                204,
                "                    return null;"
            ],
            [
                206,
                "                request.Properties[HttpPropertyKeys.HttpRouteDataKey] = routeData;"
            ],
            [
                207,
                "                request.Properties[HttpPropertyKeys.HttpConfigurationKey] = Configuration;"
            ],
            [
                209,
                "                var controllerContext = new HttpControllerContext(Configuration, routeData, request);"
            ],
            [
                211,
                "                var controllerName = GetControllerName(routeData);"
            ],
            [
                213,
                "                if (!this.controllerSelector.GetControllerMapping().ContainsKey(controllerName))"
            ],
            [
                214,
                "                    return null;"
            ],
            [
                216,
                "                controllerContext.ControllerDescriptor = this.controllerSelector.SelectController(request);"
            ],
            [
                217,
                "                return controllerContext;"
            ],
            [
                218,
                "            }"
            ],
            [
                236,
                "            catch (InvalidOperationException)"
            ]
        ],
        "deleted": [
            [
                200,
                "            var request = new HttpRequestMessage(HttpMethod.Get, uri);"
            ],
            [
                201,
                "            var routeData = Configuration.Routes.GetRouteData(request);"
            ],
            [
                202,
                "            if (routeData == null)"
            ],
            [
                203,
                "                return null;"
            ],
            [
                205,
                "            request.Properties[HttpPropertyKeys.HttpRouteDataKey] = routeData;"
            ],
            [
                206,
                "            request.Properties[HttpPropertyKeys.HttpConfigurationKey] = Configuration;"
            ],
            [
                208,
                "            var controllerContext = new HttpControllerContext(Configuration, routeData, request);"
            ],
            [
                210,
                "            var controllerName = GetControllerName(routeData);"
            ],
            [
                212,
                "            if (!this.controllerSelector.GetControllerMapping().ContainsKey(controllerName))"
            ],
            [
                213,
                "                return null;"
            ],
            [
                215,
                "            controllerContext.ControllerDescriptor = this.controllerSelector.SelectController(request);"
            ],
            [
                216,
                "            return controllerContext;"
            ],
            [
                234,
                "            catch (InvalidOperationException e)"
            ]
        ]
    },
    "num_lines_added": 15,
    "num_lines_removed": 13
}