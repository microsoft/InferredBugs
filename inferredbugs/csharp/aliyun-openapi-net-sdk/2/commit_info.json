{
    "hash": "d6e657d60442e8f61062231415d4506488159261",
    "message": "Prevent memory leak\n\n* Dispose IDisposables to prevent protential memory leak\r\n\r\n* Code format improve",
    "file_num_lines": 42,
    "diff_parsed": {
        "added": [
            [
                35,
                "            using(RSACryptoServiceProvider rsa = new RSACryptoServiceProvider())"
            ],
            [
                36,
                "            {"
            ],
            [
                37,
                "                using(SHA256 sha256 = SHA256.Create())"
            ],
            [
                38,
                "                {"
            ],
            [
                39,
                "                    byte[] hashValue = sha256.ComputeHash(Encoding.UTF8.GetBytes(stringToSign));"
            ],
            [
                40,
                "                    RSAPKCS1SignatureFormatter RSAFormatter = new RSAPKCS1SignatureFormatter(rsa);"
            ],
            [
                41,
                "                    RSAFormatter.SetHashAlgorithm(\"SHA256\");"
            ],
            [
                42,
                "                    byte[] signedHash = RSAFormatter.CreateSignature(hashValue);"
            ],
            [
                43,
                "                    return Convert.ToBase64String(signedHash);"
            ],
            [
                44,
                "                }"
            ],
            [
                45,
                "            }"
            ]
        ],
        "deleted": [
            [
                35,
                "            RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();"
            ],
            [
                36,
                "            SHA256 sha256 = SHA256.Create();"
            ],
            [
                37,
                "            byte[] hashValue = sha256.ComputeHash(Encoding.UTF8.GetBytes(stringToSign));"
            ],
            [
                38,
                "            RSAPKCS1SignatureFormatter RSAFormatter = new RSAPKCS1SignatureFormatter(rsa);"
            ],
            [
                39,
                "            RSAFormatter.SetHashAlgorithm(\"SHA256\");"
            ],
            [
                40,
                "            byte[] signedHash = RSAFormatter.CreateSignature(hashValue);"
            ],
            [
                41,
                "            return Convert.ToBase64String(signedHash);"
            ]
        ]
    },
    "num_lines_added": 11,
    "num_lines_removed": 7
}