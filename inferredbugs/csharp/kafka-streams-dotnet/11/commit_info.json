{
    "hash": "9ae35c518e92c747b12a046cc463cf1f3af4e830",
    "message": "#147 - unit test external call WIP",
    "file_num_lines": 254,
    "diff_parsed": {
        "added": [
            [
                30,
                "        private readonly GlobalStateUpdateTask globalTask;"
            ],
            [
                31,
                "        private readonly IDictionary<string, ExternalProcessorTopologyExecutor> externalProcessorTopologies ="
            ],
            [
                32,
                "            new Dictionary<string, ExternalProcessorTopologyExecutor>();"
            ],
            [
                33,
                "        private readonly GlobalProcessorContext globalProcessorContext;"
            ],
            [
                96,
                ""
            ],
            [
                97,
                "            foreach (var requestTopic in topologyBuilder.GetRequestTopics())"
            ],
            [
                98,
                "            {"
            ],
            [
                99,
                "                var taskId = topologyBuilder.GetTaskIdFromPartition(new TopicPartition(requestTopic, Partition.Any));"
            ],
            [
                100,
                "                externalProcessorTopologies.Add("
            ],
            [
                101,
                "                    requestTopic,"
            ],
            [
                102,
                "                    new ExternalProcessorTopologyExecutor("
            ],
            [
                103,
                "                        \"ext-thread-0\","
            ],
            [
                104,
                "                        taskId,"
            ],
            [
                105,
                "                        topologyBuilder.BuildTopology(taskId).GetSourceProcessor(requestTopic),"
            ],
            [
                106,
                "                        this.supplier.GetProducer(configuration.ToProducerConfig($\"ext-thread-producer-{requestTopic}\")),"
            ],
            [
                107,
                "                        configuration,"
            ],
            [
                108,
                "                        metricsRegistry));"
            ],
            [
                109,
                "            }"
            ],
            [
                120,
                "                if (builder.GetSourceTopics().Contains(topicName))"
            ],
            [
                176,
                "                if (task != null)"
            ],
            [
                177,
                "                {"
            ],
            [
                178,
                "                    task.AddRecords(records);"
            ],
            [
                179,
                "                    while (task.CanProcess(now))"
            ],
            [
                180,
                "                        task.Process();"
            ],
            [
                181,
                "                }else if (externalProcessorTopologies.ContainsKey(topic))"
            ],
            [
                182,
                "                {"
            ],
            [
                183,
                "                    foreach(var r in records)"
            ],
            [
                184,
                "                        externalProcessorTopologies[topic].Process(r);"
            ],
            [
                185,
                "                }"
            ],
            [
                196,
                ""
            ],
            [
                197,
                "            if (task == null)"
            ],
            [
                199,
                "                if(hasGlobalTopology && builder.GetGlobalTopics().Contains(topicName))"
            ],
            [
                200,
                "                    return new SyncPipeBuilder(globalTask);"
            ],
            [
                201,
                "                if (builder.GetRequestTopics().Contains(topicName))"
            ],
            [
                202,
                "                    return new SyncPipeBuilder(externalProcessorTopologies[topicName]);"
            ],
            [
                279,
                "            foreach (var ext in externalProcessorTopologies)"
            ],
            [
                280,
                "            {"
            ],
            [
                281,
                "                ext.Value.Flush();"
            ],
            [
                282,
                "                ext.Value.Close();"
            ],
            [
                283,
                "            }"
            ],
            [
                284,
                ""
            ]
        ],
        "deleted": [
            [
                30,
                "        private readonly GlobalStateUpdateTask globalTask = null;"
            ],
            [
                31,
                "        private readonly GlobalProcessorContext globalProcessorContext = null;"
            ],
            [
                104,
                "                if (!builder.GetGlobalTopics().Contains(topicName))"
            ],
            [
                160,
                "                task.AddRecords(records);"
            ],
            [
                161,
                "                while (task.CanProcess(now))"
            ],
            [
                162,
                "                    task.Process();"
            ],
            [
                173,
                "            if (task == null && hasGlobalTopology)"
            ],
            [
                175,
                "                return new SyncPipeBuilder(globalTask);"
            ]
        ]
    },
    "num_lines_added": 41,
    "num_lines_removed": 8
}