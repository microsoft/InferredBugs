{
    "hash": "6521a63b1ed96ae24b9856e8d8207017e6065f84",
    "message": "Modified RTPMediaSession to inherit from RTPSession instead of using an instance.",
    "file_num_lines": 159,
    "diff_parsed": {
        "added": [
            [
                10,
                "// 12/23/2019\tYitzchok\t    Created."
            ],
            [
                11,
                "// 26 Dec 2019  Aaron Clauson   Modified to inherit from RTPSession instead of"
            ],
            [
                12,
                "//                              using an instance and wrapping same methods."
            ],
            [
                20,
                "using System.Net;"
            ],
            [
                21,
                "using System.Net.Sockets;"
            ],
            [
                37,
                "    public class RTPMediaSession : RTPSession, IMediaSession"
            ],
            [
                44,
                "        public RTPMediaSession(int formatTypeID, AddressFamily addrFamily)"
            ],
            [
                45,
                "             : base(formatTypeID, null, null, true, addrFamily)"
            ],
            [
                46,
                "        { }"
            ],
            [
                77,
                "            return SendDtmfEvent(dtmfEvent, cancellationToken);"
            ],
            [
                100,
                "            CloseSession();"
            ],
            [
                113,
                "            var localSDP = GetSDP(localIPAddress);"
            ],
            [
                126,
                "                if (RemoteSDP != null)"
            ],
            [
                129,
                "                    IPEndPoint dstRtpEndPoint = RemoteSDP.GetSDPRTPEndPoint();"
            ],
            [
                132,
                "                    bool newEndpoint = DestinationEndPoint != dstRtpEndPoint;"
            ],
            [
                137,
                "                            $\"Remote call party RTP end point changed from {DestinationEndPoint} to {dstRtpEndPoint}.\");"
            ],
            [
                196,
                "            SetRemoteSDP(sdp);"
            ],
            [
                197,
                "            DestinationEndPoint = sdp.GetSDPRTPEndPoint();"
            ],
            [
                201,
                "            logger.LogDebug($\"Remote RTP socket {DestinationEndPoint}.\");"
            ]
        ],
        "deleted": [
            [
                10,
                "// 12/23/2019\tYitzchok\t  Created."
            ],
            [
                18,
                "using System.Net;"
            ],
            [
                34,
                "    public class RTPMediaSession : IMediaSession"
            ],
            [
                38,
                "        public RTPSession Session { get; }"
            ],
            [
                42,
                "        public RTPMediaSession(RTPSession rtpSession)"
            ],
            [
                43,
                "        {"
            ],
            [
                44,
                "            Session = rtpSession;"
            ],
            [
                45,
                "            Session.OnRtpEvent += OnRemoteRtpEvent;"
            ],
            [
                46,
                "            Session.OnReceivedSampleReady += OnReceivedSampleReady;"
            ],
            [
                47,
                "            Session.OnRtpDisconnect += () => OnRtpDisconnected?.Invoke();"
            ],
            [
                48,
                "        }"
            ],
            [
                76,
                "        /// <summary>"
            ],
            [
                77,
                "        /// Gets fired when an RTP packet is received, has been identified and is ready for processing."
            ],
            [
                78,
                "        /// </summary>"
            ],
            [
                79,
                "        public event Action<byte[]> OnReceivedSampleReady;"
            ],
            [
                80,
                ""
            ],
            [
                81,
                "        /// <summary>"
            ],
            [
                82,
                "        /// Fired when a network error occurs indicating the remote party is no longer accepting"
            ],
            [
                83,
                "        /// RTP packets."
            ],
            [
                84,
                "        /// </summary>"
            ],
            [
                85,
                "        public event Action OnRtpDisconnected;"
            ],
            [
                86,
                ""
            ],
            [
                90,
                "            return Session.SendDtmfEvent(dtmfEvent, cancellationToken);"
            ],
            [
                113,
                "            Session.OnRtpEvent -= OnRemoteRtpEvent;"
            ],
            [
                114,
                "            Session.OnReceivedSampleReady -= OnReceivedSampleReady;"
            ],
            [
                115,
                "            Session.Close();"
            ],
            [
                128,
                "            var localSDP = Session.GetSDP(localIPAddress);"
            ],
            [
                141,
                "                if (Session.RemoteSDP != null)"
            ],
            [
                144,
                "                    IPEndPoint dstRtpEndPoint = Session.RemoteSDP.GetSDPRTPEndPoint();"
            ],
            [
                147,
                "                    bool newEndpoint = Session.DestinationEndPoint != dstRtpEndPoint;"
            ],
            [
                152,
                "                            $\"Remote call party RTP end point changed from {Session.DestinationEndPoint} to {dstRtpEndPoint}.\");"
            ],
            [
                211,
                "            Session.SetRemoteSDP(sdp);"
            ],
            [
                212,
                "            Session.DestinationEndPoint = sdp.GetSDPRTPEndPoint();"
            ],
            [
                216,
                "            logger.LogDebug($\"Remote RTP socket {Session.DestinationEndPoint}.\");"
            ],
            [
                241,
                "        public void SendAudioFrame(uint timestamp, byte[] buffer) =>"
            ],
            [
                242,
                "            Session.SendAudioFrame(timestamp, buffer);"
            ],
            [
                243,
                ""
            ]
        ]
    },
    "num_lines_added": 19,
    "num_lines_removed": 37
}