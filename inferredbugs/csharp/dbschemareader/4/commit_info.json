{
    "hash": "443cefb5d7be7f1f107fb10f4248c29419821f26",
    "message": "- (CodeGen- EF Code First): support for TPT inheritance.",
    "file_num_lines": 311,
    "diff_parsed": {
        "added": [
            [
                18,
                "        private DatabaseTable _inheritanceTable;"
            ],
            [
                48,
                "            _inheritanceTable = _table.FindInheritanceTable();"
            ],
            [
                49,
                ""
            ],
            [
                64,
                "                var comment = \"Class representing \" + _table.Name + \" \" + tableOrView;"
            ],
            [
                65,
                "                var classDefinition = \"public class \" + className;"
            ],
            [
                66,
                "                if (_inheritanceTable != null)"
            ],
            [
                67,
                "                {"
            ],
            [
                68,
                "                    classDefinition += \" : \" + _inheritanceTable.NetName;"
            ],
            [
                69,
                "                }"
            ],
            [
                70,
                ""
            ],
            [
                71,
                "                using (_cb.BeginNest(classDefinition, comment))"
            ],
            [
                77,
                "            if (_table.HasCompositeKey && _inheritanceTable == null)"
            ],
            [
                114,
                "            if (_inheritanceTable == null)"
            ],
            [
                115,
                "                WritePrimaryKey(className);"
            ],
            [
                116,
                ""
            ],
            [
                117,
                "            foreach (var column in _table.Columns)"
            ],
            [
                118,
                "            {"
            ],
            [
                119,
                "                if (column.IsPrimaryKey) continue;"
            ],
            [
                120,
                "                if (column.IsForeignKey) continue;"
            ],
            [
                121,
                "                WriteColumn(column);"
            ],
            [
                122,
                "            }"
            ],
            [
                123,
                ""
            ],
            [
                124,
                "            foreach (var foreignKey in _table.ForeignKeys)"
            ],
            [
                125,
                "            {"
            ],
            [
                126,
                "                WriteForeignKey(foreignKey);"
            ],
            [
                127,
                "            }"
            ],
            [
                128,
                ""
            ],
            [
                129,
                "            WriteForeignKeyCollections();"
            ],
            [
                130,
                ""
            ],
            [
                131,
                "            if (!_table.HasCompositeKey &&"
            ],
            [
                132,
                "                _codeWriterSettings.CodeTarget != CodeTarget.PocoRiaServices &&"
            ],
            [
                133,
                "                _inheritanceTable == null)"
            ],
            [
                134,
                "            {"
            ],
            [
                135,
                "                var overrider = new OverrideWriter(_cb, _table, _codeWriterSettings.Namer);"
            ],
            [
                136,
                "                overrider.AddOverrides();"
            ],
            [
                137,
                "            }"
            ],
            [
                138,
                "        }"
            ],
            [
                139,
                ""
            ],
            [
                140,
                "        private void WritePrimaryKey(string className)"
            ],
            [
                141,
                "        {"
            ],
            [
                199,
                "            var hasTablePerTypeInheritance ="
            ],
            [
                200,
                "                (_table.ForeignKeyChildren.Count(fk => _table.IsSharedPrimaryKey(fk)) > 1);"
            ],
            [
                201,
                ""
            ],
            [
                211,
                "                    if (hasTablePerTypeInheritance)"
            ],
            [
                212,
                "                        continue;"
            ],
            [
                302,
                "            //in case teh netName hasn't been set"
            ],
            [
                303,
                "            if (string.IsNullOrEmpty(propertyName)) propertyName = column.Name;"
            ],
            [
                347,
                "            //we inherit from it instead (problem with self-joins)"
            ],
            [
                348,
                "            if (Equals(refTable, _inheritanceTable)) return;"
            ],
            [
                349,
                ""
            ]
        ],
        "deleted": [
            [
                61,
                "                using (_cb.BeginNest(\"public class \" + className, \"Class representing \" + _table.Name + \" \" + tableOrView))"
            ],
            [
                67,
                "            if (_table.HasCompositeKey)"
            ],
            [
                127,
                ""
            ],
            [
                128,
                "            foreach (var column in _table.Columns)"
            ],
            [
                129,
                "            {"
            ],
            [
                130,
                "                if (column.IsPrimaryKey) continue;"
            ],
            [
                131,
                "                if (column.IsForeignKey) continue;"
            ],
            [
                132,
                "                WriteColumn(column);"
            ],
            [
                133,
                "            }"
            ],
            [
                134,
                ""
            ],
            [
                135,
                "            foreach (var foreignKey in _table.ForeignKeys)"
            ],
            [
                136,
                "            {"
            ],
            [
                137,
                "                WriteForeignKey(foreignKey);"
            ],
            [
                138,
                "            }"
            ],
            [
                139,
                ""
            ],
            [
                140,
                "            WriteForeignKeyCollections();"
            ],
            [
                141,
                ""
            ],
            [
                142,
                "            if (!_table.HasCompositeKey && _codeWriterSettings.CodeTarget != CodeTarget.PocoRiaServices)"
            ],
            [
                143,
                "            {"
            ],
            [
                144,
                "                var overrider = new OverrideWriter(_cb, _table, _codeWriterSettings.Namer);"
            ],
            [
                145,
                "                overrider.AddOverrides();"
            ],
            [
                146,
                "            }"
            ]
        ]
    },
    "num_lines_added": 50,
    "num_lines_removed": 22
}