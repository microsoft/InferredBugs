{
    "hash": "0bea690328e37612ac15c68b19ba525cfc78ec5a",
    "message": "Make all tests use a non-zero root node to avoid assumptions",
    "file_num_lines": 30,
    "diff_parsed": {
        "added": [
            [
                1,
                "\ufeffusing NUnit.Framework;"
            ],
            [
                12,
                "            using (var testHarness = new RestTestHarness())"
            ],
            [
                13,
                "            {"
            ],
            [
                14,
                "                var client = testHarness.CreateAndConnectGraphClient();"
            ],
            [
                15,
                "                var rootNode = client.RootNode;"
            ],
            [
                16,
                "                Assert.AreEqual(client, ((IGremlinQuery) rootNode).Client);"
            ],
            [
                17,
                "            }"
            ],
            [
                23,
                "            using (var testHarness = new RestTestHarness())"
            ],
            [
                24,
                "            {"
            ],
            [
                25,
                "                var client = testHarness.CreateAndConnectGraphClient();"
            ],
            [
                26,
                "                var rootNode = client.RootNode;"
            ],
            [
                27,
                "                Assert.AreEqual(\"g.v(p0)\", ((IGremlinQuery) rootNode).QueryText);"
            ],
            [
                28,
                "                Assert.AreEqual(123, ((IGremlinQuery) rootNode).QueryParameters[\"p0\"]);"
            ],
            [
                29,
                "            }"
            ]
        ],
        "deleted": [
            [
                1,
                "\ufeffusing System;"
            ],
            [
                2,
                "using NUnit.Framework;"
            ],
            [
                3,
                "using Neo4jClient.Cypher;"
            ],
            [
                5,
                "using RestSharp;"
            ],
            [
                6,
                "using System.Collections.Generic;"
            ],
            [
                7,
                "using System.Net;"
            ],
            [
                14,
                "        const string baseUri = \"http://foo/db/data\";"
            ],
            [
                15,
                "        IHttpFactory httpFactory = MockHttpFactory.Generate(baseUri, new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                16,
                "        {"
            ],
            [
                17,
                "            {"
            ],
            [
                18,
                "                new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                19,
                "                new NeoHttpResponse"
            ],
            [
                20,
                "                {"
            ],
            [
                21,
                "                    StatusCode = HttpStatusCode.OK,"
            ],
            [
                22,
                "                    ContentType = \"application/json\","
            ],
            [
                23,
                "                    TestContent = @\"{"
            ],
            [
                24,
                "                        'batch' : 'http://foo/db/data/batch',"
            ],
            [
                25,
                "                        'node' : 'http://foo/db/data/node',"
            ],
            [
                26,
                "                        'node_index' : 'http://foo/db/data/index/node',"
            ],
            [
                27,
                "                        'relationship_index' : 'http://foo/db/data/index/relationship',"
            ],
            [
                28,
                "                        'reference_node' : 'http://foo/db/data/node/123',"
            ],
            [
                29,
                "                        'neo4j_version' : '1.5.M02',"
            ],
            [
                30,
                "                        'extensions_info' : 'http://foo/db/data/ext',"
            ],
            [
                31,
                "                        'extensions' : {"
            ],
            [
                32,
                "                        }"
            ],
            [
                33,
                "                    }\".Replace('\\'', '\"')"
            ],
            [
                34,
                "                }"
            ],
            [
                35,
                "            }"
            ],
            [
                36,
                "        });"
            ],
            [
                37,
                ""
            ],
            [
                41,
                "            var client = new GraphClient(new Uri(baseUri), httpFactory);"
            ],
            [
                42,
                "            client.Connect();"
            ],
            [
                43,
                "            var rootNode = client.RootNode;"
            ],
            [
                44,
                "            Assert.AreEqual(client, ((IGremlinQuery)rootNode).Client);"
            ],
            [
                50,
                ""
            ],
            [
                51,
                "            var client = new GraphClient(new Uri(baseUri), httpFactory);"
            ],
            [
                52,
                "            client.Connect();"
            ],
            [
                53,
                "            var rootNode = client.RootNode;"
            ],
            [
                54,
                "            Assert.AreEqual(\"g.v(p0)\", ((IGremlinQuery)rootNode).QueryText);"
            ],
            [
                55,
                "            Assert.AreEqual(123, ((IGremlinQuery)rootNode).QueryParameters[\"p0\"]);"
            ]
        ]
    },
    "num_lines_added": 14,
    "num_lines_removed": 40
}