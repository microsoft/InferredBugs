{
    "hash": "d8a80000184518e3cd532c8678b15a3c8e89df27",
    "message": "Reworked sample code to be based on a warehouse example.",
    "file_num_lines": 36,
    "diff_parsed": {
        "added": [
            [
                11,
                "            IGraphClient graph = new GraphClient(new Uri(\"\"));"
            ],
            [
                13,
                "            // Based on http://wiki.neo4j.org/content/Image:Warehouse.png"
            ],
            [
                14,
                ""
            ],
            [
                15,
                "            // Can create nodes from POCOs"
            ],
            [
                16,
                "            var frameStore = graph.Create("
            ],
            [
                17,
                "                new StorageLocation {Name = \"Frame Store\"});"
            ],
            [
                18,
                "            var mainStore = graph.Create("
            ],
            [
                19,
                "                new StorageLocation { Name = \"Main Store\" });"
            ],
            [
                22,
                "            var frame = graph.Create("
            ],
            [
                23,
                "                new Part { Name = \"Frame\" },"
            ],
            [
                24,
                "                new StoredIn(frameStore));"
            ],
            [
                25,
                ""
            ],
            [
                26,
                "            // Can create multiple outgoing relationships and relationships with payloads"
            ],
            [
                27,
                "            graph.Create("
            ],
            [
                28,
                "                new Product { Name = \"Trike\", Weight = 2 },"
            ],
            [
                29,
                "                new StoredIn(mainStore),"
            ],
            [
                30,
                "                new Requires(frame, new Requires.Payload { Count = 1 }));"
            ],
            [
                31,
                ""
            ],
            [
                32,
                "            // Can create relationships in both directions"
            ],
            [
                33,
                "            graph.Create("
            ],
            [
                34,
                "                new Part { Name = \"Frame\" },"
            ],
            [
                35,
                "                new StoredIn(frameStore),"
            ],
            [
                36,
                "                new Requires(frame, new Requires.Payload{ Count = 2 })"
            ],
            [
                37,
                "                    { Direction = RelationshipDirection.Incoming });"
            ],
            [
                38,
                ""
            ],
            [
                39,
                "            var wheel = graph.Create("
            ],
            [
                40,
                "                 new Part { Name = \"Wheel\" },"
            ],
            [
                41,
                "                 new Requires(frame, new Requires.Payload { Count = 2 })"
            ],
            [
                42,
                "                    { Direction = RelationshipDirection.Incoming });"
            ],
            [
                43,
                ""
            ],
            [
                44,
                "            // Can create implicit incoming relationships"
            ],
            [
                45,
                "            graph.Create("
            ],
            [
                46,
                "                new StorageLocation { Name = \"Wheel Store\" },"
            ],
            [
                47,
                "                new StoredIn(wheel));"
            ],
            [
                50,
                "}"
            ]
        ],
        "deleted": [
            [
                11,
                "            IGraphClient client = new GraphClient(new Uri(\"\"));"
            ],
            [
                13,
                "            var readify = client.Create("
            ],
            [
                14,
                "                new Organisation {Name = \"Readify\"});"
            ],
            [
                15,
                ""
            ],
            [
                16,
                "            // Can create a node from a POCO"
            ],
            [
                17,
                "            var erik = client.Create("
            ],
            [
                18,
                "                new User { FirstName = \"Erik\", LastName = \"Natoli\", DateOfBirth = new DateTime(1988, 1, 1) });"
            ],
            [
                21,
                "            var sofia = client.Create("
            ],
            [
                22,
                "                new User { FirstName = \"Sofia\", LastName = \"Brighton\", DateOfBirth = new DateTime(1969, 6, 25) },"
            ],
            [
                23,
                "                new HasMet(erik, new HasMet.Payload {DateMet = DateTime.UtcNow}),"
            ],
            [
                24,
                "                new BelongsTo(readify));"
            ],
            [
                25,
                ""
            ],
            [
                26,
                "            // Can create a node with incoming relationships"
            ],
            [
                27,
                "            client.Create("
            ],
            [
                28,
                "                new SecurityGroup {Name = \"Administrators\"},"
            ],
            [
                29,
                "                new BelongsTo(erik));"
            ],
            [
                30,
                ""
            ],
            [
                31,
                "            // Can create a node with incoming and outgoing relationships"
            ],
            [
                32,
                "            client.Create("
            ],
            [
                33,
                "                new SecurityGroup { Name = \"Power Users\" },"
            ],
            [
                34,
                "                new BelongsTo(erik),"
            ],
            [
                35,
                "                new BelongsTo(readify));"
            ],
            [
                36,
                ""
            ],
            [
                37,
                "            // Can create outgoing relationships"
            ],
            [
                38,
                "            client.CreateRelationships("
            ],
            [
                39,
                "                erik,"
            ],
            [
                40,
                "                new BelongsTo(readify));"
            ],
            [
                41,
                ""
            ],
            [
                42,
                "            // Can create incoming relationships"
            ],
            [
                43,
                "            client.CreateRelationships("
            ],
            [
                44,
                "                readify,"
            ],
            [
                45,
                "                new BelongsTo(sofia));"
            ],
            [
                46,
                ""
            ],
            [
                47,
                "            // Can create self-referencing relationships"
            ],
            [
                48,
                "            client.CreateRelationships("
            ],
            [
                49,
                "                readify,"
            ],
            [
                50,
                "                new BelongsTo(readify));"
            ],
            [
                53,
                "}"
            ]
        ]
    },
    "num_lines_added": 35,
    "num_lines_removed": 38
}