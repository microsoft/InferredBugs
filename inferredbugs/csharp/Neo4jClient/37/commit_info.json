{
    "hash": "c09118ff23871befb099e6aa1b94daf6fd1a66a1",
    "message": "Refactor ReIndexTests",
    "file_num_lines": 190,
    "diff_parsed": {
        "added": [
            [
                17,
                "                    new IndexEntry"
            ],
            [
                18,
                "                        {"
            ],
            [
                19,
                "                            Name = \"my_nodes\","
            ],
            [
                20,
                "                            KeyValues = new Dictionary<string, object>"
            ],
            [
                21,
                "                                {"
            ],
            [
                22,
                "                                    {\"FooKey\", \"the_value with space\"}"
            ],
            [
                23,
                "                                },"
            ],
            [
                24,
                "                        }"
            ],
            [
                25,
                "                };"
            ],
            [
                27,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                30,
                "                        MockRequest.PostObjectAsJson(\"/index/node/my_nodes\","
            ],
            [
                31,
                "                                                     new"
            ],
            [
                32,
                "                                                         {"
            ],
            [
                33,
                "                                                             key = \"FooKey\","
            ],
            [
                34,
                "                                                             value = \"the_value with space\","
            ],
            [
                35,
                "                                                             uri = \"http://foo/db/data/node/123\""
            ],
            [
                36,
                "                                                         }),"
            ],
            [
                37,
                "                        MockResponse.Json(HttpStatusCode.Created,"
            ],
            [
                38,
                "                                          @\"Location: http://foo/db/data/index/node/my_nodes/FooKey/the_value%20with%20space/123\")"
            ],
            [
                39,
                "                    },"
            ],
            [
                41,
                "                        MockRequest.Delete(\"/index/node/my_nodes/123\"),"
            ],
            [
                42,
                "                        MockResponse.Http((int) HttpStatusCode.NoContent)"
            ],
            [
                44,
                "                })"
            ],
            [
                45,
                "            {"
            ],
            [
                46,
                "                var graphClient = testHarness.CreateAndConnectGraphClient();"
            ],
            [
                48,
                "                //Act"
            ],
            [
                49,
                "                var nodeReference = new NodeReference<TestNode>(123);"
            ],
            [
                50,
                "                graphClient.ReIndex(nodeReference, indexEntries);"
            ],
            [
                52,
                "                // Assert"
            ],
            [
                53,
                "                Assert.Pass(\"Success.\");"
            ],
            [
                54,
                "            }"
            ],
            [
                63,
                "                    new IndexEntry"
            ],
            [
                64,
                "                        {"
            ],
            [
                65,
                "                            Name = \"my_nodes\","
            ],
            [
                66,
                "                            KeyValues = new Dictionary<string, object>"
            ],
            [
                67,
                "                                {"
            ],
            [
                68,
                "                                    {\"FooKey\", new DateTimeOffset(1000, new TimeSpan(0))}"
            ],
            [
                69,
                "                                },"
            ],
            [
                70,
                "                        }"
            ],
            [
                71,
                "                };"
            ],
            [
                73,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                76,
                "                        MockRequest.PostObjectAsJson(\"/index/node/my_nodes\","
            ],
            [
                77,
                "                                                     new"
            ],
            [
                78,
                "                                                         {"
            ],
            [
                79,
                "                                                             key = \"FooKey\","
            ],
            [
                80,
                "                                                             value = \"1000\","
            ],
            [
                81,
                "                                                             uri = \"http://foo/db/data/node/123\""
            ],
            [
                82,
                "                                                         }),"
            ],
            [
                83,
                "                        MockResponse.Json(HttpStatusCode.Created,"
            ],
            [
                84,
                "                                          @\"Location: http://foo/db/data/index/node/my_nodes/FooKey/someDateValue/123\")"
            ],
            [
                85,
                "                    },"
            ],
            [
                87,
                "                        MockRequest.Delete(\"/index/node/my_nodes/123\"),"
            ],
            [
                88,
                "                        MockResponse.Http((int) HttpStatusCode.NoContent)"
            ],
            [
                90,
                "                })"
            ],
            [
                91,
                "            {"
            ],
            [
                92,
                "                var graphClient = testHarness.CreateAndConnectGraphClient();"
            ],
            [
                94,
                "                //Act"
            ],
            [
                95,
                "                var nodeReference = new NodeReference<TestNode>(123);"
            ],
            [
                96,
                "                graphClient.ReIndex(nodeReference, indexEntries);"
            ],
            [
                98,
                "                // Assert"
            ],
            [
                99,
                "                Assert.Pass(\"Success.\");"
            ],
            [
                100,
                "            }"
            ],
            [
                108,
                "                {"
            ],
            [
                109,
                "                    {\"FooKey\", \"foo?bar\"}"
            ],
            [
                110,
                "                };"
            ],
            [
                113,
                "                    new IndexEntry"
            ],
            [
                114,
                "                        {"
            ],
            [
                115,
                "                            Name = \"my_nodes\","
            ],
            [
                116,
                "                            KeyValues = indexKeyValues,"
            ],
            [
                117,
                "                        }"
            ],
            [
                118,
                "                };"
            ],
            [
                120,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                123,
                "                        MockRequest.PostObjectAsJson(\"/index/node/my_nodes\","
            ],
            [
                124,
                "                                                     new"
            ],
            [
                125,
                "                                                         {"
            ],
            [
                126,
                "                                                             key = \"FooKey\","
            ],
            [
                127,
                "                                                             value = \"foo?bar\","
            ],
            [
                128,
                "                                                             uri = \"http://foo/db/data/node/123\""
            ],
            [
                129,
                "                                                         }),"
            ],
            [
                130,
                "                        MockResponse.Json(HttpStatusCode.Created,"
            ],
            [
                131,
                "                                          @\"Location: http://foo/db/data/index/node/my_nodes/FooKey/%3f/123\")"
            ],
            [
                132,
                "                    },"
            ],
            [
                134,
                "                        MockRequest.Delete(\"/index/node/my_nodes/123\"),"
            ],
            [
                135,
                "                        MockResponse.Http((int) HttpStatusCode.NoContent)"
            ],
            [
                137,
                "                })"
            ],
            [
                138,
                "            {"
            ],
            [
                139,
                "                var graphClient = testHarness.CreateAndConnectGraphClient();"
            ],
            [
                141,
                "                //Act"
            ],
            [
                142,
                "                var nodeReference = new NodeReference<TestNode>(123);"
            ],
            [
                143,
                "                graphClient.ReIndex(nodeReference, indexEntries);"
            ],
            [
                145,
                "                // Assert"
            ],
            [
                146,
                "                Assert.Pass(\"Success.\");"
            ],
            [
                147,
                "            }"
            ],
            [
                155,
                "                {"
            ],
            [
                156,
                "                    {\"FooKey\", \"abc/def\"}"
            ],
            [
                157,
                "                };"
            ],
            [
                160,
                "                    new IndexEntry"
            ],
            [
                161,
                "                        {"
            ],
            [
                162,
                "                            Name = \"my_nodes\","
            ],
            [
                163,
                "                            KeyValues = indexKeyValues,"
            ],
            [
                164,
                "                        }"
            ],
            [
                165,
                "                };"
            ],
            [
                167,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                170,
                "                        MockRequest.PostObjectAsJson(\"/index/node/my_nodes\","
            ],
            [
                171,
                "                                                     new"
            ],
            [
                172,
                "                                                         {"
            ],
            [
                173,
                "                                                             key = \"FooKey\","
            ],
            [
                174,
                "                                                             value = \"abc/def\","
            ],
            [
                175,
                "                                                             uri = \"http://foo/db/data/node/123\""
            ],
            [
                176,
                "                                                         }),"
            ],
            [
                177,
                "                        MockResponse.Json(HttpStatusCode.Created,"
            ],
            [
                178,
                "                                          @\"Location: http://foo/db/data/index/node/my_nodes/FooKey/abc-def/123\")"
            ],
            [
                179,
                "                    },"
            ],
            [
                181,
                "                        MockRequest.Delete(\"/index/node/my_nodes/123\"),"
            ],
            [
                182,
                "                        MockResponse.Http((int) HttpStatusCode.NoContent)"
            ],
            [
                184,
                "                })"
            ],
            [
                185,
                "            {"
            ],
            [
                186,
                "                var graphClient = testHarness.CreateAndConnectGraphClient();"
            ],
            [
                188,
                "                //Act"
            ],
            [
                189,
                "                var nodeReference = new NodeReference<TestNode>(123);"
            ],
            [
                190,
                "                graphClient.ReIndex(nodeReference, indexEntries);"
            ],
            [
                192,
                "                // Assert"
            ],
            [
                193,
                "                Assert.Pass(\"Success.\");"
            ],
            [
                194,
                "            }"
            ],
            [
                198,
                "        [ExpectedException(typeof (NotSupportedException))]"
            ],
            [
                202,
                ""
            ],
            [
                203,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                206,
                "                        MockRequest.Get(\"\"),"
            ],
            [
                207,
                "                        MockResponse.NeoRootPre15M02()"
            ],
            [
                209,
                "                })"
            ],
            [
                210,
                "            {"
            ],
            [
                212,
                "                var graphClient = testHarness.CreateAndConnectGraphClient();"
            ],
            [
                213,
                ""
            ],
            [
                214,
                "                //Act"
            ],
            [
                215,
                "                var nodeReference = new NodeReference<TestNode>(123);"
            ],
            [
                216,
                "                graphClient.ReIndex(nodeReference, new IndexEntry[0]);"
            ],
            [
                217,
                "            }"
            ],
            [
                220,
                "        public class TestNode"
            ],
            [
                221,
                "        {"
            ],
            [
                222,
                "            public string FooKey { get; set; }"
            ],
            [
                223,
                "        }"
            ],
            [
                225,
                "    }"
            ]
        ],
        "deleted": [
            [
                5,
                "using Neo4jClient.Serializer;"
            ],
            [
                6,
                "using Newtonsoft.Json;"
            ],
            [
                7,
                "using RestSharp;"
            ],
            [
                14,
                "        readonly string rootResponse = @\"{"
            ],
            [
                15,
                "                'batch' : 'http://foo/db/data/batch',"
            ],
            [
                16,
                "                'node' : 'http://foo/db/data/node',"
            ],
            [
                17,
                "                'node_index' : 'http://foo/db/data/index/node',"
            ],
            [
                18,
                "                'relationship_index' : 'http://foo/db/data/index/relationship',"
            ],
            [
                19,
                "                'reference_node' : 'http://foo/db/data/node/0',"
            ],
            [
                20,
                "                'neo4j_version' : '1.5.M02',"
            ],
            [
                21,
                "                'extensions_info' : 'http://foo/db/data/ext',"
            ],
            [
                22,
                "                'extensions' : {"
            ],
            [
                23,
                "                }"
            ],
            [
                24,
                "            }\""
            ],
            [
                25,
                "            .Replace('\\'', '\"');"
            ],
            [
                26,
                ""
            ],
            [
                27,
                "        readonly string pre15M02RootResponse = @\"{"
            ],
            [
                28,
                "                'batch' : 'http://foo/db/data/batch',"
            ],
            [
                29,
                "                'node' : 'http://foo/db/data/node',"
            ],
            [
                30,
                "                'node_index' : 'http://foo/db/data/index/node',"
            ],
            [
                31,
                "                'relationship_index' : 'http://foo/db/data/index/relationship',"
            ],
            [
                32,
                "                'reference_node' : 'http://foo/db/data/node/0',"
            ],
            [
                33,
                "                'extensions_info' : 'http://foo/db/data/ext',"
            ],
            [
                34,
                "                'extensions' : {"
            ],
            [
                35,
                "                }"
            ],
            [
                36,
                "            }\""
            ],
            [
                37,
                "            .Replace('\\'', '\"');"
            ],
            [
                38,
                ""
            ],
            [
                44,
                "            {"
            ],
            [
                45,
                "                new IndexEntry"
            ],
            [
                47,
                "                    Name = \"my_nodes\","
            ],
            [
                48,
                "                    KeyValues = new Dictionary<string, object>"
            ],
            [
                49,
                "                    {"
            ],
            [
                50,
                "                        { \"FooKey\", \"the_value with space\" }"
            ],
            [
                51,
                "                    },"
            ],
            [
                52,
                "                }"
            ],
            [
                53,
                "            };"
            ],
            [
                55,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                56,
                "            {"
            ],
            [
                58,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                59,
                "                    new NeoHttpResponse"
            ],
            [
                61,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                62,
                "                        ContentType = \"application/json\","
            ],
            [
                63,
                "                        TestContent = rootResponse.Replace('\\'', '\"')"
            ],
            [
                64,
                "                    }"
            ],
            [
                65,
                "                },"
            ],
            [
                66,
                "                {"
            ],
            [
                67,
                "                    new RestRequest(\"/index/node/my_nodes\", Method.POST)"
            ],
            [
                69,
                "                        RequestFormat = DataFormat.Json,"
            ],
            [
                70,
                "                        JsonSerializer = new CustomJsonSerializer { NullHandling = NullValueHandling.Ignore }"
            ],
            [
                72,
                "                    .AddBody(new { key=\"FooKey\", value=\"the_value with space\", uri=\"http://foo/db/data/node/123\"}),"
            ],
            [
                73,
                "                    new NeoHttpResponse {"
            ],
            [
                74,
                "                        StatusCode = HttpStatusCode.Created,"
            ],
            [
                75,
                "                        ContentType = \"application/json\","
            ],
            [
                76,
                "                        TestContent = \"Location: http://foo/db/data/index/node/my_nodes/FooKey/the_value%20with%20space/123\""
            ],
            [
                77,
                "                    }"
            ],
            [
                78,
                "                },"
            ],
            [
                79,
                "                {"
            ],
            [
                80,
                "                   new RestRequest(\"/index/node/my_nodes/123\", Method.DELETE) {"
            ],
            [
                81,
                "                        RequestFormat = DataFormat.Json,"
            ],
            [
                82,
                "                        JsonSerializer = new CustomJsonSerializer { NullHandling = NullValueHandling.Ignore }"
            ],
            [
                83,
                "                        },"
            ],
            [
                84,
                "                    new NeoHttpResponse {"
            ],
            [
                85,
                "                        StatusCode = HttpStatusCode.NoContent,"
            ],
            [
                86,
                "                        ContentType = \"application/json\","
            ],
            [
                87,
                "                    }"
            ],
            [
                88,
                "                }"
            ],
            [
                89,
                "            });"
            ],
            [
                90,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                91,
                "            graphClient.Connect();"
            ],
            [
                93,
                "            //Act"
            ],
            [
                94,
                "            var nodeReference = new NodeReference<TestNode>(123);"
            ],
            [
                95,
                "            graphClient.ReIndex(nodeReference, indexEntries);"
            ],
            [
                97,
                "            // Assert"
            ],
            [
                98,
                "            Assert.Pass(\"Success.\");"
            ],
            [
                106,
                "            {"
            ],
            [
                107,
                "                new IndexEntry"
            ],
            [
                109,
                "                    Name = \"my_nodes\","
            ],
            [
                110,
                "                    KeyValues = new Dictionary<string, object>"
            ],
            [
                111,
                "                    {"
            ],
            [
                112,
                "                        { \"FooKey\", new DateTimeOffset(1000, new TimeSpan(0)) }"
            ],
            [
                113,
                "                    },"
            ],
            [
                114,
                "                }"
            ],
            [
                115,
                "            };"
            ],
            [
                117,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                118,
                "            {"
            ],
            [
                120,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                121,
                "                    new NeoHttpResponse"
            ],
            [
                123,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                124,
                "                        ContentType = \"application/json\","
            ],
            [
                125,
                "                        TestContent = rootResponse.Replace('\\'', '\"')"
            ],
            [
                126,
                "                    }"
            ],
            [
                127,
                "                },"
            ],
            [
                128,
                "                {"
            ],
            [
                129,
                "                    new RestRequest(\"/index/node/my_nodes\", Method.POST)"
            ],
            [
                131,
                "                        RequestFormat = DataFormat.Json,"
            ],
            [
                132,
                "                        JsonSerializer = new CustomJsonSerializer { NullHandling = NullValueHandling.Ignore }"
            ],
            [
                133,
                "                    }"
            ],
            [
                134,
                "                    .AddBody(new { key=\"FooKey\", value=\"1000\", uri=\"http://foo/db/data/node/123\"}),"
            ],
            [
                135,
                "                    new NeoHttpResponse {"
            ],
            [
                136,
                "                        StatusCode = HttpStatusCode.Created,"
            ],
            [
                137,
                "                        ContentType = \"application/json\","
            ],
            [
                138,
                "                        TestContent = \"Location: http://foo/db/data/index/node/my_nodes/FooKey/the_value%20with%20space/123\""
            ],
            [
                140,
                "                },"
            ],
            [
                141,
                "                {"
            ],
            [
                142,
                "                   new RestRequest(\"/index/node/my_nodes/123\", Method.DELETE) {"
            ],
            [
                143,
                "                        RequestFormat = DataFormat.Json,"
            ],
            [
                144,
                "                        JsonSerializer = new CustomJsonSerializer { NullHandling = NullValueHandling.Ignore }"
            ],
            [
                145,
                "                        },"
            ],
            [
                146,
                "                    new NeoHttpResponse {"
            ],
            [
                147,
                "                        StatusCode = HttpStatusCode.NoContent,"
            ],
            [
                148,
                "                        ContentType = \"application/json\","
            ],
            [
                149,
                "                    }"
            ],
            [
                150,
                "                }"
            ],
            [
                151,
                "            });"
            ],
            [
                152,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                153,
                "            graphClient.Connect();"
            ],
            [
                155,
                "            //Act"
            ],
            [
                156,
                "            var nodeReference = new NodeReference<TestNode>(123);"
            ],
            [
                157,
                "            graphClient.ReIndex(nodeReference, indexEntries);"
            ],
            [
                159,
                "            // Assert"
            ],
            [
                160,
                "            Assert.Pass(\"Success.\");"
            ],
            [
                168,
                "            {"
            ],
            [
                169,
                "                {\"FooKey\", \"foo?bar\"}"
            ],
            [
                170,
                "            };"
            ],
            [
                172,
                "            {"
            ],
            [
                173,
                "                new IndexEntry"
            ],
            [
                175,
                "                    Name = \"my_nodes\","
            ],
            [
                176,
                "                    KeyValues = indexKeyValues,"
            ],
            [
                177,
                "                }"
            ],
            [
                178,
                "            };"
            ],
            [
                180,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                181,
                "            {"
            ],
            [
                183,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                184,
                "                    new NeoHttpResponse"
            ],
            [
                186,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                187,
                "                        ContentType = \"application/json\","
            ],
            [
                188,
                "                        TestContent = rootResponse.Replace('\\'', '\"')"
            ],
            [
                189,
                "                    }"
            ],
            [
                190,
                "                },"
            ],
            [
                191,
                "                {"
            ],
            [
                192,
                "                    new RestRequest(\"/index/node/my_nodes\", Method.POST)"
            ],
            [
                194,
                "                        RequestFormat = DataFormat.Json,"
            ],
            [
                195,
                "                        JsonSerializer = new CustomJsonSerializer { NullHandling = NullValueHandling.Ignore }"
            ],
            [
                196,
                "                    }"
            ],
            [
                197,
                "                    .AddBody(new { key=\"FooKey\", value=\"foo?bar\", uri=\"http://foo/db/data/node/123\"}),"
            ],
            [
                198,
                "                    new NeoHttpResponse {"
            ],
            [
                199,
                "                        StatusCode = HttpStatusCode.Created,"
            ],
            [
                200,
                "                        ContentType = \"application/json\","
            ],
            [
                201,
                "                        TestContent = \"Location: http://foo/db/data/index/node/my_nodes/FooKey/%3F/123\""
            ],
            [
                203,
                "                },"
            ],
            [
                204,
                "                {"
            ],
            [
                205,
                "                   new RestRequest(\"/index/node/my_nodes/123\", Method.DELETE) {"
            ],
            [
                206,
                "                        RequestFormat = DataFormat.Json,"
            ],
            [
                207,
                "                        JsonSerializer = new CustomJsonSerializer { NullHandling = NullValueHandling.Ignore }"
            ],
            [
                208,
                "                        },"
            ],
            [
                209,
                "                    new NeoHttpResponse {"
            ],
            [
                210,
                "                        StatusCode = HttpStatusCode.NoContent,"
            ],
            [
                211,
                "                        ContentType = \"application/json\","
            ],
            [
                212,
                "                    }"
            ],
            [
                213,
                "                }"
            ],
            [
                214,
                "            });"
            ],
            [
                215,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                216,
                "            graphClient.Connect();"
            ],
            [
                218,
                "            //Act"
            ],
            [
                219,
                "            var nodeReference = new NodeReference<TestNode>(123);"
            ],
            [
                220,
                "            graphClient.ReIndex(nodeReference, indexEntries);"
            ],
            [
                222,
                "            // Assert"
            ],
            [
                223,
                "            Assert.Pass(\"Success.\");"
            ],
            [
                231,
                "            {"
            ],
            [
                232,
                "                {\"FooKey\", \"abc/def\"}"
            ],
            [
                233,
                "            };"
            ],
            [
                235,
                "            {"
            ],
            [
                236,
                "                new IndexEntry"
            ],
            [
                238,
                "                    Name = \"my_nodes\","
            ],
            [
                239,
                "                    KeyValues = indexKeyValues,"
            ],
            [
                240,
                "                }"
            ],
            [
                241,
                "            };"
            ],
            [
                243,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                244,
                "            {"
            ],
            [
                246,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                247,
                "                    new NeoHttpResponse"
            ],
            [
                249,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                250,
                "                        ContentType = \"application/json\","
            ],
            [
                251,
                "                        TestContent = rootResponse.Replace('\\'', '\"')"
            ],
            [
                252,
                "                    }"
            ],
            [
                253,
                "                },"
            ],
            [
                254,
                "                {"
            ],
            [
                255,
                "                    new RestRequest(\"/index/node/my_nodes\", Method.POST)"
            ],
            [
                257,
                "                        RequestFormat = DataFormat.Json,"
            ],
            [
                258,
                "                        JsonSerializer = new CustomJsonSerializer { NullHandling = NullValueHandling.Ignore }"
            ],
            [
                260,
                "                    .AddBody(new { key = \"FooKey\", value =\"abc/def\", uri = \"http://foo/db/data/node/123\"}),"
            ],
            [
                261,
                "                    new NeoHttpResponse {"
            ],
            [
                262,
                "                        StatusCode = HttpStatusCode.Created,"
            ],
            [
                263,
                "                        ContentType = \"application/json\","
            ],
            [
                264,
                "                        TestContent = \"Location: http://foo/db/data/index/node/my_nodes/FooKey/abc-def/123\""
            ],
            [
                265,
                "                    }"
            ],
            [
                266,
                "                },"
            ],
            [
                267,
                "                {"
            ],
            [
                268,
                "                   new RestRequest(\"/index/node/my_nodes/123\", Method.DELETE) {"
            ],
            [
                269,
                "                        RequestFormat = DataFormat.Json,"
            ],
            [
                270,
                "                        JsonSerializer = new CustomJsonSerializer { NullHandling = NullValueHandling.Ignore }"
            ],
            [
                271,
                "                        },"
            ],
            [
                272,
                "                    new NeoHttpResponse {"
            ],
            [
                273,
                "                        StatusCode = HttpStatusCode.NoContent,"
            ],
            [
                274,
                "                        ContentType = \"application/json\","
            ],
            [
                275,
                "                    }"
            ],
            [
                276,
                "                }"
            ],
            [
                277,
                "            });"
            ],
            [
                278,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                279,
                "            graphClient.Connect();"
            ],
            [
                281,
                "            //Act"
            ],
            [
                282,
                "            var nodeReference = new NodeReference<TestNode>(123);"
            ],
            [
                283,
                "            graphClient.ReIndex(nodeReference, indexEntries);"
            ],
            [
                285,
                "            // Assert"
            ],
            [
                286,
                "            Assert.Pass(\"Success.\");"
            ],
            [
                290,
                "        [ExpectedException(typeof(NotSupportedException))]"
            ],
            [
                294,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                295,
                "            {"
            ],
            [
                297,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                298,
                "                    new NeoHttpResponse"
            ],
            [
                300,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                301,
                "                        ContentType = \"application/json\","
            ],
            [
                302,
                "                        TestContent = pre15M02RootResponse.Replace('\\'', '\"')"
            ],
            [
                304,
                "                }"
            ],
            [
                305,
                "            });"
            ],
            [
                306,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                307,
                "            graphClient.Connect();"
            ],
            [
                309,
                "            //Act"
            ],
            [
                310,
                "            var nodeReference = new NodeReference<TestNode>(123);"
            ],
            [
                311,
                "            graphClient.ReIndex(nodeReference, new IndexEntry[0]);"
            ],
            [
                313,
                "    }"
            ],
            [
                315,
                "    public class TestNode"
            ],
            [
                316,
                "    {"
            ],
            [
                317,
                "        public string FooKey { get; set; }"
            ],
            [
                318,
                "    }"
            ]
        ]
    },
    "num_lines_added": 142,
    "num_lines_removed": 236
}