{
    "hash": "8114f08e09f4a1e70cbb4cc6489c14549bc2fc70",
    "message": "Refactor tests and fix identified bugs",
    "file_num_lines": 70,
    "diff_parsed": {
        "added": [
            [
                1,
                "\ufeffusing System.Linq;"
            ],
            [
                11,
                "        public void ShouldReturnNodeIndexes()"
            ],
            [
                13,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                16,
                "                    MockRequest.Get(\"/index/node\"),"
            ],
            [
                17,
                "                    MockResponse.Json(HttpStatusCode.OK,"
            ],
            [
                18,
                "                        @\"{"
            ],
            [
                19,
                "                            'agency24871-clients' : {"
            ],
            [
                20,
                "                            'to_lower_case' : 'true',"
            ],
            [
                21,
                "                            'template' : 'http://localhost:5102/db/data/index/node/agency24871-clients/{key}/{value}',"
            ],
            [
                22,
                "                            '_blueprints:type' : 'MANUAL',"
            ],
            [
                23,
                "                            'provider' : 'lucene',"
            ],
            [
                24,
                "                            'type' : 'fulltext'"
            ],
            [
                25,
                "                            },"
            ],
            [
                26,
                "                            'agency36681-clients' : {"
            ],
            [
                27,
                "                            'to_lower_case' : 'false',"
            ],
            [
                28,
                "                            'template' : 'http://localhost:5102/db/data/index/node/agency36681-clients/{key}/{value}',"
            ],
            [
                29,
                "                            '_blueprints:type' : 'MANUAL',"
            ],
            [
                30,
                "                            'provider' : 'lucene',"
            ],
            [
                31,
                "                            'type' : 'exact'"
            ],
            [
                32,
                "                            }"
            ],
            [
                33,
                "                        }\")"
            ],
            [
                35,
                "            })"
            ],
            [
                36,
                "            {"
            ],
            [
                37,
                "                var graphClient = testHarness.CreateAndConnectGraphClient();"
            ],
            [
                38,
                "                var indexes = graphClient.GetIndexes(IndexFor.Node);"
            ],
            [
                39,
                "                Assert.AreEqual(2, indexes.Count());"
            ],
            [
                41,
                "                var index = indexes.ElementAt(0);"
            ],
            [
                42,
                "                Assert.AreEqual(\"agency24871-clients\", index.Key);"
            ],
            [
                43,
                "                Assert.AreEqual(true, index.Value.ToLowerCase);"
            ],
            [
                44,
                "                Assert.AreEqual(\"http://localhost:5102/db/data/index/node/agency24871-clients/{key}/{value}\", index.Value.Template);"
            ],
            [
                45,
                "                Assert.AreEqual(\"lucene\", index.Value.Provider);"
            ],
            [
                46,
                "                Assert.AreEqual(\"fulltext\", index.Value.Type);"
            ],
            [
                48,
                "                index = indexes.ElementAt(1);"
            ],
            [
                49,
                "                Assert.AreEqual(\"agency36681-clients\", index.Key);"
            ],
            [
                50,
                "                Assert.AreEqual(false, index.Value.ToLowerCase);"
            ],
            [
                51,
                "                Assert.AreEqual(\"http://localhost:5102/db/data/index/node/agency36681-clients/{key}/{value}\", index.Value.Template);"
            ],
            [
                52,
                "                Assert.AreEqual(\"lucene\", index.Value.Provider);"
            ],
            [
                53,
                "                Assert.AreEqual(\"exact\", index.Value.Type);"
            ],
            [
                54,
                "            }"
            ],
            [
                60,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                63,
                "                    MockRequest.Get(\"/index/node\"),"
            ],
            [
                64,
                "                    MockResponse.Http(204)"
            ],
            [
                66,
                "            })"
            ],
            [
                68,
                "                var graphClient = testHarness.CreateAndConnectGraphClient();"
            ],
            [
                69,
                "                var indexes = graphClient.GetIndexes(IndexFor.Node);"
            ],
            [
                70,
                "                Assert.IsFalse(indexes.Any());"
            ],
            [
                71,
                "            }"
            ],
            [
                74,
                "}"
            ]
        ],
        "deleted": [
            [
                1,
                "\ufeffusing System;"
            ],
            [
                2,
                "using System.Collections.Generic;"
            ],
            [
                3,
                "using System.Linq;"
            ],
            [
                6,
                "using Neo4jClient.Serializer;"
            ],
            [
                7,
                "using Newtonsoft.Json;"
            ],
            [
                8,
                "using RestSharp;"
            ],
            [
                15,
                "        const string RootResponse = @\"{"
            ],
            [
                16,
                "                          'batch' : 'http://foo/db/data/batch',"
            ],
            [
                17,
                "                          'node' : 'http://foo/db/data/node',"
            ],
            [
                18,
                "                          'node_index' : 'http://foo/db/data/index/node',"
            ],
            [
                19,
                "                          'relationship_index' : 'http://foo/db/data/index/relationship',"
            ],
            [
                20,
                "                          'reference_node' : 'http://foo/db/data/node/0',"
            ],
            [
                21,
                "                          'extensions_info' : 'http://foo/db/data/ext',"
            ],
            [
                22,
                "                          'extensions' : {"
            ],
            [
                23,
                "                            'GremlinPlugin' : {"
            ],
            [
                24,
                "                              'execute_script' : 'http://foo/db/data/ext/GremlinPlugin/graphdb/execute_script'"
            ],
            [
                25,
                "                            }"
            ],
            [
                26,
                "                          }"
            ],
            [
                27,
                "                        }\";"
            ],
            [
                28,
                ""
            ],
            [
                30,
                "        public void ShouldReturnDataForHttpResponse200()"
            ],
            [
                32,
                "            //Arrange"
            ],
            [
                33,
                "            var restRequest = new RestRequest(\"/index/node\", Method.GET)"
            ],
            [
                34,
                "            {"
            ],
            [
                35,
                "                RequestFormat = DataFormat.Json,"
            ],
            [
                36,
                "                JsonSerializer = new CustomJsonSerializer { NullHandling = NullValueHandling.Ignore }"
            ],
            [
                37,
                "            };"
            ],
            [
                38,
                ""
            ],
            [
                39,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                42,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                43,
                "                    new NeoHttpResponse"
            ],
            [
                44,
                "                    {"
            ],
            [
                45,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                46,
                "                        ContentType = \"application/json\","
            ],
            [
                47,
                "                        TestContent = RootResponse.Replace('\\'', '\"')"
            ],
            [
                48,
                "                    }"
            ],
            [
                49,
                "                },"
            ],
            [
                50,
                "                {"
            ],
            [
                51,
                "                    restRequest,"
            ],
            [
                52,
                "                    new NeoHttpResponse {"
            ],
            [
                53,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                54,
                "                        ContentType = \"application/json\","
            ],
            [
                55,
                "                        TestContent = @\"{"
            ],
            [
                56,
                "                              'agency24871-clients' : {"
            ],
            [
                57,
                "                                'to_lower_case' : 'true',"
            ],
            [
                58,
                "                                'template' : 'http://localhost:5102/db/data/index/node/agency24871-clients/{key}/{value}',"
            ],
            [
                59,
                "                                '_blueprints:type' : 'MANUAL',"
            ],
            [
                60,
                "                                'provider' : 'lucene',"
            ],
            [
                61,
                "                                'type' : 'fulltext'"
            ],
            [
                62,
                "                              },"
            ],
            [
                63,
                "                              'agency36681-clients' : {"
            ],
            [
                64,
                "                                'to_lower_case' : 'true',"
            ],
            [
                65,
                "                                'template' : 'http://localhost:5102/db/data/index/node/agency36681-clients/{key}/{value}',"
            ],
            [
                66,
                "                                '_blueprints:type' : 'MANUAL',"
            ],
            [
                67,
                "                                'provider' : 'lucene',"
            ],
            [
                68,
                "                                'type' : 'fulltext'"
            ],
            [
                69,
                "                              }"
            ],
            [
                70,
                "                            }\""
            ],
            [
                71,
                "                    }"
            ],
            [
                73,
                "            });"
            ],
            [
                74,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                75,
                "            graphClient.Connect();"
            ],
            [
                77,
                "            //Act"
            ],
            [
                78,
                "            var indexes = graphClient.GetIndexes(IndexFor.Node);"
            ],
            [
                80,
                "            // Assert"
            ],
            [
                81,
                "            Assert.IsTrue(indexes.Any());"
            ],
            [
                87,
                "            //Arrange"
            ],
            [
                88,
                "            var restRequest = new RestRequest(\"/index/node\", Method.GET)"
            ],
            [
                89,
                "            {"
            ],
            [
                90,
                "                RequestFormat = DataFormat.Json,"
            ],
            [
                91,
                "                JsonSerializer = new CustomJsonSerializer { NullHandling = NullValueHandling.Ignore }"
            ],
            [
                92,
                "            };"
            ],
            [
                93,
                ""
            ],
            [
                94,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                97,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                98,
                "                    new NeoHttpResponse"
            ],
            [
                99,
                "                    {"
            ],
            [
                100,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                101,
                "                        ContentType = \"application/json\","
            ],
            [
                102,
                "                        TestContent = RootResponse.Replace('\\'', '\"')"
            ],
            [
                103,
                "                    }"
            ],
            [
                104,
                "                },"
            ],
            [
                105,
                "                  {"
            ],
            [
                106,
                "                    restRequest,"
            ],
            [
                107,
                "                    new NeoHttpResponse {"
            ],
            [
                108,
                "                        StatusCode = HttpStatusCode.NoContent,"
            ],
            [
                109,
                "                        ContentType = \"application/json\","
            ],
            [
                110,
                "                    }"
            ],
            [
                112,
                "            });"
            ],
            [
                113,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                114,
                "            graphClient.Connect();"
            ],
            [
                115,
                ""
            ],
            [
                116,
                "            //Act"
            ],
            [
                117,
                "            var indexes = graphClient.GetIndexes(IndexFor.Node);"
            ],
            [
                118,
                ""
            ],
            [
                119,
                "            // Assert"
            ],
            [
                120,
                "            Assert.IsFalse(indexes.Any());"
            ],
            [
                121,
                "        }"
            ],
            [
                122,
                ""
            ],
            [
                123,
                "        [Test]"
            ],
            [
                124,
                "        public void ShouldReturnListOfIndexes()"
            ],
            [
                125,
                "        {"
            ],
            [
                126,
                "            //Arrange"
            ],
            [
                127,
                "            var restRequest = new RestRequest(\"/index/node\", Method.GET)"
            ],
            [
                128,
                "            {"
            ],
            [
                129,
                "                RequestFormat = DataFormat.Json,"
            ],
            [
                130,
                "                JsonSerializer = new CustomJsonSerializer { NullHandling = NullValueHandling.Ignore }"
            ],
            [
                131,
                "            };"
            ],
            [
                132,
                ""
            ],
            [
                133,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                135,
                "                {"
            ],
            [
                136,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                137,
                "                    new NeoHttpResponse"
            ],
            [
                138,
                "                    {"
            ],
            [
                139,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                140,
                "                        ContentType = \"application/json\","
            ],
            [
                141,
                "                        TestContent = RootResponse.Replace('\\'', '\"')"
            ],
            [
                142,
                "                    }"
            ],
            [
                143,
                "                },"
            ],
            [
                144,
                "                {"
            ],
            [
                145,
                "                    restRequest,"
            ],
            [
                146,
                "                    new NeoHttpResponse {"
            ],
            [
                147,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                148,
                "                        ContentType = \"application/json\","
            ],
            [
                149,
                "                        TestContent = @\"{"
            ],
            [
                150,
                "                              'agency24871-clients' : {"
            ],
            [
                151,
                "                                'to_lower_case' : 'true',"
            ],
            [
                152,
                "                                'template' : 'http://localhost:5102/db/data/index/node/agency24871-clients/{key}/{value}',"
            ],
            [
                153,
                "                                '_blueprints:type' : 'MANUAL',"
            ],
            [
                154,
                "                                'provider' : 'lucene',"
            ],
            [
                155,
                "                                'type' : 'fulltext'"
            ],
            [
                156,
                "                              },"
            ],
            [
                157,
                "                              'agency36681-clients' : {"
            ],
            [
                158,
                "                                'to_lower_case' : 'true',"
            ],
            [
                159,
                "                                'template' : 'http://localhost:5102/db/data/index/node/agency36681-clients/{key}/{value}',"
            ],
            [
                160,
                "                                '_blueprints:type' : 'MANUAL',"
            ],
            [
                161,
                "                                'provider' : 'lucene',"
            ],
            [
                162,
                "                                'type' : 'fulltext'"
            ],
            [
                163,
                "                              }"
            ],
            [
                164,
                "                            }\""
            ],
            [
                165,
                "                    }"
            ],
            [
                166,
                "                }"
            ],
            [
                167,
                "            });"
            ],
            [
                168,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                169,
                "            graphClient.Connect();"
            ],
            [
                170,
                ""
            ],
            [
                171,
                "            //Act"
            ],
            [
                172,
                "            var result = graphClient.GetIndexes(IndexFor.Node);"
            ],
            [
                173,
                ""
            ],
            [
                174,
                "            // Assert"
            ],
            [
                175,
                "            Assert.IsTrue(result.Count == 2);"
            ],
            [
                178,
                "}"
            ]
        ]
    },
    "num_lines_added": 48,
    "num_lines_removed": 152
}