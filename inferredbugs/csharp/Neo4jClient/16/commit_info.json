{
    "hash": "e70b93b1dccbb0797643cfa7d2afcb7f3987d40c",
    "message": "Refactor more tests",
    "file_num_lines": 35,
    "diff_parsed": {
        "added": [
            [
                22,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                25,
                "                    MockRequest.PostJson("
            ],
            [
                26,
                "                        \"/ext/GremlinPlugin/graphdb/execute_script\","
            ],
            [
                27,
                "                        @\"{ 'script': 'foo bar query', 'params': {} }\"),"
            ],
            [
                28,
                "                    MockResponse.Json(HttpStatusCode.OK, @\"1\")"
            ],
            [
                30,
                "            })"
            ],
            [
                31,
                "            {"
            ],
            [
                32,
                "                var graphClient = testHarness.CreateAndConnectGraphClient();"
            ],
            [
                34,
                "                //Act"
            ],
            [
                35,
                "                var node = graphClient.ExecuteScalarGremlin(\"foo bar query\", null);"
            ],
            [
                37,
                "                //Assert"
            ],
            [
                38,
                "                Assert.AreEqual(1, int.Parse(node));"
            ],
            [
                39,
                "            }"
            ]
        ],
        "deleted": [
            [
                2,
                "using System.Collections.Generic;"
            ],
            [
                5,
                "using Neo4jClient.ApiModels;"
            ],
            [
                6,
                "using Neo4jClient.ApiModels.Gremlin;"
            ],
            [
                7,
                "using RestSharp;"
            ],
            [
                26,
                "            const string gremlinQueryExpected = \"foo bar query\";"
            ],
            [
                27,
                ""
            ],
            [
                28,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                31,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                32,
                "                    new NeoHttpResponse"
            ],
            [
                33,
                "                    {"
            ],
            [
                34,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                35,
                "                        ContentType = \"application/json\","
            ],
            [
                36,
                "                        TestContent = @\"{"
            ],
            [
                37,
                "                          'batch' : 'http://foo/db/data/batch',"
            ],
            [
                38,
                "                          'node' : 'http://foo/db/data/node',"
            ],
            [
                39,
                "                          'node_index' : 'http://foo/db/data/index/node',"
            ],
            [
                40,
                "                          'relationship_index' : 'http://foo/db/data/index/relationship',"
            ],
            [
                41,
                "                          'reference_node' : 'http://foo/db/data/node/0',"
            ],
            [
                42,
                "                          'extensions_info' : 'http://foo/db/data/ext',"
            ],
            [
                43,
                "                          'extensions' : {"
            ],
            [
                44,
                "                            'GremlinPlugin' : {"
            ],
            [
                45,
                "                              'execute_script' : 'http://foo/db/data/ext/GremlinPlugin/graphdb/execute_script'"
            ],
            [
                46,
                "                            }"
            ],
            [
                47,
                "                          }"
            ],
            [
                48,
                "                        }\".Replace('\\'', '\"')"
            ],
            [
                49,
                "                    }"
            ],
            [
                50,
                "                },"
            ],
            [
                51,
                "                {"
            ],
            [
                52,
                "                    new RestRequest {"
            ],
            [
                53,
                "                        Resource = \"/ext/GremlinPlugin/graphdb/execute_script\","
            ],
            [
                54,
                "                        Method = Method.POST,"
            ],
            [
                55,
                "                        RequestFormat = DataFormat.Json"
            ],
            [
                56,
                "                    }.AddBody(new GremlinApiQuery(gremlinQueryExpected, null)),"
            ],
            [
                57,
                "                    new NeoHttpResponse {"
            ],
            [
                58,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                59,
                "                        ContentType = \"application/json\","
            ],
            [
                60,
                "                        TestContent = @\"1\""
            ],
            [
                61,
                "                    }"
            ],
            [
                63,
                "            });"
            ],
            [
                64,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                65,
                "            graphClient.Connect();"
            ],
            [
                67,
                "            //Act"
            ],
            [
                68,
                "            var node = graphClient.ExecuteScalarGremlin(gremlinQueryExpected, null);"
            ],
            [
                70,
                "            //Assert"
            ],
            [
                71,
                "            Assert.AreEqual(1, int.Parse(node));"
            ]
        ]
    },
    "num_lines_added": 13,
    "num_lines_removed": 45
}