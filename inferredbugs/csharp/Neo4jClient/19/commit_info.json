{
    "hash": "78156a7ec73c1bfc50ca541a9209620bc9934a0b",
    "message": "Refactor more tests",
    "file_num_lines": 121,
    "diff_parsed": {
        "added": [
            [
                13,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                16,
                "                    MockRequest.PostJson(\"/node/81/relationships\","
            ],
            [
                17,
                "                        @\"{"
            ],
            [
                18,
                "                            'to': 'http://foo/db/data/node/81',"
            ],
            [
                19,
                "                            'type': 'TEST_RELATIONSHIP'"
            ],
            [
                20,
                "                        }\"),"
            ],
            [
                21,
                "                    MockResponse.Json(HttpStatusCode.Created,"
            ],
            [
                22,
                "                        @\"{"
            ],
            [
                23,
                "                            'extensions' : {"
            ],
            [
                24,
                "                            },"
            ],
            [
                25,
                "                            'start' : 'http://foo/db/data/node/81',"
            ],
            [
                26,
                "                            'property' : 'http://foo/db/data/relationship/38/properties/{key}',"
            ],
            [
                27,
                "                            'self' : 'http://foo/db/data/relationship/38',"
            ],
            [
                28,
                "                            'properties' : 'http://foo/db/data/relationship/38/properties',"
            ],
            [
                29,
                "                            'type' : 'TEST_RELATIONSHIP',"
            ],
            [
                30,
                "                            'end' : 'http://foo/db/data/node/80',"
            ],
            [
                31,
                "                            'data' : {"
            ],
            [
                32,
                "                            }"
            ],
            [
                33,
                "                        }\")"
            ],
            [
                35,
                "            })"
            ],
            [
                36,
                "            {"
            ],
            [
                37,
                "                var graphClient = testHarness.CreateAndConnectGraphClient();"
            ],
            [
                39,
                "                var testRelationship = new TestRelationship(81);"
            ],
            [
                40,
                "                var relationshipReference = graphClient.CreateRelationship(new NodeReference<TestNode>(81), testRelationship);"
            ],
            [
                42,
                "                Assert.IsInstanceOf<RelationshipReference>(relationshipReference);"
            ],
            [
                43,
                "                Assert.IsNotInstanceOf<RelationshipReference<object>>(relationshipReference);"
            ],
            [
                44,
                "                Assert.AreEqual(38, relationshipReference.Id);"
            ],
            [
                45,
                "            }"
            ],
            [
                51,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                54,
                "                    MockRequest.PostJson(\"/node/81/relationships\","
            ],
            [
                55,
                "                        @\"{"
            ],
            [
                56,
                "                            'to': 'http://foo/db/data/node/81',"
            ],
            [
                57,
                "                            'type': 'TEST_RELATIONSHIP'"
            ],
            [
                58,
                "                        }\"),"
            ],
            [
                59,
                "                    MockResponse.Json(HttpStatusCode.Created,"
            ],
            [
                60,
                "                        @\"{"
            ],
            [
                61,
                "                            'extensions' : {"
            ],
            [
                62,
                "                            },"
            ],
            [
                63,
                "                            'start' : 'http://foo/db/data/node/81',"
            ],
            [
                64,
                "                            'property' : 'http://foo/db/data/relationship/38/properties/{key}',"
            ],
            [
                65,
                "                            'self' : 'http://foo/db/data/relationship/38',"
            ],
            [
                66,
                "                            'properties' : 'http://foo/db/data/relationship/38/properties',"
            ],
            [
                67,
                "                            'type' : 'TEST_RELATIONSHIP',"
            ],
            [
                68,
                "                            'end' : 'http://foo/db/data/node/80',"
            ],
            [
                69,
                "                            'data' : {"
            ],
            [
                70,
                "                            }"
            ],
            [
                71,
                "                        }\")"
            ],
            [
                73,
                "            })"
            ],
            [
                74,
                "            {"
            ],
            [
                75,
                "                var graphClient = testHarness.CreateAndConnectGraphClient();"
            ],
            [
                77,
                "                var testRelationship = new TestRelationship(81);"
            ],
            [
                78,
                "                var relationshipReference = graphClient.CreateRelationship(new NodeReference<TestNode>(81), testRelationship);"
            ],
            [
                80,
                "                Assert.AreEqual(graphClient, ((IAttachedReference)relationshipReference).Client);"
            ],
            [
                81,
                "            }"
            ],
            [
                104,
                "            using (var testHarness = new RestTestHarness())"
            ],
            [
                106,
                "                var client = testHarness.CreateAndConnectGraphClient();"
            ],
            [
                107,
                "                client.CreateRelationship(new NodeReference<TestNode>(5), new TestRelationship(10) { Direction = RelationshipDirection.Incoming });"
            ],
            [
                108,
                "            }"
            ]
        ],
        "deleted": [
            [
                2,
                "using System.Collections.Generic;"
            ],
            [
                5,
                "using Neo4jClient.ApiModels;"
            ],
            [
                6,
                "using RestSharp;"
            ],
            [
                13,
                "        readonly string rootResponse = @\"{"
            ],
            [
                14,
                "                'batch' : 'http://foo/db/data/batch',"
            ],
            [
                15,
                "                'node' : 'http://foo/db/data/node',"
            ],
            [
                16,
                "                'node_index' : 'http://foo/db/data/index/node',"
            ],
            [
                17,
                "                'relationship_index' : 'http://foo/db/data/index/relationship',"
            ],
            [
                18,
                "                'reference_node' : 'http://foo/db/data/node/0',"
            ],
            [
                19,
                "                'neo4j_version' : '1.5.M02',"
            ],
            [
                20,
                "                'extensions_info' : 'http://foo/db/data/ext',"
            ],
            [
                21,
                "                'extensions' : {"
            ],
            [
                22,
                "                }"
            ],
            [
                23,
                "            }\""
            ],
            [
                24,
                "            .Replace('\\'', '\"');"
            ],
            [
                25,
                ""
            ],
            [
                29,
                "            var testRelationship = new TestRelationship(81);"
            ],
            [
                30,
                ""
            ],
            [
                31,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                34,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                35,
                "                    MockResponse.NeoRoot()"
            ],
            [
                36,
                "                },"
            ],
            [
                37,
                "                {"
            ],
            [
                38,
                "                    new RestRequest {"
            ],
            [
                39,
                "                        Resource = \"/node/81/relationships\","
            ],
            [
                40,
                "                        Method = Method.POST,"
            ],
            [
                41,
                "                        RequestFormat = DataFormat.Json"
            ],
            [
                42,
                "                    }.AddBody(new RelationshipTemplate"
            ],
            [
                43,
                "                    {"
            ],
            [
                44,
                "                        To = \"http://foo/db/data/node/81\","
            ],
            [
                45,
                "                        Type = testRelationship.RelationshipTypeKey"
            ],
            [
                46,
                "                    }),"
            ],
            [
                47,
                "                    new NeoHttpResponse {"
            ],
            [
                48,
                "                        StatusCode = HttpStatusCode.Created,"
            ],
            [
                49,
                "                        ContentType = \"application/json\","
            ],
            [
                50,
                "                        TestContent = @\"{"
            ],
            [
                51,
                "                                      'extensions' : {"
            ],
            [
                52,
                "                                      },"
            ],
            [
                53,
                "                                      'start' : 'http://foo/db/data/node/81',"
            ],
            [
                54,
                "                                      'property' : 'http://foo/db/data/relationship/38/properties/{key}',"
            ],
            [
                55,
                "                                      'self' : 'http://foo/db/data/relationship/38',"
            ],
            [
                56,
                "                                      'properties' : 'http://foo/db/data/relationship/38/properties',"
            ],
            [
                57,
                "                                      'type' : 'TEST_RELATIONSHIP',"
            ],
            [
                58,
                "                                      'end' : 'http://foo/db/data/node/80',"
            ],
            [
                59,
                "                                      'data' : {"
            ],
            [
                60,
                "                                      }"
            ],
            [
                61,
                "                                    }\".Replace('\\'', '\\\"')"
            ],
            [
                62,
                "                    }"
            ],
            [
                64,
                "            });"
            ],
            [
                65,
                ""
            ],
            [
                66,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                67,
                "            graphClient.Connect();"
            ],
            [
                69,
                "            var relationshipReference = graphClient.CreateRelationship(new NodeReference<TestNode>(81), testRelationship);"
            ],
            [
                71,
                "            Assert.IsInstanceOf<RelationshipReference>(relationshipReference);"
            ],
            [
                72,
                "            Assert.IsNotInstanceOf<RelationshipReference<object>>(relationshipReference);"
            ],
            [
                73,
                "            Assert.AreEqual(38, relationshipReference.Id);"
            ],
            [
                79,
                "            var testRelationship = new TestRelationship(81);"
            ],
            [
                80,
                ""
            ],
            [
                81,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                84,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                85,
                "                    MockResponse.NeoRoot()"
            ],
            [
                86,
                "                },"
            ],
            [
                87,
                "                {"
            ],
            [
                88,
                "                    new RestRequest {"
            ],
            [
                89,
                "                        Resource = \"/node/81/relationships\","
            ],
            [
                90,
                "                        Method = Method.POST,"
            ],
            [
                91,
                "                        RequestFormat = DataFormat.Json"
            ],
            [
                92,
                "                    }.AddBody(new RelationshipTemplate"
            ],
            [
                93,
                "                    {"
            ],
            [
                94,
                "                        To = \"http://foo/db/data/node/81\","
            ],
            [
                95,
                "                        Type = testRelationship.RelationshipTypeKey"
            ],
            [
                96,
                "                    }),"
            ],
            [
                97,
                "                    new NeoHttpResponse {"
            ],
            [
                98,
                "                        StatusCode = HttpStatusCode.Created,"
            ],
            [
                99,
                "                        ContentType = \"application/json\","
            ],
            [
                100,
                "                        TestContent = @\"{"
            ],
            [
                101,
                "                                      'extensions' : {"
            ],
            [
                102,
                "                                      },"
            ],
            [
                103,
                "                                      'start' : 'http://foo/db/data/node/81',"
            ],
            [
                104,
                "                                      'property' : 'http://foo/db/data/relationship/38/properties/{key}',"
            ],
            [
                105,
                "                                      'self' : 'http://foo/db/data/relationship/38',"
            ],
            [
                106,
                "                                      'properties' : 'http://foo/db/data/relationship/38/properties',"
            ],
            [
                107,
                "                                      'type' : 'TEST_RELATIONSHIP',"
            ],
            [
                108,
                "                                      'end' : 'http://foo/db/data/node/80',"
            ],
            [
                109,
                "                                      'data' : {"
            ],
            [
                110,
                "                                      }"
            ],
            [
                111,
                "                                    }\".Replace('\\'', '\\\"')"
            ],
            [
                112,
                "                    }"
            ],
            [
                114,
                "            });"
            ],
            [
                115,
                ""
            ],
            [
                116,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                117,
                "            graphClient.Connect();"
            ],
            [
                119,
                "            var relationshipReference = graphClient.CreateRelationship(new NodeReference<TestNode>(81), testRelationship);"
            ],
            [
                121,
                "            Assert.AreEqual(graphClient, ((IAttachedReference)relationshipReference).Client);"
            ],
            [
                144,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                146,
                "                {"
            ],
            [
                147,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                148,
                "                    new NeoHttpResponse"
            ],
            [
                149,
                "                    {"
            ],
            [
                150,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                151,
                "                        ContentType = \"application/json\","
            ],
            [
                152,
                "                        TestContent = rootResponse"
            ],
            [
                153,
                "                    }"
            ],
            [
                154,
                "                }"
            ],
            [
                155,
                "            });"
            ],
            [
                156,
                ""
            ],
            [
                157,
                "            var client = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                158,
                "            client.Connect();"
            ],
            [
                159,
                "            client.CreateRelationship(new NodeReference<TestNode>(5), new TestRelationship(10) { Direction = RelationshipDirection.Incoming });"
            ]
        ]
    },
    "num_lines_added": 58,
    "num_lines_removed": 109
}