{
    "hash": "5bcd7c1ab63a7768d801aed9cf9ef673e81dd1f1",
    "message": "Refactor more tests to new test harness",
    "file_num_lines": 187,
    "diff_parsed": {
        "added": [
            [
                15,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                18,
                "                    MockRequest.Get(\"\"),"
            ],
            [
                19,
                "                    MockResponse.InternalServerError()"
            ],
            [
                21,
                "            })"
            ],
            [
                22,
                "            {"
            ],
            [
                23,
                "                testHarness.CreateAndConnectGraphClient();"
            ],
            [
                24,
                "            }"
            ],
            [
                30,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                33,
                "                    MockRequest.Get(\"\"),"
            ],
            [
                34,
                "                    MockResponse.NeoRoot()"
            ],
            [
                36,
                "            })"
            ],
            [
                37,
                "            {"
            ],
            [
                38,
                "                var graphClient = (GraphClient)testHarness.CreateAndConnectGraphClient();"
            ],
            [
                39,
                ""
            ],
            [
                40,
                "                Assert.AreEqual(\"/node\", graphClient.RootApiResponse.Node);"
            ],
            [
                41,
                "                Assert.AreEqual(\"/index/node\", graphClient.RootApiResponse.NodeIndex);"
            ],
            [
                42,
                "                Assert.AreEqual(\"/index/relationship\", graphClient.RootApiResponse.RelationshipIndex);"
            ],
            [
                43,
                "                Assert.AreEqual(\"http://foo/db/data/node/0\", graphClient.RootApiResponse.ReferenceNode);"
            ],
            [
                44,
                "                Assert.AreEqual(\"/ext\", graphClient.RootApiResponse.ExtensionsInfo);"
            ],
            [
                45,
                "            }"
            ],
            [
                53,
                "// ReSharper disable ReturnValueOfPureMethodIsNotUsed"
            ],
            [
                55,
                "// ReSharper restore ReturnValueOfPureMethodIsNotUsed"
            ],
            [
                61,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                64,
                "                    MockRequest.Get(\"\"),"
            ],
            [
                65,
                "                    MockResponse.Json(HttpStatusCode.OK, @\"{"
            ],
            [
                66,
                "                        'batch' : 'http://foo/db/data/batch',"
            ],
            [
                67,
                "                        'node' : 'http://foo/db/data/node',"
            ],
            [
                68,
                "                        'node_index' : 'http://foo/db/data/index/node',"
            ],
            [
                69,
                "                        'relationship_index' : 'http://foo/db/data/index/relationship',"
            ],
            [
                70,
                "                        'reference_node' : 'http://foo/db/data/node/123',"
            ],
            [
                71,
                "                        'neo4j_version' : '1.5.M02',"
            ],
            [
                72,
                "                        'extensions_info' : 'http://foo/db/data/ext',"
            ],
            [
                73,
                "                        'extensions' : {"
            ],
            [
                74,
                "                        }"
            ],
            [
                75,
                "                    }\")"
            ],
            [
                77,
                "            })"
            ],
            [
                78,
                "            {"
            ],
            [
                79,
                "                var graphClient = testHarness.CreateAndConnectGraphClient();"
            ],
            [
                81,
                "                Assert.IsNotNull(graphClient.RootNode);"
            ],
            [
                82,
                "                Assert.AreEqual(123, graphClient.RootNode.Id);"
            ],
            [
                83,
                "            }"
            ],
            [
                89,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                92,
                "                    MockRequest.Get(\"\"),"
            ],
            [
                93,
                "                    MockResponse.Json(HttpStatusCode.OK, @\"{"
            ],
            [
                94,
                "                        'batch' : 'http://foo/db/data/batch',"
            ],
            [
                95,
                "                        'node' : 'http://foo/db/data/node',"
            ],
            [
                96,
                "                        'node_index' : 'http://foo/db/data/index/node',"
            ],
            [
                97,
                "                        'relationship_index' : 'http://foo/db/data/index/relationship',"
            ],
            [
                98,
                "                        'extensions_info' : 'http://foo/db/data/ext',"
            ],
            [
                99,
                "                        'extensions' : {"
            ],
            [
                100,
                "                        }"
            ],
            [
                101,
                "                    }\")"
            ],
            [
                103,
                "            })"
            ],
            [
                104,
                "            {"
            ],
            [
                105,
                "                var graphClient = testHarness.CreateAndConnectGraphClient();"
            ],
            [
                107,
                "                Assert.IsNull(graphClient.RootNode);"
            ],
            [
                108,
                "            }"
            ],
            [
                114,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                117,
                "                    MockRequest.Get(\"\"),"
            ],
            [
                118,
                "                    MockResponse.NeoRoot()"
            ],
            [
                120,
                "            })"
            ],
            [
                121,
                "            {"
            ],
            [
                122,
                "                var graphClient = (GraphClient)testHarness.CreateAndConnectGraphClient();"
            ],
            [
                124,
                "                Assert.AreEqual(\"1.5.0.2\", graphClient.RootApiResponse.Version.ToString());"
            ],
            [
                125,
                "            }"
            ],
            [
                130,
                "        public void DisableSupportForNeo4JOnHerokuWhenRequiredThrow401UnAuthorized()"
            ],
            [
                132,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                135,
                "                    MockRequest.Get(\"\"),"
            ],
            [
                142,
                "            })"
            ],
            [
                143,
                "            {"
            ],
            [
                144,
                "                var graphClient = testHarness.CreateGraphClient();"
            ],
            [
                145,
                "                graphClient.EnableSupportForNeo4jOnHeroku = false;"
            ],
            [
                146,
                "                graphClient.Connect();"
            ],
            [
                147,
                "            }"
            ],
            [
                151,
                "        public void DisableSupportForNeo4JOnHerokuShouldNotChangeResource()"
            ],
            [
                153,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                156,
                "                    MockRequest.Get(\"\"),"
            ],
            [
                157,
                "                    MockResponse.NeoRoot()"
            ],
            [
                159,
                "            })"
            ],
            [
                160,
                "            {"
            ],
            [
                161,
                "                var graphClient = testHarness.CreateGraphClient();"
            ],
            [
                162,
                "                graphClient.EnableSupportForNeo4jOnHeroku = false;"
            ],
            [
                163,
                "                graphClient.Connect();"
            ],
            [
                164,
                "            }"
            ],
            [
                168,
                "        public void EnableSupportForNeo4JOnHerokuShouldChangeResourceToTrailingSlash()"
            ],
            [
                170,
                "            using (var testHarness = new RestTestHarness"
            ],
            [
                173,
                "                    MockRequest.Get(\"/\"),"
            ],
            [
                174,
                "                    MockResponse.NeoRoot()"
            ],
            [
                176,
                "            })"
            ],
            [
                177,
                "            {"
            ],
            [
                178,
                "                var graphClient = testHarness.CreateGraphClient();"
            ],
            [
                179,
                "                graphClient.EnableSupportForNeo4jOnHeroku = true;"
            ],
            [
                180,
                "                graphClient.Connect();"
            ],
            [
                181,
                "            }"
            ]
        ],
        "deleted": [
            [
                2,
                "using System.Collections.Generic;"
            ],
            [
                16,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                19,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                20,
                "                    new NeoHttpResponse"
            ],
            [
                21,
                "                    {"
            ],
            [
                22,
                "                        StatusCode = HttpStatusCode.InternalServerError,"
            ],
            [
                23,
                "                        StatusDescription = \"Internal Server Error\""
            ],
            [
                24,
                "                    }"
            ],
            [
                26,
                "            });"
            ],
            [
                27,
                ""
            ],
            [
                28,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                29,
                "            graphClient.Connect();"
            ],
            [
                35,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                38,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                39,
                "                    new NeoHttpResponse"
            ],
            [
                40,
                "                    {"
            ],
            [
                41,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                42,
                "                        ContentType = \"application/json\","
            ],
            [
                43,
                "                        TestContent = @\"{"
            ],
            [
                44,
                "                          'batch' : 'http://foo/db/data/batch',"
            ],
            [
                45,
                "                          'node' : 'http://foo/db/data/node',"
            ],
            [
                46,
                "                          'node_index' : 'http://foo/db/data/index/node',"
            ],
            [
                47,
                "                          'relationship_index' : 'http://foo/db/data/index/relationship',"
            ],
            [
                48,
                "                          'reference_node' : 'http://foo/db/data/node/0',"
            ],
            [
                49,
                "                          'extensions_info' : 'http://foo/db/data/ext',"
            ],
            [
                50,
                "                          'extensions' : {"
            ],
            [
                51,
                "                          }"
            ],
            [
                52,
                "                        }\".Replace('\\'', '\"')"
            ],
            [
                53,
                "                    }"
            ],
            [
                55,
                "            });"
            ],
            [
                56,
                ""
            ],
            [
                57,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                58,
                "            graphClient.Connect();"
            ],
            [
                59,
                ""
            ],
            [
                60,
                "            Assert.AreEqual(\"/node\", graphClient.RootApiResponse.Node);"
            ],
            [
                61,
                "            Assert.AreEqual(\"/index/node\", graphClient.RootApiResponse.NodeIndex);"
            ],
            [
                62,
                "            Assert.AreEqual(\"/index/relationship\", graphClient.RootApiResponse.RelationshipIndex);"
            ],
            [
                63,
                "            Assert.AreEqual(\"http://foo/db/data/node/0\", graphClient.RootApiResponse.ReferenceNode);"
            ],
            [
                64,
                "            Assert.AreEqual(\"/ext\", graphClient.RootApiResponse.ExtensionsInfo);"
            ],
            [
                78,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                81,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                82,
                "                    new NeoHttpResponse"
            ],
            [
                83,
                "                    {"
            ],
            [
                84,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                85,
                "                        ContentType = \"application/json\","
            ],
            [
                86,
                "                        TestContent = @\"{"
            ],
            [
                87,
                "                          'batch' : 'http://foo/db/data/batch',"
            ],
            [
                88,
                "                          'node' : 'http://foo/db/data/node',"
            ],
            [
                89,
                "                          'node_index' : 'http://foo/db/data/index/node',"
            ],
            [
                90,
                "                          'relationship_index' : 'http://foo/db/data/index/relationship',"
            ],
            [
                91,
                "                          'reference_node' : 'http://foo/db/data/node/123',"
            ],
            [
                92,
                "                          'extensions_info' : 'http://foo/db/data/ext',"
            ],
            [
                93,
                "                          'extensions' : {"
            ],
            [
                94,
                "                          }"
            ],
            [
                95,
                "                        }\".Replace('\\'', '\"')"
            ],
            [
                96,
                "                    }"
            ],
            [
                98,
                "            });"
            ],
            [
                99,
                ""
            ],
            [
                100,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                101,
                "            graphClient.Connect();"
            ],
            [
                103,
                "            Assert.IsNotNull(graphClient.RootNode);"
            ],
            [
                104,
                "            Assert.AreEqual(123, graphClient.RootNode.Id);"
            ],
            [
                110,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                113,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                114,
                "                    new NeoHttpResponse"
            ],
            [
                115,
                "                    {"
            ],
            [
                116,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                117,
                "                        ContentType = \"application/json\","
            ],
            [
                118,
                "                        TestContent = @\"{"
            ],
            [
                119,
                "                          'batch' : 'http://foo/db/data/batch',"
            ],
            [
                120,
                "                          'node' : 'http://foo/db/data/node',"
            ],
            [
                121,
                "                          'node_index' : 'http://foo/db/data/index/node',"
            ],
            [
                122,
                "                          'relationship_index' : 'http://foo/db/data/index/relationship',"
            ],
            [
                123,
                "                          'extensions_info' : 'http://foo/db/data/ext',"
            ],
            [
                124,
                "                          'extensions' : {"
            ],
            [
                125,
                "                          }"
            ],
            [
                126,
                "                        }\".Replace('\\'', '\"')"
            ],
            [
                127,
                "                    }"
            ],
            [
                129,
                "            });"
            ],
            [
                130,
                ""
            ],
            [
                131,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                132,
                "            graphClient.Connect();"
            ],
            [
                134,
                "            Assert.IsNull(graphClient.RootNode);"
            ],
            [
                140,
                "            var httpFactory = MockHttpFactory.Generate(\"http://foo/db/data\", new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                143,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                144,
                "                    new NeoHttpResponse"
            ],
            [
                145,
                "                    {"
            ],
            [
                146,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                147,
                "                        ContentType = \"application/json\","
            ],
            [
                148,
                "                        TestContent = @\"{"
            ],
            [
                149,
                "                          'batch' : 'http://foo/db/data/batch',"
            ],
            [
                150,
                "                          'node' : 'http://foo/db/data/node',"
            ],
            [
                151,
                "                          'node_index' : 'http://foo/db/data/index/node',"
            ],
            [
                152,
                "                          'relationship_index' : 'http://foo/db/data/index/relationship',"
            ],
            [
                153,
                "                          'reference_node' : 'http://foo/db/data/node/0',"
            ],
            [
                154,
                "                          'neo4j_version' : '1.5.M02',"
            ],
            [
                155,
                "                          'extensions_info' : 'http://foo/db/data/ext',"
            ],
            [
                156,
                "                          'extensions' : {"
            ],
            [
                157,
                "                          }"
            ],
            [
                158,
                "                        }\".Replace('\\'', '\"')"
            ],
            [
                159,
                "                    }"
            ],
            [
                161,
                "            });"
            ],
            [
                162,
                ""
            ],
            [
                163,
                "            var graphClient = new GraphClient(new Uri(\"http://foo/db/data\"), httpFactory);"
            ],
            [
                164,
                "            graphClient.Connect();"
            ],
            [
                166,
                "            Assert.AreEqual(\"1.5.0.2\", graphClient.RootApiResponse.Version.ToString());"
            ],
            [
                171,
                "        public void DisableSupportForNeo4jOnHerokuWhenRequiredThrow401UnAuthroized()"
            ],
            [
                173,
                "            const string httpFooDbData = \"http://foo/db/data\";"
            ],
            [
                174,
                ""
            ],
            [
                175,
                "            var httpFactory = MockHttpFactory.Generate(httpFooDbData, new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                178,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                185,
                "            });"
            ],
            [
                186,
                ""
            ],
            [
                187,
                "            var graphClient = new GraphClient(new Uri(httpFooDbData), httpFactory) { EnableSupportForNeo4jOnHeroku = false };"
            ],
            [
                188,
                ""
            ],
            [
                189,
                "            graphClient.Connect();"
            ],
            [
                193,
                "        public void DisableSupportForNeo4jOnHerokuShouldNotChangeResource()"
            ],
            [
                195,
                "            const string httpFooDbData = \"http://foo/db/data\";"
            ],
            [
                196,
                ""
            ],
            [
                197,
                "            var httpFactory = MockHttpFactory.Generate(httpFooDbData, new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                200,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                201,
                "                    new NeoHttpResponse"
            ],
            [
                202,
                "                    {"
            ],
            [
                203,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                204,
                "                        ContentType = \"application/json\","
            ],
            [
                205,
                "                        TestContent = @\"{"
            ],
            [
                206,
                "                          'batch' : 'http://foo/db/data/batch',"
            ],
            [
                207,
                "                          'node' : 'http://foo/db/data/node',"
            ],
            [
                208,
                "                          'node_index' : 'http://foo/db/data/index/node',"
            ],
            [
                209,
                "                          'relationship_index' : 'http://foo/db/data/index/relationship',"
            ],
            [
                210,
                "                          'reference_node' : 'http://foo/db/data/node/0',"
            ],
            [
                211,
                "                          'neo4j_version' : '1.5.M02',"
            ],
            [
                212,
                "                          'extensions_info' : 'http://foo/db/data/ext',"
            ],
            [
                213,
                "                          'extensions' : {"
            ],
            [
                214,
                "                          }"
            ],
            [
                215,
                "                        }\".Replace('\\'', '\"')"
            ],
            [
                216,
                "                    }"
            ],
            [
                218,
                "            });"
            ],
            [
                219,
                ""
            ],
            [
                220,
                "            var graphClient = new GraphClient(new Uri(httpFooDbData), httpFactory) { EnableSupportForNeo4jOnHeroku = false };"
            ],
            [
                221,
                ""
            ],
            [
                222,
                "            graphClient.Connect();"
            ],
            [
                223,
                ""
            ],
            [
                224,
                "            Assert.Pass(\"The constructed URL matched {0} and did not have a trailing slash\", httpFooDbData);"
            ],
            [
                228,
                "        public void EnableSupportForNeo4jOnHerokuShouldChangeResource()"
            ],
            [
                230,
                "            const string httpFooDbData = \"http://foo/db/data/\";"
            ],
            [
                231,
                ""
            ],
            [
                232,
                "            var httpFactory = MockHttpFactory.Generate(httpFooDbData, new Dictionary<IRestRequest, IHttpResponse>"
            ],
            [
                235,
                "                    new RestRequest { Resource = \"\", Method = Method.GET },"
            ],
            [
                236,
                "                    new NeoHttpResponse"
            ],
            [
                237,
                "                    {"
            ],
            [
                238,
                "                        StatusCode = HttpStatusCode.OK,"
            ],
            [
                239,
                "                        ContentType = \"application/json\","
            ],
            [
                240,
                "                        TestContent = @\"{"
            ],
            [
                241,
                "                          'batch' : 'http://foo/db/data/batch',"
            ],
            [
                242,
                "                          'node' : 'http://foo/db/data/node',"
            ],
            [
                243,
                "                          'node_index' : 'http://foo/db/data/index/node',"
            ],
            [
                244,
                "                          'relationship_index' : 'http://foo/db/data/index/relationship',"
            ],
            [
                245,
                "                          'reference_node' : 'http://foo/db/data/node/0',"
            ],
            [
                246,
                "                          'neo4j_version' : '1.5.M02',"
            ],
            [
                247,
                "                          'extensions_info' : 'http://foo/db/data/ext',"
            ],
            [
                248,
                "                          'extensions' : {"
            ],
            [
                249,
                "                          }"
            ],
            [
                250,
                "                        }\".Replace('\\'', '\"')"
            ],
            [
                251,
                "                    }"
            ],
            [
                253,
                "            });"
            ],
            [
                254,
                ""
            ],
            [
                255,
                "            var graphClient = new GraphClient(new Uri(httpFooDbData), httpFactory) { EnableSupportForNeo4jOnHeroku = true };"
            ],
            [
                256,
                ""
            ],
            [
                257,
                "            graphClient.Connect();"
            ],
            [
                258,
                ""
            ],
            [
                259,
                "            Assert.Pass(\"The constructed URL matched {0} and did have a trailing slash\", httpFooDbData);"
            ]
        ]
    },
    "num_lines_added": 94,
    "num_lines_removed": 172
}