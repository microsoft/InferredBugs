{
    "hash": "8a5d180a4b2bd082b7cae0a037df608bcb3b4891",
    "message": "Almost have Azure Search working with new libraries. #226",
    "file_num_lines": 121,
    "diff_parsed": {
        "added": [
            [
                4,
                "using Azure;"
            ],
            [
                5,
                "using Azure.Search.Documents;"
            ],
            [
                6,
                "using Azure.Search.Documents.Indexes;"
            ],
            [
                7,
                "using Azure.Search.Documents.Indexes.Models;"
            ],
            [
                8,
                "using Azure.Search.Documents.Models;"
            ],
            [
                23,
                "\t\tpublic SearchIndexSubsystem(ITextParsingService textParsingService, IPostService postService, IConfig config, ITopicService topicService, IErrorLog errorLog)"
            ],
            [
                68,
                "\t\t\t\tvar batch = IndexDocumentsBatch.Create(IndexDocumentsAction.Upload(searchTopic));"
            ],
            [
                69,
                ""
            ],
            [
                72,
                "\t\t\t\t\tCreateIndex();"
            ],
            [
                73,
                "\t\t\t\t\tvar searchClient = new SearchClient(new Uri(_config.SearchUrl), IndexName, new AzureKeyCredential(_config.SearchKey));"
            ],
            [
                74,
                "\t\t\t\t\tsearchClient.IndexDocuments(batch);"
            ],
            [
                88,
                "\t\t\t\tvar searchClient = new SearchClient(new Uri(_config.SearchUrl), IndexName, new AzureKeyCredential(_config.SearchKey));"
            ],
            [
                89,
                "\t\t\t\tsearchClient.DeleteDocuments(\"key\", new[] {key});"
            ],
            [
                97,
                "\t\tprivate void CreateIndex()"
            ],
            [
                98,
                "\t\t{"
            ],
            [
                99,
                "\t\t\tvar searchIndexClient = new SearchIndexClient(new Uri(_config.SearchUrl), new AzureKeyCredential(_config.SearchKey));"
            ],
            [
                100,
                "\t\t\tvar indexResult = searchIndexClient.GetIndexNames();"
            ],
            [
                101,
                "\t\t\tif (indexResult.Contains(IndexName))"
            ],
            [
                102,
                "\t\t\t\treturn;"
            ],
            [
                103,
                ""
            ],
            [
                104,
                "\t\t\tvar indexDefinition = new SearchIndex(IndexName)"
            ],
            [
                106,
                "\t\t\t    Fields ="
            ],
            [
                108,
                "\t\t\t\t\tnew SimpleField(\"key\", SearchFieldDataType.String) {IsKey = true},"
            ],
            [
                109,
                "\t\t\t\t\tnew SimpleField(\"topicID\", SearchFieldDataType.String),"
            ],
            [
                110,
                "\t\t\t\t    new SimpleField(\"forumID\", SearchFieldDataType.Int32) {IsFilterable = true},"
            ],
            [
                111,
                "\t\t\t\t    new SearchableField(\"title\") {IsSortable = true},"
            ],
            [
                112,
                "\t\t\t\t\tnew SimpleField(\"lastPostTime\", SearchFieldDataType.DateTimeOffset) {IsSortable = true},"
            ],
            [
                113,
                "\t\t\t\t\tnew SearchableField(\"startedByName\") {IsSortable = true},"
            ],
            [
                114,
                "\t\t\t\t\tnew SimpleField(\"replies\", SearchFieldDataType.Int32) {IsSortable = true},"
            ],
            [
                115,
                "\t\t\t\t\tnew SimpleField(\"views\", SearchFieldDataType.Int32) {IsSortable = true},"
            ],
            [
                116,
                "\t\t\t\t\tnew SimpleField(\"isClosed\", SearchFieldDataType.Boolean) {IsSortable = false},"
            ],
            [
                117,
                "\t\t\t\t\tnew SimpleField(\"isPinned\", SearchFieldDataType.Boolean) {IsSortable = false},"
            ],
            [
                118,
                "\t\t\t\t\tnew SimpleField(\"urlName\", SearchFieldDataType.String) {IsSortable = false},"
            ],
            [
                119,
                "\t\t\t\t\tnew SimpleField(\"lastPostName\", SearchFieldDataType.String) {IsSortable = false},"
            ],
            [
                120,
                "\t\t\t\t\tnew SearchableField(\"posts\") {IsSortable = false},"
            ],
            [
                121,
                "\t\t\t\t\tnew SearchableField(\"tenantID\")"
            ],
            [
                122,
                "\t\t\t    }"
            ],
            [
                124,
                "\t\t    var weights = new TextWeights(new Dictionary<string, double> {{\"title\", 10}, {\"startedByName\", 5}, {\"posts\", 1}});"
            ],
            [
                125,
                "\t\t    indexDefinition.ScoringProfiles.Add("
            ],
            [
                126,
                "\t\t\t    new ScoringProfile(\"TopicWeight\") {TextWeights = weights});"
            ],
            [
                127,
                "\t\t\tsearchIndexClient.CreateIndex(indexDefinition);"
            ],
            [
                128,
                "\t\t}"
            ]
        ],
        "deleted": [
            [
                4,
                "using Microsoft.Azure.Search;"
            ],
            [
                5,
                "using Microsoft.Azure.Search.Models;"
            ],
            [
                8,
                "using Index = Microsoft.Azure.Search.Models.Index;"
            ],
            [
                15,
                "\t\tprivate readonly ISearchService _searchService;"
            ],
            [
                22,
                "\t\tpublic SearchIndexSubsystem(ITextParsingService textParsingService, ISearchService searchService, IPostService postService, IConfig config, ITopicService topicService, IErrorLog errorLog)"
            ],
            [
                25,
                "\t\t\t_searchService = searchService;"
            ],
            [
                43,
                "\t\t\t\tvar serviceClient = new SearchServiceClient(_config.SearchUrl, new SearchCredentials(_config.SearchKey));"
            ],
            [
                44,
                "\t\t\t\tif (!serviceClient.Indexes.Exists(IndexName))"
            ],
            [
                45,
                "\t\t\t\t\tCreateIndex(serviceClient);"
            ],
            [
                46,
                ""
            ],
            [
                72,
                "\t\t\t\tvar actions ="
            ],
            [
                73,
                "\t\t\t\tnew[]"
            ],
            [
                74,
                "\t\t\t\t{"
            ],
            [
                75,
                "\t\t\t\t\tIndexAction.Upload(searchTopic)"
            ],
            [
                76,
                "\t\t\t\t};"
            ],
            [
                79,
                "\t\t\t\t\tvar serviceIndexClient = serviceClient.Indexes.GetClient(IndexName);"
            ],
            [
                80,
                "\t\t\t\t\tvar batch = IndexBatch.New(actions);"
            ],
            [
                81,
                "\t\t\t\t\tserviceIndexClient.Documents.Index(batch);"
            ],
            [
                86,
                "\t\t\t\t\t_topicService.QueueTopicForIndexing(topic.TopicID);"
            ],
            [
                96,
                "\t\t\t\tvar actions = new[]"
            ],
            [
                97,
                "\t\t\t\t{"
            ],
            [
                98,
                "\t\t\t\t\t\tIndexAction.Delete(\"key\", key)"
            ],
            [
                99,
                "\t\t\t\t};"
            ],
            [
                100,
                "\t\t\t\tvar serviceClient = new SearchServiceClient(_config.SearchUrl, new SearchCredentials(_config.SearchKey));"
            ],
            [
                101,
                "\t\t\t\tvar serviceIndexClient = serviceClient.Indexes.GetClient(IndexName);"
            ],
            [
                102,
                "\t\t\t\tvar batch = IndexBatch.New(actions);"
            ],
            [
                103,
                "\t\t\t\tserviceIndexClient.Documents.Index(batch);"
            ],
            [
                111,
                "\t\tprivate static void CreateIndex(SearchServiceClient serviceClient)"
            ],
            [
                112,
                "\t    {"
            ],
            [
                113,
                "\t\t    var indexDefinition = new Index"
            ],
            [
                115,
                "\t\t\t    Name = IndexName,"
            ],
            [
                116,
                "\t\t\t    Fields = new[]"
            ],
            [
                117,
                "\t\t\t\t{"
            ],
            [
                118,
                "\t\t\t\t\tnew Field(\"key\", DataType.String) {IsKey = true, IsSearchable = false},"
            ],
            [
                119,
                "\t\t\t\t\tnew Field(\"topicID\", DataType.String) {IsSearchable = false},"
            ],
            [
                120,
                "\t\t\t\t    new Field(\"forumID\", DataType.Int32) {IsFilterable = true, IsSearchable = false},"
            ],
            [
                121,
                "\t\t\t\t    new Field(\"title\", DataType.String) {IsSearchable = true, IsSortable = true},"
            ],
            [
                122,
                "\t\t\t\t\tnew Field(\"lastPostTime\", DataType.DateTimeOffset) {IsSortable = true, IsSearchable = false},"
            ],
            [
                123,
                "\t\t\t\t\tnew Field(\"startedByName\", DataType.String) {IsSortable = true, IsSearchable = true},"
            ],
            [
                124,
                "\t\t\t\t\tnew Field(\"replies\", DataType.Int32) {IsSortable = true, IsSearchable = false},"
            ],
            [
                125,
                "\t\t\t\t\tnew Field(\"views\", DataType.Int32) {IsSortable = true, IsSearchable = false},"
            ],
            [
                126,
                "\t\t\t\t\tnew Field(\"isClosed\", DataType.Boolean) {IsSortable = false, IsSearchable = false},"
            ],
            [
                127,
                "\t\t\t\t\tnew Field(\"isPinned\", DataType.Boolean) {IsSortable = false, IsSearchable = false},"
            ],
            [
                128,
                "\t\t\t\t\tnew Field(\"urlName\", DataType.String) {IsSortable = false, IsSearchable = false},"
            ],
            [
                129,
                "\t\t\t\t\tnew Field(\"lastPostName\", DataType.String) {IsSortable = false, IsSearchable = false},"
            ],
            [
                130,
                "\t\t\t\t\tnew Field(\"posts\", DataType.Collection(DataType.String)) {IsSortable = false, IsSearchable = true},"
            ],
            [
                131,
                "\t\t\t\t\tnew Field(\"tenantID\", DataType.String) {IsSearchable = true}"
            ],
            [
                132,
                "\t\t\t    },"
            ],
            [
                133,
                "\t\t\t\tScoringProfiles = new []"
            ],
            [
                135,
                "\t\t\t\t\tnew ScoringProfile(\"TopicWeight\", new TextWeights(new Dictionary<string, double>"
            ],
            [
                136,
                "\t\t\t\t\t{"
            ],
            [
                137,
                "\t\t\t\t\t\t{\"title\", 10},"
            ],
            [
                138,
                "\t\t\t\t\t\t{\"startedByName\", 5},"
            ],
            [
                139,
                "\t\t\t\t\t\t{\"posts\", 1}"
            ],
            [
                140,
                "\t\t\t\t\t}))"
            ],
            [
                141,
                "\t\t\t\t}"
            ],
            [
                143,
                "\t\t    serviceClient.Indexes.Create(indexDefinition);"
            ],
            [
                144,
                "\t    }"
            ]
        ]
    },
    "num_lines_added": 42,
    "num_lines_removed": 58
}