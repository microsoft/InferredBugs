{
    "hash": "1a5f662a0ad568dfdbfa9c8d7f6e1707c64d27aa",
    "message": "-",
    "file_num_lines": 54,
    "diff_parsed": {
        "added": [
            [
                15,
                "        {"
            ],
            [
                16,
                "            DateTime b = DateTime.Now;"
            ],
            [
                17,
                "            int count = 10000;"
            ],
            [
                18,
                "            for (int i = 0; i < count; i++)"
            ],
            [
                19,
                "            {"
            ],
            [
                20,
                "                single();"
            ],
            [
                21,
                "                Multiple();"
            ],
            [
                22,
                "                singleDynamic();"
            ],
            [
                23,
                "                MultipleDynamic();"
            ],
            [
                24,
                "            }"
            ],
            [
                25,
                "            DateTime e = DateTime.Now;"
            ],
            [
                26,
                "            Console.WriteLine(\"Count: \"+ count + \"\\r\\nTime:  \"+(e-b).TotalSeconds+ \" Seconds \");"
            ],
            [
                27,
                "        }"
            ],
            [
                28,
                ""
            ],
            [
                29,
                "        private static void Multiple()"
            ],
            [
                33,
                "        private static void MultipleDynamic()"
            ],
            [
                34,
                "        {"
            ],
            [
                36,
                "        }"
            ],
            [
                40,
                "            Expression<Func<Student, object>> exp = it => new Student() { Name = \"a\", Id = it.Id, SchoolId = p };"
            ],
            [
                51,
                "            Expression<Func<Student, object>> exp = it => new { x = it.Id, shoolid = 1, name = a };"
            ]
        ],
        "deleted": [
            [
                17,
                "            single();"
            ],
            [
                18,
                "            singleDynamic();"
            ],
            [
                24,
                "            Expression<Func<Student, object>> exp = it => new Student() { Name = \"a\",  Id=it.Id, SchoolId=p };"
            ],
            [
                35,
                "            Expression<Func<Student, object>> exp = it =>new { x = it.Id, shoolid=1,name=a };"
            ]
        ]
    },
    "num_lines_added": 20,
    "num_lines_removed": 4
}