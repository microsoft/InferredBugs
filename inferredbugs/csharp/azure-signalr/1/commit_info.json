{
    "hash": "b4095a9b75c791f076cb753cf5fd9e8c790ea8c5",
    "message": "Refactor `RestClient` for unit test (#1310)",
    "file_num_lines": 141,
    "diff_parsed": {
        "added": [
            [
                20,
                "        private readonly JsonSerializerSettings _jsonSerializerSettings;"
            ],
            [
                21,
                "        private readonly IHttpClientFactory _httpClientFactory;"
            ],
            [
                22,
                ""
            ],
            [
                23,
                "        public RestClient(IHttpClientFactory httpClientFactory, JsonSerializerSettings jsonSerializerSettings)"
            ],
            [
                24,
                "        {"
            ],
            [
                25,
                "            _httpClientFactory = httpClientFactory;"
            ],
            [
                26,
                "            _jsonSerializerSettings = jsonSerializerSettings;"
            ],
            [
                27,
                "        }"
            ],
            [
                28,
                ""
            ],
            [
                29,
                "        public RestClient()"
            ],
            [
                30,
                "        {"
            ],
            [
                31,
                "            _httpClientFactory = HttpClientFactory.Instance;"
            ],
            [
                32,
                "            _jsonSerializerSettings = new JsonSerializerSettings();"
            ],
            [
                33,
                "        }"
            ],
            [
                61,
                "            using var httpClient = _httpClientFactory.CreateClient();"
            ],
            [
                62,
                "            using var request = BuildRequest(api, httpMethod, productInfo, methodName, args);"
            ],
            [
                63,
                "            HttpResponseMessage response = null;"
            ],
            [
                68,
                "                if (handleExpectedResponseAsync == null)"
            ],
            [
                69,
                "                {"
            ],
            [
                70,
                "                    await ThrowExceptionOnResponseFailureAsync(response);"
            ],
            [
                71,
                "                }"
            ],
            [
                72,
                "                else"
            ],
            [
                73,
                "                {"
            ],
            [
                74,
                "                    if (!await handleExpectedResponseAsync(response))"
            ],
            [
                75,
                "                    {"
            ],
            [
                76,
                "                        await ThrowExceptionOnResponseFailureAsync(response);"
            ],
            [
                77,
                "                    }"
            ],
            [
                78,
                "                }"
            ],
            [
                84,
                "            finally"
            ],
            [
                86,
                "                response?.Dispose();"
            ],
            [
                153,
                "            request.Content = new StringContent(JsonConvert.SerializeObject(payload, _jsonSerializerSettings), Encoding.UTF8, \"application/json\");"
            ],
            [
                157,
                "}"
            ]
        ],
        "deleted": [
            [
                20,
                "        public JsonSerializerSettings JsonSerializerSettings { get; set; } = new JsonSerializerSettings();"
            ],
            [
                48,
                "            var httpClient = HttpClientFactory.CreateClient();"
            ],
            [
                49,
                "            var request = BuildRequest(api, httpMethod, productInfo, methodName, args);"
            ],
            [
                50,
                "            HttpResponseMessage response;"
            ],
            [
                60,
                ""
            ],
            [
                61,
                "            if (handleExpectedResponseAsync == null)"
            ],
            [
                63,
                "                await ThrowExceptionOnResponseFailureAsync(response);"
            ],
            [
                65,
                "            else"
            ],
            [
                66,
                "            {"
            ],
            [
                67,
                "                if (!await handleExpectedResponseAsync(response))"
            ],
            [
                68,
                "                {"
            ],
            [
                69,
                "                    await ThrowExceptionOnResponseFailureAsync(response);"
            ],
            [
                70,
                "                }"
            ],
            [
                71,
                "            }"
            ],
            [
                72,
                ""
            ],
            [
                73,
                "            response.Dispose();"
            ],
            [
                139,
                "            request.Content = new StringContent(JsonConvert.SerializeObject(payload, JsonSerializerSettings), Encoding.UTF8, \"application/json\");"
            ],
            [
                143,
                "}"
            ]
        ]
    },
    "num_lines_added": 32,
    "num_lines_removed": 18
}