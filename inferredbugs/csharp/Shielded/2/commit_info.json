{
    "hash": "50ed15b8553f6da834213700fcdf57147078fc0d",
    "message": "Performance improvement.\n\n* Shield.Enlist static method now returns false if the IShielded has\nalready enlisted in this transaction. This enables implementors to\navoid unnecessary checking of the write locks.\n* LocalStorage now has private members enabling one thread to\nhold local value directly in them, avoiding the thread-static dictionary.\n\nIn the tests, performance is up by ~10-20%.",
    "file_num_lines": 646,
    "diff_parsed": {
        "added": [
            [
                438,
                "            int numThreads = 4;"
            ],
            [
                572,
                "                            //Interlocked.Increment(ref transactionCount);"
            ],
            [
                621,
                "                            //Interlocked.Increment(ref transactionCount);"
            ],
            [
                769,
                "            TreePoolTest();"
            ],
            [
                777,
                "            //new Queue().Run();"
            ]
        ],
        "deleted": [
            [
                438,
                "            int numThreads = 3;"
            ],
            [
                572,
                "                            Interlocked.Increment(ref transactionCount);"
            ],
            [
                621,
                "                            Interlocked.Increment(ref transactionCount);"
            ],
            [
                769,
                "            //TreePoolTest();"
            ],
            [
                777,
                "            new Queue().Run();"
            ]
        ]
    },
    "num_lines_added": 5,
    "num_lines_removed": 5
}