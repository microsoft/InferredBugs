        private static bool IsCrossJoin(IList<DbExpression> collection, DbExpression dbExpression, int start = 0)
        {
            Expression node = dbExpression.Expressions[0];
            if (node.NodeType == ExpressionType.Lambda)
            {
                var lambda = node as LambdaExpression;
                node = lambda.Body;
            }
            if (node.NodeType == ExpressionType.Call)
            {
                // 如果是 DefaultIfEmpty，则不是 CROSS JOIN
                var methodCall = node as MethodCallExpression;
                if (methodCall.Method.Name == "DefaultIfEmpty")
                {
                    // 右关联
                    if (methodCall.Arguments != null && methodCall.Arguments.Count == 2 && (bool)(((ConstantExpression)methodCall.Arguments[1]).Value))
                    {
                        string name = ((MemberExpression)methodCall.Arguments[0]).Member.Name;
                        for (int i = start; i < collection.Count; i++)
                        {
                            var item = collection[i];
                            if (item.DbExpressionType == DbExpressionType.GroupJoin)
                            {
                                LambdaExpression lambda = item.Expressions[3] as LambdaExpression;
                                NewExpression newExpression = lambda.Body as NewExpression;
                                string pName = (newExpression.Arguments[1] as ParameterExpression).Name;
                                if (name == pName)
                                {
                                    item.DbExpressionType = DbExpressionType.GroupRightJoin;
                                    break;
                                }
                            }

                        }
                    }

                    return false;
                }
            }

            // 根据系统生成的变量名判断 
            return !dbExpression.Expressions[0].IsAnonymous();
        }