{
    "hash": "9574c03dfeffa0e5960f000c5bcdbd584d678abf",
    "message": "\u4ece\u8868\u53ef\u9009\u62e9\u5b57\u6bb5\uff0c",
    "file_num_lines": 454,
    "diff_parsed": {
        "added": [
            [
                175,
                "        {"
            ],
            [
                176,
                "            // \u5982\u679c\u6709\u4e00\u5bf9\u591a\u7684\u5bfc\u822a\u5c5e\u6027\u4f1a\u4ea7\u751f\u5d4c\u5957\u7684SQL\uff0c\u8fd9\u65f6\u9700\u8981\u5f3a\u5236\u4e3b\u8868\u9009\u62e9\u7684\u5217\u91cc\u9762\u5fc5\u987b\u5305\u542b\u5bfc\u822a\u5916\u952e"
            ],
            [
                202,
                "                    this.AddPickColumn(binding.Member.Name);"
            ],
            [
                226,
                "                        // fix issue# spliton \u5217\u5360\u4e00\u4e2a\u4f4d"
            ],
            [
                289,
                ""
            ],
            [
                291,
                "            if (pickExpression == null) this.VisitAllMember(type, alias);"
            ],
            [
                294,
                "                // Include \u4e2d\u9009\u4e2d\u7684\u5b57\u6bb5"
            ],
            [
                297,
                "                if (expr.NodeType == ExpressionType.New)"
            ],
            [
                298,
                "                {"
            ],
            [
                299,
                "                    var newExpression = expr as NewExpression;"
            ],
            [
                300,
                "                    for (int i = 0; i < newExpression.Arguments.Count; i++)"
            ],
            [
                301,
                "                    {"
            ],
            [
                302,
                "                        var memberExpression = newExpression.Arguments[i] as MemberExpression;"
            ],
            [
                303,
                "                        if (memberExpression == null) throw new XFrameworkException(\"MemberExpression required at the {0} arguments.\", i);"
            ],
            [
                304,
                ""
            ],
            [
                305,
                "                        _builder.AppendMember(alias, memberExpression.Member.Name);"
            ],
            [
                306,
                "                        this.AddPickColumn(newExpression.Members != null ? newExpression.Members[i].Name : memberExpression.Member.Name);"
            ],
            [
                307,
                "                    }"
            ],
            [
                308,
                "                }"
            ],
            [
                309,
                "                else if (expr.NodeType == ExpressionType.MemberInit)"
            ],
            [
                310,
                "                {"
            ],
            [
                311,
                "                    var initExpression = expr as MemberInitExpression;"
            ],
            [
                312,
                "                    for (int i = 0; i < initExpression.Bindings.Count; i++)"
            ],
            [
                313,
                "                    {"
            ],
            [
                314,
                "                        var binding = initExpression.Bindings[i] as MemberAssignment;"
            ],
            [
                315,
                "                        if (binding == null) throw new XFrameworkException(\"Only 'MemberAssignment' binding supported.\");"
            ],
            [
                316,
                ""
            ],
            [
                317,
                "                        var memberExpression = binding.Expression as MemberExpression;"
            ],
            [
                318,
                "                        if (memberExpression == null) throw new XFrameworkException(\"MemberExpression required at the {0} arguments.\", i);"
            ],
            [
                319,
                ""
            ],
            [
                320,
                "                        _builder.AppendMember(alias, memberExpression.Member.Name);"
            ],
            [
                321,
                "                        this.AddPickColumn(binding.Member.Name);"
            ],
            [
                322,
                "                    }"
            ],
            [
                323,
                "                }"
            ],
            [
                324,
                "                else"
            ],
            [
                325,
                "                {"
            ],
            [
                326,
                "                    throw new NotSupportedException(string.Format(\"Include method not supporte {0}\", expr.NodeType));"
            ],
            [
                327,
                "                }"
            ],
            [
                329,
                ""
            ],
            [
                369,
                "                    this.AddPickColumn(node.Members != null ? node.Members[i].Name : (expression as MemberExpression).Member.Name);"
            ],
            [
                379,
                "                        this.AddPickColumn(node.Members != null ? node.Members[i].Name : (expression as MemberExpression).Member.Name);"
            ],
            [
                385,
                "                    this.AddPickColumn(node.Members != null ? node.Members[i].Name : (expression as MemberExpression).Member.Name);"
            ],
            [
                539,
                "                        nav.FieldCount = i == 0 ? (GetFieldCount(pickExpression == null ? navExpression : pickExpression) + 1) : -1;"
            ],
            [
                569,
                "        // \u7f13\u5b58\u9009\u4e2d\u5b57\u6bb5"
            ],
            [
                570,
                "        private void AddPickColumn(string memberName)"
            ],
            [
                571,
                "        {"
            ],
            [
                572,
                "            string newName = _pickColumns.Add(memberName);"
            ],
            [
                573,
                "            _builder.AppendAs(newName);"
            ],
            [
                574,
                "            _builder.Append(',');"
            ],
            [
                575,
                "            _builder.AppendNewLine();"
            ],
            [
                576,
                "        }"
            ],
            [
                577,
                ""
            ],
            [
                582,
                "            if (node.NodeType == ExpressionType.Lambda) node = (node as LambdaExpression).Body;"
            ],
            [
                588,
                "                    foreach (var exp in initExpression.NewExpression.Arguments)"
            ],
            [
                589,
                "                    {"
            ],
            [
                590,
                "                        if (TypeUtils.IsPrimitiveType(exp.Type))"
            ],
            [
                591,
                "                            num += 1;"
            ],
            [
                592,
                "                        else"
            ],
            [
                593,
                "                            num += _countComplex(exp);"
            ],
            [
                594,
                "                    }"
            ],
            [
                610,
                "                    //foreach (var exp in newExpression.Arguments) num += _countComplex(exp);"
            ]
        ],
        "deleted": [
            [
                175,
                "        {// \u5982\u679c\u6709\u4e00\u5bf9\u591a\u7684\u5bfc\u822a\u5c5e\u6027\u4f1a\u4ea7\u751f\u5d4c\u5957\u7684SQL\uff0c\u8fd9\u65f6\u9700\u8981\u5f3a\u5236\u4e3b\u8868\u9009\u62e9\u7684\u5217\u91cc\u9762\u5fc5\u987b\u5305\u542b\u5bfc\u822a\u5916\u952e"
            ],
            [
                201,
                "                    string newName = _pickColumns.Add(binding.Member.Name);"
            ],
            [
                202,
                "                    // \u6dfb\u52a0\u5b57\u6bb5\u522b\u540d"
            ],
            [
                203,
                "                    _builder.AppendAs(newName);"
            ],
            [
                204,
                "                    _builder.Append(',');"
            ],
            [
                205,
                "                    _builder.AppendNewLine();"
            ],
            [
                229,
                "                        // fix issue# XC \u5217\u5360\u4e00\u4e2a\u4f4d"
            ],
            [
                293,
                "            if (pickExpression != null) this.VisitAllMember(type, alias);"
            ],
            [
                299,
                ""
            ],
            [
                339,
                "                    this.VisitNewImpl_AddNewName(node.Members != null ? node.Members[i].Name : (expression as MemberExpression).Member.Name);"
            ],
            [
                349,
                "                        this.VisitNewImpl_AddNewName(node.Members != null ? node.Members[i].Name : (expression as MemberExpression).Member.Name);"
            ],
            [
                355,
                "                    this.VisitNewImpl_AddNewName(node.Members != null ? node.Members[i].Name : (expression as MemberExpression).Member.Name);"
            ],
            [
                365,
                "        private void VisitNewImpl_AddNewName(string memberName)"
            ],
            [
                366,
                "        {"
            ],
            [
                367,
                "            string newName = _pickColumns.Add(memberName);"
            ],
            [
                368,
                "            _builder.AppendAs(newName);"
            ],
            [
                369,
                "            _builder.Append(',');"
            ],
            [
                370,
                "            _builder.AppendNewLine();"
            ],
            [
                371,
                "        }"
            ],
            [
                372,
                ""
            ],
            [
                517,
                "                        nav.FieldCount = i == 0 ? (GetFieldCount(navExpression) + 1) : -1;"
            ],
            [
                556,
                "                    foreach (var exp in initExpression.NewExpression.Arguments) num += _countComplex(exp);"
            ],
            [
                572,
                "                    foreach (var exp in newExpression.Arguments) num += _countComplex(exp);"
            ]
        ]
    },
    "num_lines_added": 61,
    "num_lines_removed": 23
}