{
    "hash": "c6688d185810c29e2886201e74fa750101e3233c",
    "message": "fix dbquery",
    "file_num_lines": 381,
    "diff_parsed": {
        "added": [
            [
                52,
                "                DbExpression curExpr = dbQuery.DbExpressions[index];"
            ],
            [
                55,
                "                if (take != null || (skip != null && curExpr.DbExpressionType != DbExpressionType.Take) || isDistinct || isSubQuery)"
            ],
            [
                63,
                "                switch (curExpr.DbExpressionType)"
            ],
            [
                71,
                "                        if (curExpr.Expressions != null) where.Add(curExpr.Expressions[0]);"
            ],
            [
                80,
                "                        var uQuery = (curExpr.Expressions[0] as ConstantExpression).Value as IDbQueryable<TElement>;"
            ],
            [
                85,
                "                        include.Add(curExpr);"
            ],
            [
                89,
                "                        groupBy = curExpr;"
            ],
            [
                93,
                "                        type = (curExpr.Expressions[0] as ConstantExpression).Value as Type;"
            ],
            [
                100,
                "                        statis = curExpr;"
            ],
            [
                104,
                "                        statis = curExpr;"
            ],
            [
                105,
                "                        if (curExpr.Expressions != null) where.Add(curExpr.Expressions[0]);"
            ],
            [
                115,
                "                        if (curExpr.Expressions != null) where.Add(curExpr.Expressions[0]);"
            ],
            [
                121,
                "                        select = curExpr.Expressions[3];"
            ],
            [
                122,
                "                        join.Add(curExpr);"
            ],
            [
                127,
                "                        orderBy.Add(curExpr);"
            ],
            [
                130,
                "                        select = curExpr.Expressions != null ? curExpr.Expressions[0] : null;"
            ],
            [
                134,
                "                        select = curExpr.Expressions[1];"
            ],
            [
                135,
                "                        if (CheckSelectMany(dbQuery.DbExpressions, curExpr, startIndex)) join.Add(curExpr);"
            ],
            [
                142,
                "                        if (curExpr.Expressions != null) where.Add(curExpr.Expressions[0]);"
            ],
            [
                146,
                "                        skip = (int)(curExpr.Expressions[0] as ConstantExpression).Value;"
            ],
            [
                150,
                "                        take = (int)(curExpr.Expressions[0] as ConstantExpression).Value;"
            ],
            [
                155,
                "                        orderBy.Add(curExpr);"
            ],
            [
                160,
                "                        if (curExpr.Expressions != null) predicate.Add(curExpr.Expressions[0]);"
            ],
            [
                164,
                "                        insert = curExpr;"
            ],
            [
                168,
                "                        update = curExpr;"
            ],
            [
                172,
                "                        delete = curExpr;"
            ],
            [
                176,
                "                        throw new NotSupportedException(string.Format(\"{0} is not support.\", curExpr.DbExpressionType));"
            ],
            [
                469,
                "                                    //curExpr = new DbExpression(DbExpressionType.GroupRightJoin, curExpr.Expressions);"
            ],
            [
                470,
                "                                    //collection[i] = curExpr;"
            ]
        ],
        "deleted": [
            [
                52,
                "                DbExpression curExp = dbQuery.DbExpressions[index];"
            ],
            [
                55,
                "                if (take != null || (skip != null && curExp.DbExpressionType != DbExpressionType.Take) || isDistinct || isSubQuery)"
            ],
            [
                63,
                "                switch (curExp.DbExpressionType)"
            ],
            [
                71,
                "                        if (curExp.Expressions != null) where.Add(curExp.Expressions[0]);"
            ],
            [
                80,
                "                        var uQuery = (curExp.Expressions[0] as ConstantExpression).Value as IDbQueryable<TElement>;"
            ],
            [
                85,
                "                        include.Add(curExp);"
            ],
            [
                89,
                "                        groupBy = curExp;"
            ],
            [
                93,
                "                        type = (curExp.Expressions[0] as ConstantExpression).Value as Type;"
            ],
            [
                100,
                "                        statis = curExp;"
            ],
            [
                104,
                "                        statis = curExp;"
            ],
            [
                105,
                "                        if (curExp.Expressions != null) where.Add(curExp.Expressions[0]);"
            ],
            [
                115,
                "                        if (curExp.Expressions != null) where.Add(curExp.Expressions[0]);"
            ],
            [
                121,
                "                        select = curExp.Expressions[3];"
            ],
            [
                122,
                "                        join.Add(curExp);"
            ],
            [
                127,
                "                        orderBy.Add(curExp);"
            ],
            [
                130,
                "                        select = curExp.Expressions != null ? curExp.Expressions[0] : null;"
            ],
            [
                134,
                "                        select = curExp.Expressions[1];"
            ],
            [
                135,
                "                        if (CheckSelectMany(dbQuery.DbExpressions, curExp, startIndex)) join.Add(curExp);"
            ],
            [
                142,
                "                        if (curExp.Expressions != null) where.Add(curExp.Expressions[0]);"
            ],
            [
                146,
                "                        skip = (int)(curExp.Expressions[0] as ConstantExpression).Value;"
            ],
            [
                150,
                "                        take = (int)(curExp.Expressions[0] as ConstantExpression).Value;"
            ],
            [
                155,
                "                        orderBy.Add(curExp);"
            ],
            [
                160,
                "                        if (curExp.Expressions != null) predicate.Add(curExp.Expressions[0]);"
            ],
            [
                164,
                "                        insert = curExp;"
            ],
            [
                168,
                "                        update = curExp;"
            ],
            [
                172,
                "                        delete = curExp;"
            ],
            [
                176,
                "                        throw new NotSupportedException(string.Format(\"{0} is not support.\", curExp.DbExpressionType));"
            ]
        ]
    },
    "num_lines_added": 29,
    "num_lines_removed": 27
}