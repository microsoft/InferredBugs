{
    "hash": "442af23854023bc6127f770969dada4169c51915",
    "message": "to hex string",
    "file_num_lines": 417,
    "diff_parsed": {
        "added": [
            [
                106,
                "                if (base._methodVisitor == null)"
            ],
            [
                107,
                "                    base._methodVisitor = _provider.CreateMethodVisitor(this);"
            ],
            [
                161,
                "                var newNode = base.VisitLambda(node);"
            ],
            [
                162,
                "                if (_pickColumns.Count == 0)"
            ],
            [
                163,
                "                {"
            ],
            [
                164,
                "                    // \u9009\u62e9\u5b57\u6bb5"
            ],
            [
                165,
                "                    string newName = _pickColumns.Add(Constant.CONSTANTNAME);"
            ],
            [
                166,
                "                    // \u6dfb\u52a0\u5b57\u6bb5\u522b\u540d"
            ],
            [
                167,
                "                    _builder.AppendAs(newName);"
            ],
            [
                168,
                "                }"
            ],
            [
                169,
                "                return newNode;"
            ],
            [
                507,
                "                        // fix issue# SplitOn \u5217\u5360\u4e00\u4e2a\u4f4d"
            ],
            [
                508,
                "                        var nav = new Navigation(keyName, memberExpression.Member);"
            ],
            [
                509,
                "                        nav.Start = i == 0 ? _pickColumns.Count : -1;"
            ],
            [
                510,
                "                        nav.FieldCount = i == 0 ? (GetFieldCount(exp) + 1) : -1;"
            ],
            [
                511,
                "                        _navigations.Add(keyName, nav);"
            ],
            [
                548,
                "                    var initExpression = node as MemberInitExpression;"
            ],
            [
                549,
                "                    foreach (var exp in initExpression.NewExpression.Arguments) num += _countComplex(exp);"
            ],
            [
                550,
                "                    foreach (MemberAssignment member in initExpression.Bindings)"
            ],
            [
                551,
                "                    {"
            ],
            [
                552,
                "                        num += _countPrimitive(((System.Reflection.PropertyInfo)member.Member).PropertyType);"
            ],
            [
                553,
                "                    }"
            ],
            [
                558,
                "                    var memberExpression = node as MemberExpression;"
            ],
            [
                559,
                "                    num += _countComplex(memberExpression);"
            ],
            [
                564,
                "                    var newExpression = node as NewExpression;"
            ],
            [
                565,
                "                    foreach (var exp in newExpression.Arguments) num += _countComplex(exp);"
            ],
            [
                566,
                "                    if (newExpression.Members != null)"
            ],
            [
                567,
                "                    {"
            ],
            [
                568,
                "                        foreach (var member in newExpression.Members)"
            ],
            [
                569,
                "                            num += _countPrimitive(((System.Reflection.PropertyInfo)member).PropertyType);"
            ],
            [
                570,
                "                    }"
            ],
            [
                579,
                "        // \u57fa\u5143\u7c7b\u578b\u8ba1\u6570\u5668"
            ],
            [
                580,
                "        private static Func<Type, int> _countPrimitive = type => TypeUtils.IsPrimitiveType(type) ? 1 : 0;"
            ],
            [
                581,
                "        // \u590d\u5408\u7c7b\u578b\u8ba1\u6570\u5668"
            ],
            [
                582,
                "        private static Func<Expression, int> _countComplex = exp =>"
            ],
            [
                583,
                "              exp.NodeType == ExpressionType.MemberAccess && TypeUtils.IsPrimitiveType(exp.Type) ? 1 : TypeRuntimeInfoCache.GetRuntimeInfo(exp.Type.IsGenericType ? exp.Type.GetGenericArguments()[0] : exp.Type).DataFieldCount;"
            ]
        ],
        "deleted": [
            [
                106,
                "                if (base._methodVisitor == null) base._methodVisitor = _provider.CreateMethodVisitor(this);"
            ],
            [
                139,
                ""
            ],
            [
                161,
                "                return base.VisitLambda(node);"
            ],
            [
                499,
                "                        // fix issue# XC \u5217\u5360\u4e00\u4e2a\u4f4d"
            ],
            [
                500,
                "                        Navigation descriptor = new Navigation(keyName, memberExpression.Member);"
            ],
            [
                501,
                "                        descriptor.Start = i == 0 ? _pickColumns.Count : -1;//_columns.Count;"
            ],
            [
                502,
                "                        descriptor.FieldCount = i == 0 ? (GetFieldCount(exp) + 1) : -1; //i == 0 ? (GetFieldCount(exp) + 1) : 1;//-1;"
            ],
            [
                503,
                "                        _navigations.Add(keyName, descriptor);"
            ],
            [
                540,
                "                    MemberInitExpression m = node as MemberInitExpression;"
            ],
            [
                541,
                "                    foreach (var exp in m.NewExpression.Arguments) num += _typeFieldAggregator(exp);"
            ],
            [
                542,
                "                    foreach (MemberAssignment ma in m.Bindings) num += _primitiveAggregator((ma.Member as System.Reflection.PropertyInfo).PropertyType);"
            ],
            [
                547,
                "                    MemberExpression m1 = node as MemberExpression;"
            ],
            [
                548,
                "                    num += _typeFieldAggregator(m1);"
            ],
            [
                553,
                "                    NewExpression m2 = node as NewExpression;"
            ],
            [
                554,
                "                    foreach (var exp in m2.Arguments) num += _typeFieldAggregator(exp);"
            ],
            [
                555,
                "                    if (m2.Members != null) foreach (var member in m2.Members) num += _primitiveAggregator((member as System.Reflection.PropertyInfo).PropertyType);"
            ],
            [
                563,
                "        private static Func<Expression, int> _typeFieldAggregator = exp =>"
            ],
            [
                564,
                "              exp.NodeType == ExpressionType.MemberAccess && TypeUtils.IsPrimitiveType(exp.Type) ? 1 : TypeRuntimeInfoCache.GetRuntimeInfo(exp.Type.IsGenericType ? exp.Type.GetGenericArguments()[0] : exp.Type).DataFieldCount;"
            ],
            [
                566,
                "        private static Func<Type, int> _primitiveAggregator = type => TypeUtils.IsPrimitiveType(type) ? 1 : 0;"
            ]
        ]
    },
    "num_lines_added": 36,
    "num_lines_removed": 19
}