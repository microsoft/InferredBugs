  public static ILoggerFactory AddFile(this ILoggerFactory factory, IConfiguration configuration) {
			var prvFactory = factory;
			
			var fileSection = configuration.GetSection("File");
			if (fileSection==null)
				return factory;  // file logger is not configured
			var fileName = fileSection["Path"];
			if (String.IsNullOrWhiteSpace(fileName))
				return factory; // file logger is not configured

			var append = true;
			var appendVal = fileSection["Append"];
			if (!String.IsNullOrEmpty(appendVal))
				append = bool.Parse(appendVal);

			var loggerSettings = new FilterLoggerSettings();
			var logLevelsCfg = configuration.GetSection("LogLevel");
			bool hasFilter = false;
			if (logLevelsCfg!=null) {
				var logLevels = logLevelsCfg.GetChildren();
				foreach (var logLevel in logLevels) {
					var logLevelValue = default(LogLevel);
					Enum.TryParse(logLevel.Value, ignoreCase: true, result: out logLevelValue);
					loggerSettings.Add(logLevel.Key, logLevelValue);
					hasFilter = true;
				}
			}
			if (hasFilter)
				prvFactory = prvFactory.WithFilter(loggerSettings);

			prvFactory.AddProvider(new FileLoggerProvider(fileName, append));
			return factory;
		}