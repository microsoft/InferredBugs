  public static ILoggerFactory AddFile(this ILoggerFactory factory, IConfiguration configuration) {
			var prvFactory = factory;
			var fileLoggerPrv = CreateFromConfiguration(configuration);
			if (fileLoggerPrv == null)
				return factory;
#if NETSTANDARD1
			var loggerSettings = new FilterLoggerSettings();
			var logLevelsCfg = configuration.GetSection("LogLevel");
			bool hasFilter = false;
			if (logLevelsCfg!=null) {
				var logLevels = logLevelsCfg.GetChildren();
				foreach (var logLevel in logLevels) {
					var logLevelValue = default(LogLevel);
					Enum.TryParse(logLevel.Value, ignoreCase: true, result: out logLevelValue);
					loggerSettings.Add(logLevel.Key, logLevelValue);
					hasFilter = true;
				}
			}
			if (hasFilter)
				prvFactory = prvFactory.WithFilter(loggerSettings);
#endif

			prvFactory.AddProvider(fileLoggerPrv);
			return factory;
		}