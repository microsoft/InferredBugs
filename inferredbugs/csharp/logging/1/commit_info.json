{
    "hash": "9225335955407afcd437f6d37b1ed8ec6f54ded5",
    "message": "Added 'AddFile' extension method for ILoggingBuilder for netstandard2 target",
    "file_num_lines": 70,
    "diff_parsed": {
        "added": [
            [
                21,
                "using Microsoft.Extensions.DependencyInjection;"
            ],
            [
                29,
                "#if NETSTANDARD2"
            ],
            [
                30,
                ""
            ],
            [
                31,
                "\t\t/// <summary>"
            ],
            [
                32,
                "\t\t/// Adds a file logger."
            ],
            [
                33,
                "\t\t/// </summary>"
            ],
            [
                34,
                "\t\tpublic static ILoggingBuilder AddFile(this ILoggingBuilder builder, string fileName, bool append = true) {"
            ],
            [
                35,
                "\t\t\tbuilder.Services.Add(ServiceDescriptor.Singleton<ILoggerProvider, FileLoggerProvider>("
            ],
            [
                36,
                "\t\t\t\t(srvPrv) => {"
            ],
            [
                37,
                "\t\t\t\t\treturn new FileLoggerProvider(fileName, append);"
            ],
            [
                38,
                "\t\t\t\t}"
            ],
            [
                39,
                "\t\t\t));"
            ],
            [
                40,
                "\t\t\treturn builder;"
            ],
            [
                41,
                "\t\t}"
            ],
            [
                42,
                ""
            ],
            [
                43,
                "\t\t/// <summary>"
            ],
            [
                44,
                "\t\t/// Adds a file logger by specified configuration."
            ],
            [
                45,
                "\t\t/// </summary>"
            ],
            [
                46,
                "\t\t/// <remarks>File logger is not added if \"File\" section is not present or it doesn't contain \"Path\" property.</remarks>"
            ],
            [
                47,
                "\t\tpublic static ILoggingBuilder AddFile(this ILoggingBuilder builder, IConfiguration configuration) {"
            ],
            [
                48,
                "\t\t\tvar fileLoggerPrv = CreateFromConfiguration(configuration);"
            ],
            [
                49,
                "\t\t\tif (fileLoggerPrv != null) {"
            ],
            [
                50,
                "\t\t\t\tbuilder.Services.AddSingleton<ILoggerProvider,FileLoggerProvider>("
            ],
            [
                51,
                "\t\t\t\t\t(srvPrv) => {"
            ],
            [
                52,
                "\t\t\t\t\t\treturn fileLoggerPrv;"
            ],
            [
                53,
                "\t\t\t\t\t}"
            ],
            [
                54,
                "\t\t\t\t);"
            ],
            [
                55,
                "\t\t\t}"
            ],
            [
                56,
                "\t\t\treturn builder;"
            ],
            [
                57,
                "\t\t}"
            ],
            [
                58,
                ""
            ],
            [
                59,
                "#endif"
            ],
            [
                60,
                ""
            ],
            [
                79,
                "\t\t\tvar fileLoggerPrv = CreateFromConfiguration(configuration);"
            ],
            [
                80,
                "\t\t\tif (fileLoggerPrv == null)"
            ],
            [
                81,
                "\t\t\t\treturn factory;"
            ],
            [
                82,
                "#if NETSTANDARD1"
            ],
            [
                97,
                "#endif"
            ],
            [
                99,
                "\t\t\tprvFactory.AddProvider(fileLoggerPrv);"
            ],
            [
                103,
                "\t\tprivate static FileLoggerProvider CreateFromConfiguration(IConfiguration configuration) {"
            ],
            [
                104,
                "\t\t\tvar fileSection = configuration.GetSection(\"File\");"
            ],
            [
                105,
                "\t\t\tif (fileSection == null)"
            ],
            [
                106,
                "\t\t\t\treturn null;  // file logger is not configured"
            ],
            [
                107,
                "\t\t\tvar fileName = fileSection[\"Path\"];"
            ],
            [
                108,
                "\t\t\tif (String.IsNullOrWhiteSpace(fileName))"
            ],
            [
                109,
                "\t\t\t\treturn null; // file logger is not configured"
            ],
            [
                110,
                ""
            ],
            [
                111,
                "\t\t\tvar append = true;"
            ],
            [
                112,
                "\t\t\tvar appendVal = fileSection[\"Append\"];"
            ],
            [
                113,
                "\t\t\tif (!String.IsNullOrEmpty(appendVal))"
            ],
            [
                114,
                "\t\t\t\tappend = bool.Parse(appendVal);"
            ],
            [
                115,
                ""
            ],
            [
                116,
                "\t\t\treturn new FileLoggerProvider(fileName, append);"
            ],
            [
                117,
                "\t\t}"
            ],
            [
                118,
                ""
            ],
            [
                119,
                ""
            ]
        ],
        "deleted": [
            [
                18,
                "using System.Threading.Tasks;"
            ],
            [
                20,
                "using System.Collections.Concurrent;"
            ],
            [
                21,
                "using System.Text;"
            ],
            [
                23,
                "using Microsoft.Extensions.Logging;"
            ],
            [
                50,
                ""
            ],
            [
                51,
                "\t\t\tvar fileSection = configuration.GetSection(\"File\");"
            ],
            [
                52,
                "\t\t\tif (fileSection==null)"
            ],
            [
                53,
                "\t\t\t\treturn factory;  // file logger is not configured"
            ],
            [
                54,
                "\t\t\tvar fileName = fileSection[\"Path\"];"
            ],
            [
                55,
                "\t\t\tif (String.IsNullOrWhiteSpace(fileName))"
            ],
            [
                56,
                "\t\t\t\treturn factory; // file logger is not configured"
            ],
            [
                57,
                ""
            ],
            [
                58,
                "\t\t\tvar append = true;"
            ],
            [
                59,
                "\t\t\tvar appendVal = fileSection[\"Append\"];"
            ],
            [
                60,
                "\t\t\tif (!String.IsNullOrEmpty(appendVal))"
            ],
            [
                61,
                "\t\t\t\tappend = bool.Parse(appendVal);"
            ],
            [
                62,
                ""
            ],
            [
                78,
                "\t\t\tprvFactory.AddProvider(new FileLoggerProvider(fileName, append));"
            ]
        ]
    },
    "num_lines_added": 56,
    "num_lines_removed": 18
}