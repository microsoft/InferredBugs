{
    "hash": "6e22c842eadf6e12f4dfe5d9f95951c584a3b4ae",
    "message": "Added error output handling for Graph calls (#1923)\n\n* Added error output handling for Graph calls\r\n\r\n* Added PR reference\r\n\r\nCo-authored-by: Gautam Sheth <gautamdsheth@outlook.com>",
    "file_num_lines": 233,
    "diff_parsed": {
        "added": [
            [
                1,
                "\ufeffusing PnP.Framework.Utilities;"
            ]
        ],
        "deleted": [
            [
                1,
                "\ufeff"
            ],
            [
                2,
                "using Newtonsoft.Json.Linq;"
            ],
            [
                3,
                "using PnP.Framework.Utilities;"
            ],
            [
                4,
                "using PnP.PowerShell.Commands.Attributes;"
            ],
            [
                5,
                "using PnP.PowerShell.Commands.Base;"
            ],
            [
                6,
                "using PnP.PowerShell.Commands.Base.PipeBinds;"
            ],
            [
                8,
                "using PnP.PowerShell.Commands.Utilities;"
            ],
            [
                10,
                "using PnP.PowerShell.Commands.Utilities.JSON;"
            ],
            [
                12,
                "using System.Linq;"
            ],
            [
                15,
                "using System.Collections;"
            ],
            [
                19,
                "using PnP.PowerShell.Commands.Model.Graph;"
            ],
            [
                163,
                "        private void ThrowIfNoSuccess(HttpResponseMessage response)"
            ],
            [
                164,
                "        {"
            ],
            [
                165,
                "            if (!response.IsSuccessStatusCode)"
            ],
            [
                166,
                "            {"
            ],
            [
                167,
                "                var errorContent = response.Content.ReadAsStringAsync().GetAwaiter().GetResult();"
            ],
            [
                168,
                "                var exception = JsonSerializer.Deserialize<GraphException>(errorContent, new JsonSerializerOptions() { IgnoreNullValues = true, PropertyNamingPolicy = JsonNamingPolicy.CamelCase });"
            ],
            [
                169,
                "                exception.AccessToken = AccessToken;"
            ],
            [
                170,
                "                throw exception;"
            ],
            [
                171,
                "            }"
            ],
            [
                172,
                "        }"
            ],
            [
                173,
                ""
            ],
            [
                253,
                "            ThrowIfNoSuccess(response);"
            ],
            [
                261,
                "            ThrowIfNoSuccess(response);"
            ],
            [
                269,
                "            ThrowIfNoSuccess(response);"
            ],
            [
                277,
                "            ThrowIfNoSuccess(response);"
            ]
        ]
    },
    "num_lines_added": 1,
    "num_lines_removed": 26
}