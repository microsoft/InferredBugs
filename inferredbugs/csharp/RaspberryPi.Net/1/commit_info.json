{
    "hash": "a1ce3b71ec1020e30f3317da25b5378686de7270",
    "message": "Added GPIOPinMask for better bit operations",
    "file_num_lines": 118,
    "diff_parsed": {
        "added": [
            [
                7,
                "\t/// <summary>"
            ],
            [
                8,
                "\t/// Abstract class for the GPIO connector on the Pi (P1) (as found next to the yellow RCA video socket on the Rpi circuit board)"
            ],
            [
                9,
                "\t/// </summary>"
            ],
            [
                10,
                "\tpublic abstract class GPIO : IDisposable"
            ],
            [
                11,
                "\t{"
            ],
            [
                12,
                "\t\t/// <summary>"
            ],
            [
                13,
                "\t\t/// Dictionary that stores created (exported) pins that where not disposed."
            ],
            [
                14,
                "\t\t/// </summary>"
            ],
            [
                15,
                "\t\tprivate static Dictionary<GPIOPins, GPIO> _exportedPins = new Dictionary<GPIOPins, GPIO>();"
            ],
            [
                16,
                ""
            ],
            [
                17,
                "\t\t/// <summary>"
            ],
            [
                18,
                "\t\t/// The currently assigned GPIO pin. Used for class methods."
            ],
            [
                19,
                "\t\t/// </summary>"
            ],
            [
                20,
                "\t\tprotected readonly GPIOPins _pin;"
            ],
            [
                31,
                "\t\tpublic GPIOPins Pin {"
            ],
            [
                32,
                "\t\t\tget {"
            ],
            [
                38,
                ""
            ],
            [
                39,
                "\t\t/// <summary>"
            ],
            [
                40,
                "\t\t/// Gets the bit mask of this pin."
            ],
            [
                41,
                "\t\t/// </summary>"
            ],
            [
                42,
                "\t\tpublic GPIOPinMask Mask {"
            ],
            [
                43,
                "\t\t\tget {"
            ],
            [
                44,
                "\t\t\t\treturn (GPIOPinMask)(1 << (ushort)Pin); //Pin-Value has a low range (0-~32), so even casting to byte would be ok."
            ],
            [
                45,
                "\t\t\t}"
            ],
            [
                46,
                "\t\t}"
            ],
            [
                47,
                ""
            ],
            [
                51,
                "\t\tpublic virtual GPIODirection PinDirection {"
            ],
            [
                52,
                "\t\t\tget {"
            ],
            [
                57,
                "\t\t\tset {"
            ],
            [
                67,
                "\t\tpublic bool IsDisposed {"
            ],
            [
                68,
                "\t\t\tget {"
            ],
            [
                73,
                "\t\t/// <summary>"
            ],
            [
                74,
                "\t\t/// Access to the specified GPIO setup with the specified direction with the specified initial value"
            ],
            [
                75,
                "\t\t/// </summary>"
            ],
            [
                76,
                "\t\t/// <param name=\"pin\">The GPIO pin</param>"
            ],
            [
                77,
                "\t\t/// <param name=\"direction\">Direction</param>"
            ],
            [
                78,
                "\t\t/// <param name=\"initialValue\">Initial Value</param>"
            ],
            [
                79,
                "\t\tprotected GPIO(GPIOPins pin, GPIODirection direction, bool initialValue) {"
            ],
            [
                80,
                "\t\t\tif (pin == GPIOPins.GPIO_NONE) throw new ArgumentException(\"Invalid pin\");"
            ],
            [
                81,
                "\t\t\tlock (_exportedPins) {"
            ],
            [
                87,
                "\t\t\t\ttry {"
            ],
            [
                91,
                "\t\t\t\tcatch {"
            ],
            [
                96,
                "\t\t}"
            ],
            [
                101,
                "\t\t~GPIO() {"
            ],
            [
                104,
                "\t\t}"
            ],
            [
                113,
                "\t\tpublic static void Write(GPIOPins pin, bool value) {"
            ],
            [
                124,
                "\t\tpublic static bool Read(GPIOPins pin) {"
            ],
            [
                134,
                "\t\tpublic static GPIO CreatePin(GPIOPins pin, GPIODirection dir) {"
            ],
            [
                136,
                "\t\t\t\tif (_exportedPins.ContainsKey(pin)) {"
            ],
            [
                142,
                "\t\t\ttry {"
            ],
            [
                146,
                "\t\t\tcatch (Exception e) {"
            ],
            [
                154,
                "\t\t\ttry {"
            ],
            [
                158,
                "\t\t\tcatch (Exception e) {"
            ],
            [
                175,
                "\t\t/// <summary>"
            ],
            [
                176,
                "\t\t/// Write a value to the pin"
            ],
            [
                177,
                "\t\t/// </summary>"
            ],
            [
                178,
                "\t\t/// <param name=\"value\">The value to write to the pin</param>"
            ],
            [
                179,
                "\t\tpublic virtual void Write(bool value) {"
            ],
            [
                186,
                "\t\t/// <summary>"
            ],
            [
                187,
                "\t\t/// Read a value from the pin"
            ],
            [
                188,
                "\t\t/// </summary>"
            ],
            [
                189,
                "\t\t/// <returns>The value read from the pin</returns>"
            ],
            [
                190,
                "\t\tpublic virtual bool Read() {"
            ],
            [
                198,
                "\t\t/// <summary>"
            ],
            [
                199,
                "\t\t/// Dispose of the GPIO pin"
            ],
            [
                200,
                "\t\t/// </summary>"
            ],
            [
                201,
                "\t\tpublic virtual void Dispose() {"
            ],
            [
                206,
                "\t\t\tlock (_exportedPins) {"
            ],
            [
                210,
                "\t}"
            ]
        ],
        "deleted": [
            [
                7,
                "    /// <summary>"
            ],
            [
                8,
                "    /// Abstract class for the GPIO connector on the Pi (P1) (as found next to the yellow RCA video socket on the Rpi circuit board)"
            ],
            [
                9,
                "    /// </summary>"
            ],
            [
                10,
                "    public abstract class GPIO : IDisposable"
            ],
            [
                11,
                "    {"
            ],
            [
                12,
                "        /// <summary>"
            ],
            [
                13,
                "        /// Dictionary that stores created (exported) pins that where not disposed."
            ],
            [
                14,
                "        /// </summary>"
            ],
            [
                15,
                "        private static Dictionary<GPIOPins, GPIO> _exportedPins = new Dictionary<GPIOPins, GPIO>();"
            ],
            [
                16,
                ""
            ],
            [
                17,
                "        /// <summary>"
            ],
            [
                18,
                "        /// The currently assigned GPIO pin. Used for class methods."
            ],
            [
                19,
                "        /// </summary>"
            ],
            [
                20,
                "        protected readonly GPIOPins _pin;"
            ],
            [
                31,
                "\t\tpublic GPIOPins Pin"
            ],
            [
                32,
                "\t\t{"
            ],
            [
                33,
                "\t\t\tget"
            ],
            [
                34,
                "\t\t\t{"
            ],
            [
                40,
                ""
            ],
            [
                44,
                "\t\tpublic virtual GPIODirection PinDirection"
            ],
            [
                45,
                "\t\t{"
            ],
            [
                46,
                "\t\t\tget"
            ],
            [
                47,
                "\t\t\t{"
            ],
            [
                52,
                "\t\t\tset"
            ],
            [
                53,
                "\t\t\t{"
            ],
            [
                63,
                "\t\tpublic bool IsDisposed"
            ],
            [
                64,
                "\t\t{"
            ],
            [
                65,
                "\t\t\tget"
            ],
            [
                66,
                "\t\t\t{"
            ],
            [
                71,
                "        /// <summary>"
            ],
            [
                72,
                "        /// Access to the specified GPIO setup with the specified direction with the specified initial value"
            ],
            [
                73,
                "        /// </summary>"
            ],
            [
                74,
                "        /// <param name=\"pin\">The GPIO pin</param>"
            ],
            [
                75,
                "        /// <param name=\"direction\">Direction</param>"
            ],
            [
                76,
                "        /// <param name=\"initialValue\">Initial Value</param>"
            ],
            [
                77,
                "        protected GPIO(GPIOPins pin, GPIODirection direction, bool initialValue)"
            ],
            [
                78,
                "        {"
            ],
            [
                79,
                "\t\t\tlock (_exportedPins)"
            ],
            [
                80,
                "\t\t\t{"
            ],
            [
                86,
                "\t\t\t\ttry"
            ],
            [
                87,
                "\t\t\t\t{"
            ],
            [
                91,
                "\t\t\t\tcatch"
            ],
            [
                92,
                "\t\t\t\t{"
            ],
            [
                97,
                "        }"
            ],
            [
                102,
                "        ~GPIO()"
            ],
            [
                103,
                "        {"
            ],
            [
                106,
                "        }"
            ],
            [
                115,
                "\t\tpublic static void Write(GPIOPins pin, bool value)"
            ],
            [
                116,
                "\t\t{"
            ],
            [
                127,
                "\t\tpublic static bool Read(GPIOPins pin)"
            ],
            [
                128,
                "\t\t{"
            ],
            [
                138,
                "\t\tpublic static GPIO CreatePin(GPIOPins pin, GPIODirection dir)"
            ],
            [
                139,
                "\t\t{"
            ],
            [
                141,
                "\t\t\t\tif (_exportedPins.ContainsKey(pin))"
            ],
            [
                142,
                "\t\t\t\t{"
            ],
            [
                148,
                "\t\t\ttry"
            ],
            [
                149,
                "\t\t\t{"
            ],
            [
                153,
                "\t\t\tcatch (Exception e)"
            ],
            [
                154,
                "\t\t\t{"
            ],
            [
                162,
                "\t\t\ttry"
            ],
            [
                163,
                "\t\t\t{"
            ],
            [
                167,
                "\t\t\tcatch (Exception e)"
            ],
            [
                168,
                "\t\t\t{"
            ],
            [
                185,
                "        /// <summary>"
            ],
            [
                186,
                "        /// Write a value to the pin"
            ],
            [
                187,
                "        /// </summary>"
            ],
            [
                188,
                "        /// <param name=\"value\">The value to write to the pin</param>"
            ],
            [
                189,
                "\t\tpublic virtual void Write(bool value)"
            ],
            [
                190,
                "\t\t{"
            ],
            [
                197,
                "        /// <summary>"
            ],
            [
                198,
                "        /// Read a value from the pin"
            ],
            [
                199,
                "        /// </summary>"
            ],
            [
                200,
                "        /// <returns>The value read from the pin</returns>"
            ],
            [
                201,
                "\t\tpublic virtual bool Read()"
            ],
            [
                202,
                "\t\t{"
            ],
            [
                210,
                "        /// <summary>"
            ],
            [
                211,
                "        /// Dispose of the GPIO pin"
            ],
            [
                212,
                "        /// </summary>"
            ],
            [
                213,
                "\t\tpublic virtual void Dispose()"
            ],
            [
                214,
                "\t\t{"
            ],
            [
                219,
                "\t\t\tlock (_exportedPins)"
            ],
            [
                220,
                "\t\t\t{"
            ],
            [
                224,
                "    }"
            ]
        ]
    },
    "num_lines_added": 69,
    "num_lines_removed": 83
}