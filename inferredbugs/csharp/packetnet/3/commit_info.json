{
    "hash": "bde9be1d4fc6ea6b723f14671fb92a98c839582c",
    "message": "Ensuring encapsulated 802.11 frames are parsed regardless of the presence of the FCS or the validity of the packet",
    "file_num_lines": 77,
    "diff_parsed": {
        "added": [
            [
                78,
                ""
            ],
            [
                79,
                "\t\t\t\t//The packet is corrupted in such a way that the type field has been changed"
            ],
            [
                80,
                "\t\t\t\t//to a reserved/unused type. Therefore we don't expect there to be a packet"
            ],
            [
                82,
                "                Assert.IsNotNull(p.PayloadData);"
            ],
            [
                95,
                "                MacFrame macFrame = p.PayloadPacket as MacFrame;"
            ],
            [
                96,
                "                Assert.IsTrue(macFrame.FCSValid);"
            ],
            [
                98,
                ""
            ],
            [
                99,
                "\t\t\t[Test]"
            ],
            [
                100,
                "\t\t\tpublic void ReadPacketWithNoFcs()"
            ],
            [
                101,
                "\t\t\t{"
            ],
            [
                102,
                "\t\t\t\tvar dev = new CaptureFileReaderDevice (\"../../CaptureFiles/80211_ppi_without_fcs.pcap\");"
            ],
            [
                103,
                "                dev.Open ();"
            ],
            [
                104,
                "                var rawCapture = dev.GetNextPacket ();"
            ],
            [
                105,
                "                dev.Close ();"
            ],
            [
                106,
                ""
            ],
            [
                107,
                "                PpiPacket p = Packet.ParsePacket (rawCapture.LinkLayerType, rawCapture.Data) as PpiPacket;"
            ],
            [
                108,
                "                Assert.IsNotNull (p.PayloadPacket);"
            ],
            [
                109,
                "                MacFrame macFrame = p.PayloadPacket as MacFrame;"
            ],
            [
                110,
                "                Assert.IsFalse(macFrame.FCSValid);"
            ],
            [
                111,
                "\t\t\t}"
            ]
        ],
        "deleted": [
            [
                79,
                "                Assert.IsNotNull (p.PayloadData);"
            ],
            [
                92,
                "                Assert.IsNull (p.PayloadData);"
            ]
        ]
    },
    "num_lines_added": 20,
    "num_lines_removed": 2
}