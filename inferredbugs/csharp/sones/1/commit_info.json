{
    "hash": "115bf3be15ccc79abf75f83864bc64142b793233",
    "message": "repair merge conflict",
    "file_num_lines": 323,
    "diff_parsed": {
        "added": [
            [
                197,
                "        /// <summary>"
            ],
            [
                198,
                "        /// Closes the server."
            ],
            [
                199,
                "        /// </summary>"
            ],
            [
                200,
                "        /// <remarks>"
            ],
            [
                201,
                "        /// A call of this method releases all resources. After this, the instance can not be started anymore."
            ],
            [
                202,
                "        /// </remarks>"
            ],
            [
                203,
                "        public void Close()"
            ],
            [
                204,
                "        {"
            ],
            [
                205,
                "            Stop();"
            ],
            [
                206,
                "            if (_listener != null)"
            ],
            [
                207,
                "            {"
            ],
            [
                208,
                "                _listener.Close();"
            ],
            [
                209,
                "            }"
            ],
            [
                210,
                "        }"
            ],
            [
                251,
                "            #region Find the correct interfaces"
            ],
            [
                258,
                "            if (allInterfaces.Count() == 0)"
            ],
            [
                347,
                ""
            ],
            [
                348,
                "            return (callback != null && callback.Item1 != null && callback.Item1.NeedsExplicitAuthentication)"
            ],
            [
                349,
                "                ? _security.SchemaSelector(myRequest)"
            ],
            [
                350,
                "                : AuthenticationSchemes.Anonymous;"
            ],
            [
                364,
                ""
            ],
            [
                370,
                "            try"
            ],
            [
                372,
                "                if (callback == null || callback.Item1 == null)"
            ],
            [
                373,
                "                {"
            ],
            [
                374,
                "                    NoPatternFound404(context);"
            ],
            [
                376,
                "                }"
            ],
            [
                377,
                "                else"
            ],
            [
                390,
                "                        context.Response.StatusCode = (int) HttpStatusCode.Forbidden;"
            ],
            [
                405,
                ""
            ],
            [
                417,
                "                                var toWrite = Encoding.UTF8.GetBytes((string) (targetInvocationResult));"
            ],
            [
                426,
                "                        context.Response.StatusCode = (int) HttpStatusCode.InternalServerError;"
            ],
            [
                436,
                "            finally"
            ],
            [
                437,
                "            {"
            ],
            [
                438,
                "                context.Response.Close();"
            ],
            [
                439,
                "            }"
            ],
            [
                465,
                "            Close();"
            ]
        ],
        "deleted": [
            [
                117,
                "            #endregion"
            ],
            [
                118,
                ""
            ],
            [
                119,
                "            #region parse interface"
            ],
            [
                120,
                ""
            ],
            [
                121,
                ""
            ],
            [
                126,
                "            #region"
            ],
            [
                127,
                ""
            ],
            [
                132,
                ""
            ],
            [
                133,
                "            #endregion"
            ],
            [
                246,
                "            #region Find the correct interface"
            ],
            [
                253,
                "            var count = allInterfaces.Count();"
            ],
            [
                254,
                ""
            ],
            [
                255,
                "            if (count == 0)"
            ],
            [
                344,
                ""
            ],
            [
                345,
                "            return callback.Item1.NeedsExplicitAuthentication ? _security.SchemaSelector(myRequest) : AuthenticationSchemes.Anonymous;"
            ],
            [
                359,
                ""
            ],
            [
                365,
                "            if (callback == null || callback.Item1 == null)"
            ],
            [
                367,
                "                NoPatternFound404(context);"
            ],
            [
                369,
                "            }"
            ],
            [
                370,
                "            else"
            ],
            [
                371,
                "            {"
            ],
            [
                372,
                "                try"
            ],
            [
                385,
                "                        context.Response.StatusCode = (int)HttpStatusCode.Forbidden;"
            ],
            [
                411,
                "                                var toWrite = Encoding.UTF8.GetBytes((string)(targetInvocationResult));"
            ],
            [
                420,
                "                        context.Response.StatusCode = (int)HttpStatusCode.InternalServerError;"
            ],
            [
                429,
                "                finally"
            ],
            [
                430,
                "                {"
            ],
            [
                431,
                "                    context.Response.Close();"
            ],
            [
                432,
                "                }"
            ],
            [
                433,
                ""
            ],
            [
                435,
                ""
            ],
            [
                461,
                "            Stop();"
            ],
            [
                462,
                "            if (_listener != null)"
            ],
            [
                463,
                "            {"
            ],
            [
                464,
                "                _listener.Close();"
            ],
            [
                465,
                "            }"
            ]
        ]
    },
    "num_lines_added": 36,
    "num_lines_removed": 36
}