{
    "hash": "e4e720a8bf3b8f42c5bcd2430fc9a73d37e38688",
    "message": "np.where: fixed the return type of overload without x and y",
    "file_num_lines": 456,
    "diff_parsed": {
        "added": [
            [
                435,
                "            //>>> b[0]"
            ],
            [
                436,
                "            //array([4, 5], dtype = int64)"
            ],
            [
                439,
                "            Assert.AreEqual(\"array([4, 5], dtype=int64)\", b[0].repr);"
            ],
            [
                521,
                "            // note: this was a bug, now you don't get a python tuple back, but an array of NDarrays instead so the following line just doesn't compile any more"
            ],
            [
                522,
                "            //Assert.AreEqual(\"(array([0, 0, 1, 1, 1], dtype=int64), array([0, 3, 0, 1, 3], dtype=int64))\", np.where(a > 0).repr);"
            ],
            [
                538,
                "            //>>> ex = (P2 - P1) / (np.linalg.norm(P2 - P1))"
            ],
            [
                539,
                "            //>>> ex"
            ],
            [
                547,
                "        [TestMethod]"
            ],
            [
                548,
                "        public void QuestionBySimonBuehler()"
            ],
            [
                549,
                "        {"
            ],
            [
                550,
                "            //import numpy as np"
            ],
            [
                551,
                "            //bboxes = np.empty([999, 4])"
            ],
            [
                552,
                "            //keep_idx = np.array([2, 6, 7, 8, 9, 13])"
            ],
            [
                553,
                "            //bboxes = bboxes[keep_idx]"
            ],
            [
                554,
                "            //>>> bboxes.shape"
            ],
            [
                555,
                "            //(6, 4)"
            ],
            [
                556,
                "            var bboxes = np.empty(new Shape(999, 4));"
            ],
            [
                557,
                "            var keep_idx = np.array(new[] {2, 6, 7, 8, 9, 13});"
            ],
            [
                558,
                "            bboxes = bboxes[keep_idx];"
            ],
            [
                559,
                "            Assert.AreEqual(\"(6, 4)\", bboxes.shape.ToString());"
            ],
            [
                560,
                ""
            ],
            [
                561,
                "            //>>> np.where(keep_idx > 4)[0]"
            ],
            [
                562,
                "            //array([1, 2, 3, 4, 5], dtype = int64)"
            ],
            [
                563,
                "            var x = np.where(keep_idx > 4)[0];"
            ],
            [
                564,
                "            Assert.AreEqual(\"array([1, 2, 3, 4, 5], dtype=int64)\", x.repr);"
            ],
            [
                565,
                "        }"
            ],
            [
                566,
                ""
            ]
        ],
        "deleted": [
            [
                435,
                "            //>>> b"
            ],
            [
                436,
                "            //(array([4, 5], dtype = int64),)"
            ],
            [
                439,
                "            Assert.AreEqual(\"(array([4, 5], dtype=int64),)\", b.repr);"
            ],
            [
                521,
                "            Assert.AreEqual(\"(array([0, 0, 1, 1, 1], dtype=int64), array([0, 3, 0, 1, 3], dtype=int64))\", np.where(a > 0).repr);"
            ],
            [
                537,
                "            //>>> ex = (P2 - P1) / (np.linalg.norm(P2 - P1))"
            ],
            [
                538,
                "            //>>> ex"
            ]
        ]
    },
    "num_lines_added": 27,
    "num_lines_removed": 6
}