        [TestMethod]
        public void StringArray()
        {
            //>>> a = numpy.array(['apples', 'foobar', 'cowboy'])
            //>>> a[2] = 'bananas'
            //>>> a
            //array(['apples', 'foobar', 'banana'], 
            //      dtype = '|S6')
            var a = np.array(new string[]{"apples", "foobar", "cowboy"});
            Assert.AreEqual("array(['apples', 'foobar', 'cowboy'], dtype='<U6')", a.repr);
            // todo: a[2]="banana";
            a.self.SetItem(new PyInt(2), new PyString("banana"));
            Assert.AreEqual("array(['apples', 'foobar', 'banana'], dtype='<U6')", a.repr);

            //>>> a = numpy.array(['apples', 'foobar', 'cowboy'], dtype = object)
            //>>> a
            //array([apples, foobar, cowboy], dtype = object)
            //>>> a[2] = 'bananas'
            //>>> a
            //array([apples, foobar, bananas], dtype = object)
            a = np.array(new string[] { "apples", "foobar", "cowboy" }, dtype:np.object_);
            Assert.AreEqual("array(['apples', 'foobar', 'cowboy'], dtype=object)", a.repr);
            // todo: a[2]="banana";
            a.self.SetItem(new PyInt(2), new PyString("banana"));
            Assert.AreEqual("array(['apples', 'foobar', 'banana'], dtype=object)", a.repr);
        }