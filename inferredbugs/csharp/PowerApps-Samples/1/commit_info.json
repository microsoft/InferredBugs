{
    "hash": "18d8205e86f73250287049cbd1b40167e89fa85e",
    "message": "Ready for PR",
    "file_num_lines": 126,
    "diff_parsed": {
        "added": [
            [
                4,
                "using Microsoft.PowerPlatform.Dataverse.Client.Model;"
            ],
            [
                89,
                "            try"
            ],
            [
                90,
                "            {"
            ],
            [
                91,
                "                //Get the Cloud URL from the Description Attribute applied for the Cloud member"
            ],
            [
                92,
                "                var type = typeof(Cloud);"
            ],
            [
                93,
                "                var memInfo = type.GetMember(cloud.ToString());"
            ],
            [
                94,
                "                var attributes = memInfo[0].GetCustomAttributes(typeof(DescriptionAttribute), false);"
            ],
            [
                95,
                "                string cloudRegionUrl = ((DescriptionAttribute)attributes[0]).Description;"
            ],
            [
                96,
                ""
            ],
            [
                97,
                "                // Set up user credentials"
            ],
            [
                98,
                "                var creds = new System.ServiceModel.Description.ClientCredentials();"
            ],
            [
                99,
                "                creds.UserName.UserName = userName;"
            ],
            [
                100,
                "                creds.UserName.Password = password;"
            ],
            [
                101,
                ""
            ],
            [
                102,
                "                try"
            ],
            [
                103,
                "                {"
            ],
            [
                104,
                "                    //Call DiscoverOnlineOrganizationsAsync"
            ],
            [
                105,
                "                    DiscoverOrganizationsResult organizationsResult = await ServiceClient.DiscoverOnlineOrganizationsAsync("
            ],
            [
                106,
                "                           discoveryServiceUri: new Uri($\"{cloudRegionUrl}/api/discovery/v2.0/Instances\"),"
            ],
            [
                107,
                "                           clientCredentials: creds,"
            ],
            [
                108,
                "                           clientId: clientId,"
            ],
            [
                109,
                "                           redirectUri: new Uri(redirectUrl),"
            ],
            [
                110,
                "                           isOnPrem: false,"
            ],
            [
                111,
                "                           authority: \"https://login.microsoftonline.com/organizations/\","
            ],
            [
                112,
                "                           promptBehavior: PromptBehavior.Auto);"
            ],
            [
                113,
                ""
            ],
            [
                114,
                "                    return organizationsResult;"
            ],
            [
                115,
                "                }"
            ],
            [
                116,
                "                catch (Exception)"
            ],
            [
                117,
                "                {"
            ],
            [
                118,
                ""
            ],
            [
                119,
                "                    throw;"
            ],
            [
                120,
                "                }"
            ],
            [
                121,
                "            }"
            ],
            [
                122,
                "            catch (Exception)"
            ],
            [
                123,
                "            {"
            ],
            [
                125,
                "                throw;"
            ],
            [
                126,
                "            }"
            ],
            [
                137,
                "            try"
            ],
            [
                138,
                "            {"
            ],
            [
                139,
                "                string conn = $@\"AuthType=OAuth;"
            ],
            [
                147,
                "                ServiceClient svc = new(conn);"
            ],
            [
                149,
                "                if (svc.IsReady)"
            ],
            [
                151,
                "                    try"
            ],
            [
                152,
                "                    {"
            ],
            [
                153,
                "                        var response = (WhoAmIResponse)svc.Execute(new WhoAmIRequest());"
            ],
            [
                154,
                ""
            ],
            [
                155,
                "                        Console.WriteLine($\"Your UserId for {org.FriendlyName} is: {response.UserId}\");"
            ],
            [
                156,
                "                    }"
            ],
            [
                157,
                "                    catch (Exception ex)"
            ],
            [
                158,
                "                    {"
            ],
            [
                159,
                "                        Console.WriteLine(ex.Message);"
            ],
            [
                160,
                "                    }"
            ],
            [
                162,
                "                else"
            ],
            [
                164,
                "                    Console.WriteLine(svc.LastError);"
            ],
            [
                167,
                "            catch (Exception)"
            ],
            [
                169,
                ""
            ],
            [
                170,
                "                throw;"
            ]
        ],
        "deleted": [
            [
                3,
                "using Microsoft.PowerPlatform.Dataverse.Client.Model;"
            ],
            [
                90,
                "            //Get the Cloud URL from the Description Attribute applied for the Cloud member"
            ],
            [
                91,
                "            var type = typeof(Cloud);"
            ],
            [
                92,
                "            var memInfo = type.GetMember(cloud.ToString());"
            ],
            [
                93,
                "            var attributes = memInfo[0].GetCustomAttributes(typeof(DescriptionAttribute), false);"
            ],
            [
                94,
                "            string cloudRegionUrl = ((DescriptionAttribute)attributes[0]).Description;"
            ],
            [
                95,
                ""
            ],
            [
                96,
                "            // Set up user credentials"
            ],
            [
                97,
                "            var creds = new System.ServiceModel.Description.ClientCredentials();"
            ],
            [
                98,
                "            creds.UserName.UserName = userName;"
            ],
            [
                99,
                "            creds.UserName.Password = password;"
            ],
            [
                100,
                ""
            ],
            [
                101,
                "            //Call DiscoverOnlineOrganizationsAsync"
            ],
            [
                102,
                "            DiscoverOrganizationsResult organizationsResult = await ServiceClient.DiscoverOnlineOrganizationsAsync("
            ],
            [
                103,
                "                   discoveryServiceUri: new Uri($\"{cloudRegionUrl}/api/discovery/v2.0/Instances\"),"
            ],
            [
                104,
                "                   clientCredentials: creds,"
            ],
            [
                105,
                "                   clientId: clientId,"
            ],
            [
                106,
                "                   redirectUri: new Uri(redirectUrl),"
            ],
            [
                107,
                "                   isOnPrem: false,"
            ],
            [
                108,
                "                   authority: \"https://login.microsoftonline.com/organizations/\","
            ],
            [
                109,
                "                   promptBehavior: PromptBehavior.Auto);"
            ],
            [
                110,
                ""
            ],
            [
                111,
                "            return organizationsResult;"
            ],
            [
                122,
                "            string conn = $@\"AuthType=OAuth;"
            ],
            [
                130,
                "            ServiceClient svc = new(conn);"
            ],
            [
                132,
                "            if (svc.IsReady)"
            ],
            [
                133,
                "            {"
            ],
            [
                134,
                "                try"
            ],
            [
                136,
                "                    var response = (WhoAmIResponse)svc.Execute(new WhoAmIRequest());"
            ],
            [
                137,
                ""
            ],
            [
                138,
                "                    Console.WriteLine($\"Your UserId for {org.FriendlyName} is: {response.UserId}\");"
            ],
            [
                140,
                "                catch (Exception ex)"
            ],
            [
                142,
                "                    Console.WriteLine(ex.Message);"
            ],
            [
                145,
                "            else"
            ],
            [
                147,
                "                Console.WriteLine(svc.LastError);"
            ]
        ]
    },
    "num_lines_added": 58,
    "num_lines_removed": 35
}