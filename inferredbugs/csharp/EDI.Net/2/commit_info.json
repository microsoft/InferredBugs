{
    "hash": "1680c8a841227e3100e53a69e43c6bd02bfc1e19",
    "message": "fixed serializer for wildcard fragments #121. Also related to #136",
    "file_num_lines": 625,
    "diff_parsed": {
        "added": [
            [
                720,
                ""
            ],
            [
                721,
                ""
            ],
            [
                730,
                "                    var propertyPath = property.PathInfo.PathInternal;"
            ],
            [
                731,
                "                    var container = stack.Skip(1).FirstOrDefault();"
            ],
            [
                732,
                "                    if (propertyPath.Segment.IsWildcard) {"
            ],
            [
                733,
                "                        if (container.Descriptor.Path.HasValue && !container.Descriptor.Path.Value.Segment.IsWildcard) {"
            ],
            [
                734,
                "                            propertyPath = new EdiPath(container.Descriptor.Path.Value.Segment, propertyPath.Element, propertyPath.Component);"
            ],
            [
                735,
                "                        }"
            ],
            [
                736,
                "                    }"
            ],
            [
                737,
                "                    if (propertyPath.Element.IsWildcard) {"
            ],
            [
                738,
                "                        propertyPath = new EdiPath(propertyPath.Segment, new EdiPathFragment(structure.Index.ToString()), propertyPath.Component);"
            ],
            [
                739,
                "                    }"
            ],
            [
                740,
                "                    if (path.Segment != propertyPath.Segment ||"
            ],
            [
                741,
                "                        structuralComparer.Compare(path, propertyPath) > 0) {"
            ],
            [
                742,
                "                        writer.WriteSegmentName(propertyPath.Segment);"
            ],
            [
                748,
                "                    while (structuralComparer.Compare(path, propertyPath) < 0) {"
            ],
            [
                749,
                "                        if (!path.Element.Equals(propertyPath.Element)) {"
            ],
            [
                754,
                "                        } else if (!path.Component.Equals(propertyPath.Component)) {"
            ]
        ],
        "deleted": [
            [
                724,
                ""
            ],
            [
                726,
                ""
            ],
            [
                730,
                "                    if (path.Segment != property.PathInfo.Segment ||"
            ],
            [
                731,
                "                        structuralComparer.Compare(path, property.PathInfo.PathInternal) > 0) {"
            ],
            [
                732,
                "                        writer.WriteSegmentName(property.PathInfo.Segment);"
            ],
            [
                738,
                "                    while (structuralComparer.Compare(path, property.PathInfo.PathInternal) < 0) {"
            ],
            [
                739,
                "                        if (path.ElementIndex != property.PathInfo.ElementIndex) {"
            ],
            [
                744,
                "                        } else if (path.ComponentIndex != property.PathInfo.ComponentIndex) {"
            ]
        ]
    },
    "num_lines_added": 18,
    "num_lines_removed": 8
}