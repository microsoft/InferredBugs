{
    "hash": "a069ab41ce3d2128a525b35e1e5de9d20792e5de",
    "message": "Refactor",
    "file_num_lines": 156,
    "diff_parsed": {
        "added": [
            [
                14,
                "    public class VideoInfo: IDisposable"
            ],
            [
                32,
                "        public VideoInfo(FileInfo sourceFileInfo): this(sourceFileInfo.FullName)"
            ],
            [
                48,
                "        /// <summary>"
            ],
            [
                49,
                "        ///     Return extension of file"
            ],
            [
                50,
                "        /// </summary>"
            ],
            [
                51,
                "        public string Extension => Path.GetExtension(FilePath);"
            ],
            [
                52,
                ""
            ],
            [
                111,
                "        /// <inheritdoc />"
            ],
            [
                112,
                "        public void Dispose()"
            ],
            [
                113,
                "        {"
            ],
            [
                114,
                "            FFmpeg.Stop();"
            ],
            [
                115,
                "            _ffmpeg?.Dispose();"
            ],
            [
                116,
                "        }"
            ],
            [
                117,
                ""
            ],
            [
                135,
                "                   \"Video Root : \" + Path.GetDirectoryName(FilePath) + Environment.NewLine +"
            ],
            [
                155,
                "            bool success = FFmpeg.ToTs(this, outputPath);"
            ],
            [
                156,
                "            if(!success)"
            ],
            [
                172,
                "            bool success = FFmpeg.ToWebM(this, outputPath, size, audioQuality);"
            ],
            [
                173,
                "            if(!success)"
            ],
            [
                190,
                "            bool success = FFmpeg.ToOgv(this, outputPath, size, audioQuality, multithread);"
            ],
            [
                191,
                "            if(!success)"
            ],
            [
                210,
                "            bool success = FFmpeg.ToMp4(this, outputPath, speed, size, audioQuality, multithread);"
            ],
            [
                211,
                "            if(!success)"
            ],
            [
                256,
                "            string output = $\"{Environment.TickCount}.png\";"
            ],
            [
                298,
                "            using(Image bmp = Image.FromFile(Path.ChangeExtension(output, \".png\")))"
            ]
        ],
        "deleted": [
            [
                14,
                "    public class VideoInfo : IDisposable"
            ],
            [
                19,
                ""
            ],
            [
                22,
                "        /// <summary>"
            ],
            [
                23,
                "        ///     Return extension of file"
            ],
            [
                24,
                "        /// </summary>"
            ],
            [
                25,
                "        public string Extension => Path.GetExtension(FilePath);"
            ],
            [
                26,
                ""
            ],
            [
                38,
                "        public VideoInfo(FileInfo sourceFileInfo) : this(sourceFileInfo.FullName)"
            ],
            [
                49,
                "            {"
            ],
            [
                51,
                "            }"
            ],
            [
                131,
                "                   \"Video Root : \" + Path.GetDirectoryName(FilePath)+ Environment.NewLine +"
            ],
            [
                151,
                "            var success = FFmpeg.ToTs(this, outputPath);"
            ],
            [
                152,
                "            if (!success)"
            ],
            [
                168,
                "            var success = FFmpeg.ToWebM(this, outputPath, size, audioQuality);"
            ],
            [
                169,
                "            if (!success)"
            ],
            [
                186,
                "            var success = FFmpeg.ToOgv(this, outputPath, size, audioQuality, multithread);"
            ],
            [
                187,
                "            if (!success)"
            ],
            [
                206,
                "            var success = FFmpeg.ToMp4(this, outputPath, speed, size, audioQuality, multithread);"
            ],
            [
                207,
                "            if (!success)"
            ],
            [
                252,
                "            var output = $\"{Environment.TickCount}.png\";"
            ],
            [
                294,
                "            using(Image bmp = Image.FromFile(System.IO.Path.ChangeExtension(output, \".png\")))"
            ],
            [
                316,
                ""
            ],
            [
                317,
                "        /// <inheritdoc />"
            ],
            [
                318,
                "        public void Dispose()"
            ],
            [
                319,
                "        {"
            ],
            [
                320,
                "            FFmpeg.Stop();"
            ],
            [
                321,
                "            _ffmpeg?.Dispose();"
            ],
            [
                322,
                "        }"
            ]
        ]
    },
    "num_lines_added": 25,
    "num_lines_removed": 28
}