{
    "hash": "ddc6159cb75c4503aec88c84190defe2b5aedd69",
    "message": "Adding Common project, organizing the solution a bit, making the DrawStress sample use more of the library.",
    "file_num_lines": 63,
    "diff_parsed": {
        "added": [
            [
                5,
                "using System.Threading;"
            ],
            [
                8,
                "using Common;"
            ],
            [
                12,
                "    static class Program {"
            ],
            [
                13,
                "        static EventQueue eventQueue = new EventQueue();"
            ],
            [
                14,
                "        static int windowWidth = 1280;"
            ],
            [
                15,
                "        static int windowHeight = 720;"
            ],
            [
                16,
                ""
            ],
            [
                20,
                "                ClientSize = new Size(windowWidth, windowHeight)"
            ],
            [
                23,
                "            form.ClientSizeChanged += (o, e) => eventQueue.Post(new SizeEvent(form.ClientSize.Width, form.ClientSize.Height));"
            ],
            [
                24,
                "            form.FormClosed += (o, e) => eventQueue.Post(new Event(EventType.Exit));"
            ],
            [
                26,
                "            Bgfx.SetWindowHandle(form.Handle);"
            ],
            [
                28,
                "            eventQueue.Post(new SizeEvent(form.ClientSize.Width, form.ClientSize.Height));"
            ],
            [
                30,
                "            var thread = new Thread(RenderThread);"
            ],
            [
                31,
                "            thread.Start();"
            ],
            [
                35,
                "            thread.Join();"
            ],
            [
                36,
                "        }"
            ],
            [
                37,
                ""
            ],
            [
                38,
                "        static void MainLoop () {"
            ],
            [
                39,
                "            Bgfx.SetViewRect(0, 0, 0, (ushort)windowWidth, (ushort)windowHeight);"
            ],
            [
                40,
                "            Bgfx.Submit(0, 0);"
            ],
            [
                41,
                ""
            ],
            [
                42,
                "            Bgfx.Frame();"
            ],
            [
                43,
                "        }"
            ],
            [
                44,
                ""
            ],
            [
                45,
                "        static void RenderThread () {"
            ],
            [
                46,
                "            Bgfx.Init(RendererType.OpenGL, IntPtr.Zero, IntPtr.Zero);"
            ],
            [
                47,
                "            Bgfx.Reset(windowWidth, windowHeight, ResetFlags.None);"
            ],
            [
                48,
                "            Bgfx.SetDebugFlags(DebugFlags.DisplayText);"
            ],
            [
                49,
                ""
            ],
            [
                50,
                "            Bgfx.SetViewClear(0, ClearFlags.ColorBit | ClearFlags.DepthBit, 0x303030ff, 1.0f, 0);"
            ],
            [
                51,
                ""
            ],
            [
                52,
                "            while (ProcessEvents())"
            ],
            [
                53,
                "                MainLoop();"
            ],
            [
                54,
                ""
            ],
            [
                57,
                ""
            ],
            [
                58,
                "        static bool ProcessEvents () {"
            ],
            [
                59,
                "            Event ev;"
            ],
            [
                60,
                "            bool resizeRequired = false;"
            ],
            [
                61,
                ""
            ],
            [
                62,
                "            while ((ev = eventQueue.Poll()) != null) {"
            ],
            [
                63,
                "                switch (ev.Type) {"
            ],
            [
                64,
                "                    case EventType.Exit:"
            ],
            [
                65,
                "                        return false;"
            ],
            [
                66,
                ""
            ],
            [
                67,
                "                    case EventType.Size:"
            ],
            [
                68,
                "                        var size = (SizeEvent)ev;"
            ],
            [
                69,
                "                        windowWidth = size.Width;"
            ],
            [
                70,
                "                        windowHeight = size.Height;"
            ],
            [
                71,
                "                        resizeRequired = true;"
            ],
            [
                72,
                "                        break;"
            ],
            [
                73,
                "                }"
            ],
            [
                74,
                "            }"
            ],
            [
                75,
                ""
            ],
            [
                76,
                "            if (resizeRequired)"
            ],
            [
                77,
                "                Bgfx.Reset(windowWidth, windowHeight, ResetFlags.None);"
            ],
            [
                78,
                ""
            ],
            [
                79,
                "            return true;"
            ],
            [
                80,
                "        }"
            ]
        ],
        "deleted": [
            [
                10,
                "    unsafe static class Program {"
            ],
            [
                14,
                "                ClientSize = new Size(920, 760)"
            ],
            [
                17,
                "            Bgfx.SetWindowHandle(form.Handle);"
            ],
            [
                18,
                "            Bgfx.Init(RendererType.OpenGL, IntPtr.Zero, IntPtr.Zero);"
            ],
            [
                20,
                "            var renderers = Bgfx.GetSupportedRenderers();"
            ],
            [
                22,
                "            var current = Bgfx.GetCurrentRenderer();"
            ],
            [
                23,
                "            var name = Bgfx.GetRendererName(current);"
            ],
            [
                25,
                "            var caps = Bgfx.GetCaps();"
            ]
        ]
    },
    "num_lines_added": 58,
    "num_lines_removed": 8
}