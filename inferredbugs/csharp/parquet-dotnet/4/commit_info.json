{
    "hash": "b5170d4c1d23d105ff2e85f53a0e272d6cb1ee82",
    "message": "PositionTrackingStream makes forward-only stream really work",
    "file_num_lines": 114,
    "diff_parsed": {
        "added": [
            [
                30,
                "      public ParquetWriter(Stream output, ParquetOptions formatOptions = null, WriterOptions writerOptions = null)"
            ],
            [
                31,
                "         : base(new PositionTrackingStream(output))"
            ],
            [
                33,
                "         if (output == null) throw new ArgumentNullException(nameof(output));"
            ],
            [
                34,
                ""
            ],
            [
                57,
                "            long rgStartPos = Stream.Position;"
            ],
            [
                62,
                "               var cw = new ColumnWriter(Stream, ThriftStream, _meta, se, compression, _formatOptions, _writerOptions);"
            ],
            [
                84,
                "            if (!Stream.CanSeek) throw new IOException(\"destination stream must be seekable for append operations.\");"
            ],
            [
                160,
                "         Stream.Write(MagicBytes, 0, MagicBytes.Length);"
            ],
            [
                180,
                "         Stream.Flush();"
            ]
        ],
        "deleted": [
            [
                16,
                "      private readonly Stream _output;"
            ],
            [
                31,
                "      public ParquetWriter(Stream output, ParquetOptions formatOptions = null, WriterOptions writerOptions = null) : base(output)"
            ],
            [
                33,
                "         _output = output ?? throw new ArgumentNullException(nameof(output));"
            ],
            [
                56,
                "            long rgStartPos = _output.Position;"
            ],
            [
                61,
                "               var cw = new ColumnWriter(_output, ThriftStream, _meta, se, compression, _formatOptions, _writerOptions);"
            ],
            [
                83,
                "            if (!_output.CanSeek) throw new IOException(\"destination stream must be seekable for append operations.\");"
            ],
            [
                159,
                "         _output.Write(MagicBytes, 0, MagicBytes.Length);"
            ],
            [
                179,
                "         _output.Flush();"
            ]
        ]
    },
    "num_lines_added": 9,
    "num_lines_removed": 8
}