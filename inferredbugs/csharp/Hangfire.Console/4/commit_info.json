{
    "hash": "2d338f39daa7dda22d7329198351f08c86b08fdf",
    "message": "Update code to use C# 7 features;\nAdd explicit validations for connection/transaction to implement JobStorageConnection/JobStorageTransaction;\nUpdate unit tests",
    "file_num_lines": 285,
    "diff_parsed": {
        "added": [
            [
                11,
                "using KVP = System.Collections.Generic.KeyValuePair<string, string>;"
            ],
            [
                38,
                ""
            ],
            [
                39,
                "        [Fact]"
            ],
            [
                40,
                "        public void Ctor_ThrowsException_IfNotImplementsJobStorageConnection()"
            ],
            [
                41,
                "        {"
            ],
            [
                42,
                "            var dummyConnection = new Mock<IStorageConnection>();"
            ],
            [
                43,
                ""
            ],
            [
                44,
                "            Assert.Throws<NotSupportedException>(() => new ConsoleStorage(dummyConnection.Object));"
            ],
            [
                45,
                "        }"
            ],
            [
                64,
                ""
            ],
            [
                65,
                "        [Fact]"
            ],
            [
                66,
                "        public void InitConsole_ThrowsException_IfNotImplementsJobStorageTransaction()"
            ],
            [
                67,
                "        {"
            ],
            [
                68,
                "            var dummyTransaction = new Mock<IWriteOnlyTransaction>();"
            ],
            [
                69,
                "            _connection.Setup(x => x.CreateWriteTransaction())"
            ],
            [
                70,
                "                .Returns(dummyTransaction.Object);"
            ],
            [
                71,
                ""
            ],
            [
                72,
                "            var storage = new ConsoleStorage(_connection.Object);"
            ],
            [
                73,
                ""
            ],
            [
                74,
                "            Assert.Throws<NotSupportedException>(() => storage.InitConsole(_consoleId));"
            ],
            [
                75,
                "        }"
            ],
            [
                84,
                "            _connection.Verify(x => x.CreateWriteTransaction(), Times.Once);"
            ],
            [
                85,
                "            _transaction.Verify(x => x.SetRangeInHash(_consoleId.GetHashKey(), It2.AnyIs<KVP>(p => p.Key == \"jobId\")));"
            ],
            [
                86,
                "            _transaction.Verify(x => x.Commit(), Times.Once);"
            ],
            [
                122,
                "            _connection.Verify(x => x.CreateWriteTransaction(), Times.Once);"
            ],
            [
                124,
                "            _transaction.Verify(x => x.SetRangeInHash(_consoleId.GetHashKey(), It.IsAny<IEnumerable<KVP>>()), Times.Never);"
            ],
            [
                125,
                "            _transaction.Verify(x => x.Commit(), Times.Once);"
            ],
            [
                144,
                "            _connection.Verify(x => x.CreateWriteTransaction(), Times.Once);"
            ],
            [
                146,
                "            _transaction.Verify(x => x.SetRangeInHash(_consoleId.GetHashKey(), It2.AnyIs<KVP>(p => p.Key == line.Message)));"
            ],
            [
                147,
                "            _transaction.Verify(x => x.Commit(), Times.Once);"
            ],
            [
                165,
                "            _connection.Verify(x => x.CreateWriteTransaction(), Times.Once);"
            ],
            [
                168,
                "            _transaction.Verify(x => x.Commit(), Times.Once);"
            ],
            [
                178,
                "            _connection.Verify(x => x.CreateWriteTransaction(), Times.Once);"
            ],
            [
                181,
                "            _transaction.Verify(x => x.Commit(), Times.Once);"
            ]
        ],
        "deleted": [
            [
                63,
                "            _connection.Verify(x => x.SetRangeInHash(_consoleId.GetHashKey(), It.IsAny<IEnumerable<KeyValuePair<string, string>>>()));"
            ],
            [
                100,
                "            _transaction.Verify(x => x.SetRangeInHash(_consoleId.GetHashKey(), It.IsAny<IEnumerable<KeyValuePair<string, string>>>()), Times.Never);"
            ],
            [
                120,
                "            _transaction.Verify(x => x.SetRangeInHash(_consoleId.GetHashKey(), It.IsAny<IEnumerable<KeyValuePair<string, string>>>()));"
            ],
            [
                138,
                "            _connection.Verify(x => x.CreateWriteTransaction());"
            ],
            [
                139,
                ""
            ],
            [
                142,
                ""
            ],
            [
                143,
                "            _transaction.Verify(x => x.Commit());"
            ],
            [
                153,
                "            _connection.Verify(x => x.CreateWriteTransaction());"
            ],
            [
                154,
                ""
            ],
            [
                157,
                ""
            ],
            [
                158,
                "            _transaction.Verify(x => x.Commit());"
            ]
        ]
    },
    "num_lines_added": 34,
    "num_lines_removed": 11
}