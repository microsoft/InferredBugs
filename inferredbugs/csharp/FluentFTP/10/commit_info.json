{
    "hash": "7d0a3cf22cce76e239935e76717f9af5cf1d1679",
    "message": "New DirectoryExists implementation that uses CWD to test instead of a directory listing.\nNew static methods in FtpControlConnection for cleaning up path names and extracting information from path names.\nAdded mutex locking to methods in FtpClient that were not already locking / LockControlConnection() / UnlockControlConnection(), where appropriate.\nBug fix in GetFileSize() method that caused file size to alway be 0 even when the server responded correctly",
    "file_num_lines": 622,
    "diff_parsed": {
        "added": [
            [
                55,
                "                try {"
            ],
            [
                56,
                "                    this.LockControlConnection();"
            ],
            [
                58,
                "                    if (_currentDirectory == null) {"
            ],
            [
                59,
                "                        FtpReply reply;"
            ],
            [
                60,
                "                        Match m;"
            ],
            [
                62,
                "                        if (!(reply = this.Execute(\"PWD\")).Success) {"
            ],
            [
                63,
                "                            throw new FtpCommandException(reply);"
            ],
            [
                64,
                "                        }"
            ],
            [
                65,
                ""
            ],
            [
                66,
                "                        m = Regex.Match(reply.Message, \"\\\"(.*)\\\"\");"
            ],
            [
                67,
                "                        if (!m.Success || m.Groups.Count < 2) {"
            ],
            [
                68,
                "                            throw new FtpCommandException(reply.Code,"
            ],
            [
                69,
                "                                string.Format(\"Failed to parse current working directory from {0}\", reply.Message));"
            ],
            [
                70,
                "                        }"
            ],
            [
                72,
                "                        this._currentDirectory = new FtpDirectory(this, m.Groups[1].Value);"
            ],
            [
                73,
                "                    }"
            ],
            [
                74,
                "                }"
            ],
            [
                75,
                "                finally {"
            ],
            [
                76,
                "                    this.UnlockControlConnection();"
            ],
            [
                94,
                "                try {"
            ],
            [
                95,
                "                    this.LockControlConnection();"
            ],
            [
                96,
                ""
            ],
            [
                97,
                "                    if (!(reply = this.Execute(\"SYST\")).Success) {"
            ],
            [
                98,
                "                        throw new FtpCommandException(reply);"
            ],
            [
                99,
                "                    }"
            ],
            [
                100,
                "                }"
            ],
            [
                101,
                "                finally {"
            ],
            [
                102,
                "                    this.UnlockControlConnection();"
            ],
            [
                232,
                "            try {"
            ],
            [
                233,
                "                this.LockControlConnection();"
            ],
            [
                234,
                ""
            ],
            [
                235,
                "                if (!(reply = this.Execute(\"NOOP\")).Success) {"
            ],
            [
                236,
                "                    throw new FtpCommandException(reply);"
            ],
            [
                237,
                "                }"
            ],
            [
                238,
                "            }"
            ],
            [
                239,
                "            finally {"
            ],
            [
                240,
                "                this.UnlockControlConnection();"
            ],
            [
                289,
                "            try {"
            ],
            [
                290,
                "                this.LockControlConnection();"
            ],
            [
                292,
                "                using (FtpDataStream s = this.OpenDataStream(FtpDataType.ASCII)) {"
            ],
            [
                293,
                "                    FtpReply reply;"
            ],
            [
                294,
                ""
            ],
            [
                295,
                "                    if (!(reply = s.Execute(\"{0} {1}\", cmd, GetFtpPath(path))).Success) {"
            ],
            [
                296,
                "                        throw new FtpCommandException(reply);"
            ],
            [
                297,
                "                    }"
            ],
            [
                299,
                "                    while ((buf = s.ReadLine()) != null) {"
            ],
            [
                300,
                "                        lst.Add(buf);"
            ],
            [
                301,
                "                    }"
            ],
            [
                304,
                "            finally {"
            ],
            [
                305,
                "                this.UnlockControlConnection();"
            ],
            [
                306,
                "            }"
            ],
            [
                411,
                "            try {"
            ],
            [
                412,
                "                this.LockControlConnection();"
            ],
            [
                413,
                ""
            ],
            [
                414,
                "                if (!(reply = this.Execute(\"SITE CHMOD {0} {1}\", mode, GetFtpPath(path))).Success)"
            ],
            [
                415,
                "                    throw new FtpCommandException(reply);"
            ],
            [
                416,
                "            }"
            ],
            [
                417,
                "            finally {"
            ],
            [
                418,
                "                this.UnlockControlConnection();"
            ],
            [
                419,
                "            }"
            ],
            [
                429,
                "            try {"
            ],
            [
                430,
                "                this.LockControlConnection();"
            ],
            [
                431,
                ""
            ],
            [
                432,
                "                if (!(reply = this.Execute(\"CWD {0}\", GetFtpPath(path))).Success) {"
            ],
            [
                433,
                "                    throw new FtpCommandException(reply);"
            ],
            [
                434,
                "                }"
            ],
            [
                435,
                "            }"
            ],
            [
                436,
                "            finally {"
            ],
            [
                437,
                "                this.UnlockControlConnection();"
            ],
            [
                452,
                "            try {"
            ],
            [
                453,
                "                this.LockControlConnection();"
            ],
            [
                454,
                ""
            ],
            [
                455,
                "                if (!this.HasCapability(FtpCapability.MDTM)) {"
            ],
            [
                456,
                "                    throw new NotImplementedException(\"The connected server does not support the MDTM command.\");"
            ],
            [
                457,
                "                }"
            ],
            [
                459,
                "                if ((reply = this.Execute(\"MDTM {0}\", GetFtpPath(path))).Success) {"
            ],
            [
                460,
                "                    return this.ParseLastWriteTime(reply.Message);"
            ],
            [
                461,
                "                }"
            ],
            [
                462,
                "            }"
            ],
            [
                463,
                "            finally {"
            ],
            [
                464,
                "                this.UnlockControlConnection();"
            ],
            [
                494,
                "            try {"
            ],
            [
                495,
                "                this.LockControlConnection();"
            ],
            [
                496,
                ""
            ],
            [
                497,
                "                if (!(reply = this.Execute(\"RMD {0}\", GetFtpPath(path))).Success) {"
            ],
            [
                498,
                "                    throw new FtpCommandException(reply);"
            ],
            [
                499,
                "                }"
            ],
            [
                500,
                "            }"
            ],
            [
                501,
                "            finally {"
            ],
            [
                502,
                "                this.UnlockControlConnection();"
            ],
            [
                513,
                "            try {"
            ],
            [
                514,
                "                this.LockControlConnection();"
            ],
            [
                515,
                ""
            ],
            [
                516,
                "                if (!(reply = this.Execute(\"DELE {0}\", GetFtpPath(path))).Success) {"
            ],
            [
                517,
                "                    throw new FtpCommandException(reply);"
            ],
            [
                518,
                "                }"
            ],
            [
                519,
                "            }"
            ],
            [
                520,
                "            finally {"
            ],
            [
                521,
                "                this.UnlockControlConnection();"
            ],
            [
                532,
                "            if (!(reply = this.Execute(\"MKD {0}\", GetFtpPath(path))).Success) {"
            ],
            [
                540,
                "        /// <param name=\"path\">The full or relative path to the object</param>"
            ],
            [
                541,
                "        /// <returns>A FtpListItem object which will be empty if the object"
            ],
            [
                542,
                "        /// information was unable to be retrieved</returns>"
            ],
            [
                544,
                "            path = GetFtpPath(path);"
            ],
            [
                545,
                ""
            ],
            [
                546,
                "            // this method doesn't work properly for '/' on servers"
            ],
            [
                547,
                "            // that only support LIST because LIST / returns the contents"
            ],
            [
                548,
                "            // of / instead of information about / itself."
            ],
            [
                549,
                "            if (path == \"/\" && !this.Capabilities.HasFlag(FtpCapability.MLST))"
            ],
            [
                550,
                "                return new FtpListItem();"
            ],
            [
                551,
                ""
            ],
            [
                560,
                "                foreach (FtpListItem l in this.GetListing(GetFtpDirectoryName(path))) {"
            ],
            [
                561,
                "                    if (l.Name == GetFtpBaseName(path)) {"
            ],
            [
                576,
                "            FtpReply reply;"
            ],
            [
                577,
                "            string pwd;"
            ],
            [
                578,
                ""
            ],
            [
                580,
                "                this.LockControlConnection();"
            ],
            [
                581,
                "                path = GetFtpPath(path);"
            ],
            [
                582,
                ""
            ],
            [
                585,
                "                if (path == \"/\")"
            ],
            [
                588,
                "                // if we can change the working directory to the path"
            ],
            [
                589,
                "                // then it must exist..."
            ],
            [
                590,
                "                pwd = this.CurrentDirectory.FullName;"
            ],
            [
                591,
                "                if ((reply = this.Execute(\"CWD {0}\", path)).Success) {"
            ],
            [
                592,
                "                    this.SetWorkingDirectory(pwd);"
            ],
            [
                593,
                "                    return true;"
            ],
            [
                594,
                "                }"
            ],
            [
                596,
                "            finally {"
            ],
            [
                597,
                "                this.UnlockControlConnection();"
            ],
            [
                599,
                ""
            ],
            [
                600,
                "            return false;"
            ],
            [
                625,
                "            FtpReply reply;"
            ],
            [
                627,
                "            try {"
            ],
            [
                630,
                "                if (!(reply = this.Execute(\"RNFR {0}\", GetFtpPath(from))).Success) {"
            ],
            [
                634,
                "                if (!(reply = this.Execute(\"RNTO {0}\", GetFtpPath(to))).Success) {"
            ],
            [
                1156,
                "            if (istream.CanSeek && rest > 0) {"
            ],
            [
                1157,
                "                istream.Seek(rest, SeekOrigin.Begin);"
            ],
            [
                1158,
                "                total = rest;"
            ],
            [
                1164,
                "            try {"
            ],
            [
                1165,
                "                this.LockControlConnection();"
            ],
            [
                1166,
                ""
            ],
            [
                1167,
                "                using (FtpDataStream ch = this.OpenFile(remote.FullName, datatype, FtpFileAccess.Write, rest)) {"
            ],
            [
                1168,
                "                    byte[] buf = new byte[ch.SendBufferSize];"
            ],
            [
                1169,
                "                    DateTime start = DateTime.Now;"
            ],
            [
                1170,
                "                    FtpTransferInfo e;"
            ],
            [
                1172,
                "                    while ((read = istream.Read(buf, 0, buf.Length)) > 0) {"
            ],
            [
                1173,
                "                        ch.Write(buf, 0, read);"
            ],
            [
                1174,
                "                        total += read;"
            ],
            [
                1175,
                "                        e = new FtpTransferInfo(FtpTransferType.Upload, remote.FullName, istream.Length, rest, total, start, false);"
            ],
            [
                1177,
                "                        this.OnTransferProgress(e);"
            ],
            [
                1178,
                "                        if (e.Cancel) {"
            ],
            [
                1179,
                "                            break;"
            ],
            [
                1180,
                "                        }"
            ],
            [
                1183,
                "                    // fire one more time to let event handler know the transfer is complete"
            ],
            [
                1184,
                "                    this.OnTransferProgress(new FtpTransferInfo(FtpTransferType.Upload, remote.FullName,"
            ],
            [
                1185,
                "                        istream.Length, rest, total, start, true));"
            ],
            [
                1186,
                "                }"
            ],
            [
                1187,
                "            }"
            ],
            [
                1188,
                "            finally {"
            ],
            [
                1189,
                "                this.UnlockControlConnection();"
            ],
            [
                1314,
                "            try {"
            ],
            [
                1315,
                "                this.LockControlConnection();"
            ],
            [
                1317,
                "                using (FtpDataStream ch = this.OpenFile(remote.FullName, datatype, append ? FtpFileAccess.Append : FtpFileAccess.Write)) {"
            ],
            [
                1318,
                "                    byte[] buf = new byte[ch.SendBufferSize];"
            ],
            [
                1319,
                "                    DateTime start = DateTime.Now;"
            ],
            [
                1320,
                "                    FtpTransferInfo e;"
            ],
            [
                1322,
                "                    while ((read = istream.Read(buf, 0, buf.Length)) > 0) {"
            ],
            [
                1323,
                "                        ch.Write(buf, 0, read);"
            ],
            [
                1324,
                "                        total += read;"
            ],
            [
                1325,
                "                        e = new FtpTransferInfo(FtpTransferType.Upload, remote.FullName, size, rest, total, start, false);"
            ],
            [
                1326,
                ""
            ],
            [
                1327,
                "                        this.OnTransferProgress(e);"
            ],
            [
                1328,
                "                        if (e.Cancel) {"
            ],
            [
                1329,
                "                            break;"
            ],
            [
                1330,
                "                        }"
            ],
            [
                1333,
                "                    // fire one more time to let event handler know the transfer is complete"
            ],
            [
                1334,
                "                    this.OnTransferProgress(new FtpTransferInfo(FtpTransferType.Upload, remote.FullName,"
            ],
            [
                1335,
                "                        size, rest, total, start, true));"
            ],
            [
                1336,
                "                }"
            ],
            [
                1337,
                "            }"
            ],
            [
                1338,
                "            finally {"
            ],
            [
                1339,
                "                this.UnlockControlConnection();"
            ]
        ],
        "deleted": [
            [
                55,
                "                if (_currentDirectory == null) {"
            ],
            [
                56,
                "                    FtpReply reply;"
            ],
            [
                57,
                "                    Match m;"
            ],
            [
                59,
                "                    if (!(reply = this.Execute(\"PWD\")).Success) {"
            ],
            [
                60,
                "                        throw new FtpCommandException(reply);"
            ],
            [
                61,
                "                    }"
            ],
            [
                63,
                "                    m = Regex.Match(reply.Message, \"\\\"(.*)\\\"\");"
            ],
            [
                64,
                "                    if (!m.Success || m.Groups.Count < 2) {"
            ],
            [
                65,
                "                        throw new FtpCommandException(reply.Code,"
            ],
            [
                66,
                "                            string.Format(\"Failed to parse current working directory from {0}\", reply.Message));"
            ],
            [
                67,
                "                    }"
            ],
            [
                69,
                "                    this._currentDirectory = new FtpDirectory(this, m.Groups[1].Value);"
            ],
            [
                87,
                "                if (!(reply = this.Execute(\"SYST\")).Success) {"
            ],
            [
                88,
                "                    throw new FtpCommandException(reply);"
            ],
            [
                218,
                "            if (!(reply = this.Execute(\"NOOP\")).Success) {"
            ],
            [
                219,
                "                throw new FtpCommandException(reply);"
            ],
            [
                268,
                "            using (FtpDataStream s = this.OpenDataStream(FtpDataType.ASCII)) {"
            ],
            [
                269,
                "                FtpReply reply;"
            ],
            [
                271,
                "                if (!(reply = s.Execute(\"{0} {1}\", cmd, path)).Success) {"
            ],
            [
                272,
                "                    throw new FtpCommandException(reply);"
            ],
            [
                273,
                "                }"
            ],
            [
                275,
                "                while ((buf = s.ReadLine()) != null) {"
            ],
            [
                276,
                "                    lst.Add(buf);"
            ],
            [
                383,
                "            if (!(reply = this.Execute(\"SITE CHMOD {0} {1}\", mode, path)).Success)"
            ],
            [
                384,
                "                throw new FtpCommandException(reply);"
            ],
            [
                394,
                "            if (!(reply = this.Execute(\"CWD {0}\", path)).Success) {"
            ],
            [
                395,
                "                throw new FtpCommandException(reply);"
            ],
            [
                410,
                "            if (!this.HasCapability(FtpCapability.MDTM)) {"
            ],
            [
                411,
                "                throw new NotImplementedException(\"The connected server does not support the MDTM command.\");"
            ],
            [
                412,
                "            }"
            ],
            [
                414,
                "            if ((reply = this.Execute(\"MDTM {0}\", path)).Success) {"
            ],
            [
                415,
                "                return this.ParseLastWriteTime(reply.Message);"
            ],
            [
                445,
                "            if (!(reply = this.Execute(\"RMD {0}\", path)).Success) {"
            ],
            [
                446,
                "                throw new FtpCommandException(reply);"
            ],
            [
                457,
                "            if (!(reply = this.Execute(\"DELE {0}\", path)).Success) {"
            ],
            [
                458,
                "                throw new FtpCommandException(reply);"
            ],
            [
                469,
                "            if (!(reply = this.Execute(\"MKD {0}\", path)).Success) {"
            ],
            [
                477,
                "        /// <param name=\"path\"></param>"
            ],
            [
                478,
                "        /// <returns></returns>"
            ],
            [
                488,
                "                string directoryName = Path.GetDirectoryName(path.Replace(\"\\\\\", \"/\").TrimEnd('/')).Replace(\"\\\\\", \"/\");"
            ],
            [
                489,
                "                string fileName = Path.GetFileName(path.Replace(\"\\\\\", \"/\").TrimEnd('/')).Replace(\"\\\\\", \"/\");"
            ],
            [
                490,
                ""
            ],
            [
                491,
                "                foreach (FtpListItem l in this.GetListing(directoryName)) {"
            ],
            [
                492,
                "                    if (l.Name == fileName) {"
            ],
            [
                510,
                "                if (path.Replace(\"\\\\\", \"/\").TrimEnd('/').Length == 0)"
            ],
            [
                513,
                "                return this.GetObjectInfo(path).Type == FtpObjectType.Directory;"
            ],
            [
                515,
                "            catch (FtpCommandException) {"
            ],
            [
                516,
                "                // a command exception can be thrown if the"
            ],
            [
                517,
                "                // root directory does not exist"
            ],
            [
                518,
                "                return false;"
            ],
            [
                544,
                "            try {"
            ],
            [
                545,
                "                FtpReply reply;"
            ],
            [
                549,
                "                if (!(reply = this.Execute(\"RNFR {0}\", from)).Success) {"
            ],
            [
                553,
                "                if (!(reply = this.Execute(\"RNTO {0}\", to)).Success) {"
            ],
            [
                1060,
                "            long size = 0;"
            ],
            [
                1076,
                "            if (istream.CanSeek) {"
            ],
            [
                1077,
                "                size = istream.Length;"
            ],
            [
                1078,
                ""
            ],
            [
                1079,
                "                if (rest > 0) { // set resume position"
            ],
            [
                1080,
                "                    istream.Seek(rest, SeekOrigin.Begin);"
            ],
            [
                1081,
                "                    total = rest;"
            ],
            [
                1082,
                "                }"
            ],
            [
                1088,
                "            using (FtpDataStream ch = this.OpenFile(remote.FullName, datatype, FtpFileAccess.Write, rest)) {"
            ],
            [
                1089,
                "                byte[] buf = new byte[ch.SendBufferSize];"
            ],
            [
                1090,
                "                DateTime start = DateTime.Now;"
            ],
            [
                1091,
                "                FtpTransferInfo e;"
            ],
            [
                1093,
                "                while ((read = istream.Read(buf, 0, buf.Length)) > 0) {"
            ],
            [
                1094,
                "                    ch.Write(buf, 0, read);"
            ],
            [
                1095,
                "                    total += read;"
            ],
            [
                1096,
                "                    e = new FtpTransferInfo(FtpTransferType.Upload, remote.FullName, size, rest, total, start, false);"
            ],
            [
                1098,
                "                    this.OnTransferProgress(e);"
            ],
            [
                1099,
                "                    if (e.Cancel) {"
            ],
            [
                1100,
                "                        break;"
            ],
            [
                1102,
                "                }"
            ],
            [
                1104,
                "                // fire one more time to let event handler know the transfer is complete"
            ],
            [
                1105,
                "                this.OnTransferProgress(new FtpTransferInfo(FtpTransferType.Upload, remote.FullName,"
            ],
            [
                1106,
                "                    size, rest, total, start, true));"
            ],
            [
                1231,
                "            using (FtpDataStream ch = this.OpenFile(remote.FullName, datatype, append ? FtpFileAccess.Append : FtpFileAccess.Write)) {"
            ],
            [
                1232,
                "                byte[] buf = new byte[ch.SendBufferSize];"
            ],
            [
                1233,
                "                DateTime start = DateTime.Now;"
            ],
            [
                1234,
                "                FtpTransferInfo e;"
            ],
            [
                1236,
                "                while ((read = istream.Read(buf, 0, buf.Length)) > 0) {"
            ],
            [
                1237,
                "                    ch.Write(buf, 0, read);"
            ],
            [
                1238,
                "                    total += read;"
            ],
            [
                1239,
                "                    e = new FtpTransferInfo(FtpTransferType.Upload, remote.FullName, size, rest, total, start, false);"
            ],
            [
                1241,
                "                    this.OnTransferProgress(e);"
            ],
            [
                1242,
                "                    if (e.Cancel) {"
            ],
            [
                1243,
                "                        break;"
            ],
            [
                1245,
                "                }"
            ],
            [
                1247,
                "                // fire one more time to let event handler know the transfer is complete"
            ],
            [
                1248,
                "                this.OnTransferProgress(new FtpTransferInfo(FtpTransferType.Upload, remote.FullName,"
            ],
            [
                1249,
                "                    size, rest, total, start, true));"
            ]
        ]
    },
    "num_lines_added": 182,
    "num_lines_removed": 92
}