  static void Main(string[] args) {
			FtpTrace.FlushOnWrite = true;
			FtpTrace.AddListener(new ConsoleTraceListener());

			try {
				/*foreach (int i in new int[] {
					 (int)FtpDataConnectionType.EPSV,
					 (int)FtpDataConnectionType.EPRT,
					 (int)FtpDataConnectionType.PASV,
					 (int)FtpDataConnectionType.PORT
				 }) {
					using (FtpClient cl = new FtpClient()) {
						cl.Credentials = new NetworkCredential(m_user, m_pass);
						cl.Host = m_host;
						cl.EncryptionMode = FtpEncryptionMode.None;
						cl.ValidateCertificate += new FtpSslValidation(cl_ValidateCertificate);
						cl.DataConnectionType = (FtpDataConnectionType)i;
						//cl.Encoding = System.Text.Encoding.Default;
						cl.Connect();
						Upload(cl);
						Download(cl);
						Delete(cl);
					}
				}*/

				//StreamResponses();

				//TestServer();

				//TestManualEncoding();

				//TestServer();

				//TestDisposeWithMultipleThreads();

				//TestMODCOMP_PWD_Parser();
				//TestDispose();
				//TestHash();

				//TestNameListing();
				//TestNameListingFTPS();

				//TestOpenVMSParser();
				// TestIISParser();
				//GetMicrosoftFTPListing();
				//TestReset();
				//TestUTF8();

				//TestDirectoryWithDots();

				//TestUnixListParser();

				// TestFileZillaKick();

				//TestUnixList();
				//TestNetBSDServer();

				// TestConnectionFailure();

				//TestGetObjectInfo();

				//TestFtpPath();

				//TestUnixListing();

				//TestListPath();

				//TestListPathWithHttp11Proxy();

				//TestUploadDownloadFile();

				//TestUploadDownloadManyFiles();

				//TestUploadDownloadZeroLenFile();

				//TestListSpacedPath();

				//TestUploadDownloadManyFiles2();

				TestUploadDownloadFile_UTF();

				//TestUploadDownloadFile_ANSI();

				//TestFilePermissions();

			} catch (Exception ex) {
				Console.WriteLine(ex.ToString());
			}

			Console.WriteLine("--DONE--");
			// Console.ReadKey();
		}