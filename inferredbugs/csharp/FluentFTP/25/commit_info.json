{
    "hash": "19d7bbf34e3deedc614c8dd56fd53211fa4067a0",
    "message": "Created Async Test Cases",
    "file_num_lines": 838,
    "diff_parsed": {
        "added": [
            [
                24,
                "\t    private static readonly int[] connectionTypes = new int[] {"
            ],
            [
                25,
                "\t        (int) FtpDataConnectionType.EPSV,"
            ],
            [
                26,
                "\t        (int) FtpDataConnectionType.EPRT,"
            ],
            [
                27,
                "\t        (int) FtpDataConnectionType.PASV,"
            ],
            [
                28,
                "\t        (int) FtpDataConnectionType.PORT"
            ],
            [
                29,
                "\t    };"
            ],
            [
                30,
                ""
            ],
            [
                37,
                "\t\t\t\t/*foreach (int i in connectionTypes) {"
            ],
            [
                112,
                "                //Async Tests"
            ],
            [
                113,
                "\t\t\t    Console.WriteLine(\"Running Async Tests\");"
            ],
            [
                114,
                "\t\t\t    List<Task> tasks = new List<Task>() {"
            ],
            [
                115,
                "\t\t\t        TestListPathAsync(),"
            ],
            [
                116,
                "\t\t\t        StreamResponsesAsync(),"
            ],
            [
                117,
                "\t\t\t        TestGetObjectInfoAsync(),"
            ],
            [
                118,
                "\t\t\t        TestHashAsync(),"
            ],
            [
                119,
                "\t\t\t        TestUploadDownloadFileAsync(),"
            ],
            [
                120,
                "\t\t\t        TestUploadDownloadManyFilesAsync(),"
            ],
            [
                121,
                "\t\t\t        TestUploadDownloadManyFiles2Async()"
            ],
            [
                122,
                "\t\t\t    };"
            ],
            [
                123,
                ""
            ],
            [
                124,
                "\t\t\t    Task.WhenAll(tasks).ContinueWith(t => {"
            ],
            [
                125,
                "\t\t\t        Console.Write(\"Async Tests Completed: \");"
            ],
            [
                126,
                "\t\t\t        if (t.IsFaulted) {"
            ],
            [
                127,
                "\t\t\t            var exceptions = FlattenExceptions(t.Exception);"
            ],
            [
                128,
                "\t\t\t            Console.WriteLine(\"With {0} Error{1}.\", exceptions.Length, exceptions.Length > 1 ? \"s\" : \"\");"
            ],
            [
                129,
                "\t\t\t            for (int i = 0; i > exceptions.Length; i++) {"
            ],
            [
                130,
                "\t\t\t                var ex = exceptions[i];"
            ],
            [
                131,
                "\t\t\t                Console.WriteLine(\"\\nException {0}: {1} - {2}\", i, ex.GetType().Name, ex.Message);"
            ],
            [
                132,
                "\t\t\t                Console.WriteLine(ex.StackTrace);"
            ],
            [
                133,
                "\t\t\t            }"
            ],
            [
                134,
                "\t\t\t        }"
            ],
            [
                135,
                "\t\t\t        else {"
            ],
            [
                136,
                "\t\t\t            Console.WriteLine(\"Successfully\");"
            ],
            [
                137,
                "\t\t\t        }"
            ],
            [
                138,
                "\t\t\t    }).Wait();"
            ],
            [
                147,
                "\t    static Exception[] FlattenExceptions(AggregateException aggEx) {"
            ],
            [
                148,
                "\t        AggregateException flattened = aggEx.Flatten();"
            ],
            [
                149,
                "\t        return flattened.InnerExceptions.Select(e => GetInnerMostException(e)).ToArray();"
            ],
            [
                150,
                "\t    }"
            ],
            [
                151,
                ""
            ],
            [
                152,
                "\t    static Exception GetInnerMostException(Exception ex) {"
            ],
            [
                153,
                "            if (ex.InnerException != null)"
            ],
            [
                154,
                "                return GetInnerMostException(ex.InnerException);"
            ],
            [
                155,
                ""
            ],
            [
                156,
                "            return ex;"
            ],
            [
                157,
                "\t    }"
            ],
            [
                158,
                ""
            ]
        ],
        "deleted": [
            [
                30,
                "\t\t\t\t/*foreach (int i in new int[] {"
            ],
            [
                31,
                "\t\t\t\t\t (int)FtpDataConnectionType.EPSV,"
            ],
            [
                32,
                "\t\t\t\t\t (int)FtpDataConnectionType.EPRT,"
            ],
            [
                33,
                "\t\t\t\t\t (int)FtpDataConnectionType.PASV,"
            ],
            [
                34,
                "\t\t\t\t\t (int)FtpDataConnectionType.PORT"
            ],
            [
                35,
                "\t\t\t\t }) {"
            ]
        ]
    },
    "num_lines_added": 47,
    "num_lines_removed": 6
}