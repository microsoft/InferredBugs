{
    "hash": "5c4dcecbea0a4a4d96f69a9d04876c7945fe6eda",
    "message": "fixed tests again",
    "file_num_lines": 155,
    "diff_parsed": {
        "added": [
            [
                48,
                "        public void CanDispatchToViewsImmediatelyOnSave()"
            ],
            [
                135,
                "            using (var uow = _context.BeginUnitOfWork())"
            ],
            [
                136,
                "            {"
            ],
            [
                137,
                "                var root = uow.Get<AnAggregate>(rootId);"
            ],
            [
                138,
                "                root.DoStuff();"
            ],
            [
                140,
                "                // act"
            ],
            [
                141,
                "                uow.Commit();"
            ],
            [
                143,
                "                // assert"
            ],
            [
                144,
                "                Assert.That(_context.History.Cast<AnEvent>().Single(), Is.TypeOf<AnEvent>());"
            ],
            [
                145,
                "                Assert.That(_context.History.Cast<AnEvent>().Single().GetAggregateRootId(), Is.EqualTo(rootId));"
            ],
            [
                146,
                "            }"
            ],
            [
                147,
                "        }"
            ],
            [
                148,
                ""
            ],
            [
                149,
                "        [Test]"
            ],
            [
                150,
                "        public void EventsAreNotAppendedToHistoryBeforeCommit()"
            ],
            [
                151,
                "        {"
            ],
            [
                152,
                "            // arrange"
            ],
            [
                153,
                "            var rootId = Guid.NewGuid();"
            ],
            [
                154,
                "            using (var uow = _context.BeginUnitOfWork())"
            ],
            [
                155,
                "            {"
            ],
            [
                156,
                "                var root = uow.Get<AnAggregate>(rootId);"
            ],
            [
                157,
                "                root.DoStuff();"
            ],
            [
                158,
                ""
            ],
            [
                159,
                "                Assert.That(_context.History.Count(), Is.EqualTo(0));"
            ],
            [
                160,
                "            }"
            ],
            [
                161,
                "        }"
            ],
            [
                162,
                ""
            ],
            [
                163,
                "        [Test]"
            ],
            [
                164,
                "        public void CommittedEventsAreStillAvailableInUnitOfWorkAfterCommit()"
            ],
            [
                165,
                "        {"
            ],
            [
                166,
                "            // arrange"
            ],
            [
                167,
                "            var rootId = Guid.NewGuid();"
            ],
            [
                168,
                "            using (var uow = _context.BeginUnitOfWork())"
            ],
            [
                169,
                "            {"
            ],
            [
                170,
                "                var root = uow.Get<AnAggregate>(rootId);"
            ],
            [
                171,
                "                root.DoStuff();"
            ],
            [
                172,
                ""
            ],
            [
                173,
                "                // act"
            ],
            [
                174,
                "                uow.Commit();"
            ],
            [
                175,
                ""
            ],
            [
                176,
                "                // assert"
            ],
            [
                177,
                "                Assert.That(uow.EmittedEvents.Count(), Is.EqualTo(1));"
            ],
            [
                178,
                "            }"
            ]
        ],
        "deleted": [
            [
                48,
                "        public void CanDispatchToViews()"
            ],
            [
                59,
                "        [Test]"
            ],
            [
                60,
                "        public void UncommittedEventsAreNotDispatchedToViews()"
            ],
            [
                61,
                "        {"
            ],
            [
                62,
                "            var viewMan = new SillyViewManager();"
            ],
            [
                63,
                "            _context.AddViewManager(viewMan);"
            ],
            [
                64,
                "            var aggregateRootId = Guid.NewGuid();"
            ],
            [
                65,
                ""
            ],
            [
                66,
                "            _context.Save(aggregateRootId, new AnEvent());"
            ],
            [
                67,
                ""
            ],
            [
                68,
                "            Assert.That(viewMan.ReceivedDomainEvents.Count, Is.EqualTo(0));"
            ],
            [
                69,
                "        }"
            ],
            [
                70,
                ""
            ],
            [
                147,
                "            var uow = _context.BeginUnitOfWork();"
            ],
            [
                148,
                "            var root = uow.Get<AnAggregate>(rootId);"
            ],
            [
                149,
                "            root.DoStuff();"
            ],
            [
                151,
                "            // act"
            ],
            [
                152,
                "            uow.Commit();"
            ],
            [
                154,
                "            // assert"
            ],
            [
                155,
                "            Assert.That(uow.EmittedEvents.Count(), Is.EqualTo(0));"
            ],
            [
                156,
                "            Assert.That(_context.History.Cast<AnEvent>().Single(), Is.TypeOf<AnEvent>());"
            ],
            [
                157,
                "            Assert.That(_context.History.Cast<AnEvent>().Single().GetAggregateRootId(), Is.EqualTo(rootId));"
            ]
        ]
    },
    "num_lines_added": 43,
    "num_lines_removed": 22
}