{
    "hash": "874ed1a9645c1e74b308d228d77e3fb063af0467",
    "message": "added some replicator tests (don't know why...)",
    "file_num_lines": 100,
    "diff_parsed": {
        "added": [
            [
                7,
                "using d60.Cirqus.Logging;"
            ],
            [
                8,
                "using d60.Cirqus.Logging.Console;"
            ],
            [
                25,
                "            CirqusLoggerFactory.Current = new ConsoleLoggerFactory(minLevel: Logger.Level.Info);"
            ],
            [
                26,
                ""
            ],
            [
                42,
                "            var ids = Enumerable.Range(0, 100).Select(_ => Guid.NewGuid());"
            ],
            [
                43,
                ""
            ],
            [
                44,
                "            foreach (var id in ids)"
            ],
            [
                45,
                "            {"
            ],
            [
                46,
                "                RunTest(id);"
            ],
            [
                47,
                "            }"
            ],
            [
                48,
                ""
            ],
            [
                49,
                "            //RunTestFor(new Guid(\"9506BDAC-65A6-4793-90A0-F46C7F725461\"));"
            ],
            [
                50,
                "            //RunTestFor(new Guid(\"E758C4B9-D65C-4E0F-BA28-0FE468CBBE59\"));"
            ],
            [
                51,
                "            //RunTestFor(new Guid(\"1798AA40-8E7C-4169-AABE-3EB8134F7428\"));"
            ],
            [
                52,
                "            //RunTestFor(new Guid(\"8266A9C8-773A-4F8D-9568-12E54427B424\"));"
            ],
            [
                53,
                "            //RunTestFor(new Guid(\"23B79D7F-1B48-4B2A-8197-59DC4267DF48\"));"
            ],
            [
                54,
                "        }"
            ],
            [
                56,
                "        void RunTest(Guid id)"
            ],
            [
                57,
                "        {"
            ],
            [
                62,
                "            _context.Save(id, new Event { NumberOfChildren = 2 });"
            ],
            [
                63,
                "            _context.Save(id, new Event { NumberOfChildren = 3 });"
            ],
            [
                64,
                "            _context.Save(id, new Event { NumberOfChildren = 2 });"
            ],
            [
                65,
                "            _context.Save(id, new Event { NumberOfChildren = 2 });"
            ],
            [
                66,
                "            _context.Save(id, new Event { NumberOfChildren = 3 });"
            ],
            [
                67,
                "            _context.Save(id, new Event { NumberOfChildren = 2 });"
            ],
            [
                71,
                "                var viewId = InstancePerAggregateRootLocator.GetViewIdFromAggregateRootId(id);"
            ],
            [
                72,
                ""
            ],
            [
                74,
                "                    .First(v => v.Id == viewId);"
            ],
            [
                77,
                "                Assert.That(parent.OtherChildren.Count, Is.EqualTo(4));"
            ],
            [
                93,
                "                OtherChildren = new List<AnotherChild>();"
            ],
            [
                102,
                "            public virtual List<AnotherChild> OtherChildren { get; set; }"
            ],
            [
                103,
                ""
            ],
            [
                108,
                "                OtherChildren.Clear();"
            ],
            [
                109,
                ""
            ],
            [
                112,
                ""
            ],
            [
                113,
                "                OtherChildren.AddRange(Enumerable.Range(0, domainEvent.NumberOfChildren*2)"
            ],
            [
                114,
                "                    .Select(no => new AnotherChild {Value = \"other child \" + no}));"
            ],
            [
                123,
                ""
            ],
            [
                124,
                "        public class AnotherChild"
            ],
            [
                125,
                "        {"
            ],
            [
                126,
                "            public virtual int Id { get; set; }"
            ],
            [
                127,
                "            public virtual string Value { get; set; }"
            ],
            [
                128,
                "        }"
            ]
        ],
        "deleted": [
            [
                10,
                "using FluentNHibernate.Conventions;"
            ],
            [
                39,
                "            var id = new Guid(\"9506BDAC-65A6-4793-90A0-F46C7F725461\");"
            ],
            [
                49,
                "                    .First(v => v.Id == InstancePerAggregateRootLocator.GetViewIdFromAggregateRootId(id));"
            ]
        ]
    },
    "num_lines_added": 43,
    "num_lines_removed": 3
}