{
    "hash": "43c2cfbadb7af09c3a3af75bdba1f6005091ccb5",
    "message": "updated readme",
    "file_num_lines": 106,
    "diff_parsed": {
        "added": [
            [
                5,
                "using d60.Cirqus.Config;"
            ],
            [
                8,
                "using d60.Cirqus.MsSql.Config;"
            ],
            [
                33,
                "            var processor = CommandProcessor.With()"
            ],
            [
                34,
                "                .EventStore(e => e.UseSqlServer(MsSqlTestHelper.ConnectionString, \"events\", automaticallyCreateSchema: true))"
            ],
            [
                35,
                "                .EventDispatcher(e => e.UseViewManagerEventDispatcher(viewManager))"
            ],
            [
                36,
                "                .Create();"
            ],
            [
                95,
                "                return CurrentValue % 2 == 0"
            ],
            [
                129,
                "                while (SomeRecentBizValues.Count > 10)"
            ]
        ],
        "deleted": [
            [
                7,
                "using d60.Cirqus.MsSql.Events;"
            ],
            [
                10,
                "using d60.Cirqus.Views;"
            ],
            [
                31,
                "            var eventStore = new MsSqlEventStore(MsSqlTestHelper.ConnectionString, \"events\", automaticallyCreateSchema: true);"
            ],
            [
                32,
                "            var aggregateRootRepository = new DefaultAggregateRootRepository(eventStore);"
            ],
            [
                35,
                "            var eventDispatcher = new ViewManagerEventDispatcher(aggregateRootRepository, eventStore, viewManager);"
            ],
            [
                36,
                ""
            ],
            [
                37,
                "            var processor = new CommandProcessor(eventStore, aggregateRootRepository, eventDispatcher);"
            ],
            [
                41,
                "            processor.Initialize();"
            ],
            [
                42,
                ""
            ],
            [
                98,
                "                return CurrentValue%2 == 0"
            ],
            [
                132,
                "                while(SomeRecentBizValues.Count > 10)"
            ]
        ]
    },
    "num_lines_added": 8,
    "num_lines_removed": 11
}