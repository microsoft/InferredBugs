        protected override void DoSetUp()
        {
            _eventStore = new InMemoryEventStore(_domainEventSerializer);
            var eventDispatcher = new ConsoleOutEventDispatcher();

            _aggregateRootRepository = new DefaultAggregateRootRepository(_eventStore, _domainEventSerializer);

            var commandMapper = new CommandMappings()
                .Map<CustomMappedErronousCommand>((context, command) =>
                {
                    throw new InvalidOperationException("oh no, you cannot do that");
                })
                .CreateCommandMapperDecorator(new DefaultCommandMapper());

            _cirqus = RegisterForDisposal(new CommandProcessor(_eventStore, _aggregateRootRepository, eventDispatcher,
                _domainEventSerializer, commandMapper));
        }