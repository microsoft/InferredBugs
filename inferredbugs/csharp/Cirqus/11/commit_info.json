{
    "hash": "44d641a5616c00b91e14b404718ab3f23d67c3a4",
    "message": "verify that domain exceptions bubble up as they should also when using custom-mapped commands",
    "file_num_lines": 160,
    "diff_parsed": {
        "added": [
            [
                29,
                "            var commandMapper = new CommandMappings()"
            ],
            [
                30,
                "                .Map<CustomMappedErronousCommand>((context, command) =>"
            ],
            [
                31,
                "                {"
            ],
            [
                32,
                "                    throw new InvalidOperationException(\"oh no, you cannot do that\");"
            ],
            [
                33,
                "                })"
            ],
            [
                34,
                "                .CreateCommandMapperDecorator(new DefaultCommandMapper());"
            ],
            [
                35,
                ""
            ],
            [
                37,
                "                _domainEventSerializer, commandMapper));"
            ],
            [
                92,
                "        [Test]"
            ],
            [
                93,
                "        public void CanLetSpecificExceptionTypesThroughAlsoWhenUsingCustomMappedCommands()"
            ],
            [
                94,
                "        {"
            ],
            [
                95,
                "            _cirqus.Options.AddDomainExceptionType<InvalidOperationException>();"
            ],
            [
                96,
                ""
            ],
            [
                97,
                "            var unwrappedException = Assert.Throws<InvalidOperationException>(() => _cirqus.ProcessCommand(new CustomMappedErronousCommand()));"
            ],
            [
                98,
                ""
            ],
            [
                99,
                "            Console.WriteLine(unwrappedException);"
            ],
            [
                100,
                ""
            ],
            [
                101,
                "            Assert.That(unwrappedException, Is.TypeOf<InvalidOperationException>());"
            ],
            [
                102,
                "            Assert.That(unwrappedException.Message, Contains.Substring(\"oh no, you cannot do that\"));"
            ],
            [
                103,
                "        }"
            ],
            [
                104,
                ""
            ],
            [
                131,
                "        class CustomMappedErronousCommand : Command"
            ],
            [
                132,
                "        {"
            ],
            [
                133,
                "        }"
            ],
            [
                134,
                ""
            ]
        ],
        "deleted": [
            [
                30,
                "                _domainEventSerializer, new DefaultCommandMapper()));"
            ]
        ]
    },
    "num_lines_added": 25,
    "num_lines_removed": 1
}