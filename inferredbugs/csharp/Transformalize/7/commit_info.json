{
    "hash": "88b68a5acad505c04df208147ba85f2703391056",
    "message": "Excel input.",
    "file_num_lines": 53,
    "diff_parsed": {
        "added": [
            [
                25,
                "using System.Text.RegularExpressions;"
            ],
            [
                34,
                "        private readonly bool _clean;"
            ],
            [
                36,
                "        private readonly Regex _start = new Regex(@\"^\\{{1}\"\"{1}\", RegexOptions.Compiled | RegexOptions.Singleline);"
            ],
            [
                37,
                "        private readonly Regex _end = new Regex(@\"\"\"{1}\\}{1}$\", RegexOptions.Compiled | RegexOptions.Singleline);"
            ],
            [
                38,
                "        private readonly Regex _colon = new Regex(@\"\"\"{1}[: ]+\"\"{1}\", RegexOptions.Compiled | RegexOptions.Singleline);"
            ],
            [
                39,
                "        private readonly Regex _comma = new Regex(@\"\"\"{1}[, ]+\"\"{1}\", RegexOptions.Compiled | RegexOptions.Singleline);"
            ],
            [
                40,
                "        private readonly Regex _fix = new Regex(@\"\\\\?\"\"{1}\", RegexOptions.Compiled | RegexOptions.Singleline);"
            ],
            [
                41,
                "        private readonly Regex _startBack = new Regex(@\"^_SS_\", RegexOptions.Compiled | RegexOptions.Singleline);"
            ],
            [
                42,
                "        private readonly Regex _endBack = new Regex(@\"_EE_$\", RegexOptions.Compiled | RegexOptions.Singleline);"
            ],
            [
                44,
                "        public FromJsonTransform(string alias, bool clean, IParameters parameters)"
            ],
            [
                47,
                "            _clean = clean;"
            ],
            [
                62,
                "        public override void Transform(ref Row row, string resultKey)"
            ],
            [
                63,
                "        {"
            ],
            [
                64,
                "            var input = _clean ? Clean(row[_alias]) : row[_alias].ToString();"
            ],
            [
                65,
                "            var dict = _json.ToObject<Dictionary<string, object>>(input);"
            ],
            [
                71,
                ""
            ],
            [
                72,
                "        /// <summary>"
            ],
            [
                73,
                "        /// An attempt to fix unescaped double quotes within the property or value in a single line of JSON"
            ],
            [
                74,
                "        /// </summary>"
            ],
            [
                75,
                "        /// <param name=\"input\"></param>"
            ],
            [
                76,
                "        /// <returns></returns>"
            ],
            [
                77,
                "        private string Clean(object input) {"
            ],
            [
                78,
                "            var output = _start.Replace(input.ToString(), \"_SS_\");  //tag start with valid quote"
            ],
            [
                79,
                "            output = _end.Replace(output, \"_EE_\"); // tag end with valid quote"
            ],
            [
                80,
                "            output = _colon.Replace(output, \"_::_\"); // tag colon with valid quotes"
            ],
            [
                81,
                "            output = _comma.Replace(output, \"_,,_\"); // tag commas with valid quotes"
            ],
            [
                82,
                "            output = _fix.Replace(output, @\"\\\"\"\"); // escape the quotes that are left, and re-escape ones that are escaped"
            ],
            [
                83,
                "            output = _startBack.Replace(output, @\"{\"\"\"); // put start back"
            ],
            [
                84,
                "            output = _endBack.Replace(output, @\"\"\"}\"); // put end back"
            ],
            [
                85,
                "            output = output.Replace(\"_::_\", @\"\"\":\"\"\"); // put valid colons back"
            ],
            [
                86,
                "            return output.Replace(\"_,,_\", @\"\"\",\"\"\"); // put valid commas back"
            ],
            [
                87,
                "        }"
            ],
            [
                88,
                ""
            ]
        ],
        "deleted": [
            [
                35,
                "        public FromJsonTransform(string alias, IParameters parameters)"
            ],
            [
                52,
                "        public override void Transform(ref Row row, string resultKey) {"
            ],
            [
                53,
                "            var dict = _json.ToObject<Dictionary<string, object>>(row[_alias].ToString());"
            ]
        ]
    },
    "num_lines_added": 33,
    "num_lines_removed": 3
}