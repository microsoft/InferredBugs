{
    "hash": "71b6091d2ceb0486cff228561df0dbd9f556bfcb",
    "message": "1. Added shortcut syntax to for grouping columns.",
    "file_num_lines": 847,
    "diff_parsed": {
        "added": [
            [
                33,
                "        private readonly List<FieldNode> _groupByFields = new List<FieldNode>();"
            ],
            [
                40,
                "        private QueryPart _queryPart;"
            ],
            [
                451,
                "            for (var i = node.Fields.Length - 1; i >= 0; --i)"
            ],
            [
                452,
                "            {"
            ],
            [
                453,
                "                var field = Nodes.Pop() as FieldNode;"
            ],
            [
                454,
                "                _groupByFields.Insert(0, field);"
            ],
            [
                455,
                "                fields[i] = field;"
            ],
            [
                456,
                ""
            ],
            [
                457,
                "            }"
            ],
            [
                637,
                "            var take = node.Take != null ? Nodes.Pop() as TakeNode : null;"
            ],
            [
                638,
                "            var skip = node.Skip != null ? Nodes.Pop() as SkipNode : null;"
            ],
            [
                639,
                "            var select = Nodes.Pop() as SelectNode;"
            ],
            [
                641,
                "            var where = node.Where != null ? Nodes.Pop() as WhereNode : null;"
            ],
            [
                642,
                "            var from = Nodes.Pop() as FromNode;"
            ],
            [
                1043,
                "            _queryPart = part;"
            ],
            [
                1077,
                ""
            ],
            [
                1078,
                "        public void Visit(FieldLinkNode node)"
            ],
            [
                1079,
                "        {"
            ],
            [
                1080,
                "            Nodes.Push(_groupByFields[node.Index - 1].Expression);"
            ],
            [
                1081,
                "        }"
            ]
        ],
        "deleted": [
            [
                449,
                "            for (var i = node.Fields.Length - 1; i >= 0; --i) fields[i] = Nodes.Pop() as FieldNode;"
            ],
            [
                637,
                "            var skip = node.Skip != null ? Nodes.Pop() as SkipNode : null;"
            ],
            [
                638,
                "            var take = node.Take != null ? Nodes.Pop() as TakeNode : null;"
            ],
            [
                639,
                ""
            ],
            [
                640,
                "            var select = Nodes.Pop() as SelectNode;"
            ],
            [
                641,
                "            var where = node.Where != null ? Nodes.Pop() as WhereNode : null;"
            ],
            [
                642,
                "            var from = Nodes.Pop() as FromNode;"
            ],
            [
                643,
                ""
            ]
        ]
    },
    "num_lines_added": 20,
    "num_lines_removed": 8
}