        private void reprepareOnNewlyUpNodeTest(bool useKeyspace)
        {
            Session.CreateKeyspaceIfNotExists(Keyspace);
            Session.Cluster.WaitForSchema(Keyspace);
            string modifiedKs = "";

            if (useKeyspace)
                Session.ChangeKeyspace(Keyspace);
            else
                modifiedKs = Keyspace + ".";

            try
            {
                Session.Execute("CREATE TABLE " + modifiedKs + "test(k text PRIMARY KEY, i int)");
                Session.Cluster.WaitForSchema(Keyspace, "test");
            }
            catch (AlreadyExistsException)
            {
            }
            Session.Execute("INSERT INTO " + modifiedKs +"test (k, i) VALUES ('123', 17)");
            Session.Execute("INSERT INTO " + modifiedKs +"test (k, i) VALUES ('124', 18)");

            PreparedStatement ps = Session.Prepare("SELECT * FROM " + modifiedKs + "test WHERE k = ?");

            Assert.Equal(Session.Execute(ps.Bind("123")).GetRows().First().GetValue<int>("i"), 17); // ERROR

            CCMCluster.CassandraCluster.Stop();            
            TestUtils.waitForDown(CCMBridge.IP_PREFIX + "1", Cluster, 20);            

            CCMCluster.CassandraCluster.Start();
            TestUtils.waitFor(CCMBridge.IP_PREFIX + "1", Cluster, 20);

            try
            {
                Assert.Equal(Session.Execute(ps.Bind("124")).GetRows().First().GetValue<int>("i"), 18);
            }
            catch (NoHostAvailableException e)
            {
                Debug.WriteLine(">> " + e.Errors);
                throw e;
            }
        }