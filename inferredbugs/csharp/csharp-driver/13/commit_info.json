{
    "hash": "4af134e80c2308ed078a2ead9f44cfa18cf2153c",
    "message": "to cql string",
    "file_num_lines": 636,
    "diff_parsed": {
        "added": [
            [
                45,
                "    internal class CqlStringTool"
            ],
            [
                46,
                "    {"
            ],
            [
                47,
                "        List<object> srcvalues = new List<object>();"
            ],
            [
                48,
                ""
            ],
            [
                49,
                "        public string FillWithEncoded(string pure)"
            ],
            [
                50,
                "        {"
            ],
            [
                51,
                "            if (srcvalues.Count == 0)"
            ],
            [
                52,
                "                return pure;"
            ],
            [
                53,
                ""
            ],
            [
                54,
                "            var sb = new StringBuilder();"
            ],
            [
                55,
                "            var parts = pure.Split('\\0');"
            ],
            [
                56,
                ""
            ],
            [
                57,
                "            for (int i = 0; i < parts.Length - 1; i += 2)"
            ],
            [
                58,
                "            {"
            ],
            [
                59,
                "                sb.Append(parts[i]);"
            ],
            [
                60,
                "                var idx = int.Parse(parts[i + 1]);"
            ],
            [
                61,
                "                sb.Append(CqlQueryTools.Encode(srcvalues[idx]));"
            ],
            [
                62,
                "            }"
            ],
            [
                63,
                "            sb.Append(parts.Last());"
            ],
            [
                64,
                "            return sb.ToString();"
            ],
            [
                65,
                "        }"
            ],
            [
                66,
                ""
            ],
            [
                67,
                "        public string FillWithValues(string pure, out object[] values)"
            ],
            [
                68,
                "        {"
            ],
            [
                69,
                "            if (srcvalues.Count == 0)"
            ],
            [
                70,
                "            {"
            ],
            [
                71,
                "                values = null;"
            ],
            [
                72,
                "                return pure;"
            ],
            [
                73,
                "            }"
            ],
            [
                74,
                ""
            ],
            [
                75,
                "            var sb = new StringBuilder();"
            ],
            [
                76,
                "            var objs = new List<object>();"
            ],
            [
                77,
                "            var parts = pure.Split('\\0');"
            ],
            [
                78,
                ""
            ],
            [
                79,
                "            for (int i = 0; i < parts.Length - 1; i += 2)"
            ],
            [
                80,
                "            {"
            ],
            [
                81,
                "                sb.Append(parts[i]);"
            ],
            [
                82,
                "                var idx = int.Parse(parts[i + 1]);"
            ],
            [
                83,
                "                objs.Add(srcvalues[idx]);"
            ],
            [
                84,
                "                sb.Append(\" ? \");"
            ],
            [
                85,
                "            }"
            ],
            [
                86,
                "            sb.Append(parts.Last());"
            ],
            [
                87,
                "            values = objs.ToArray();"
            ],
            [
                88,
                "            return sb.ToString();"
            ],
            [
                89,
                "        }"
            ],
            [
                90,
                ""
            ],
            [
                91,
                "        public string AddValue(object val)"
            ],
            [
                92,
                "        {"
            ],
            [
                93,
                "            srcvalues.Add(val);"
            ],
            [
                94,
                "            return \"\\0\" + (srcvalues.Count - 1).ToString() + \"\\0\";"
            ],
            [
                95,
                "        }"
            ],
            [
                96,
                "    }"
            ],
            [
                97,
                ""
            ],
            [
                115,
                "        CqlStringTool cqlTool = new CqlStringTool();"
            ],
            [
                117,
                "        public string GetSelect(out object[] values, bool withValues = true)"
            ],
            [
                147,
                "            if (withValues)"
            ],
            [
                148,
                "                return cqlTool.FillWithValues(sb.ToString(), out values);"
            ],
            [
                149,
                "            else"
            ],
            [
                152,
                "                return cqlTool.FillWithEncoded(sb.ToString());"
            ],
            [
                154,
                "        }"
            ],
            [
                158,
                "        public string GetDelete(out object[] values, DateTimeOffset? timestamp, bool withValues = true)"
            ],
            [
                178,
                "            if (withValues)"
            ],
            [
                179,
                "                return cqlTool.FillWithValues(sb.ToString(), out values);"
            ],
            [
                180,
                "            else"
            ],
            [
                181,
                "            {"
            ],
            [
                182,
                "                values = null;"
            ],
            [
                183,
                "                return cqlTool.FillWithEncoded(sb.ToString());"
            ],
            [
                184,
                "            }"
            ],
            [
                187,
                "        public string GetUpdate(out object[] values, int? ttl, DateTimeOffset? timestamp,bool withValues = true)"
            ],
            [
                230,
                "                setStatements.Add(Alter[mapping.Key].CqlIdentifier() + \" = \" + cqlTool.AddValue(val));"
            ],
            [
                243,
                "            if (withValues)"
            ],
            [
                244,
                "                return cqlTool.FillWithValues(sb.ToString(), out values);"
            ],
            [
                245,
                "            else"
            ],
            [
                246,
                "            {"
            ],
            [
                247,
                "                values = null;"
            ],
            [
                248,
                "                return cqlTool.FillWithEncoded(sb.ToString());"
            ],
            [
                249,
                "            }"
            ],
            [
                252,
                "        public string GetCount(out object[] values, bool withValues = true)"
            ],
            [
                270,
                "            if (withValues)"
            ],
            [
                271,
                "                return cqlTool.FillWithValues(sb.ToString(), out values);"
            ],
            [
                272,
                "            else"
            ],
            [
                273,
                "            {"
            ],
            [
                274,
                "                values = null;"
            ],
            [
                275,
                "                return cqlTool.FillWithEncoded(sb.ToString());"
            ],
            [
                276,
                "            }"
            ],
            [
                413,
                "                        WhereClause.Append(cqlTool.AddValue(obj));"
            ],
            [
                450,
                "                    WhereClause.Append(cqlTool.AddValue(val));"
            ],
            [
                495,
                "                    WhereClause.Append(cqlTool.AddValue(val));"
            ],
            [
                594,
                "                WhereClause.Append(cqlTool.AddValue(node.Value));"
            ],
            [
                630,
                "                    WhereClause.Append(cqlTool.AddValue(val));"
            ],
            [
                644,
                "                        WhereClause.Append(cqlTool.AddValue((val as CqlToken).Values.First()));"
            ],
            [
                648,
                "                            WhereClause.Append(cqlTool.AddValue(e));"
            ],
            [
                654,
                "                        WhereClause.Append(cqlTool.AddValue(val));"
            ],
            [
                661,
                "                    WhereClause.Append(cqlTool.AddValue(val));"
            ]
        ],
        "deleted": [
            [
                54,
                "        public List<object> _vallist = new List<object>();"
            ],
            [
                64,
                "        public string GetSelect(out object[] values)"
            ],
            [
                94,
                "            return FillWithValues(sb.ToString(), _vallist, out values);"
            ],
            [
                95,
                "        }"
            ],
            [
                96,
                ""
            ],
            [
                97,
                "        internal static string FillWithValues(string pure, List<object> srcvalues, out object[] values)"
            ],
            [
                98,
                "        {"
            ],
            [
                99,
                "            if (srcvalues.Count == 0)"
            ],
            [
                102,
                "                return pure;"
            ],
            [
                105,
                "            var sb = new StringBuilder();"
            ],
            [
                106,
                "            var objs = new List<object>();"
            ],
            [
                107,
                "            var parts = pure.Split('\\0');"
            ],
            [
                109,
                "            for (int i = 0; i < parts.Length - 1; i += 2)"
            ],
            [
                110,
                "            {"
            ],
            [
                111,
                "                sb.Append(parts[i]);"
            ],
            [
                112,
                "                var idx = int.Parse(parts[i + 1]);"
            ],
            [
                113,
                "                objs.Add(srcvalues[idx]);"
            ],
            [
                114,
                "                sb.Append(\" ? \");"
            ],
            [
                115,
                "            }"
            ],
            [
                116,
                "            sb.Append(parts.Last());"
            ],
            [
                117,
                "            values = objs.ToArray();"
            ],
            [
                118,
                "            return sb.ToString();"
            ],
            [
                119,
                "        }"
            ],
            [
                121,
                "        public string GetDelete(out object[] values, DateTimeOffset? timestamp)"
            ],
            [
                141,
                "            return FillWithValues(sb.ToString(), _vallist, out values);"
            ],
            [
                144,
                "        public string GetUpdate(out object[] values, int? ttl, DateTimeOffset? timestamp)"
            ],
            [
                187,
                "\t\t\t\tsetStatements.Add(Alter[mapping.Key].CqlIdentifier() + \" = \" + AddValue(val));"
            ],
            [
                200,
                "            return FillWithValues(sb.ToString(), _vallist, out values);"
            ],
            [
                201,
                "        }"
            ],
            [
                202,
                ""
            ],
            [
                203,
                "        string AddValue(object val)"
            ],
            [
                204,
                "        {"
            ],
            [
                205,
                "            _vallist.Add(val);"
            ],
            [
                206,
                "            return \"\\0\" + (_vallist.Count - 1).ToString() + \"\\0\";"
            ],
            [
                209,
                "        public string GetCount(out object[] values)"
            ],
            [
                227,
                "            return FillWithValues(sb.ToString(), _vallist, out values);"
            ],
            [
                364,
                "                        WhereClause.Append(AddValue(obj));"
            ],
            [
                401,
                "                    WhereClause.Append(AddValue(val));"
            ],
            [
                446,
                "                    WhereClause.Append(AddValue(val));"
            ],
            [
                545,
                "                WhereClause.Append(AddValue(node.Value));"
            ],
            [
                581,
                "                    WhereClause.Append(AddValue(val));"
            ],
            [
                595,
                "                        WhereClause.Append(AddValue((val as CqlToken).Values.First()));"
            ],
            [
                599,
                "                            WhereClause.Append(AddValue(e));"
            ],
            [
                605,
                "                        WhereClause.Append(AddValue(val));"
            ],
            [
                612,
                "                    WhereClause.Append(AddValue(val));"
            ]
        ]
    },
    "num_lines_added": 94,
    "num_lines_removed": 45
}