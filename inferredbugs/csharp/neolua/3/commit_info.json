{
    "hash": "f213f8056864c1b8bcb82169db281dc47b50792e",
    "message": "Chg: FetchToken,ParserError public",
    "file_num_lines": 1789,
    "diff_parsed": {
        "added": [
            [
                435,
                "\t\t\t\t\tthrow LuaLexer.ParseError(position, Properties.Resources.rsParseInvalidArgList);"
            ],
            [
                493,
                "\t\t\t\t\tthrow LuaLexer.ParseError(Position, Properties.Resources.rsParseExpressionNotAssignable);"
            ],
            [
                544,
                "\t\t\t\t\tthrow LuaLexer.ParseError(Position, Properties.Resources.rsParseExpressionNoResult);"
            ],
            [
                612,
                "\t\t\t\tthrow LuaLexer.ParseError(code.Current, Properties.Resources.rsParseEof);"
            ],
            [
                888,
                "\t\t\t\t\t\tthrow LuaLexer.ParseError(tVar, Properties.Resources.rsParseTypeRedef);"
            ],
            [
                999,
                "\t\t\t\t\t\tthrow LuaLexer.ParseError(prefixes[i].Position, Properties.Resources.rsParseAssignmentExpected);"
            ],
            [
                1024,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwIf, code);"
            ],
            [
                1026,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwThen, code);"
            ],
            [
                1037,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.KwThen, code);"
            ],
            [
                1045,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.KwEnd, code);"
            ],
            [
                1054,
                "\t\t\t\tthrow LuaLexer.ParseError(code.Current, Properties.Resources.rsParseUnexpectedTokenElse);"
            ],
            [
                1078,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.Assign, code);"
            ],
            [
                1086,
                "\t\t\t\t\tthrow LuaLexer.ParseError(tVarName, Properties.Resources.rsConstExpressionNeeded);"
            ],
            [
                1103,
                "\t\t\t\t\t\tthrow LuaLexer.ParseError(tVarName, String.Format(Properties.Resources.rsConstExpressionEvalError, e.Message));"
            ],
            [
                1137,
                "\t\t\t\t\t\tLuaLexer.FetchToken(LuaToken.BracketClose, code);"
            ],
            [
                1165,
                "\t\t\t\t\t\t\tthrow LuaLexer.ParseError(t, Properties.Resources.rsParseNoArgList);"
            ],
            [
                1179,
                "\t\t\t\t\tinfo = new PrefixMemberInfo(tStart, Expression.Constant(LuaLexer.FetchToken(LuaToken.String, code).Value, typeof(string)), null, null, null);"
            ],
            [
                1183,
                "\t\t\t\t\tinfo = new PrefixMemberInfo(tStart, ParseNumber(scope.Runtime, LuaLexer.FetchToken(LuaToken.Number, code)), null, null, null);"
            ],
            [
                1217,
                "\t\t\t\t\tthrow LuaLexer.ParseError(code.Current, Properties.Resources.rsParseUnexpectedTokenPrefix);"
            ],
            [
                1240,
                "\t\t\t\t\t\tLuaLexer.FetchToken(LuaToken.BracketSquareClose, code);"
            ],
            [
                1246,
                "\t\t\t\t\t\tinfo.SetMember(LuaLexer.FetchToken(LuaToken.Identifier, code), false);"
            ],
            [
                1261,
                "\t\t\t\t\t\tinfo.Arguments = new ArgumentsList(Expression.Constant(LuaLexer.FetchToken(LuaToken.String, code).Value, typeof(object)));"
            ],
            [
                1269,
                "\t\t\t\t\t\tinfo.SetMember(LuaLexer.FetchToken(LuaToken.Identifier, code), true);"
            ],
            [
                1283,
                "\t\t\t\t\t\t\t\tinfo.Arguments = new ArgumentsList(Expression.Constant(LuaLexer.FetchToken(LuaToken.String, code).Value, typeof(string)));"
            ],
            [
                1296,
                "\t\t\tLuaLexer.FetchToken(LuaToken.BracketOpen, code);"
            ],
            [
                1305,
                "\t\t\t\t\ttName = LuaLexer.FetchToken(LuaToken.Identifier, code);"
            ],
            [
                1319,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.Comma, code, true);"
            ],
            [
                1340,
                "\t\t\t\t\tthrow LuaLexer.ParseError(t, String.Format(Properties.Resources.rsParseConvertNumberError, number));"
            ],
            [
                1656,
                "\t\t\tLuaLexer.FetchToken(LuaToken.BracketOpen, code);"
            ],
            [
                1660,
                "\t\t\tLuaLexer.FetchToken(LuaToken.Comma, code);"
            ],
            [
                1665,
                "\t\t\tLuaLexer.FetchToken(LuaToken.BracketClose, code);"
            ],
            [
                1673,
                "\t\t\ttokenName = LuaLexer.FetchToken(LuaToken.Identifier, code);"
            ],
            [
                1705,
                "\t\t\t\t\tLuaLexer.FetchToken(LuaToken.BracketSquareClose, code);"
            ],
            [
                1710,
                "\t\t\t\t\t\t\tthrow LuaLexer.ParseError(code.Current, String.Format(Properties.Resources.rsParseUnknownType, currentType.FullName));"
            ],
            [
                1722,
                "\t\t\t\t\t\t\tthrow LuaLexer.ParseError(code.Current, e.Message);"
            ],
            [
                1729,
                "\t\t\t\t\tcurrentType = LuaType.GetType(currentType.AddType(LuaLexer.FetchToken(LuaToken.Identifier, code).Value, false, null));"
            ],
            [
                1734,
                "\t\t\t\tthrow LuaLexer.ParseError(code.Current, String.Format(Properties.Resources.rsParseUnknownType, currentType.FullName));"
            ],
            [
                1741,
                "\t\t\tvar typeName = LuaLexer.FetchToken(LuaToken.Identifier, code).Value;"
            ],
            [
                1760,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwGoto, code);"
            ],
            [
                1762,
                "\t\t\tvar t = LuaLexer.FetchToken(LuaToken.Identifier, code);"
            ],
            [
                1769,
                "\t\t\tLuaLexer.FetchToken(LuaToken.ColonColon, code);"
            ],
            [
                1772,
                "\t\t\tscope.AddExpression(Expression.Label(scope.LookupLabel(null, LuaLexer.FetchToken(LuaToken.Identifier, code).Value)));"
            ],
            [
                1774,
                "\t\t\tLuaLexer.FetchToken(LuaToken.ColonColon, code);"
            ],
            [
                1791,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwDo, code);"
            ],
            [
                1805,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.BracketClose, code);"
            ],
            [
                1817,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwEnd, code);"
            ],
            [
                1828,
                "\t\t\t\t\tLuaLexer.FetchToken(LuaToken.KwFunction, code);"
            ],
            [
                1833,
                "\t\t\t\t\t\tvar exceptionName = LuaLexer.FetchToken(LuaToken.Identifier, code);"
            ],
            [
                1843,
                "\t\t\t\t\t\t\t\tthrow LuaLexer.ParseError(code.Current, String.Format(Properties.Resources.rsParseCatchVarTypeMustAssignableToException, exceptionType.FullName));"
            ],
            [
                1848,
                "\t\t\t\t\t\tLuaLexer.FetchToken(LuaToken.BracketClose, code);"
            ],
            [
                1863,
                "\t\t\t\t\tLuaLexer.FetchToken(LuaToken.KwEnd, code);"
            ],
            [
                1864,
                "\t\t\t\t\tLuaLexer.FetchToken(LuaToken.Comma, code, true);"
            ],
            [
                1867,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.BracketClose, code);"
            ],
            [
                1901,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwWhile, code);"
            ],
            [
                1913,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwDo, code);"
            ],
            [
                1915,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwEnd, code);"
            ],
            [
                1932,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwRepeat, code);"
            ],
            [
                1936,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwUntil, code);"
            ],
            [
                1953,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwFor, code);"
            ],
            [
                1958,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.Assign, code);"
            ],
            [
                1960,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.Comma, code);"
            ],
            [
                1974,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.KwDo, code);"
            ],
            [
                1976,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.KwEnd, code);"
            ],
            [
                1997,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.KwIn, code);"
            ],
            [
                2001,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.KwDo, code);"
            ],
            [
                2003,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.KwEnd, code);"
            ],
            [
                2024,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwIn, code);"
            ],
            [
                2028,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwDo, code);"
            ],
            [
                2030,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwEnd, code);"
            ],
            [
                2158,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwBreak, code);"
            ],
            [
                2164,
                "\t\t\tLuaLexer.FetchToken(LuaToken.Semicolon, code, true);"
            ],
            [
                2173,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwFunction, code);"
            ],
            [
                2177,
                "\t\t\t\tvar t = LuaLexer.FetchToken(LuaToken.Identifier, code);"
            ],
            [
                2187,
                "\t\t\t\tvar tCurrent = LuaLexer.FetchToken(LuaToken.Identifier, code);"
            ],
            [
                2197,
                "\t\t\t\t\tmemberName = LuaLexer.FetchToken(LuaToken.Identifier, code).Value;"
            ],
            [
                2208,
                "\t\t\t\t\tmemberName = LuaLexer.FetchToken(LuaToken.Identifier, code).Value;"
            ],
            [
                2244,
                "\t\t\tLuaLexer.FetchToken(LuaToken.BracketOpen, code);"
            ],
            [
                2277,
                "\t\t\tLuaLexer.FetchToken(LuaToken.BracketClose, code);"
            ],
            [
                2302,
                "\t\t\tLuaLexer.FetchToken(LuaToken.KwEnd, code);"
            ],
            [
                2325,
                "\t\t\tLuaLexer.FetchToken(LuaToken.BracketCurlyOpen, code);"
            ],
            [
                2356,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.BracketCurlyClose, code);"
            ],
            [
                2362,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.BracketCurlyClose, code);"
            ],
            [
                2375,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.BracketSquareClose, code);"
            ],
            [
                2376,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.Assign, code);"
            ],
            [
                2390,
                "\t\t\t\tLuaLexer.FetchToken(LuaToken.Assign, code);"
            ],
            [
                2436,
                "\t\t\t\t\treturn LuaLexer.ParseError(code.Current, Properties.Resources.rsParseInvalidString);"
            ],
            [
                2438,
                "\t\t\t\t\treturn LuaLexer.ParseError(code.Current, Properties.Resources.rsParseInvalidStringOpening);"
            ],
            [
                2440,
                "\t\t\t\t\treturn LuaLexer.ParseError(code.Current, Properties.Resources.rsParseInvalidComment);"
            ],
            [
                2442,
                "\t\t\t\t\treturn LuaLexer.ParseError(code.Current, Properties.Resources.rsParseInvalidChar);"
            ],
            [
                2444,
                "\t\t\t\t\treturn LuaLexer.ParseError(code.Current, message ?? \"Invalid message.\");"
            ]
        ],
        "deleted": [
            [
                435,
                "\t\t\t\t\tthrow ParseError(position, Properties.Resources.rsParseInvalidArgList);"
            ],
            [
                493,
                "\t\t\t\t\tthrow ParseError(Position, Properties.Resources.rsParseExpressionNotAssignable);"
            ],
            [
                544,
                "\t\t\t\t\tthrow ParseError(Position, Properties.Resources.rsParseExpressionNoResult);"
            ],
            [
                612,
                "\t\t\t\tthrow ParseError(code.Current, Properties.Resources.rsParseEof);"
            ],
            [
                888,
                "\t\t\t\t\t\tthrow ParseError(tVar, Properties.Resources.rsParseTypeRedef);"
            ],
            [
                999,
                "\t\t\t\t\t\tthrow ParseError(prefixes[i].Position, Properties.Resources.rsParseAssignmentExpected);"
            ],
            [
                1024,
                "\t\t\tFetchToken(LuaToken.KwIf, code);"
            ],
            [
                1026,
                "\t\t\tFetchToken(LuaToken.KwThen, code);"
            ],
            [
                1037,
                "\t\t\t\tFetchToken(LuaToken.KwThen, code);"
            ],
            [
                1045,
                "\t\t\t\tFetchToken(LuaToken.KwEnd, code);"
            ],
            [
                1054,
                "\t\t\t\tthrow ParseError(code.Current, Properties.Resources.rsParseUnexpectedTokenElse);"
            ],
            [
                1078,
                "\t\t\t\tFetchToken(LuaToken.Assign, code);"
            ],
            [
                1086,
                "\t\t\t\t\tthrow ParseError(tVarName, Properties.Resources.rsConstExpressionNeeded);"
            ],
            [
                1103,
                "\t\t\t\t\t\tthrow ParseError(tVarName, String.Format(Properties.Resources.rsConstExpressionEvalError, e.Message));"
            ],
            [
                1137,
                "\t\t\t\t\t\tFetchToken(LuaToken.BracketClose, code);"
            ],
            [
                1165,
                "\t\t\t\t\t\t\tthrow ParseError(t, Properties.Resources.rsParseNoArgList);"
            ],
            [
                1179,
                "\t\t\t\t\tinfo = new PrefixMemberInfo(tStart, Expression.Constant(FetchToken(LuaToken.String, code).Value, typeof(string)), null, null, null);"
            ],
            [
                1183,
                "\t\t\t\t\tinfo = new PrefixMemberInfo(tStart, ParseNumber(scope.Runtime, FetchToken(LuaToken.Number, code)), null, null, null);"
            ],
            [
                1217,
                "\t\t\t\t\tthrow ParseError(code.Current, Properties.Resources.rsParseUnexpectedTokenPrefix);"
            ],
            [
                1240,
                "\t\t\t\t\t\tFetchToken(LuaToken.BracketSquareClose, code);"
            ],
            [
                1246,
                "\t\t\t\t\t\tinfo.SetMember(FetchToken(LuaToken.Identifier, code), false);"
            ],
            [
                1261,
                "\t\t\t\t\t\tinfo.Arguments = new ArgumentsList(Expression.Constant(FetchToken(LuaToken.String, code).Value, typeof(object)));"
            ],
            [
                1269,
                "\t\t\t\t\t\tinfo.SetMember(FetchToken(LuaToken.Identifier, code), true);"
            ],
            [
                1283,
                "\t\t\t\t\t\t\t\tinfo.Arguments = new ArgumentsList(Expression.Constant(FetchToken(LuaToken.String, code).Value, typeof(string)));"
            ],
            [
                1296,
                "\t\t\tFetchToken(LuaToken.BracketOpen, code);"
            ],
            [
                1305,
                "\t\t\t\t\ttName = FetchToken(LuaToken.Identifier, code);"
            ],
            [
                1319,
                "\t\t\t\tFetchToken(LuaToken.Comma, code, true);"
            ],
            [
                1340,
                "\t\t\t\t\tthrow ParseError(t, String.Format(Properties.Resources.rsParseConvertNumberError, number));"
            ],
            [
                1656,
                "\t\t\tFetchToken(LuaToken.BracketOpen, code);"
            ],
            [
                1660,
                "\t\t\tFetchToken(LuaToken.Comma, code);"
            ],
            [
                1665,
                "\t\t\tFetchToken(LuaToken.BracketClose, code);"
            ],
            [
                1673,
                "\t\t\ttokenName = FetchToken(LuaToken.Identifier, code);"
            ],
            [
                1705,
                "\t\t\t\t\tFetchToken(LuaToken.BracketSquareClose, code);"
            ],
            [
                1710,
                "\t\t\t\t\t\t\tthrow ParseError(code.Current, String.Format(Properties.Resources.rsParseUnknownType, currentType.FullName));"
            ],
            [
                1722,
                "\t\t\t\t\t\t\tthrow ParseError(code.Current, e.Message);"
            ],
            [
                1729,
                "\t\t\t\t\tcurrentType = LuaType.GetType(currentType.AddType(FetchToken(LuaToken.Identifier, code).Value, false, null));"
            ],
            [
                1734,
                "\t\t\t\tthrow ParseError(code.Current, String.Format(Properties.Resources.rsParseUnknownType, currentType.FullName));"
            ],
            [
                1741,
                "\t\t\tvar typeName = FetchToken(LuaToken.Identifier, code).Value;"
            ],
            [
                1760,
                "\t\t\tFetchToken(LuaToken.KwGoto, code);"
            ],
            [
                1762,
                "\t\t\tvar t = FetchToken(LuaToken.Identifier, code);"
            ],
            [
                1769,
                "\t\t\tFetchToken(LuaToken.ColonColon, code);"
            ],
            [
                1772,
                "\t\t\tscope.AddExpression(Expression.Label(scope.LookupLabel(null, FetchToken(LuaToken.Identifier, code).Value)));"
            ],
            [
                1774,
                "\t\t\tFetchToken(LuaToken.ColonColon, code);"
            ],
            [
                1791,
                "\t\t\tFetchToken(LuaToken.KwDo, code);"
            ],
            [
                1805,
                "\t\t\t\tFetchToken(LuaToken.BracketClose, code);"
            ],
            [
                1817,
                "\t\t\tFetchToken(LuaToken.KwEnd, code);"
            ],
            [
                1828,
                "\t\t\t\t\tFetchToken(LuaToken.KwFunction, code);"
            ],
            [
                1833,
                "\t\t\t\t\t\tvar exceptionName = FetchToken(LuaToken.Identifier, code);"
            ],
            [
                1843,
                "\t\t\t\t\t\t\t\tthrow ParseError(code.Current, String.Format(Properties.Resources.rsParseCatchVarTypeMustAssignableToException, exceptionType.FullName));"
            ],
            [
                1848,
                "\t\t\t\t\t\tFetchToken(LuaToken.BracketClose, code);"
            ],
            [
                1863,
                "\t\t\t\t\tFetchToken(LuaToken.KwEnd, code);"
            ],
            [
                1864,
                "\t\t\t\t\tFetchToken(LuaToken.Comma, code, true);"
            ],
            [
                1867,
                "\t\t\t\tFetchToken(LuaToken.BracketClose, code);"
            ],
            [
                1901,
                "\t\t\tFetchToken(LuaToken.KwWhile, code);"
            ],
            [
                1913,
                "\t\t\tFetchToken(LuaToken.KwDo, code);"
            ],
            [
                1915,
                "\t\t\tFetchToken(LuaToken.KwEnd, code);"
            ],
            [
                1932,
                "\t\t\tFetchToken(LuaToken.KwRepeat, code);"
            ],
            [
                1936,
                "\t\t\tFetchToken(LuaToken.KwUntil, code);"
            ],
            [
                1953,
                "\t\t\tFetchToken(LuaToken.KwFor, code);"
            ],
            [
                1958,
                "\t\t\t\tFetchToken(LuaToken.Assign, code);"
            ],
            [
                1960,
                "\t\t\t\tFetchToken(LuaToken.Comma, code);"
            ],
            [
                1974,
                "\t\t\t\tFetchToken(LuaToken.KwDo, code);"
            ],
            [
                1976,
                "\t\t\t\tFetchToken(LuaToken.KwEnd, code);"
            ],
            [
                1997,
                "\t\t\t\tFetchToken(LuaToken.KwIn, code);"
            ],
            [
                2001,
                "\t\t\t\tFetchToken(LuaToken.KwDo, code);"
            ],
            [
                2003,
                "\t\t\t\tFetchToken(LuaToken.KwEnd, code);"
            ],
            [
                2024,
                "\t\t\tFetchToken(LuaToken.KwIn, code);"
            ],
            [
                2028,
                "\t\t\tFetchToken(LuaToken.KwDo, code);"
            ],
            [
                2030,
                "\t\t\tFetchToken(LuaToken.KwEnd, code);"
            ],
            [
                2158,
                "\t\t\tFetchToken(LuaToken.KwBreak, code);"
            ],
            [
                2164,
                "\t\t\tFetchToken(LuaToken.Semicolon, code, true);"
            ],
            [
                2173,
                "\t\t\tFetchToken(LuaToken.KwFunction, code);"
            ],
            [
                2177,
                "\t\t\t\tvar t = FetchToken(LuaToken.Identifier, code);"
            ],
            [
                2187,
                "\t\t\t\tvar tCurrent = FetchToken(LuaToken.Identifier, code);"
            ],
            [
                2197,
                "\t\t\t\t\tmemberName = FetchToken(LuaToken.Identifier, code).Value;"
            ],
            [
                2208,
                "\t\t\t\t\tmemberName = FetchToken(LuaToken.Identifier, code).Value;"
            ],
            [
                2244,
                "\t\t\tFetchToken(LuaToken.BracketOpen, code);"
            ],
            [
                2277,
                "\t\t\tFetchToken(LuaToken.BracketClose, code);"
            ],
            [
                2302,
                "\t\t\tFetchToken(LuaToken.KwEnd, code);"
            ],
            [
                2325,
                "\t\t\tFetchToken(LuaToken.BracketCurlyOpen, code);"
            ],
            [
                2356,
                "\t\t\t\tFetchToken(LuaToken.BracketCurlyClose, code);"
            ],
            [
                2362,
                "\t\t\t\tFetchToken(LuaToken.BracketCurlyClose, code);"
            ],
            [
                2375,
                "\t\t\t\tFetchToken(LuaToken.BracketSquareClose, code);"
            ],
            [
                2376,
                "\t\t\t\tFetchToken(LuaToken.Assign, code);"
            ],
            [
                2390,
                "\t\t\t\tFetchToken(LuaToken.Assign, code);"
            ],
            [
                2430,
                ""
            ],
            [
                2431,
                "\t\tpublic static Token FetchToken(LuaToken typ, ILuaLexer code, bool isOptional = false)"
            ],
            [
                2432,
                "\t\t{"
            ],
            [
                2433,
                "\t\t\tif (code.Current.Typ == typ)"
            ],
            [
                2434,
                "\t\t\t{"
            ],
            [
                2435,
                "\t\t\t\tvar t = code.Current;"
            ],
            [
                2436,
                "\t\t\t\tcode.Next();"
            ],
            [
                2437,
                "\t\t\t\treturn t;"
            ],
            [
                2438,
                "\t\t\t}"
            ],
            [
                2439,
                "\t\t\telse if (isOptional)"
            ],
            [
                2440,
                "\t\t\t\treturn null;"
            ],
            [
                2441,
                "\t\t\telse"
            ],
            [
                2442,
                "\t\t\t\tthrow ParseError(code, String.Format(Properties.Resources.rsParseUnexpectedToken, LuaLexer.GetTokenName(code.Current.Typ), LuaLexer.GetTokenName(typ)));"
            ],
            [
                2443,
                "\t\t} // proc FetchToken"
            ],
            [
                2444,
                ""
            ],
            [
                2445,
                "\t\tpublic static LuaParseException ParseError(Token start, string message)"
            ],
            [
                2446,
                "\t\t\t=> new LuaParseException(start.Start, message, null);"
            ],
            [
                2453,
                "\t\t\t\t\treturn ParseError(code.Current, Properties.Resources.rsParseInvalidString);"
            ],
            [
                2455,
                "\t\t\t\t\treturn ParseError(code.Current, Properties.Resources.rsParseInvalidStringOpening);"
            ],
            [
                2457,
                "\t\t\t\t\treturn ParseError(code.Current, Properties.Resources.rsParseInvalidComment);"
            ],
            [
                2459,
                "\t\t\t\t\treturn ParseError(code.Current, Properties.Resources.rsParseInvalidChar);"
            ],
            [
                2461,
                "\t\t\t\t\treturn ParseError(code.Current, message ?? \"Invalid message.\");"
            ]
        ]
    },
    "num_lines_added": 90,
    "num_lines_removed": 107
}