{
    "hash": "8d72cc82d843ef4c20ba722fdfbb999ca7730ec2",
    "message": "\u670d\u52a1\u5185\u8ba1\u7b97\u5e94\u7528\u548c\u7f51\u7edc\u4f1a\u8bdd",
    "file_num_lines": 419,
    "diff_parsed": {
        "added": [
            [
                31,
                "        private App _App;"
            ],
            [
                32,
                "        private INetSession _Net;"
            ],
            [
                33,
                ""
            ],
            [
                42,
                "            WriteLog(\"[{0}]\u4ece[{1}]\u767b\u5f55[{2}@{3}]\", model.User, _Net.Remote, model.Machine, model.ProcessId);"
            ],
            [
                49,
                "                app = CheckApp(app, model.User, model.Pass, _Net.Remote.Host);"
            ],
            [
                73,
                "            var online = CreateOnline(app, _Net, model.Machine, model.ProcessId);"
            ],
            [
                134,
                "            _Net = Session as INetSession;"
            ],
            [
                137,
                "                _App = app;"
            ],
            [
                138,
                ""
            ],
            [
                139,
                "                var online = GetOnline(app, _Net);"
            ],
            [
                145,
                "                throw new ApiException(401, \"{0}\u672a\u767b\u5f55\uff01\u4e0d\u80fd\u6267\u884c{1}\".F(_Net.Remote, act));"
            ],
            [
                174,
                "            var jobs = Job.FindAllByAppID(_App.ID);"
            ],
            [
                187,
                "            var myJobs = Job.FindAllByAppID(_App.ID);"
            ],
            [
                196,
                "                        AppID = _App.ID,"
            ],
            [
                217,
                "                    WriteLog(\"[{0}]\u66f4\u65b0\u4f5c\u4e1a[{1}] @[{2}]\", _App, item.Name, _Net.Remote);"
            ],
            [
                240,
                "            var app = _App;"
            ],
            [
                241,
                "            if (app == null) return new TaskModel[0];"
            ],
            [
                257,
                "            var online = GetOnline(app, _Net);"
            ],
            [
                271,
                "                var ip = _Net.Remote.Host;"
            ],
            [
                315,
                "                var ip = _Net.Remote.Host;"
            ],
            [
                348,
                "            var app = _App;"
            ],
            [
                416,
                "            var app = _App;"
            ],
            [
                446,
                "                UpdateOnline(app, jt, _Net);"
            ],
            [
                549,
                "            var olts = AppOnline.FindAllByAppID(_App.ID);"
            ],
            [
                608,
                "        void WriteHistory(String action, Boolean success, String remark) => AppHistory.Create(_App, action, success, remark, Local + \"\", _Net.Remote?.Host);"
            ]
        ],
        "deleted": [
            [
                39,
                "            var ns = Session as INetSession;"
            ],
            [
                40,
                "            var ip = ns.Remote.Host;"
            ],
            [
                41,
                ""
            ],
            [
                42,
                "            WriteLog(\"[{0}]\u4ece[{1}]\u767b\u5f55[{2}@{3}]\", model.User, ns.Remote, model.Machine, model.ProcessId);"
            ],
            [
                49,
                "                app = CheckApp(app, model.User, model.Pass, ip);"
            ],
            [
                73,
                "            var online = CreateOnline(app, ns, model.Machine, model.ProcessId);"
            ],
            [
                134,
                "            var ns = Session as INetSession;"
            ],
            [
                137,
                "                var online = GetOnline(app, ns);"
            ],
            [
                143,
                "                throw new ApiException(401, \"{0}\u672a\u767b\u5f55\uff01\u4e0d\u80fd\u6267\u884c{1}\".F(ns.Remote, act));"
            ],
            [
                172,
                "            var app = Session[\"App\"] as App;"
            ],
            [
                173,
                ""
            ],
            [
                174,
                "            var jobs = Job.FindAllByAppID(app.ID);"
            ],
            [
                175,
                "            //if (names != null && names.Length > 0) jobs = jobs.Where(e => names.Contains(e.Name)).ToList();"
            ],
            [
                188,
                "            var app = Session[\"App\"] as App;"
            ],
            [
                189,
                "            var ns = Session as INetSession;"
            ],
            [
                190,
                ""
            ],
            [
                191,
                "            var myJobs = Job.FindAllByAppID(app.ID);"
            ],
            [
                200,
                "                        AppID = app.ID,"
            ],
            [
                221,
                "                    WriteLog(\"[{0}]\u66f4\u65b0\u4f5c\u4e1a[{1}] @[{2}]\", app, item.Name, ns.Remote);"
            ],
            [
                244,
                "            if (!(Session[\"App\"] is App app)) return new TaskModel[0];"
            ],
            [
                260,
                "            var online = GetOnline(app, Session as INetSession);"
            ],
            [
                274,
                "                var ip = (Session as INetSession).Remote.Host;"
            ],
            [
                318,
                "                var ip = (Session as INetSession).Remote.Host;"
            ],
            [
                351,
                "            var app = Session[\"App\"] as App;"
            ],
            [
                419,
                "            var app = Session[\"App\"] as App;"
            ],
            [
                449,
                "                UpdateOnline(app, jt, Session as INetSession);"
            ],
            [
                552,
                "            var app = Session[\"App\"] as App;"
            ],
            [
                553,
                ""
            ],
            [
                554,
                "            var olts = AppOnline.FindAllByAppID(app.ID);"
            ],
            [
                613,
                "        void WriteHistory(String action, Boolean success, String remark)"
            ],
            [
                614,
                "        {"
            ],
            [
                615,
                "            var app = Session[\"App\"] as App;"
            ],
            [
                616,
                "            var ns = Session as INetSession;"
            ],
            [
                617,
                "            var ip = ns.Remote?.Host;"
            ],
            [
                618,
                ""
            ],
            [
                619,
                "            AppHistory.Create(app, action, success, remark, Local + \"\", ip);"
            ],
            [
                620,
                "        }"
            ]
        ]
    },
    "num_lines_added": 25,
    "num_lines_removed": 37
}