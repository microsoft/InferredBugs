        [Api(nameof(Login))]
        public LoginResponse Login(LoginModel model)
        {
            if (model.User.IsNullOrEmpty()) throw new ArgumentNullException(nameof(model.User));

            var ns = Session as INetSession;
            var ip = ns.Remote.Host;

            WriteLog("[{0}]从[{1}]登录[{2}@{3}]", model.User, ns.Remote, model.Machine, model.ProcessId);

            // 找应用
            var autoReg = false;
            var app = App.FindByName(model.User);
            if (app == null || app.Secret.MD5() != model.Pass)
            {
                app = CheckApp(app, model.User, model.Pass, ip);
                if (app == null) throw new ArgumentOutOfRangeException(nameof(model.User));

                autoReg = true;
            }

            if (app == null) throw new Exception($"应用[{model.User}]不存在！");
            if (!app.Enable) throw new Exception("已禁用！");

            // 核对密码
            if (!autoReg && !app.Secret.IsNullOrEmpty())
            {
                var pass2 = app.Secret.MD5();
                if (model.Pass != pass2) throw new Exception("密码错误！");
            }

            // 版本和编译时间
            if (app.Version.IsNullOrEmpty() || app.Version.CompareTo(model.Version) < 0) app.Version = model.Version;
            if (app.CompileTime < model.Compile) app.CompileTime = model.Compile;
            if (app.DisplayName.IsNullOrEmpty()) app.DisplayName = model.DisplayName;

            app.Save();

            // 应用上线
            var online = CreateOnline(app, ns, model.Machine, model.ProcessId);
            online.Version = model.Version;
            online.CompileTime = model.Compile;
            online.Save();

            // 记录当前用户
            Session["App"] = app;

            WriteHistory(autoReg ? "注册" : "登录", true, $"[{model.User}/{model.Pass}]在[{model.Machine}@{model.ProcessId}]登录[{app}]成功");

            var rs = new LoginResponse { Name = app.Name, DisplayName = app.DisplayName };
            if (autoReg) rs.Secret = app.Secret;

            return rs;
        }