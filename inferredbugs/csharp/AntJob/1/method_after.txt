        [Api(nameof(Login))]
        public Object Login(String user, String pass)
        {
            if (user.IsNullOrEmpty()) throw new ArgumentNullException(nameof(user));
            if (pass.IsNullOrEmpty()) throw new ArgumentNullException(nameof(pass));

            var ps = ControllerContext.Current.Parameters;
            var machine = ps["machine"] + "";
            var pid = ps["processid"].ToInt();
            var ver = ps["version"] + "";
            var compile = ps["Compile"].ToDateTime();

            var ns = Session as INetSession;
            var ip = ns.Remote.Host;

            WriteLog("[{0}]从[{1}]登录[{2}@{3}]", user, ns.Remote, machine, pid);

            // 找应用
            var app = App.FindByName(user);
            if (app == null || app.Secret.IsNullOrEmpty())
            {
                app = CheckApp(app, user, pass, ip);
                if (app == null) throw new ArgumentOutOfRangeException(nameof(user));
            }

            if (app == null) throw new Exception("应用不存在！");
            if (!app.Enable) throw new Exception("已禁用！");

            // 核对密码
            if (app.Secret.IsNullOrEmpty())
                app.Secret = Rand.NextString(16);
            else
            {
                var pass2 = app.Secret.MD5();
                if (pass != pass2) throw new Exception("密码错误！");
            }

            // 版本和编译时间
            if (app.Version.IsNullOrEmpty() || app.Version.CompareTo(ver) < 0) app.Version = ver;
            if (app.CompileTime < compile) app.CompileTime = compile;

            var autoReg = app.ID == 0;

            app.Save();

            // 应用上线
            var online = CreateOnline(app, ns, machine, pid);
            online.Version = ver;
            online.CompileTime = compile;
            online.Save();

            // 记录当前用户
            Session["App"] = app;

            WriteHistory("登录", true, $"[{user}/{pass}]在[{machine}@{pid}]登录[{app}]成功");

            if (autoReg)
                return new
                {
                    app.Name,
                    app.Secret,
                    app.DisplayName,
                };
            else
                return new
                {
                    app.Name,
                    app.DisplayName,
                };
        }