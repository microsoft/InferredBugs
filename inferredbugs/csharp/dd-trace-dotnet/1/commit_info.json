{
    "hash": "68360cf646a179a03443ab31676ac5ddfdef0d04",
    "message": "Add a TraceContext to hold relevant context at the trace level",
    "file_num_lines": 88,
    "diff_parsed": {
        "added": [
            [
                10,
                "        private Mock<ITraceContext> _traceContextMock;"
            ],
            [
                11,
                ""
            ],
            [
                15,
                "            _traceContextMock = new Mock<ITraceContext>(MockBehavior.Strict);"
            ],
            [
                16,
                "            _traceContextMock.Setup(x => x.CloseSpan(It.IsAny<Span>()));"
            ],
            [
                17,
                "            _tracerMock.Setup(x => x.GetTraceContext()).Returns(_traceContextMock.Object);"
            ],
            [
                31,
                "            _traceContextMock.Verify(x => x.CloseSpan(It.IsAny<Span>()), Times.Never);"
            ],
            [
                45,
                "            _traceContextMock.Verify(x => x.CloseSpan(It.IsAny<Span>()), Times.Never);"
            ],
            [
                57,
                "            _traceContextMock.Verify(x => x.CloseSpan(It.IsAny<Span>()), Times.Once);"
            ],
            [
                68,
                "            _traceContextMock.Verify(x => x.CloseSpan(It.IsAny<Span>()), Times.Once);"
            ],
            [
                70,
                "    }"
            ],
            [
                81,
                "            _traceContextMock.Verify(x => x.CloseSpan(It.IsAny<Span>()), Times.Once);"
            ],
            [
                94,
                "            _traceContextMock.Verify(x => x.CloseSpan(It.IsAny<Span>()), Times.Once);"
            ],
            [
                106,
                "            _traceContextMock.Verify(x => x.CloseSpan(It.IsAny<Span>()), Times.Once);"
            ]
        ],
        "deleted": [
            [
                47,
                "            _tracerMock"
            ],
            [
                48,
                "               .Setup(x => x.Write(It.Is<Span>(s => s == span)));"
            ],
            [
                53,
                "            _tracerMock"
            ],
            [
                54,
                "                .Verify(x => x.Write(It.Is<Span>(s => s == span)), Times.Once);"
            ],
            [
                61,
                "            _tracerMock"
            ],
            [
                62,
                "               .Setup(x => x.Write(It.Is<Span>(s => s == span)));"
            ],
            [
                67,
                "            _tracerMock"
            ],
            [
                68,
                "                .Verify(x => x.Write(It.Is<Span>(s => s == span)), Times.Once);"
            ],
            [
                69,
                "        }"
            ],
            [
                77,
                "            _tracerMock"
            ],
            [
                78,
                "               .Setup(x => x.Write(It.Is<Span>(s => s == span)));"
            ],
            [
                83,
                "            _tracerMock"
            ],
            [
                84,
                "                .Verify(x => x.Write(It.Is<Span>(s => s == span)), Times.Once);"
            ],
            [
                93,
                "            _tracerMock"
            ],
            [
                94,
                "               .Setup(x => x.Write(It.Is<Span>(s => s == span)));"
            ],
            [
                99,
                "            _tracerMock"
            ],
            [
                100,
                "                .Verify(x => x.Write(It.Is<Span>(s => s == span)), Times.Once);"
            ],
            [
                109,
                "                _tracerMock"
            ],
            [
                110,
                "                   .Setup(x => x.Write(It.Is<Span>(s => s == span)));"
            ],
            [
                114,
                "            _tracerMock"
            ],
            [
                115,
                "                .Verify(x => x.Write(It.Is<Span>(s => s == span)), Times.Once);"
            ]
        ]
    },
    "num_lines_added": 13,
    "num_lines_removed": 21
}