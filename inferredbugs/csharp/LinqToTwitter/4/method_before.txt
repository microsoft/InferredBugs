  [TestMethod]
		public void ProcessResults_Populates_Entities()
		{
			var tweetProc = new TweetRequestProcessor<TweetQuery> { BaseUrl = BaseUrl2 };

			List<TweetQuery> results = tweetProc.ProcessResults(SingleTweet);

			Assert.IsNotNull(results);
			TweetQuery tweetQuery = results.SingleOrDefault();
			Assert.IsNotNull(tweetQuery);

			List<Tweet> tweets = tweetQuery.Tweets;
			Assert.IsNotNull(tweets);
			Assert.AreEqual(1, tweets.Count);
			Tweet tweet = tweets.FirstOrDefault();
			Assert.IsNotNull(tweet);
			TweetEntities entities = tweet.Entities;
			Assert.IsNotNull(entities);

			TweetEntityAnnotation annotation = entities?.Annotations?.FirstOrDefault();
			Assert.IsNotNull(annotation);
			Assert.AreEqual(53, annotation.Start);
			Assert.AreEqual(59, annotation.End);
			Assert.AreEqual(0.5865f, annotation.Probability);
			Assert.AreEqual("Organization", annotation.Type);
			Assert.AreEqual("Twitter", annotation.NormalizedText);

			TweetEntityMention mention = entities?.Mentions?.FirstOrDefault();
			Assert.IsNotNull(mention);
			Assert.AreEqual(14, mention.End);
			Assert.AreEqual("13334762", mention.ID);
			Assert.AreEqual(7, mention.Start);
			Assert.AreEqual("github", mention.Username);

			TweetEntityUrl url = entities?.Urls?.FirstOrDefault();
			Assert.IsNotNull(url);
			Assert.AreEqual(62, url.Start);
			Assert.AreEqual(85, url.End);
            Assert.AreEqual("https://t.co/jWeDEN07HN", url.Url);
			Assert.AreEqual("http://bit.ly/1b2wrHb", url.ExpandedUrl);
			Assert.AreEqual("bit.ly/1b2wrHb", url.DisplayUrl);
			Assert.AreEqual(200, url.Status);
			Assert.AreEqual("GitHub - JoeMayo/LinqToTwitter: LINQ Provider for the Twitter API (C# Twitter Library)", url.Title);
			Assert.AreEqual("LINQ Provider for the Twitter API (C# Twitter Library) - GitHub - JoeMayo/LinqToTwitter: LINQ Provider for the Twitter API (C# Twitter Library)", url.Description);
			Assert.AreEqual("https://github.com/JoeMayo/LinqToTwitter", url.UnwoundUrl);
			List<TweetEntityImage> images = url.Images;
			Assert.IsNotNull(images);
			Assert.AreEqual(2, images.Count);
			TweetEntityImage image = images.First();
			Assert.AreEqual("https://pbs.twimg.com/news_img/1527013178009329664/f45coPtn?format=png&name=orig", image.Url);
			Assert.AreEqual(200, image.Width);
			Assert.AreEqual(200, image.Height);
		}