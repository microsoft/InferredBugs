{
    "hash": "c58c42c66534bfb181ae43b9a45274b42bf7a52b",
    "message": "ConfigInfo refactoring.",
    "file_num_lines": 161,
    "diff_parsed": {
        "added": [
            [
                8,
                "using Common.Logging;"
            ],
            [
                9,
                "using Couchbase.Configuration;"
            ],
            [
                23,
                "        private readonly ILog Log = LogManager.GetCurrentClassLogger();"
            ],
            [
                69,
                "            var success = false;"
            ],
            [
                70,
                "            IBucket bucket = null;"
            ],
            [
                71,
                "            foreach (var provider in _configProviders)"
            ],
            [
                73,
                "                try"
            ],
            [
                74,
                "                {"
            ],
            [
                75,
                "                    var config = provider.GetConfig(bucketName);"
            ],
            [
                76,
                "                    switch (config.BucketType)"
            ],
            [
                77,
                "                    {"
            ],
            [
                78,
                "                        case BucketTypeEnum.Couchbase:"
            ],
            [
                79,
                "                            bucket = new CouchbaseBucket(this, bucketName);"
            ],
            [
                80,
                "                            break;"
            ],
            [
                81,
                "                        case BucketTypeEnum.Memcached:"
            ],
            [
                82,
                "                            throw new NotSupportedException(\"No implementations for MemcachedBuckets exist ATM.\");"
            ],
            [
                83,
                "                        default:"
            ],
            [
                84,
                "                            throw new ArgumentOutOfRangeException();"
            ],
            [
                85,
                "                    }"
            ],
            [
                86,
                "                    var listener = bucket as IConfigListener;"
            ],
            [
                87,
                "                    if (provider.RegisterListener(listener) &&"
            ],
            [
                88,
                "                        _buckets.TryAdd(bucket.Name, bucket))"
            ],
            [
                89,
                "                    {"
            ],
            [
                90,
                "                        listener.NotifyConfigChanged(config);"
            ],
            [
                91,
                "                        success = true;"
            ],
            [
                92,
                "                        break;"
            ],
            [
                93,
                "                    }"
            ],
            [
                94,
                "                }"
            ],
            [
                95,
                "                catch (ConfigException e)"
            ],
            [
                96,
                "                {"
            ],
            [
                97,
                "                    Log.Warn(e);"
            ],
            [
                98,
                "                }"
            ],
            [
                100,
                ""
            ],
            [
                101,
                "            if (!success)"
            ],
            [
                103,
                "                throw new ConfigException(\"Could not bootstrap {0}. See log for details.\", bucketName);"
            ]
        ],
        "deleted": [
            [
                66,
                "            var configProvider = ConfigProviders.First();"
            ],
            [
                67,
                ""
            ],
            [
                68,
                "            var bucket = new CouchbaseBucket(this)"
            ],
            [
                69,
                "            {"
            ],
            [
                70,
                "                Name = bucketName"
            ],
            [
                71,
                "            };"
            ],
            [
                72,
                ""
            ],
            [
                73,
                "            if (_buckets.TryAdd(bucketName, bucket))"
            ],
            [
                75,
                "                configProvider.RegisterListener(bucket);"
            ],
            [
                77,
                "            else"
            ],
            [
                79,
                "                throw new BucketAlreadyOpenException(bucketName);"
            ]
        ]
    },
    "num_lines_added": 35,
    "num_lines_removed": 11
}