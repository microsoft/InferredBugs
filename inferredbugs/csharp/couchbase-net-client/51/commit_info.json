{
    "hash": "41802f0fa76bce83f893accca996fb8ec738c007",
    "message": "NCBC-949: Unit test cleanup and refactoring\n\nMotivation\n----------\nFixes a number of breaking unit tests; this part of a project to automate\nthe setup the unit test (read integration test) environment so that's it\nrepeatable and easy to run on a host. See NCBC-942 for details.\n\nModifications\n-------------\nA bunch of refactoring to improve the success rate of the UT's.\n\nResults\n-------\nAssuming you a have a 4 node cluster with 3 replicas, SSL certs and the\nfollowing buckets defined: default, beer-sample, travel-sample,\nauthenticated (with 'secret' as a password) and memcached (a Memcached\nbucket), you should get around 97% success rate.\n\nChange-Id: Ifc61339804a9a7473196b5957020e35012060a79\nReviewed-on: http://review.couchbase.org/52804\nTested-by: Jeffry Morris <jeffrymorris@gmail.com>\nReviewed-by: Simon Basl\u00e9 <simon@couchbase.com>",
    "file_num_lines": 185,
    "diff_parsed": {
        "added": [
            [
                2,
                "using System.IO;"
            ],
            [
                19,
                "        [TestFixtureSetUp]"
            ],
            [
                20,
                "        public void TestFixtureSetup()"
            ],
            [
                21,
                "        {"
            ],
            [
                22,
                "            using (var cluster = new Cluster())"
            ],
            [
                23,
                "            {"
            ],
            [
                24,
                "                using (var bucket = cluster.OpenBucket(\"beer-sample\"))"
            ],
            [
                25,
                "                {"
            ],
            [
                26,
                "                    var manager = bucket.CreateManager(\"Administrator\", \"password\");"
            ],
            [
                27,
                ""
            ],
            [
                28,
                "                    var get = manager.GetDesignDocument(\"beer_ext\");"
            ],
            [
                29,
                "                    if (!get.Success)"
            ],
            [
                30,
                "                    {"
            ],
            [
                31,
                "                        var designDoc = File.ReadAllText(@\"Data\\\\DesignDocs\\\\beers_ext.json\");"
            ],
            [
                32,
                "                        var inserted = manager.InsertDesignDocument(\"beer_ext\", designDoc);"
            ],
            [
                33,
                "                        if (inserted.Success)"
            ],
            [
                34,
                "                        {"
            ],
            [
                35,
                "                            Console.WriteLine(\"Created 'beer_ext' design doc.\");"
            ],
            [
                36,
                "                        }"
            ],
            [
                37,
                "                    }"
            ],
            [
                38,
                "                }"
            ],
            [
                39,
                "            }"
            ],
            [
                40,
                "        }"
            ],
            [
                41,
                ""
            ],
            [
                46,
                "             From(\"beer_ext\", \"all_beers\")."
            ],
            [
                47,
                "             Bucket(\"beer-sample\")."
            ],
            [
                48,
                "             Limit(1)."
            ],
            [
                49,
                "             Development(false);;"
            ],
            [
                59,
                "             From(\"beer_ext\", \"all_beers\")."
            ],
            [
                70,
                "              From(\"beer_ext\", \"all_beers\")."
            ],
            [
                71,
                "              Bucket(\"beer-sample\")."
            ],
            [
                72,
                "              Limit(10)."
            ],
            [
                73,
                "              Development(false);"
            ],
            [
                167,
                "                new ClientConfiguration{ViewRequestTimeout = 5000});"
            ],
            [
                187,
                "                new ClientConfiguration{ViewRequestTimeout = 5000});"
            ]
        ],
        "deleted": [
            [
                22,
                "             From(\"beer\", \"all_beers\")."
            ],
            [
                23,
                "             Bucket(\"beer-sample\").Limit(1);"
            ],
            [
                33,
                "             From(\"beer\", \"all_beers\")."
            ],
            [
                44,
                "              From(\"beer\", \"all_beers\")."
            ],
            [
                45,
                "              Bucket(\"beer-sample\").Limit(10);"
            ],
            [
                139,
                "                new ClientConfiguration{ViewRequestTimeout = 30000});"
            ],
            [
                159,
                "                new ClientConfiguration{ViewRequestTimeout = 30000});"
            ]
        ]
    },
    "num_lines_added": 35,
    "num_lines_removed": 7
}