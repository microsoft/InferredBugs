{
    "hash": "e15742eaa210f204ee15b481213133a8466fc577",
    "message": "Refactored ClientCOnfiguration",
    "file_num_lines": 166,
    "diff_parsed": {
        "added": [
            [
                18,
                "        private static readonly AutoResetEvent ResetEvent = new AutoResetEvent(false);"
            ],
            [
                22,
                "            var config = new ClientConfiguration"
            ],
            [
                24,
                "                Servers = new List<Uri>"
            ],
            [
                25,
                "                {"
            ],
            [
                26,
                "                    new Uri(\"http://192.168.56.101:8091/pools\")"
            ],
            [
                27,
                "                },"
            ],
            [
                28,
                "                PoolConfiguration = new PoolConfiguration"
            ],
            [
                29,
                "                {"
            ],
            [
                30,
                "                    MaxSize = 10,"
            ],
            [
                31,
                "                    MinSize = 1"
            ],
            [
                32,
                "                }"
            ],
            [
                33,
                "            };"
            ],
            [
                46,
                "             // ParallerInsert(bucket, n);"
            ],
            [
                47,
                "               MultiThreaded(4, 1000, null);"
            ],
            [
                50,
                "            //_cluster.CloseBucket(bucket);"
            ],
            [
                119,
                "            var options = new ParallelOptions {MaxDegreeOfParallelism = 4};"
            ],
            [
                126,
                "              var result = bucket.Insert(key, value);"
            ],
            [
                130,
                "                    Console.WriteLine(\"Write Key: {0} - Value: {1}\", key, value);"
            ],
            [
                131,
                ""
            ],
            [
                132,
                "                    var result2 = bucket.Get<string>(key);"
            ],
            [
                135,
                "                        if (result2.Value != value)"
            ],
            [
                136,
                "                        {"
            ],
            [
                137,
                "                            throw new Exception();"
            ],
            [
                138,
                "                        }"
            ],
            [
                145,
                "                }"
            ],
            [
                149,
                "                }"
            ],
            [
                150,
                ""
            ],
            [
                156,
                "            bucket = _cluster.OpenBucket(\"default\");"
            ],
            [
                162,
                "                    NumberOfKeysToCreate = keys,"
            ],
            [
                172,
                "            ResetEvent.WaitOne();"
            ],
            [
                184,
                "                //Console.WriteLine(\"Insert {0} - {1} on thread {2}\", key, result.Success ? \"success\" : \"failure\", Thread.CurrentThread.ManagedThreadId);"
            ],
            [
                186,
                "                Console.WriteLine(\"Get {0} - {1} on thread {2}: {3}\", key, result1.Success ? \"success\" : \"failure\", Thread.CurrentThread.ManagedThreadId, result1.Message);"
            ],
            [
                188,
                "            ThreadData.Processed += threadData.Keys;"
            ],
            [
                190,
                "            if (ThreadData.Processed == threadData.NumberOfKeysToCreate)"
            ],
            [
                192,
                "                ResetEvent.Set();"
            ],
            [
                198,
                "            public int NumberOfKeysToCreate;"
            ],
            [
                199,
                "            public static volatile int Processed;"
            ]
        ],
        "deleted": [
            [
                18,
                "        private static AutoResetEvent _resetEvent = new AutoResetEvent(false);"
            ],
            [
                22,
                "            var config = new ClientConfiguration(new PoolConfiguration()"
            ],
            [
                24,
                "                MaxSize = 10,"
            ],
            [
                25,
                "                MinSize = 10"
            ],
            [
                26,
                "            });"
            ],
            [
                39,
                "              //ParallerInsert(bucket, n);"
            ],
            [
                40,
                "                MultiThreaded(4, 100000, bucket);"
            ],
            [
                43,
                "            _cluster.CloseBucket(bucket);"
            ],
            [
                112,
                "            var options = new ParallelOptions {MaxDegreeOfParallelism = 3};"
            ],
            [
                119,
                "              /* var result = bucket.Insert(key, value);"
            ],
            [
                123,
                "                        Console.WriteLine(\"Write Key: {0} - Value: {1}\", key, value);*/"
            ],
            [
                124,
                "                   var result2 = bucket.Get<string>(key);"
            ],
            [
                127,
                "                        if (result2.Value != value) { throw new Exception();}"
            ],
            [
                134,
                "               /* }"
            ],
            [
                138,
                "                }*/"
            ],
            [
                158,
                "            _resetEvent.WaitOne();"
            ],
            [
                170,
                "               // Console.WriteLine(\"Insert {0} - {1} on thread {2}\", key, result.Success ? \"success\" : \"failure\", Thread.CurrentThread.ManagedThreadId);"
            ],
            [
                172,
                "                Console.WriteLine(\"Get {0} - {1} on thread {2}\", key, result1.Success ? \"success\" : \"failure\", Thread.CurrentThread.ManagedThreadId);"
            ],
            [
                175,
                "            if (threadData.ThreadCount/threadData.Keys == threadData.Part)"
            ],
            [
                177,
                "                _resetEvent.Set();"
            ]
        ]
    },
    "num_lines_added": 37,
    "num_lines_removed": 20
}