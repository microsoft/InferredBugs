{
    "hash": "a7abebd68f9db022abb14731814dea13e81d3a8f",
    "message": "Change ViewRow.Id from object to dynamic\n\nMotivation\n----------\nThe id of a key returned from a view may be represented as a JSON object.\nThis is stored in an property of the ViewRow class as a CLR object Type;\nnot as the JSON string, but as a JSON.NET object which requires \"unboxing\"\nto convert it to usable key. This fix changes the ViewRow.Id property to a\ndynamic type which makes it easier to work with the underlying JSON string\nwithout dealing with the JSON.NET Types.\n\nModifications\n-------------\nThe Id property on RowView has been changed from an object Type to a\ndynamic Type.\n\nResult\n------\nWhen using the Id of the RowView class, you no longer have to convert the\nId to a JSON.NET Type to get to the value.\n\nChange-Id: Ibd32032b24ed7a6790458666c46e75fd4e903fe4\nReviewed-on: http://review.couchbase.org/45050\nReviewed-by: Jeffry Morris <jeffrymorris@gmail.com>\nTested-by: Jeffry Morris <jeffrymorris@gmail.com>",
    "file_num_lines": 159,
    "diff_parsed": {
        "added": [
            [
                18,
                "        [Test]"
            ],
            [
                19,
                "        public void When_Row_Is_Dynamic_Query_By_Key_Succeeds()"
            ],
            [
                20,
                "        {"
            ],
            [
                21,
                "            var query = new ViewQuery()."
            ],
            [
                22,
                "             From(\"beer\", \"all_beers\")."
            ],
            [
                23,
                "             Bucket(\"beer-sample\").Limit(1);"
            ],
            [
                24,
                ""
            ],
            [
                25,
                "            var client = new ViewClient(new HttpClient(),"
            ],
            [
                26,
                "                new JsonDataMapper(new ClientConfiguration()),"
            ],
            [
                27,
                "                new BucketConfig { Name = \"beer-sample\" },"
            ],
            [
                28,
                "                new ClientConfiguration());"
            ],
            [
                29,
                ""
            ],
            [
                30,
                "            var result = client.Execute<Beer>(query);"
            ],
            [
                31,
                ""
            ],
            [
                32,
                "            var query2 = new ViewQuery()."
            ],
            [
                33,
                "             From(\"beer\", \"all_beers\")."
            ],
            [
                34,
                "             Bucket(\"beer-sample\").Key(result.Rows.First().Id);"
            ],
            [
                35,
                ""
            ],
            [
                36,
                "            var result2 = client.Execute<Beer>(query2);"
            ],
            [
                37,
                "            Assert.AreEqual(result.Rows.First().Id, result2.Rows.First().Id);"
            ],
            [
                38,
                "        }"
            ],
            [
                39,
                ""
            ],
            [
                45,
                "              Bucket(\"beer-sample\").Limit(10);"
            ],
            [
                53,
                "            foreach (var viewRow in result.Rows)"
            ],
            [
                54,
                "            {"
            ],
            [
                55,
                "                Assert.IsNotNull(viewRow.Id);"
            ],
            [
                56,
                "            }"
            ],
            [
                68,
                "                Bucket(\"beer-sample\")."
            ],
            [
                69,
                "                Limit(10);"
            ],
            [
                78,
                "            foreach (var viewRow in result.Rows)"
            ],
            [
                79,
                "            {"
            ],
            [
                80,
                "                Assert.IsNotNull(viewRow.Id);"
            ],
            [
                81,
                "            }"
            ]
        ],
        "deleted": [
            [
                23,
                "              Bucket(\"beer-sample\");"
            ],
            [
                42,
                "                Bucket(\"beer-sample\");"
            ]
        ]
    },
    "num_lines_added": 33,
    "num_lines_removed": 2
}