{
    "hash": "f92f1e0a64d3e1e383cf89a812b521db825f7cbe",
    "message": "NCBC-479: Add Retry logic for NMV's\n\nChange-Id: I54cac9aa96a7133aa0dfa34911bef634c05948b1\nReviewed-on: http://review.couchbase.org/39989\nTested-by: Jeffry Morris <jeffrymorris@gmail.com>\nReviewed-by: Mark Nunberg <mnunberg@haskalah.org>",
    "file_num_lines": 253,
    "diff_parsed": {
        "added": [
            [
                1,
                "\ufeffusing Couchbase.Configuration.Server.Serialization;"
            ],
            [
                2,
                "using Couchbase.Core;"
            ],
            [
                17,
                "        public const int DefaultRetries = 2;"
            ],
            [
                39,
                "            VBucket = vBucket;"
            ],
            [
                41,
                "            MaxRetries = DefaultRetries;"
            ],
            [
                65,
                "            LengthReceived = 0;"
            ],
            [
                68,
                "            Buffer = null;"
            ],
            [
                69,
                "            Header = new OperationHeader();"
            ],
            [
                70,
                "        }"
            ],
            [
                71,
                ""
            ],
            [
                72,
                "        public virtual void HandleSocketError(string message)"
            ],
            [
                73,
                "        {"
            ],
            [
                74,
                "            Header = new OperationHeader"
            ],
            [
                75,
                "            {"
            ],
            [
                76,
                "                Magic = 0,"
            ],
            [
                77,
                "                OperationCode = OperationCode,"
            ],
            [
                78,
                "                Cas = 0,"
            ],
            [
                79,
                "                BodyLength = 0,"
            ],
            [
                80,
                "                Key = Key,"
            ],
            [
                81,
                "                Status = ResponseStatus.ClientFailure"
            ],
            [
                82,
                "            };"
            ],
            [
                83,
                "            var msgBytes = Encoding.UTF8.GetBytes(message);"
            ],
            [
                84,
                "            LengthReceived += msgBytes.Length;"
            ],
            [
                85,
                "            Data.Write(msgBytes, 0, msgBytes.Length);"
            ],
            [
                220,
                "                            if (buffer.Length > 0 && TotalLength == 24)"
            ],
            [
                221,
                "                            {"
            ],
            [
                222,
                "                                message = Converter.ToString(buffer, 0, buffer.Length);"
            ],
            [
                223,
                "                            }"
            ],
            [
                224,
                "                            else"
            ],
            [
                225,
                "                            {"
            ],
            [
                226,
                "                                message = Converter.ToString(buffer, 24, TotalLength - 24);"
            ],
            [
                227,
                "                            }"
            ],
            [
                284,
                "        public IVBucket VBucket { get; set; }"
            ],
            [
                299,
                ""
            ],
            [
                300,
                "        public int Attempts { get; set; }"
            ],
            [
                301,
                ""
            ],
            [
                302,
                "        public int MaxRetries { get; set; }"
            ]
        ],
        "deleted": [
            [
                1,
                "\ufeffusing Couchbase.Core;"
            ],
            [
                23,
                "        private readonly IVBucket _vBucket;"
            ],
            [
                38,
                "            _vBucket = vBucket;"
            ],
            [
                199,
                "                            message = Converter.ToString(buffer, 24, TotalLength - 24);"
            ],
            [
                256,
                "        public IVBucket VBucket"
            ],
            [
                257,
                "        {"
            ],
            [
                258,
                "            get { return _vBucket; }"
            ],
            [
                259,
                "        }"
            ]
        ]
    },
    "num_lines_added": 37,
    "num_lines_removed": 8
}