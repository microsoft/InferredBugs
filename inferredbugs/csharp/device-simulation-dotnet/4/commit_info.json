{
    "hash": "939333e700462f47852a43ca106df76cf2b06dad",
    "message": "Bug fixes (#247)",
    "file_num_lines": 131,
    "diff_parsed": {
        "added": [
            [
                3,
                "using System;"
            ],
            [
                53,
                "        private readonly ILogger log;"
            ],
            [
                60,
                "        public DiagnosticsLogger(IHttpClient httpClient, IServicesConfig servicesConfig, ILogger log)"
            ],
            [
                64,
                "            this.log = log;"
            ],
            [
                70,
                "            var jsonStruct = new JsonStruct(SERVICE_START_EVENT + message, null);"
            ],
            [
                71,
                "            this.PostRequest(this.diagnosticsEndpoint, jsonStruct);"
            ],
            [
                76,
                "            var jsonStruct = new JsonStruct(SERVICE_HEARTBEAT_EVENT, null);"
            ],
            [
                77,
                "            this.PostRequest(this.diagnosticsEndpoint, jsonStruct);"
            ],
            [
                87,
                "            var jsonStruct = this.ConvertServiceErrorToJson(message, exceptionMessage, null, callerName, filePath, lineNumber);"
            ],
            [
                88,
                "            this.PostRequest(this.diagnosticsEndpoint, jsonStruct);"
            ],
            [
                98,
                "            var jsonStruct = this.ConvertServiceErrorToJson(message, \"\", data, callerName, filePath, lineNumber);"
            ],
            [
                99,
                "            this.PostRequest(this.diagnosticsEndpoint, jsonStruct);"
            ],
            [
                129,
                "            try"
            ],
            [
                130,
                "            {"
            ],
            [
                131,
                "                var request = new HttpRequest();"
            ],
            [
                132,
                "                request.SetUriFromString(path);"
            ],
            [
                133,
                "                request.SetContent(obj);"
            ],
            [
                134,
                "                return request;"
            ],
            [
                135,
                "            }"
            ],
            [
                136,
                "            catch"
            ],
            [
                137,
                "            {"
            ],
            [
                138,
                "                // Failed to construct uri"
            ],
            [
                139,
                "                this.log.Info(\"Failed to construct diagnostics webservice uri \");"
            ],
            [
                140,
                "                return null;"
            ],
            [
                141,
                "            }"
            ],
            [
                142,
                "        }"
            ],
            [
                143,
                ""
            ],
            [
                144,
                "        private void PostRequest(string path, object obj = null)"
            ],
            [
                145,
                "        {"
            ],
            [
                146,
                "            var request = this.PrepareRequest(path, obj);"
            ],
            [
                147,
                ""
            ],
            [
                148,
                "            if (request != null)"
            ],
            [
                149,
                "            {"
            ],
            [
                150,
                "                // Run in the background without blocking"
            ],
            [
                151,
                "                this.httpClient.PostAsync(request);"
            ],
            [
                152,
                "            }"
            ]
        ],
        "deleted": [
            [
                58,
                "        public DiagnosticsLogger(IHttpClient httpClient, IServicesConfig servicesConfig)"
            ],
            [
                67,
                "            JsonStruct jsonStruct = new JsonStruct(SERVICE_START_EVENT + message, null);"
            ],
            [
                68,
                ""
            ],
            [
                69,
                "            // Run in the background without blocking"
            ],
            [
                70,
                "            this.httpClient.PostAsync(this.PrepareRequest(this.diagnosticsEndpoint, jsonStruct));"
            ],
            [
                75,
                "            JsonStruct jsonStruct = new JsonStruct(SERVICE_HEARTBEAT_EVENT, null);"
            ],
            [
                76,
                ""
            ],
            [
                77,
                "            // Run in the background without blocking"
            ],
            [
                78,
                "            this.httpClient.PostAsync(this.PrepareRequest(this.diagnosticsEndpoint, jsonStruct));"
            ],
            [
                88,
                "            JsonStruct jsonStruct = this.ConvertServiceErrorToJson(message, exceptionMessage, null, callerName, filePath, lineNumber);"
            ],
            [
                89,
                ""
            ],
            [
                90,
                "            // Run in the background without blocking"
            ],
            [
                91,
                "            this.httpClient.PostAsync(this.PrepareRequest(this.diagnosticsEndpoint, jsonStruct));"
            ],
            [
                101,
                "            JsonStruct jsonStruct = this.ConvertServiceErrorToJson(message, \"\", data, callerName, filePath, lineNumber);"
            ],
            [
                102,
                ""
            ],
            [
                103,
                "            // Run in the background without blocking"
            ],
            [
                104,
                "            this.httpClient.PostAsync(this.PrepareRequest(this.diagnosticsEndpoint, jsonStruct));"
            ],
            [
                134,
                "            var request = new HttpRequest();"
            ],
            [
                135,
                "            request.SetUriFromString(path);"
            ],
            [
                136,
                "            request.SetContent(obj);"
            ],
            [
                137,
                "            return request;"
            ]
        ]
    },
    "num_lines_added": 36,
    "num_lines_removed": 21
}