{
    "hash": "c568c56351c3c7330a1f93d21a66fb0a680f1d22",
    "message": "Simplify if-statements with ternary operator ?:",
    "file_num_lines": 4572,
    "diff_parsed": {
        "added": [
            [
                398,
                "          var isNeedCallBase = typeDeclaration.IsInitStatementExists"
            ],
            [
                399,
                "            ? generator_.IsBaseExplicitCtorExists(baseTypeSymbol)"
            ],
            [
                400,
                "            : generator_.HasStaticCtor(baseTypeSymbol);"
            ],
            [
                695,
                "      var methodName = symbol.MethodKind == MethodKind.LocalFunction"
            ],
            [
                696,
                "        ? GetLocalMethodName(symbol, node)"
            ],
            [
                697,
                "        : GetMemberName(symbol);"
            ],
            [
                994,
                "        kind = set != null ? PropertyMethodKind.Both : PropertyMethodKind.GetOnly;"
            ],
            [
                996,
                "        kind = set != null ? PropertyMethodKind.SetOnly : PropertyMethodKind.Field;"
            ],
            [
                1874,
                "      LuaExpressionSyntax condition = identifiers.Count == 1"
            ],
            [
                1875,
                "        ? identifiers.First().NotEquals(LuaIdentifierNameSyntax.Nil)"
            ],
            [
                1876,
                "        : left.NotEquals(LuaIdentifierNameSyntax.Nil).And(right.NotEquals(LuaIdentifierNameSyntax.Nil));"
            ],
            [
                3051,
                "      var nameExpression = symbol.IsStatic"
            ],
            [
                3052,
                "        ? name"
            ],
            [
                3053,
                "        : new LuaInvocationExpressionSyntax(LuaIdentifierNameSyntax.DelegateMake, target, name);"
            ],
            [
                3192,
                "          identifier = methodSymbol.MethodKind == MethodKind.LocalFunction"
            ],
            [
                3193,
                "            ? GetLocalMethodName(methodSymbol, node)"
            ],
            [
                3194,
                "            : GetMethodNameExpression(methodSymbol, node);"
            ],
            [
                3705,
                "      var condition = subpatternExpressions.Count > 0"
            ],
            [
                3706,
                "        ? subpatternExpressions.Aggregate((x, y) => x.And(y))"
            ],
            [
                3707,
                "        : governingIdentifier.NotEquals(LuaIdentifierNameSyntax.Nil);"
            ],
            [
                3955,
                "      LuaExpressionSyntax condition = identifiers.Count == 1"
            ],
            [
                3956,
                "        ? identifiers.First().NotEquals(LuaIdentifierNameSyntax.Nil)"
            ],
            [
                3957,
                "        : left.NotEquals(LuaIdentifierNameSyntax.Nil).And(right.NotEquals(LuaIdentifierNameSyntax.Nil));"
            ],
            [
                4481,
                "        result = operatorToken != null"
            ],
            [
                4482,
                "          ? identifier.And(new LuaPrefixUnaryExpressionSyntax(identifier, operatorToken))"
            ],
            [
                4483,
                "          : identifier.And(new LuaInvocationExpressionSyntax(method, identifier));"
            ],
            [
                4829,
                "      LuaExpressionSyntax targetMethod = curMethod.Symbol.IsAsync"
            ],
            [
                4830,
                "        ? LuaIdentifierNameSyntax.Async.MemberAccess(yieldToken, true)"
            ],
            [
                4831,
                "        : LuaIdentifierNameSyntax.System.MemberAccess(yieldToken);"
            ],
            [
                4922,
                "          result = targetEnumUnderlyingType.IsNumberTypeAssignableFrom(originalIntegerType)"
            ],
            [
                4923,
                "            ? expression"
            ],
            [
                4924,
                "            : GetCastToNumberExpression(expression, targetEnumUnderlyingType, false);"
            ]
        ],
        "deleted": [
            [
                398,
                "          bool isNeedCallBase;"
            ],
            [
                399,
                "          if (typeDeclaration.IsInitStatementExists) {"
            ],
            [
                400,
                "            isNeedCallBase = generator_.IsBaseExplicitCtorExists(baseTypeSymbol);"
            ],
            [
                401,
                "          } else {"
            ],
            [
                402,
                "            isNeedCallBase = generator_.HasStaticCtor(baseTypeSymbol);"
            ],
            [
                403,
                "          }"
            ],
            [
                698,
                "      LuaIdentifierNameSyntax methodName;"
            ],
            [
                699,
                "      if (symbol.MethodKind == MethodKind.LocalFunction) {"
            ],
            [
                700,
                "        methodName = GetLocalMethodName(symbol, node);"
            ],
            [
                701,
                "      } else {"
            ],
            [
                702,
                "        methodName = GetMemberName(symbol);"
            ],
            [
                703,
                "      }"
            ],
            [
                1000,
                "        if (set != null) {"
            ],
            [
                1001,
                "          kind = PropertyMethodKind.Both;"
            ],
            [
                1002,
                "        } else {"
            ],
            [
                1003,
                "          kind = PropertyMethodKind.GetOnly;"
            ],
            [
                1004,
                "        }"
            ],
            [
                1006,
                "        if (set != null) {"
            ],
            [
                1007,
                "          kind = PropertyMethodKind.SetOnly;"
            ],
            [
                1008,
                "        } else {"
            ],
            [
                1009,
                "          kind = PropertyMethodKind.Field;"
            ],
            [
                1010,
                "        }"
            ],
            [
                1888,
                "      LuaExpressionSyntax condition;"
            ],
            [
                1889,
                "      if (identifiers.Count == 1) {"
            ],
            [
                1890,
                "        condition = identifiers.First().NotEquals(LuaIdentifierNameSyntax.Nil);"
            ],
            [
                1891,
                "      } else {"
            ],
            [
                1892,
                "        condition = left.NotEquals(LuaIdentifierNameSyntax.Nil).And(right.NotEquals(LuaIdentifierNameSyntax.Nil));"
            ],
            [
                1893,
                "      }"
            ],
            [
                3068,
                "      LuaExpressionSyntax nameExpression;"
            ],
            [
                3069,
                "      if (symbol.IsStatic) {"
            ],
            [
                3070,
                "        nameExpression = name;"
            ],
            [
                3071,
                "      } else {"
            ],
            [
                3072,
                "        nameExpression = new LuaInvocationExpressionSyntax(LuaIdentifierNameSyntax.DelegateMake, target, name);"
            ],
            [
                3073,
                "      }"
            ],
            [
                3212,
                "          if (methodSymbol.MethodKind == MethodKind.LocalFunction) {"
            ],
            [
                3213,
                "            identifier = GetLocalMethodName(methodSymbol, node);"
            ],
            [
                3214,
                "          } else {"
            ],
            [
                3215,
                "            identifier = GetMethodNameExpression(methodSymbol, node);"
            ],
            [
                3216,
                "          }"
            ],
            [
                3727,
                "      LuaExpressionSyntax condition;"
            ],
            [
                3728,
                "      if (subpatternExpressions.Count > 0) {"
            ],
            [
                3729,
                "        condition = subpatternExpressions.Aggregate((x, y) => x.And(y));"
            ],
            [
                3730,
                "      } else {"
            ],
            [
                3731,
                "        condition = governingIdentifier.NotEquals(LuaIdentifierNameSyntax.Nil);"
            ],
            [
                3732,
                "      }"
            ],
            [
                3980,
                "      LuaExpressionSyntax condition;"
            ],
            [
                3981,
                "      if (identifiers.Count == 1) {"
            ],
            [
                3982,
                "        condition = identifiers.First().NotEquals(LuaIdentifierNameSyntax.Nil);"
            ],
            [
                3983,
                "      } else {"
            ],
            [
                3984,
                "        condition = left.NotEquals(LuaIdentifierNameSyntax.Nil).And(right.NotEquals(LuaIdentifierNameSyntax.Nil));"
            ],
            [
                3985,
                "      }"
            ],
            [
                4509,
                "        if (operatorToken != null) {"
            ],
            [
                4510,
                "          result = identifier.And(new LuaPrefixUnaryExpressionSyntax(identifier, operatorToken));"
            ],
            [
                4511,
                "        } else {"
            ],
            [
                4512,
                "          result = identifier.And(new LuaInvocationExpressionSyntax(method, identifier));"
            ],
            [
                4513,
                "        }"
            ],
            [
                4859,
                "      LuaExpressionSyntax targetMethod;"
            ],
            [
                4860,
                "      if (curMethod.Symbol.IsAsync) {"
            ],
            [
                4861,
                "        targetMethod = LuaIdentifierNameSyntax.Async.MemberAccess(yieldToken, true);"
            ],
            [
                4862,
                "      } else {"
            ],
            [
                4863,
                "        targetMethod = LuaIdentifierNameSyntax.System.MemberAccess(yieldToken);"
            ],
            [
                4864,
                "      }"
            ],
            [
                4955,
                "          if (targetEnumUnderlyingType.IsNumberTypeAssignableFrom(originalIntegerType)) {"
            ],
            [
                4956,
                "            result = expression;"
            ],
            [
                4957,
                "          } else {"
            ],
            [
                4958,
                "            result = GetCastToNumberExpression(expression, targetEnumUnderlyingType, false);"
            ],
            [
                4959,
                "          }"
            ]
        ]
    },
    "num_lines_added": 32,
    "num_lines_removed": 67
}