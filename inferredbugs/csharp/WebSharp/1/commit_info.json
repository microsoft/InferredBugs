{
    "hash": "e7572327ecb43c40b66cddecf47533bebc7f8a2c",
    "message": "Add a Var (PPVar) to the release message pump int NativeInstance to handle releasing PPVar from the Main Thread instead of from threads themselves.\n\n-  When object finalizers are called they can be called from a background thread that is run from the GC.  Since the PPAPI may not be thread safe we will use a message pumping mechanism that will continuously monitor for PPVar's that need to be released and will call the interface to release from the main thread.\n\n- Release message pump only handled PPResource's.  This also modifies the message pump queue to identify which type needs to be released and call the appropriate release code for that identified type, which in the case is calling the release method on the PPVar bindings.",
    "file_num_lines": 422,
    "diff_parsed": {
        "added": [
            [
                632,
                "            {"
            ],
            [
                633,
                "                using (var msg = new Var(message))"
            ],
            [
                634,
                "                    PPBMessaging.PostMessage(this, msg);"
            ],
            [
                635,
                "            }"
            ]
        ],
        "deleted": [
            [
                632,
                "                PPBMessaging.PostMessage(this, new Var(message));"
            ]
        ]
    },
    "num_lines_added": 4,
    "num_lines_removed": 1
}