{
    "hash": "ebc087f3da249f90344fdddd850a531c954cf5e8",
    "message": "Code refactoring",
    "file_num_lines": 900,
    "diff_parsed": {
        "added": [
            [
                132,
                " //       protected float[] previousCellOutputs;"
            ],
            [
                139,
                "     //       previousCellOutputs = new float[LayerSize];"
            ],
            [
                160,
                "     //       previousCellOutputs.CopyTo(lstmNeuron.PrevCellOutputs, 0);"
            ],
            [
                173,
                "       //     lstmNeuron.Cells.CopyTo(Cells, 0);"
            ],
            [
                174,
                "    //        lstmNeuron.PrevCellOutputs.CopyTo(previousCellOutputs, 0);"
            ],
            [
                731,
                "                cell_j.previousCellOutput = Cells[j];"
            ],
            [
                732,
                "//                previousCellOutputs[j] = Cells[j];"
            ],
            [
                794,
                "                cell_j.netIn += cell_j.previousCellState * cellWeight_j.wPeepholeIn + cell_j.previousCellOutput * cellWeight_j.wCellIn;"
            ],
            [
                800,
                "                                    cell_j.previousCellOutput * cellWeight_j.wCellForget;"
            ],
            [
                803,
                "                cell_j.netCellState += cell_j.previousCellOutput * cellWeight_j.wCellState;"
            ],
            [
                810,
                "                cell_j.netOut += cell_j.cellState * cellWeight_j.wPeepholeOut + cell_j.previousCellOutput * cellWeight_j.wCellOut;"
            ],
            [
                1007,
                "                              Sigmoid2_ci_netCellState_mul_SigmoidDerivative_ci_netIn * c.previousCellOutput;"
            ],
            [
                1011,
                "                                  ci_previousCellState_mul_SigmoidDerivative_ci_netForget * c.previousCellOutput;"
            ],
            [
                1014,
                "                                 Sigmoid2Derivative_ci_netCellState_mul_ci_yIn * c.previousCellOutput;"
            ],
            [
                1016,
                "                var vecCellDelta4 = new Vector4((float)cellWeightDeri.dSWCellIn, (float)cellWeightDeri.dSWCellForget, (float)cellWeightDeri.dSWCellState, (float)c.previousCellOutput);"
            ],
            [
                1071,
                "         //   c.previousCellState = 0;"
            ],
            [
                1141,
                "        public double previousCellOutput;"
            ],
            [
                1167,
                "            previousCellOutput = cell.previousCellOutput;"
            ]
        ],
        "deleted": [
            [
                158,
                "            previousCellOutputs.CopyTo(lstmNeuron.PrevCellOutputs, 0);"
            ],
            [
                171,
                "            lstmNeuron.Cells.CopyTo(Cells, 0);"
            ],
            [
                172,
                "            lstmNeuron.PrevCellOutputs.CopyTo(previousCellOutputs, 0);"
            ],
            [
                729,
                "                previousCellOutputs[j] = Cells[j];"
            ],
            [
                790,
                "                var cell_j_previousCellOutput = previousCellOutputs[j];"
            ],
            [
                791,
                ""
            ],
            [
                793,
                "                cell_j.netIn += cell_j.previousCellState * cellWeight_j.wPeepholeIn + cell_j_previousCellOutput * cellWeight_j.wCellIn;"
            ],
            [
                799,
                "                                    cell_j_previousCellOutput * cellWeight_j.wCellForget;"
            ],
            [
                802,
                "                cell_j.netCellState += cell_j_previousCellOutput * cellWeight_j.wCellState;"
            ],
            [
                809,
                "                cell_j.netOut += cell_j.cellState * cellWeight_j.wPeepholeOut + cell_j_previousCellOutput * cellWeight_j.wCellOut;"
            ],
            [
                1004,
                "                var c_previousCellOutput = previousCellOutputs[i];"
            ],
            [
                1007,
                "                              Sigmoid2_ci_netCellState_mul_SigmoidDerivative_ci_netIn * c_previousCellOutput;"
            ],
            [
                1011,
                "                                  ci_previousCellState_mul_SigmoidDerivative_ci_netForget * c_previousCellOutput;"
            ],
            [
                1014,
                "                                 Sigmoid2Derivative_ci_netCellState_mul_ci_yIn * c_previousCellOutput;"
            ],
            [
                1016,
                "                var vecCellDelta4 = new Vector4((float)cellWeightDeri.dSWCellIn, (float)cellWeightDeri.dSWCellForget, (float)cellWeightDeri.dSWCellState,"
            ],
            [
                1017,
                "                    c_previousCellOutput);"
            ],
            [
                1072,
                "            c.previousCellState = 0;"
            ]
        ]
    },
    "num_lines_added": 18,
    "num_lines_removed": 17
}