{
    "hash": "75c15fc63ac0b7f9faf2f6baa7683ef32e7fbc5f",
    "message": "Add an io method.",
    "file_num_lines": 501,
    "diff_parsed": {
        "added": [
            [
                2,
                "using System.Linq;"
            ],
            [
                45,
                "            Action<Exception, string> failedAction,"
            ],
            [
                80,
                "                    ExecuteFailedAction(asyncActionName, getContextInfoFunc, failedAction, ex, ex.Message);"
            ],
            [
                81,
                "                }"
            ],
            [
                82,
                "            }"
            ],
            [
                83,
                "        }"
            ],
            [
                84,
                "        public void TryAsyncActionRecursivelyWithoutResult("
            ],
            [
                85,
                "            string asyncActionName,"
            ],
            [
                86,
                "            Func<Task> asyncAction,"
            ],
            [
                87,
                "            Action<int> mainAction,"
            ],
            [
                88,
                "            Action successAction,"
            ],
            [
                89,
                "            Func<string> getContextInfoFunc,"
            ],
            [
                90,
                "            Action<Exception, string> failedAction,"
            ],
            [
                91,
                "            int retryTimes,"
            ],
            [
                92,
                "            bool retryWhenFailed = false,"
            ],
            [
                93,
                "            int maxRetryTimes = 3,"
            ],
            [
                94,
                "            int retryInterval = 1000)"
            ],
            [
                95,
                "        {"
            ],
            [
                96,
                "            try"
            ],
            [
                97,
                "            {"
            ],
            [
                98,
                "                asyncAction().ContinueWith(TaskContinueAction, new TaskExecutionContext"
            ],
            [
                99,
                "                {"
            ],
            [
                100,
                "                    AsyncActionName = asyncActionName,"
            ],
            [
                101,
                "                    MainAction = mainAction,"
            ],
            [
                102,
                "                    SuccessAction = successAction,"
            ],
            [
                103,
                "                    GetContextInfoFunc = getContextInfoFunc,"
            ],
            [
                104,
                "                    FailedAction = failedAction,"
            ],
            [
                105,
                "                    RetryTimes = retryTimes,"
            ],
            [
                106,
                "                    RetryWhenFailed = retryWhenFailed,"
            ],
            [
                107,
                "                    MaxRetryTimes = maxRetryTimes,"
            ],
            [
                108,
                "                    RetryInterval = retryInterval"
            ],
            [
                109,
                "                });"
            ],
            [
                110,
                "            }"
            ],
            [
                111,
                "            catch (IOException ex)"
            ],
            [
                112,
                "            {"
            ],
            [
                113,
                "                _logger.Error(string.Format(\"IOException raised when executing async task '{0}', contextInfo:{1}, current retryTimes:{2}, try to execute the async task again.\", asyncActionName, GetContextInfo(getContextInfoFunc), retryTimes), ex);"
            ],
            [
                114,
                "                ExecuteRetryAction(asyncActionName, getContextInfoFunc, mainAction, retryTimes, maxRetryTimes, retryInterval);"
            ],
            [
                115,
                "            }"
            ],
            [
                116,
                "            catch (Exception ex)"
            ],
            [
                117,
                "            {"
            ],
            [
                118,
                "                _logger.Error(string.Format(\"Unknown exception raised when executing async task '{0}', contextInfo:{1}, current retryTimes:{2}\", asyncActionName, GetContextInfo(getContextInfoFunc), retryTimes), ex);"
            ],
            [
                119,
                "                if (retryWhenFailed)"
            ],
            [
                120,
                "                {"
            ],
            [
                121,
                "                    ExecuteRetryAction(asyncActionName, getContextInfoFunc, mainAction, retryTimes, maxRetryTimes, retryInterval);"
            ],
            [
                122,
                "                }"
            ],
            [
                123,
                "                else"
            ],
            [
                124,
                "                {"
            ],
            [
                125,
                "                    ExecuteFailedAction(asyncActionName, getContextInfoFunc, failedAction, ex, ex.Message);"
            ],
            [
                142,
                "        private void ExecuteFailedAction(string asyncActionName, Func<string> getContextInfoFunc, Action<Exception, string> failedAction, Exception exception, string errorMessage)"
            ],
            [
                146,
                "                failedAction?.Invoke(exception, errorMessage);"
            ],
            [
                171,
                "        private void ProcessTaskException(string asyncActionName, Func<string> getContextInfoFunc, Action<int> mainAction, Action<Exception, string> failedAction, Exception exception, int currentRetryTimes, int maxRetryTimes, int retryInterval, bool retryWhenFailed)"
            ],
            [
                178,
                "            else if (exception is AggregateException"
            ],
            [
                179,
                "                && ((AggregateException)exception).InnerExceptions.IsNotEmpty()"
            ],
            [
                180,
                "                && ((AggregateException)exception).InnerExceptions.Any(x => x is IOException))"
            ],
            [
                181,
                "            {"
            ],
            [
                182,
                "                _logger.Error(string.Format(\"Async task '{0}' has io exception, contextInfo:{1}, current retryTimes:{2}, try to run the async task again.\", asyncActionName, GetContextInfo(getContextInfoFunc), currentRetryTimes), exception);"
            ],
            [
                183,
                "                ExecuteRetryAction(asyncActionName, getContextInfoFunc, mainAction, currentRetryTimes, maxRetryTimes, retryInterval);"
            ],
            [
                184,
                "            }"
            ],
            [
                194,
                "                    ExecuteFailedAction(asyncActionName, getContextInfoFunc, failedAction, exception, exception.Message);"
            ],
            [
                227,
                "                        task.Exception,"
            ],
            [
                254,
                "                            task.Exception,"
            ],
            [
                261,
                "                    context.SuccessAction?.Invoke(result);"
            ],
            [
                301,
                "                            task.Exception,"
            ],
            [
                313,
                "        private void TaskContinueAction(Task task, object obj)"
            ],
            [
                314,
                "        {"
            ],
            [
                315,
                "            var context = obj as TaskExecutionContext;"
            ],
            [
                316,
                "            try"
            ],
            [
                317,
                "            {"
            ],
            [
                318,
                "                if (task.Exception != null)"
            ],
            [
                319,
                "                {"
            ],
            [
                320,
                "                    ProcessTaskException("
            ],
            [
                321,
                "                        context.AsyncActionName,"
            ],
            [
                322,
                "                        context.GetContextInfoFunc,"
            ],
            [
                323,
                "                        context.MainAction,"
            ],
            [
                324,
                "                        context.FailedAction,"
            ],
            [
                325,
                "                        task.Exception,"
            ],
            [
                326,
                "                        context.RetryTimes,"
            ],
            [
                327,
                "                        context.MaxRetryTimes,"
            ],
            [
                328,
                "                        context.RetryInterval,"
            ],
            [
                329,
                "                        context.RetryWhenFailed);"
            ],
            [
                330,
                "                    return;"
            ],
            [
                331,
                "                }"
            ],
            [
                332,
                "                if (task.IsCanceled)"
            ],
            [
                333,
                "                {"
            ],
            [
                334,
                "                    _logger.ErrorFormat(\"Async task '{0}' was cancelled, contextInfo:{1}, current retryTimes:{2}.\","
            ],
            [
                335,
                "                        context.AsyncActionName,"
            ],
            [
                336,
                "                        GetContextInfo(context.GetContextInfoFunc),"
            ],
            [
                337,
                "                        context.RetryTimes);"
            ],
            [
                338,
                "                    ExecuteFailedAction("
            ],
            [
                339,
                "                        context.AsyncActionName,"
            ],
            [
                340,
                "                        context.GetContextInfoFunc,"
            ],
            [
                341,
                "                        context.FailedAction,"
            ],
            [
                342,
                "                        task.Exception,"
            ],
            [
                343,
                "                        string.Format(\"Async task '{0}' was cancelled.\", context.AsyncActionName));"
            ],
            [
                344,
                "                    return;"
            ],
            [
                345,
                "                }"
            ],
            [
                346,
                "                context.SuccessAction?.Invoke();"
            ],
            [
                347,
                "            }"
            ],
            [
                348,
                "            catch (Exception ex)"
            ],
            [
                349,
                "            {"
            ],
            [
                350,
                "                _logger.Error(string.Format(\"Failed to execute the taskContinueAction, asyncActionName:{0}, contextInfo:{1}\","
            ],
            [
                351,
                "                    context.AsyncActionName,"
            ],
            [
                352,
                "                    GetContextInfo(context.GetContextInfoFunc)), ex);"
            ],
            [
                353,
                "            }"
            ],
            [
                354,
                "        }"
            ],
            [
                362,
                "            public Action<Exception, string> FailedAction;"
            ],
            [
                363,
                "            public int RetryTimes;"
            ],
            [
                364,
                "            public bool RetryWhenFailed;"
            ],
            [
                365,
                "            public int MaxRetryTimes;"
            ],
            [
                366,
                "            public int RetryInterval;"
            ],
            [
                367,
                "        }"
            ],
            [
                368,
                "        class TaskExecutionContext"
            ],
            [
                369,
                "        {"
            ],
            [
                370,
                "            public string AsyncActionName;"
            ],
            [
                371,
                "            public Action<int> MainAction;"
            ],
            [
                372,
                "            public Action SuccessAction;"
            ],
            [
                373,
                "            public Func<string> GetContextInfoFunc;"
            ],
            [
                374,
                "            public Action<Exception, string> FailedAction;"
            ]
        ],
        "deleted": [
            [
                44,
                "            Action<string> failedAction,"
            ],
            [
                79,
                "                    ExecuteFailedAction(asyncActionName, getContextInfoFunc, failedAction, ex.Message);"
            ],
            [
                96,
                "        private void ExecuteFailedAction(string asyncActionName, Func<string> getContextInfoFunc, Action<string> failedAction, string errorMessage)"
            ],
            [
                100,
                "                if (failedAction != null)"
            ],
            [
                101,
                "                {"
            ],
            [
                102,
                "                    failedAction(errorMessage);"
            ],
            [
                103,
                "                }"
            ],
            [
                128,
                "        private void ProcessTaskException(string asyncActionName, Func<string> getContextInfoFunc, Action<int> mainAction, Action<string> failedAction, Exception exception, int currentRetryTimes, int maxRetryTimes, int retryInterval, bool retryWhenFailed)"
            ],
            [
                144,
                "                    ExecuteFailedAction(asyncActionName, getContextInfoFunc, failedAction, exception.Message);"
            ],
            [
                209,
                "                    if (context.SuccessAction != null)"
            ],
            [
                210,
                "                    {"
            ],
            [
                211,
                "                        context.SuccessAction(result);"
            ],
            [
                212,
                "                    }"
            ],
            [
                270,
                "            public Action<string> FailedAction;"
            ]
        ]
    },
    "num_lines_added": 118,
    "num_lines_removed": 14
}