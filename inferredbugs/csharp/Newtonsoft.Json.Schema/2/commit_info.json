{
    "hash": "1823bb946fa4c9d8aace5a32ba2a36fcbc495c13",
    "message": "Fix circular dependencies between schemas (#259)",
    "file_num_lines": 97,
    "diff_parsed": {
        "added": [
            [
                37,
                "            if (!TryGetSchemaScopeBySchema(If!, token, value, depth, out SchemaScope? ifScope))"
            ],
            [
                38,
                "            {"
            ],
            [
                39,
                "                RaiseCircularDependencyError(ErrorType.None);"
            ],
            [
                40,
                "                return true;"
            ],
            [
                41,
                "            }"
            ],
            [
                49,
                "                    if (!TryGetSchemaScopeBySchema(Then, token, value, depth, out SchemaScope? thenScope))"
            ],
            [
                50,
                "                    {"
            ],
            [
                51,
                "                        RaiseCircularDependencyError(ErrorType.Then);"
            ],
            [
                52,
                "                        return true;"
            ],
            [
                53,
                "                    }"
            ],
            [
                69,
                "                    if (!TryGetSchemaScopeBySchema(Else, token, value, depth, out SchemaScope? elseScope))"
            ],
            [
                70,
                "                    {"
            ],
            [
                71,
                "                        RaiseCircularDependencyError(ErrorType.Else);"
            ],
            [
                72,
                "                        return true;"
            ],
            [
                73,
                "                    }"
            ]
        ],
        "deleted": [
            [
                37,
                "            SchemaScope ifScope = GetSchemaScopeBySchema(If!, token, value, depth)!;"
            ],
            [
                45,
                "                    SchemaScope thenScope = GetSchemaScopeBySchema(Then, token, value, depth)!;"
            ],
            [
                61,
                "                    SchemaScope elseScope = GetSchemaScopeBySchema(Else, token, value, depth)!;"
            ]
        ]
    },
    "num_lines_added": 15,
    "num_lines_removed": 3
}