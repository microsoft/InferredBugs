{
    "hash": "3164556146af69d1d3997454c149c60b2b0e8ce4",
    "message": "flushing creates page",
    "file_num_lines": 245,
    "diff_parsed": {
        "added": [
            [
                20,
                "        private readonly ConcurrentDictionary<ulong, DocumentStreamWriter> _writers;"
            ],
            [
                40,
                "            _writers = new ConcurrentDictionary<ulong, DocumentStreamWriter>();"
            ],
            [
                45,
                "        public DocumentStreamWriter GetStreamWriter(ulong collectionId)"
            ],
            [
                47,
                "            return _writers.GetOrAdd(collectionId, new DocumentStreamWriter(collectionId, this));"
            ],
            [
                80,
                ""
            ],
            [
                81,
                "            this.Log($\"truncated {collectionId}\");"
            ],
            [
                116,
                "                writeSession.Write(job.Documents);"
            ],
            [
                124,
                "        public void ClearPageInfo()"
            ],
            [
                125,
                "        {"
            ],
            [
                126,
                "            _pageInfo.Clear();"
            ],
            [
                127,
                "        }"
            ],
            [
                128,
                ""
            ],
            [
                229,
                "            return new DocumentStreamSession(collectionName, collectionId, this, new DocumentStreamReader(collectionId, this));"
            ],
            [
                253,
                "                collectionName, collectionId, this, Config, Model, new DocumentStreamReader(collectionId, this));"
            ],
            [
                277,
                "            if (!File.Exists(fileName))"
            ],
            [
                278,
                "            {"
            ],
            [
                279,
                "                using (var fs = new FileStream(fileName, FileMode.Append, FileAccess.Write, FileShare.ReadWrite, bufferSize))"
            ],
            [
                280,
                "                {"
            ],
            [
                281,
                "                }"
            ],
            [
                282,
                "            }"
            ],
            [
                283,
                ""
            ],
            [
                284,
                "            return new FileStream(fileName, FileMode.Append, FileAccess.Write, FileShare.ReadWrite, bufferSize);"
            ],
            [
                298,
                "            foreach (var x in _writers)"
            ]
        ],
        "deleted": [
            [
                20,
                "        private readonly ConcurrentDictionary<ulong, CollectionStreamWriter> _writers;"
            ],
            [
                40,
                "            _writers = new ConcurrentDictionary<ulong, CollectionStreamWriter>();"
            ],
            [
                45,
                "        public CollectionStreamWriter GetStreamWriter(ulong collectionId)"
            ],
            [
                47,
                "            return _writers.GetOrAdd(collectionId, new CollectionStreamWriter(collectionId, this));"
            ],
            [
                114,
                "                foreach (var doc in job.Documents)"
            ],
            [
                115,
                "                {"
            ],
            [
                116,
                "                    writeSession.Write(doc);"
            ],
            [
                117,
                "                }"
            ],
            [
                118,
                ""
            ],
            [
                119,
                "                indexSession.CommitToDisk();"
            ],
            [
                122,
                "            _pageInfo.Clear();"
            ],
            [
                123,
                ""
            ],
            [
                229,
                "            return new DocumentStreamSession(collectionName, collectionId, this, new CollectionStreamReader(collectionId, this));"
            ],
            [
                253,
                "                collectionName, collectionId, this, Config, Model, new CollectionStreamReader(collectionId, this));"
            ],
            [
                277,
                "            return new FileStream(fileName, FileMode.Append, FileAccess.Write, FileShare.ReadWrite, bufferSize, false);"
            ],
            [
                291,
                "            foreach(var x in _writers)"
            ]
        ]
    },
    "num_lines_added": 23,
    "num_lines_removed": 16
}