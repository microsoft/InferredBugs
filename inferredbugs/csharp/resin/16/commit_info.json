{
    "hash": "88c0b744ba9d15b6b578ad624ffbb9454c48008d",
    "message": "document read/write SOC",
    "file_num_lines": 61,
    "diff_parsed": {
        "added": [
            [
                13,
                "    public class Searcher"
            ],
            [
                20,
                "        private readonly Dictionary<string, DocumentReader> _readers;"
            ],
            [
                28,
                "            _readers = new Dictionary<string, DocumentReader>();"
            ],
            [
                55,
                "            DocumentReader reader;"
            ],
            [
                56,
                "            if (!_readers.TryGetValue(containerId, out reader))"
            ],
            [
                60,
                "                    if (!_readers.TryGetValue(containerId, out reader))"
            ],
            [
                62,
                "                        reader = new DocumentReader(_directory, containerId);"
            ],
            [
                63,
                "                        _readers.Add(containerId, reader);"
            ],
            [
                67,
                "            return reader.Get(docId).Fields;"
            ]
        ],
        "deleted": [
            [
                1,
                "using System;"
            ],
            [
                14,
                "    public class Searcher : IDisposable"
            ],
            [
                21,
                "        private readonly Dictionary<string, DocumentFile> _docContainers;"
            ],
            [
                29,
                "            _docContainers = new Dictionary<string, DocumentFile>();"
            ],
            [
                56,
                "            DocumentFile container;"
            ],
            [
                57,
                "            if (!_docContainers.TryGetValue(containerId, out container))"
            ],
            [
                61,
                "                    if (!_docContainers.TryGetValue(containerId, out container))"
            ],
            [
                63,
                "                        container = new DocumentFile(_directory, containerId);"
            ],
            [
                64,
                "                        _docContainers.Add(containerId, container);"
            ],
            [
                68,
                "            return container.Get(docId).Fields;"
            ],
            [
                69,
                "        }"
            ],
            [
                70,
                ""
            ],
            [
                71,
                "        public void Dispose()"
            ],
            [
                72,
                "        {"
            ],
            [
                73,
                "            foreach (var dc in _docContainers.Values)"
            ],
            [
                74,
                "            {"
            ],
            [
                75,
                "                dc.Dispose();"
            ],
            [
                76,
                "            }"
            ]
        ]
    },
    "num_lines_added": 9,
    "num_lines_removed": 18
}