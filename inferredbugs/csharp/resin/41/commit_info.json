{
    "hash": "5477c54187e07d4e1979780e0d150e03b68df6e3",
    "message": "don't use strings to identify collection",
    "file_num_lines": 84,
    "diff_parsed": {
        "added": [
            [
                2,
                "using System.Collections.Concurrent;"
            ],
            [
                15,
                "        private readonly ConcurrentDictionary<long, VectorNode> _dirty;"
            ],
            [
                23,
                "            IConfigurationProvider config) : base(collectionId, sessionFactory)"
            ],
            [
                27,
                "            _dirty = new ConcurrentDictionary<long, VectorNode>();"
            ],
            [
                76,
                "            return _dirty.GetOrAdd(keyId, new VectorNode());"
            ],
            [
                85,
                "                using (var serializer = new ColumnWriter(CollectionId, column.Key, SessionFactory))"
            ],
            [
                87,
                "                    serializer.CreatePage(column.Value, _vectorStream, _postingsStream, _model);"
            ],
            [
                92,
                ""
            ],
            [
                93,
                "            SessionFactory.ClearPageInfo();"
            ],
            [
                94,
                ""
            ],
            [
                95,
                "            this.Log(string.Format($\"serialized {_dirty.Count} pages in {time.Elapsed}\"));"
            ]
        ],
        "deleted": [
            [
                2,
                "using System.Collections.Generic;"
            ],
            [
                15,
                "        private readonly IDictionary<long, VectorNode> _dirty;"
            ],
            [
                16,
                "        private readonly IDictionary<long, ColumnWriter> _writers;"
            ],
            [
                21,
                "            string collectionName,"
            ],
            [
                25,
                "            IConfigurationProvider config,"
            ],
            [
                26,
                "            IDictionary<long, ColumnWriter> columnWriters) : base(collectionName, collectionId, sessionFactory)"
            ],
            [
                30,
                "            _dirty = new Dictionary<long, VectorNode>();"
            ],
            [
                33,
                "            _writers = columnWriters;"
            ],
            [
                80,
                "            VectorNode node;"
            ],
            [
                81,
                ""
            ],
            [
                82,
                "            if (!_dirty.TryGetValue(keyId, out node))"
            ],
            [
                83,
                "            {"
            ],
            [
                84,
                "                node = new VectorNode();"
            ],
            [
                85,
                "                _dirty.Add(keyId, node);"
            ],
            [
                86,
                "            }"
            ],
            [
                87,
                ""
            ],
            [
                88,
                "            return node;"
            ],
            [
                97,
                "                ColumnWriter serializer;"
            ],
            [
                98,
                ""
            ],
            [
                99,
                "                if (!_writers.TryGetValue(column.Key, out serializer))"
            ],
            [
                101,
                "                    serializer = new ColumnWriter(CollectionId, column.Key, SessionFactory);"
            ],
            [
                102,
                "                    _writers.Add(column.Key, serializer);"
            ],
            [
                104,
                ""
            ],
            [
                105,
                "                serializer.CreatePage(column.Value, _vectorStream, _postingsStream, _model);"
            ],
            [
                108,
                "            this.Log(string.Format($\"serialized {_dirty.Count} pages in {time.Elapsed}\"));"
            ],
            [
                109,
                ""
            ]
        ]
    },
    "num_lines_added": 11,
    "num_lines_removed": 26
}