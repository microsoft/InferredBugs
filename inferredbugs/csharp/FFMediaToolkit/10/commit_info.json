{
    "hash": "1f027ff778d34475741fff916e848b31f413f01e",
    "message": "Redesign internal decoding classes.",
    "file_num_lines": 113,
    "diff_parsed": {
        "added": [
            [
                84,
                "        public void SeekFile(int frameNumber) => SeekFile(frameNumber.ToTimestamp(Video.Info.RFrameRate, Video.Info.TimeBase));"
            ],
            [
                101,
                "            Video.ClearQueue();"
            ],
            [
                104,
                "            Video.AdjustPackets(targetTs);"
            ],
            [
                111,
                "        public void SeekForward(int frameNumber) => SeekForward(frameNumber.ToTimestamp(Video.Info.RFrameRate, Video.Info.TimeBase));"
            ],
            [
                123,
                "        public void SeekForward(long targetTs) => Video.AdjustPackets(targetTs);"
            ],
            [
                145,
                "                Video.FetchPacket(packet);"
            ],
            [
                160,
                "                    Video.PacketsNeeded += () => AddPacket(MediaType.Video);"
            ]
        ],
        "deleted": [
            [
                84,
                "        public void SeekFile(int frameNumber) => SeekFile(frameNumber.ToTimeSpan(Video.Info.FrameRate).ToTimestamp(Video.Info.TimeBase));"
            ],
            [
                101,
                "            Video.PacketQueue.Clear();"
            ],
            [
                104,
                "            AdjustSeekPackets(Video, targetTs, VideoFrame.CreateEmpty());"
            ],
            [
                111,
                "        public void SeekForward(int frameNumber) => SeekForward(frameNumber.ToTimeSpan(Video.Info.FrameRate).ToTimestamp(Video.Info.TimeBase));"
            ],
            [
                123,
                "        public void SeekForward(long targetTs) => AdjustSeekPackets(Video, targetTs, VideoFrame.CreateEmpty());"
            ],
            [
                141,
                "        private void AdjustSeekPackets<T>(InputStream<T> stream, long targetTs, T emptyFrame)"
            ],
            [
                142,
                "            where T : MediaFrame"
            ],
            [
                143,
                "        {"
            ],
            [
                144,
                "            stream.PacketQueue.TryPeek(out var packet);"
            ],
            [
                145,
                ""
            ],
            [
                146,
                "            while (packet?.Timestamp < targetTs)"
            ],
            [
                147,
                "            {"
            ],
            [
                148,
                "                stream.Read(emptyFrame);"
            ],
            [
                149,
                "                stream.PacketQueue.TryPeek(out packet);"
            ],
            [
                150,
                "            }"
            ],
            [
                151,
                "        }"
            ],
            [
                152,
                ""
            ],
            [
                157,
                "                Video.PacketQueue.Enqueue(packet);"
            ],
            [
                172,
                "                    Video.PacketQueue.Dequeued += OnPacketDequeued;"
            ],
            [
                178,
                "        private void OnPacketDequeued(object sender, MediaPacket packet)"
            ],
            [
                179,
                "        {"
            ],
            [
                180,
                "            var stream = packet.StreamIndex == Video?.Info.Index ? Video : null;"
            ],
            [
                181,
                "            if (stream?.PacketQueue.Count > 5)"
            ],
            [
                182,
                "            {"
            ],
            [
                183,
                "                return;"
            ],
            [
                184,
                "            }"
            ],
            [
                185,
                ""
            ],
            [
                186,
                "            AddPacket(stream?.Type ?? MediaType.None);"
            ],
            [
                187,
                "        }"
            ],
            [
                188,
                ""
            ]
        ]
    },
    "num_lines_added": 7,
    "num_lines_removed": 30
}