{
    "hash": "5d422a2f326534514a2b87733e8ceb42bb341b21",
    "message": "Implement reading through AVIO",
    "file_num_lines": 116,
    "diff_parsed": {
        "added": [
            [
                4,
                ""
            ],
            [
                8,
                ""
            ],
            [
                16,
                "        private static avio_alloc_context_read_packet readCallback;"
            ],
            [
                17,
                "        private static avio_alloc_context_seek seekCallback;"
            ],
            [
                18,
                ""
            ],
            [
                19,
                "        private delegate void AVFormatContextDelegate(AVFormatContext* context);"
            ],
            [
                20,
                ""
            ],
            [
                32,
                "        private static InputContainer MakeContainer(string url, MediaOptions options, AVFormatContextDelegate contextDelegate)"
            ],
            [
                40,
                "            contextDelegate(context);"
            ],
            [
                41,
                ""
            ],
            [
                42,
                "            ffmpeg.avformat_open_input(&context, url, null, &dict)"
            ],
            [
                53,
                "        /// <summary>"
            ],
            [
                54,
                "        /// Opens a media container and stream codecs from given path."
            ],
            [
                55,
                "        /// </summary>"
            ],
            [
                56,
                "        /// <param name=\"path\">A path to the multimedia file.</param>"
            ],
            [
                57,
                "        /// <param name=\"options\">The media settings.</param>"
            ],
            [
                58,
                "        /// <returns>A new instance of the <see cref=\"InputContainer\"/> class.</returns>"
            ],
            [
                59,
                "        public static InputContainer LoadFile(string path, MediaOptions options) => MakeContainer(path, options, context => { });"
            ],
            [
                60,
                ""
            ],
            [
                61,
                "        /// <summary>"
            ],
            [
                62,
                "        /// Opens a media container and stream codecs from given stream."
            ],
            [
                63,
                "        /// </summary>"
            ],
            [
                64,
                "        /// <param name=\"stream\">A stream of the multimedia file.</param>"
            ],
            [
                65,
                "        /// <param name=\"options\">The media settings.</param>"
            ],
            [
                66,
                "        /// <returns>A new instance of the <see cref=\"InputContainer\"/> class.</returns>"
            ],
            [
                67,
                "        public static InputContainer LoadStream(Stream stream, MediaOptions options)"
            ],
            [
                68,
                "        {"
            ],
            [
                69,
                "            return MakeContainer(null, options, context =>"
            ],
            [
                70,
                "            {"
            ],
            [
                71,
                "                var avioStream = new AvioStream(stream);"
            ],
            [
                72,
                ""
            ],
            [
                73,
                "                // Prevents garbage collection"
            ],
            [
                74,
                "                readCallback = avioStream.Read;"
            ],
            [
                75,
                "                seekCallback = avioStream.Seek;"
            ],
            [
                76,
                ""
            ],
            [
                77,
                "                int bufferLength = 4096;"
            ],
            [
                78,
                "                var avioBuffer = (byte*)ffmpeg.av_malloc((ulong)bufferLength);"
            ],
            [
                79,
                ""
            ],
            [
                80,
                "                context->pb = ffmpeg.avio_alloc_context(avioBuffer, bufferLength, 0, null, readCallback, null, seekCallback);"
            ],
            [
                81,
                "                if (context->pb == null)"
            ],
            [
                82,
                "                {"
            ],
            [
                83,
                "                    throw new FFmpegException(\"Cannot allocate AVIOContext.\");"
            ],
            [
                84,
                "                }"
            ],
            [
                85,
                "            });"
            ],
            [
                86,
                "        }"
            ],
            [
                87,
                ""
            ],
            [
                135,
                ""
            ],
            [
                136,
                "            // Note: the internal buffer could have changed, and be != avio_ctx_buffer"
            ],
            [
                137,
                "            if (Pointer->pb != null)"
            ],
            [
                138,
                "            {"
            ],
            [
                139,
                "                ffmpeg.av_free(Pointer->pb->buffer);"
            ],
            [
                140,
                "                ffmpeg.avio_context_free(&Pointer->pb);"
            ],
            [
                141,
                "            }"
            ],
            [
                188,
                "        }"
            ],
            [
                190,
                "}"
            ]
        ],
        "deleted": [
            [
                25,
                "        /// <summary>"
            ],
            [
                26,
                "        /// Opens a media container and stream codecs from given path."
            ],
            [
                27,
                "        /// </summary>"
            ],
            [
                28,
                "        /// <param name=\"path\">A path to the multimedia file.</param>"
            ],
            [
                29,
                "        /// <param name=\"options\">The media settings.</param>"
            ],
            [
                30,
                "        /// <returns>A new instance of the <see cref=\"InputContainer\"/> class.</returns>"
            ],
            [
                31,
                "        public static InputContainer LoadFile(string path, MediaOptions options)"
            ],
            [
                39,
                "            ffmpeg.avformat_open_input(&context, path, null, &dict)"
            ],
            [
                143,
                "         }"
            ],
            [
                145,
                "}"
            ]
        ]
    },
    "num_lines_added": 55,
    "num_lines_removed": 10
}