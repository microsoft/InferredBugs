        public string Shorten(string content)
        {
            if ((content == null) || (content.Length <= MinimumLengthForShortening))
                return content;

            TagTreeItem rootTag = new TagTreeItem();
            IEnumerator<Match> tagEnumerator = EnumerateTags(content).GetEnumerator();
            BuildTagTree(rootTag, tagEnumerator);

            int numberOfFoundTags = 0;
            int lengthOfMarkedTags = 0;
            MarkRetainedTags(rootTag, ref numberOfFoundTags, ref lengthOfMarkedTags);

            List<TagTreeItem> tagsToRemove = new List<TagTreeItem>();
            FindTagsToRemove(tagsToRemove, rootTag);

            if (tagsToRemove.Count > 0)
                return RemoveTags(content, tagsToRemove);
            else
                return content;
        }