{
    "hash": "604097e0d507ee27fd2d3ab8c4be15d1e02994b9",
    "message": "Remediation of Tournament feature (after roundrobin).",
    "file_num_lines": 505,
    "diff_parsed": {
        "added": [
            [
                40,
                "using Ceres.Chess.NNBackends.CUDA;"
            ],
            [
                41,
                "using Ceres.Chess.LC0.WeightsProtobuf;"
            ],
            [
                42,
                "using Ceres.Chess.LC0.NNFiles;"
            ],
            [
                43,
                "using Ceres.Chess.Positions;"
            ],
            [
                44,
                "using Ceres.Chess.NetEvaluation.Batch;"
            ],
            [
                55,
                "    static bool RUN_DISTRIBUTED = true;"
            ],
            [
                68,
                "    static string exeCeres() => SoftwareManager.IsLinux ? @\"/raid/dev/Ceres/artifacts/release/net5.0/Ceres.dll\""
            ],
            [
                69,
                "                                          : @\"C:\\dev\\ceres\\artifacts\\release\\net5.0\\ceres.exe\";"
            ],
            [
                70,
                "    static string exeCeres93() => SoftwareManager.IsLinux ? @\"/raid/dev/Ceres93/artifacts/release/5.0/Ceres.dll\""
            ],
            [
                71,
                "                                                : @\"C:\\ceres\\releases\\v0.93\\ceres.exe\";"
            ],
            [
                72,
                "    static string exeCeres94() => SoftwareManager.IsLinux ? @\"/raid/dev/Ceres94/Ceres.dll\""
            ],
            [
                73,
                "                                                : @\"\\ceres\\releases\\v0.95rc4\\ceres.exe\";"
            ],
            [
                74,
                "    static string exeCeresPreNC() => SoftwareManager.IsLinux ? @\"/raid/dev/Ceres_PreNC/artifacts/release/5.0/Ceres.dll\""
            ],
            [
                75,
                "                                                : @\"c:\\ceres\\releases\\v0.95_PreNC\\ceres.exe\";"
            ],
            [
                76,
                ""
            ],
            [
                98,
                "      if (!RUN_DISTRIBUTED)"
            ],
            [
                99,
                "      {"
            ],
            [
                100,
                "        KillCERES();"
            ],
            [
                102,
                "        File.Delete(\"Ceres1.log.txt\");"
            ],
            [
                103,
                "        File.Delete(\"Ceres2.log.txt\");"
            ],
            [
                104,
                "      }"
            ],
            [
                114,
                "//      DisposeTest(); System.Environment.Exit(3);"
            ],
            [
                120,
                "//      RunEngineComparisons(); return;s"
            ],
            [
                128,
                "      string GPUS_1 = POOLED ? \"GPU:0,1,2,3:POOLED\""
            ],
            [
                129,
                "                             : \"GPU:0\";"
            ],
            [
                130,
                "      string GPUS_2 = POOLED ? \"GPU:0,1,2,3:POOLED\""
            ],
            [
                131,
                "                             : \"GPU:0\";"
            ],
            [
                147,
                ""
            ],
            [
                158,
                "      NET2 = \"42767\";"
            ],
            [
                165,
                "      NET2 = \"attn_10b_800k\";"
            ],
            [
                166,
                "      NET1 = \"base_10b_800k\";"
            ],
            [
                169,
                "      //      NET1 = \"760998\";"
            ],
            [
                172,
                "//       NET1 = \"69637\";"
            ],
            [
                173,
                "//       NET2 = \"69637\";"
            ],
            [
                177,
                "      //NET2 = \"256x20-T75-32MGames-2120K\";"
            ],
            [
                178,
                "     // NET1 = \"tinker_15b\";"
            ],
            [
                179,
                "     // NET2 = \"753723\";"
            ],
            [
                185,
                "      NNEvaluatorDef evalDef1 = NNEvaluatorDefFactory.FromSpecification(NET1, GPUS_1); // j64-210 LS16 40x512-lr015-swa-167500"
            ],
            [
                186,
                "      NNEvaluatorDef evalDef2 = NNEvaluatorDefFactory.FromSpecification(NET2, GPUS_2);"
            ],
            [
                191,
                "        evalDefSecondary1 = NNEvaluatorDefFactory.FromSpecification($@\"LC0:{NET1_SECONDARY1}\", GPUS_1);"
            ],
            [
                202,
                "      SearchLimit limit1 = SearchLimit.NodesForAllMoves(7_000_000);"
            ],
            [
                207,
                "      limit1 = SearchLimit.SecondsForAllMoves(30, 0.3f) * 0.1f;"
            ],
            [
                208,
                "//      limit1 = SearchLimit.NodesPerMove(5_000_000);"
            ],
            [
                209,
                "//      limit1 = SearchLimit.SecondsForAllMoves(150, 3);//s"
            ],
            [
                224,
                "//      engineDefCeres1.OverrideLimitManager = new  Ceres.MCTS.Managers.Limits.ManagerGameLimitSimple(20);"
            ],
            [
                225,
                "//      engineDefCeres1.SearchParams.TestFlag = true;"
            ],
            [
                226,
                " //     engineDefCeres1.SearchParams.Execution.TranspositionMode = TranspositionMode.None;"
            ],
            [
                243,
                "      //      engineDefCeres1.SearchParams.GameLimitUsageAggressiveness = 1.3f;"
            ],
            [
                304,
                "      GameEngineDef engineDefCeresUCI1 = new GameEngineDefCeresUCI(\"CeresUCINew\", evalDef1, overrideEXE: exeCeres(), disableFutilityStopSearch: forceDisableSmartPruning);"
            ],
            [
                305,
                "      GameEngineDef engineDefCeresUCI2 = new GameEngineDefCeresUCI(\"CeresUCINew\", evalDef2, overrideEXE: exeCeres(), disableFutilityStopSearch: forceDisableSmartPruning);"
            ],
            [
                307,
                "      GameEngineDef engineDefCeres93 = new GameEngineDefCeresUCI(\"Ceres93\", evalDef2, overrideEXE: exeCeres93(), disableFutilityStopSearch: forceDisableSmartPruning);"
            ],
            [
                308,
                "      GameEngineDef engineDefCeres94 = new GameEngineDefCeresUCI(\"Ceres94\", evalDef2, overrideEXE: exeCeres94(), disableFutilityStopSearch: forceDisableSmartPruning);"
            ],
            [
                309,
                "      GameEngineDef engineDefCeresPreNC = new GameEngineDefCeresUCI(\"CeresPreNC\", evalDef2, overrideEXE: exeCeresPreNC(), disableFutilityStopSearch: forceDisableSmartPruning);"
            ],
            [
                318,
                "      EnginePlayerDef playerCeres2 = new EnginePlayerDef(engineDefCeres2, limit2);"
            ],
            [
                333,
                "      {"
            ],
            [
                345,
                "                           GameEngineDefFactory.CeresInProcess(\"Ceres2\", NET1, suiteGPU, paramsNoFutility with { }),"
            ],
            [
                391,
                "#if NOT"
            ],
            [
                393,
                "      GameEngineDef[] ceresEngines = new GameEngineDef[3 + 1];"
            ],
            [
                397,
                "        ceresEngines[i] = GameEngineDefFactory.CeresInProcess(\"C_\" + 100 * MathF.Round(value, 1), NET1, GPUS_1,"
            ],
            [
                398,
                "                                                              engineDefCeres1.SearchParams with { GameLimitUsageAggressiveness = value }, null);"
            ],
            [
                400,
                "#endif"
            ],
            [
                401,
                ""
            ],
            [
                402,
                "      // **************************************************"
            ],
            [
                403,
                "      EnginePlayerDef player1 = playerCeres1;"
            ],
            [
                404,
                "      EnginePlayerDef player2 = playerCeres2;"
            ],
            [
                405,
                "      // **************************************************"
            ],
            [
                406,
                ""
            ],
            [
                407,
                "      TournamentGameQueueManager queueManager = null;"
            ],
            [
                408,
                "      bool isDistributed = false;"
            ],
            [
                409,
                "      if (CommandLineWorkerSpecification.IsWorker)"
            ],
            [
                410,
                "      {"
            ],
            [
                411,
                "        queueManager = new TournamentGameQueueManager(Environment.GetCommandLineArgs()[2]);"
            ],
            [
                412,
                "        int gpuID = CommandLineWorkerSpecification.GPUID;"
            ],
            [
                413,
                "        Console.WriteLine($\"\\r\\n***** Running in DISTRIBUTED mode as WORKER on gpu {gpuID} (queue directory {queueManager.QueueDirectory})\\r\\n\");"
            ],
            [
                414,
                ""
            ],
            [
                415,
                "        player1.EngineDef.ModifyDeviceIndexIfNotPooled(gpuID);"
            ],
            [
                416,
                "        player2.EngineDef.ModifyDeviceIndexIfNotPooled(gpuID);"
            ],
            [
                417,
                "      }"
            ],
            [
                418,
                "      else if (RUN_DISTRIBUTED)"
            ],
            [
                419,
                "      {"
            ],
            [
                420,
                "        isDistributed = true;"
            ],
            [
                421,
                "        queueManager = new TournamentGameQueueManager(null);"
            ],
            [
                422,
                "        Console.WriteLine($\"\\r\\n***** Running in DISTRIBUTED mode as COORDINATOR (queue directory {queueManager.QueueDirectory})\\r\\n\");"
            ],
            [
                423,
                "      }"
            ],
            [
                424,
                ""
            ],
            [
                427,
                "      TournamentDef def = new TournamentDef(\"TOURN\", player1, player2);// PreNC);//, playerStockfish14/*, playerCeres3,"
            ],
            [
                428,
                "      if (isDistributed)"
            ],
            [
                429,
                "      {"
            ],
            [
                430,
                "        def.IsDistributedCoordinator = true;"
            ],
            [
                431,
                "      }"
            ],
            [
                432,
                "      if (queueManager != null)"
            ],
            [
                447,
                "      //      string baseName = \"tcec1819\";"
            ],
            [
                448,
                "      string baseName = \"4mvs_+90_+99\";"
            ],
            [
                449,
                "      //      baseName = \"book-ply8-unifen-Q-0.25-0.40\";"
            ],
            [
                450,
                "      //      baseName = \"test3\";"
            ],
            [
                451,
                "      //     baseName = \"tcec_big\";"
            ],
            [
                452,
                "      //      baseName = \"endgame-16-piece-book_Q-0.0-0.6_1\";"
            ],
            [
                573,
                "      TournamentDef tournDef = new TournamentDef(\"Round Robin Test\", playerCeres1, playerLeela);"
            ],
            [
                673,
                ""
            ],
            [
                674,
                "      CompareEngineParams parms = new CompareEngineParams(\"VsPreNC\", pgnFileName,"
            ],
            [
                675,
                "                                              3_000, // number of positions"
            ],
            [
                677,
                "                                              CompareEnginesVersusOptimal.PlayerMode.Ceres, \"badgyal-3\", //610034"
            ],
            [
                678,
                "                                              CompareEnginesVersusOptimal.PlayerMode.UCI, \"badgyal-3\","
            ],
            [
                679,
                "                                              CompareEnginesVersusOptimal.PlayerMode.LC0, \"LS15\","
            ],
            [
                680,
                "                                              SearchLimit.NodesPerMove(250_000), // search limit"
            ],
            [
                681,
                "                                              new int[] { 0,1,2,3 },"
            ],
            [
                684,
                "                                                //     s.EnableUncertaintyBoosting = true;"
            ],
            [
                690,
                "                                              1,"
            ],
            [
                692,
                "                                              false, // Stockfish crosscheck"
            ],
            [
                693,
                "                                              null,"
            ],
            [
                694,
                "                                              exeCeresPreNC(),"
            ],
            [
                695,
                "                                              0.25f"
            ],
            [
                704,
                ""
            ],
            [
                705,
                "    /// <summary>"
            ],
            [
                706,
                "    /// Test code that installs \"CUSTOM1\" network type which is an NNEvaluatorDynamic"
            ],
            [
                707,
                "    /// and uses one network for first part of search then switches to second network."
            ],
            [
                708,
                "    /// Example usage (also customized nets and fraction below):"
            ],
            [
                709,
                "    ///   NET1 = \"CUSTOM1:66666\";"
            ],
            [
                710,
                "    /// Was -7Elo +/10 with at 60 second games (switch point 0.666)."
            ],
            [
                711,
                "    /// </summary>"
            ],
            [
                712,
                "    public static void InstallCUSTOM1AsDynamicByPhase()"
            ],
            [
                721,
                "        throw new NotImplementedException(\"COMBO_PHASED deprecated\");"
            ],
            [
                722,
                "        //        NNEvaluatorDynamic dyn = new NNEvaluatorDynamic(evaluators, (batch)"
            ],
            [
                723,
                "        //          => MCTSManager.ThreadSearchContext != null ? (MCTSManager.ThreadSearchContext.Manager.FractionSearchCompleted < FRACTION_SWITCH_ALTERNATE_NET ? 0 : 1) : 0);"
            ],
            [
                724,
                "        //        return dyn;"
            ],
            [
                730,
                "    static void DisposeTest()"
            ],
            [
                731,
                "    {"
            ],
            [
                732,
                "      const string NET_ID = \"703810\";"
            ],
            [
                733,
                "      // TODO: repeated execution does not release all memory"
            ],
            [
                734,
                "      while (false)"
            ],
            [
                735,
                "      {"
            ],
            [
                736,
                "        using (new TimingBlock(\"CUDA create/dispose\", TimingBlock.LoggingType.ConsoleWithMemoryTracking))"
            ],
            [
                737,
                "        {"
            ],
            [
                738,
                "          for (int i = 0; i < 10; i++)"
            ],
            [
                739,
                "          {"
            ],
            [
                740,
                "            Console.WriteLine(\"create \" + i);"
            ],
            [
                741,
                "            NNWeightsFileLC0 netWeightsFile = NNWeightsFileLC0.LookupOrDownload(NET_ID);"
            ],
            [
                742,
                "            LC0ProtobufNet net = LC0ProtobufNet.LoadedNet(netWeightsFile.FileName);"
            ],
            [
                743,
                "            NNBackendLC0_CUDA backend = new NNBackendLC0_CUDA(0, net.Net);"
            ],
            [
                744,
                "            Console.WriteLine(\"dispose \" + i);"
            ],
            [
                745,
                "            backend.Dispose();"
            ],
            [
                746,
                "          }"
            ],
            [
                747,
                "          GC.Collect(3);"
            ],
            [
                748,
                "          GC.WaitForFullGCComplete();"
            ],
            [
                749,
                "        }"
            ],
            [
                750,
                "        Console.WriteLine(\"<CR> to continue....\");"
            ],
            [
                751,
                "        Console.ReadLine();"
            ],
            [
                752,
                "      }"
            ],
            [
                753,
                ""
            ],
            [
                754,
                "      NNEvaluatorDef nd = NNEvaluatorDefFactory.FromSpecification(NET_ID, \"GPU:0\");"
            ],
            [
                755,
                "      NNEvaluator referenceEvaluator = NNEvaluatorFactory.BuildEvaluator(nd);"
            ],
            [
                756,
                ""
            ],
            [
                757,
                "      if (true)"
            ],
            [
                758,
                "      {"
            ],
            [
                759,
                "        using (new TimingBlock(\"GameEngineCeresInProcess create/evaluate pos\", TimingBlock.LoggingType.ConsoleWithMemoryTracking))"
            ],
            [
                760,
                "        {"
            ],
            [
                761,
                "          for (int i = 0; i < 10; i++)"
            ],
            [
                762,
                "          {"
            ],
            [
                763,
                "            if (true)"
            ],
            [
                764,
                "            {"
            ],
            [
                765,
                "              GameEngineCeresInProcess engineCeres = new(\"Ceres\", nd, null);"
            ],
            [
                766,
                "              GameEngineSearchResult searchResult = engineCeres.Search(PositionWithHistory.StartPosition, SearchLimit.NodesPerMove(1));"
            ],
            [
                767,
                "              Console.WriteLine(\"evaluated \" + searchResult);"
            ],
            [
                768,
                "              engineCeres.Dispose();"
            ],
            [
                769,
                "            }"
            ],
            [
                770,
                "          }"
            ],
            [
                771,
                "        }"
            ],
            [
                772,
                "      }"
            ],
            [
                773,
                ""
            ],
            [
                774,
                "      if (false)"
            ],
            [
                775,
                "      {"
            ],
            [
                776,
                "        using (new TimingBlock(\"NNEvaluator create/evaluate pos\", TimingBlock.LoggingType.ConsoleWithMemoryTracking))"
            ],
            [
                777,
                "        {"
            ],
            [
                778,
                "          for (int i = 0; i < 10; i++)"
            ],
            [
                779,
                "          {"
            ],
            [
                780,
                "            NNEvaluator evaluator = NNEvaluatorFactory.BuildEvaluator(nd, referenceEvaluator);"
            ],
            [
                781,
                "            NNEvaluatorResult posEval = evaluator.Evaluate(PositionWithHistory.StartPosition.FinalPosition, true);"
            ],
            [
                782,
                "            Console.WriteLine(posEval);"
            ],
            [
                783,
                "            evaluator.Shutdown();"
            ],
            [
                784,
                "          }"
            ],
            [
                785,
                "          GC.Collect(3);"
            ],
            [
                786,
                "          GC.WaitForFullGCComplete();"
            ],
            [
                787,
                "        }"
            ],
            [
                788,
                "        Console.WriteLine(\"<CR> to continue....\");"
            ],
            [
                789,
                "        Console.ReadLine();"
            ],
            [
                790,
                "      }"
            ],
            [
                791,
                ""
            ],
            [
                792,
                "      if (false)"
            ],
            [
                793,
                "      {"
            ],
            [
                794,
                "        using (new TimingBlock(\"NNEvaluatorSet create/evaluate pos\", TimingBlock.LoggingType.ConsoleWithMemoryTracking))"
            ],
            [
                795,
                "        {"
            ],
            [
                796,
                "          for (int i = 0; i < 10; i++)"
            ],
            [
                797,
                "          {"
            ],
            [
                798,
                "            Console.WriteLine(\"Create NNEvaluatorSet\");"
            ],
            [
                799,
                "            NNEvaluatorSet nevaluatorSet = new NNEvaluatorSet(nd, true);"
            ],
            [
                800,
                "            nevaluatorSet.Warmup(false);"
            ],
            [
                801,
                "            nevaluatorSet.Dispose();"
            ],
            [
                802,
                "            Console.WriteLine(\"Dispose NNEvaluatorSet\");"
            ],
            [
                803,
                "          }"
            ],
            [
                804,
                "        }"
            ],
            [
                805,
                "      }"
            ],
            [
                806,
                ""
            ],
            [
                807,
                "      Console.WriteLine(\"final shutdown\");"
            ],
            [
                808,
                "      referenceEvaluator.Shutdown();"
            ],
            [
                809,
                "    }"
            ],
            [
                810,
                ""
            ]
        ],
        "deleted": [
            [
                50,
                "    static bool RUN_DISTRIBUTED = false;"
            ],
            [
                84,
                "      KillCERES();"
            ],
            [
                86,
                "      File.Delete(\"Ceres1.log.txt\");"
            ],
            [
                87,
                "      File.Delete(\"Ceres2.log.txt\");"
            ],
            [
                102,
                "//      RunEngineComparisons(); return;"
            ],
            [
                110,
                "      string GPUS = POOLED ? \"GPU:0,1,2,3:POOLED\""
            ],
            [
                111,
                "                           : \"GPU:0\";"
            ],
            [
                127,
                ""
            ],
            [
                138,
                "      NET2 = \"apv5_t01.ORT\";"
            ],
            [
                145,
                "NET1 = \"attn_10b_800k\";"
            ],
            [
                146,
                "NET2 = \"base_10b_800k\";"
            ],
            [
                149,
                "//      NET1 = \"760998\";"
            ],
            [
                152,
                "//      NET1 = \"69637\";"
            ],
            [
                153,
                "//      NET2 = \"69637\";"
            ],
            [
                157,
                "//      NET1 = \"badgyal-3\";"
            ],
            [
                158,
                "//      NET2 = \"badgyal-3\";"
            ],
            [
                164,
                "      NNEvaluatorDef evalDef1 = NNEvaluatorDefFactory.FromSpecification(NET1, GPUS); // j64-210 LS16 40x512-lr015-swa-167500"
            ],
            [
                165,
                "      NNEvaluatorDef evalDef2 = NNEvaluatorDefFactory.FromSpecification(NET2, GPUS); ;"
            ],
            [
                170,
                "        evalDefSecondary1 = NNEvaluatorDefFactory.FromSpecification($@\"LC0:{NET1_SECONDARY1}\", GPUS);"
            ],
            [
                181,
                "      SearchLimit limit1 = SearchLimit.NodesForAllMoves(1_000_000);"
            ],
            [
                186,
                "      //      limit1 = SearchLimit.SecondsForAllMoves(5, 0.02f) * 2;"
            ],
            [
                187,
                "      limit1 = SearchLimit.NodesPerMove(2_000);"
            ],
            [
                188,
                "      //limit1 = SearchLimit.SecondsForAllMoves(60, 1) * 0.5f;"
            ],
            [
                203,
                "      //engineDefCeres1.OverrideLimitManager = new  Ceres.MCTS.Managers.Limits.ManagerGameLimitSimple(20);"
            ],
            [
                204,
                "      //      engineDefCeres2.SearchParams.TestFlag = true;"
            ],
            [
                221,
                "      //      engineDefCeres1.SearchParams.GameLimitUsageAggressiveness = 1.5f;"
            ],
            [
                279,
                "      string exeCeres = SoftwareManager.IsLinux ? @\"/raid/dev/Ceres/artifacts/release/net5.0/Ceres.dll\""
            ],
            [
                280,
                "                                                : @\"C:\\dev\\ceres\\artifacts\\release\\net5.0\\ceres.exe\";"
            ],
            [
                281,
                "      string exeCeres93 = SoftwareManager.IsLinux ? @\"/raid/dev/Ceres93/artifacts/release/5.0/Ceres.dll\""
            ],
            [
                282,
                "                                                  : @\"C:\\ceres\\releases\\v0.93\\ceres.exe\";"
            ],
            [
                283,
                "      string exeCeres94 = SoftwareManager.IsLinux ? @\"/raid/dev/Ceres94/Ceres.dll\""
            ],
            [
                284,
                "                                                  : @\"\\ceres\\releases\\v0.95rc4\\ceres.exe\";"
            ],
            [
                285,
                "      string exeCeresPreNC = SoftwareManager.IsLinux ? @\"/raid/dev/Ceres_PreNC/artifacts/release/5.0/Ceres.dll\""
            ],
            [
                286,
                "                                                  : @\"c:\\ceres\\releases\\v0.95_PreNC\\ceres.exe\";"
            ],
            [
                287,
                ""
            ],
            [
                291,
                "      GameEngineDef engineDefCeresUCI1 = new GameEngineDefCeresUCI(\"CeresUCINew\", evalDef1, overrideEXE: exeCeres, disableFutilityStopSearch: forceDisableSmartPruning);"
            ],
            [
                292,
                "      GameEngineDef engineDefCeresUCI2 = new GameEngineDefCeresUCI(\"CeresUCINew\", evalDef2, overrideEXE: exeCeres, disableFutilityStopSearch: forceDisableSmartPruning);"
            ],
            [
                294,
                "      GameEngineDef engineDefCeres93 = new GameEngineDefCeresUCI(\"Ceres93\", evalDef2, overrideEXE: exeCeres93, disableFutilityStopSearch:forceDisableSmartPruning);"
            ],
            [
                295,
                "      GameEngineDef engineDefCeres94 = new GameEngineDefCeresUCI(\"Ceres94\", evalDef2, overrideEXE: exeCeres94, disableFutilityStopSearch: forceDisableSmartPruning);"
            ],
            [
                296,
                "      GameEngineDef engineDefCeresPreNC = new GameEngineDefCeresUCI(\"CeresPreNC\", evalDef2, overrideEXE: exeCeresPreNC, disableFutilityStopSearch: forceDisableSmartPruning);"
            ],
            [
                305,
                "      EnginePlayerDef playerCeres2 = new EnginePlayerDef(engineDefCeres2, limit1);"
            ],
            [
                320,
                "      {"
            ],
            [
                332,
                "                           GameEngineDefFactory.CeresInProcess(\"Ceres2\", NET1, suiteGPU, paramsNoFutility with {  }),"
            ],
            [
                379,
                "      GameEngineDef[] ceresEngines = new GameEngineDef[3+1];"
            ],
            [
                383,
                "        ceresEngines[i] = GameEngineDefFactory.CeresInProcess(\"C_\" + 100*MathF.Round(value, 1), NET1, GPUS,"
            ],
            [
                384,
                "                                                              engineDefCeres1.SearchParams with { GameLimitUsageAggressiveness = value}, null);"
            ],
            [
                388,
                "      TournamentDef def = new TournamentDef(\"TOURN\", playerCeres1UCI, playerCeresPreNC);//, playerStockfish14/*, playerCeres3,"
            ],
            [
                403,
                "//      string baseName = \"tcec1819\";"
            ],
            [
                404,
                "string      baseName = \"4mvs_+90_+99\";"
            ],
            [
                405,
                "//      baseName = \"book-ply8-unifen-Q-0.25-0.40\";"
            ],
            [
                406,
                "//      baseName = \"test3\";"
            ],
            [
                407,
                "//     baseName = \"tcec_big\";"
            ],
            [
                408,
                "//      baseName = \"endgame-16-piece-book_Q-0.0-0.6_1\";"
            ],
            [
                423,
                "      TournamentGameQueueManager queueManager = null;"
            ],
            [
                424,
                ""
            ],
            [
                425,
                "      if (CommandLineWorkerSpecification.IsWorker)"
            ],
            [
                426,
                "      {"
            ],
            [
                427,
                "        queueManager = new TournamentGameQueueManager(Environment.GetCommandLineArgs()[2]);"
            ],
            [
                428,
                "        int gpuID = CommandLineWorkerSpecification.GPUID;"
            ],
            [
                429,
                "        Console.WriteLine($\"\\r\\n***** Running in DISTRIBUTED mode as WORKER on gpu {gpuID} (queue directory {queueManager.QueueDirectory})\\r\\n\");"
            ],
            [
                430,
                ""
            ],
            [
                431,
                "        def.Player1Def.EngineDef.ModifyDeviceIndexIfNotPooled(gpuID);"
            ],
            [
                432,
                "        def.Player2Def.EngineDef.ModifyDeviceIndexIfNotPooled(gpuID);"
            ],
            [
                433,
                "      }"
            ],
            [
                434,
                "      else"
            ],
            [
                435,
                "      {"
            ],
            [
                436,
                "        if (RUN_DISTRIBUTED)"
            ],
            [
                437,
                "        {"
            ],
            [
                438,
                "          queueManager = new TournamentGameQueueManager(null);"
            ],
            [
                439,
                "          Console.WriteLine($\"\\r\\n***** Running in DISTRIBUTED mode as COORDINATOR (queue directory {queueManager.QueueDirectory})\\r\\n\");"
            ],
            [
                440,
                "        }"
            ],
            [
                441,
                "      }"
            ],
            [
                548,
                "      TournamentDef tournDef = new TournamentDef(\"Round Robin Test\", playerCeres1, playerLeela);"
            ],
            [
                648,
                ""
            ],
            [
                649,
                "      CompareEngineParams parms = new CompareEngineParams(\"VsLC0\", pgnFileName,"
            ],
            [
                650,
                "                                              1000, // number of positions"
            ],
            [
                652,
                "                                              CompareEnginesVersusOptimal.PlayerMode.Ceres, \"703810\", //610034"
            ],
            [
                653,
                "                                              CompareEnginesVersusOptimal.PlayerMode.LC0, \"703810\","
            ],
            [
                654,
                "                                              CompareEnginesVersusOptimal.PlayerMode.Ceres, \"703810\","
            ],
            [
                655,
                "                                              SearchLimit.NodesPerMove(2_000), // search limit"
            ],
            [
                656,
                "                                              new int[] { 0, 1, 2, 3 },"
            ],
            [
                659,
                "//                                                s.EnableUncertaintyBoosting = true;"
            ],
            [
                665,
                "                                              1,"
            ],
            [
                667,
                "                                              false // Stockfish crosscheck"
            ],
            [
                675,
                ""
            ],
            [
                677,
                "  /// <summary>"
            ],
            [
                678,
                "  /// Test code that installs \"CUSTOM1\" network type which is an NNEvaluatorDynamic"
            ],
            [
                679,
                "  /// and uses one network for first part of search then switches to second network."
            ],
            [
                680,
                "  /// Example usage (also customized nets and fraction below):"
            ],
            [
                681,
                "  ///   NET1 = \"CUSTOM1:66666\";"
            ],
            [
                682,
                "  /// Was -7Elo +/10 with at 60 second games (switch point 0.666)."
            ],
            [
                683,
                "  /// </summary>"
            ],
            [
                684,
                "  public static void InstallCUSTOM1AsDynamicByPhase()"
            ],
            [
                693,
                "throw new NotImplementedException(\"COMBO_PHASED deprecated\");"
            ],
            [
                694,
                "//        NNEvaluatorDynamic dyn = new NNEvaluatorDynamic(evaluators, (batch)"
            ],
            [
                695,
                "//          => MCTSManager.ThreadSearchContext != null ? (MCTSManager.ThreadSearchContext.Manager.FractionSearchCompleted < FRACTION_SWITCH_ALTERNATE_NET ? 0 : 1) : 0);"
            ],
            [
                696,
                "//        return dyn;"
            ]
        ]
    },
    "num_lines_added": 206,
    "num_lines_removed": 97
}