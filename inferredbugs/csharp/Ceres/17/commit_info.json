{
    "hash": "2f084ff8da571ebc29d314a46e28d4cbd7b6bad1",
    "message": "Test (but abandon for now) FixupDrawsInvalidatedByTreeReuse.",
    "file_num_lines": 407,
    "diff_parsed": {
        "added": [
            [
                36,
                "using Ceres.Base.DataType.Trees;"
            ],
            [
                50,
                ""
            ],
            [
                51,
                ""
            ],
            [
                52,
                "    /// <summary>"
            ],
            [
                53,
                "    /// Undoes specified number of draw visits to node."
            ],
            [
                54,
                "    /// </summary>"
            ],
            [
                55,
                "    public void BackupRevertDrawVisits(ref MCTSNodeStruct nodeRef, int numToRevert)"
            ],
            [
                56,
                "    {"
            ],
            [
                57,
                "      MCTSEventSource.TestCounter1++; // ****************************"
            ],
            [
                58,
                ""
            ],
            [
                59,
                "      Span<MCTSNodeStruct> nodes = Manager.Context.Tree.Root.Store.Nodes.Span;"
            ],
            [
                60,
                ""
            ],
            [
                61,
                "      // TODO: actually evaluate this node?"
            ],
            [
                62,
                "      nodeRef.Terminal = GameResult.Unknown;"
            ],
            [
                63,
                "      if (!nodeRef.IsRoot && nodeRef.ParentRef.DrawKnownToExistAmongChildren)"
            ],
            [
                64,
                "      {"
            ],
            [
                65,
                "        nodeRef.ParentRef.DrawKnownToExistAmongChildren = false;"
            ],
            [
                66,
                "      }"
            ],
            [
                67,
                ""
            ],
            [
                68,
                "      ref MCTSNodeStruct node = ref nodeRef;"
            ],
            [
                69,
                "      while (true)"
            ],
            [
                70,
                "      {"
            ],
            [
                71,
                "        node.N -= numToRevert;"
            ],
            [
                72,
                "        if (nodeRef.dSum > 0)"
            ],
            [
                73,
                "        {"
            ],
            [
                74,
                "          nodeRef.dSum -= numToRevert;"
            ],
            [
                75,
                "        }"
            ],
            [
                76,
                ""
            ],
            [
                77,
                "        if (node.IsRoot)"
            ],
            [
                78,
                "        {"
            ],
            [
                79,
                "          return;"
            ],
            [
                80,
                "        }"
            ],
            [
                81,
                "        else"
            ],
            [
                82,
                "        {"
            ],
            [
                83,
                "          node = ref nodes[node.ParentRef.Index.Index];"
            ],
            [
                84,
                "        }"
            ],
            [
                85,
                "      }"
            ],
            [
                86,
                ""
            ],
            [
                87,
                "    }"
            ],
            [
                88,
                ""
            ],
            [
                89,
                ""
            ],
            [
                90,
                ""
            ],
            [
                92,
                "    /// Possibly some of the positions marked as draws by two or three fold repetition"
            ],
            [
                93,
                "    /// are no longer repetitions if the prior moves changed with the tree reuse."
            ],
            [
                94,
                "    /// Therefore possibly back these out (similar to LC0)."
            ],
            [
                96,
                "    public void FixupDrawsInvalidatedByTreeReuse()"
            ],
            [
                97,
                "    {"
            ],
            [
                98,
                "      using (new SearchContextExecutionBlock(Manager.Context))"
            ],
            [
                99,
                "      {"
            ],
            [
                100,
                "        Manager.Context.Tree.Root.StructRef.Traverse(Manager.Context.Tree.Store,"
            ],
            [
                101,
                "                         (ref MCTSNodeStruct nodeRef) =>"
            ],
            [
                102,
                "                         {"
            ],
            [
                103,
                "                           if (!nodeRef.IsOldGeneration && nodeRef.Terminal.IsTerminal() && nodeRef.HasRepetitions)"
            ],
            [
                104,
                "                           {"
            ],
            [
                105,
                "                             MCTSNode node = Manager.Context.Tree.GetNode(nodeRef.Index);"
            ],
            [
                106,
                "                             node.Annotate();"
            ],
            [
                107,
                "                             MCTSEventSource.TestMetric1++;"
            ],
            [
                108,
                "Console.WriteLine(node.Annotation.Pos.MiscInfo.RepetitionCount);"
            ],
            [
                109,
                "                             if (true || node.Annotation.Pos.MiscInfo.RepetitionCount == 0)"
            ],
            [
                110,
                "                             {"
            ],
            [
                111,
                "                               // Backout all but one draw"
            ],
            [
                112,
                "                               BackupRevertDrawVisits(ref nodeRef, node.N - 1);"
            ],
            [
                113,
                "                             }"
            ],
            [
                114,
                "                           }"
            ],
            [
                115,
                "                           return true;"
            ],
            [
                116,
                "//                           return nodeRef.DepthInTree < 8; // *** FIX"
            ],
            [
                117,
                "                       }, TreeTraversalType.Sequential);"
            ],
            [
                118,
                "      }"
            ],
            [
                119,
                "    }"
            ],
            [
                120,
                ""
            ],
            [
                121,
                ""
            ],
            [
                122,
                ""
            ],
            [
                123,
                "  /// <summary>"
            ],
            [
                124,
                "  /// The underlying serach manager."
            ],
            [
                125,
                "  /// </summary>"
            ],
            [
                126,
                "  public MCTSManager Manager { get; private set; }"
            ],
            [
                552,
                "      // NOTE: disabled, this happens in practive very rearely (and the revert code is not yet fully working)"
            ],
            [
                553,
                "      //FixupDrawsInvalidatedByTreeReuse();"
            ],
            [
                554,
                ""
            ]
        ],
        "deleted": [
            [
                50,
                "    /// The underlying serach manager."
            ],
            [
                52,
                "    public MCTSManager Manager { get; private set; }"
            ]
        ]
    },
    "num_lines_added": 79,
    "num_lines_removed": 2
}