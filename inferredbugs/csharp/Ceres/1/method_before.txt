    (MCTSManager, MGMove, TimingStats) CheckInstamove(MCTSManager priorManager, 
                                                      SearchLimit searchLimit, 
                                                      MCTSNode newRoot)
    {

      if (newRoot != null 
        && priorManager != null
        && priorManager.Context.ParamsSearch.FutilityPruningStopSearchEnabled
        && priorManager.Context.ParamsSearch.EnableInstamoves)
      {
        // Don't make too many instamoves in a row because
        // time control state has been improved by the instamoves, 
        // so further search may now be warranted.
        const int MAX_CONSECUTIVE_INSTAMOVES = 2;
        if (CountSearchContinuations >= MAX_CONSECUTIVE_INSTAMOVES)
          return default;

        if (double.IsNaN(priorManager.EstimatedNPS)) return default;

        int estNewVisitsThisMove = searchLimit.EstNumNodes((int)priorManager.EstimatedNPS, true);
        float treeSizeFactor = (float)newRoot.N / (float)estNewVisitsThisMove;

        BestMoveInfo bestMoveInfo = newRoot.BestMoveInfo(false);

        // The "sureness" that a move is best and not needing more search
        // is the product of treeSizeFactor and TopMovesNRatio
        float surenessFactor = treeSizeFactor * MathF.Min(10, bestMoveInfo.TopMovesNRatio);

        // Key parameter which determines how "sure" the top move
        // must be to selected as an instamove.
        // The threshold increases with the number of already-done continuations,
        // to gently discourage too many consecutive instamoves unless they are compelling.
        float instamoveSurenessThreshold = 4 + (2 * CountSearchContinuations);

        if (!bestMoveInfo.BestMove.IsNull)
        {
          if (surenessFactor >= instamoveSurenessThreshold)
          {
            InstamoveCount++;
            CountSearchContinuations++;
            return (priorManager, newRoot.BestMoveInfo(false).BestMove, null);
          }
        }
      }
      return default;
    }