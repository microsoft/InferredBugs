{
    "hash": "5265c3a427df80f6d4d7494729ca31d51e9bbef1",
    "message": "Tune instamove logic.",
    "file_num_lines": 46,
    "diff_parsed": {
        "added": [
            [
                21,
                "using Ceres.MCTS.Environment;"
            ],
            [
                45,
                "      if (newRoot != null"
            ],
            [
                53,
                "        // (Also, for some reason, humans tend to find it annoying/suspicious!)."
            ],
            [
                67,
                "        float topNRatio = bestMoveInfo.BestN / bestMoveInfo.BestNSecond;"
            ],
            [
                68,
                "        float surenessFactor = treeSizeFactor * MathF.Min(10, topNRatio);"
            ],
            [
                69,
                ""
            ],
            [
                70,
                "        // Don't instamove unless the tree size is"
            ],
            [
                71,
                "        // close to what we would expect after doing multiple searches"
            ],
            [
                72,
                "        float estExpectedTreeSize = estNewVisitsThisMove"
            ],
            [
                73,
                "                                 + (estNewVisitsThisMove * 0.15f * CountSearchContinuations);"
            ],
            [
                74,
                "        float ratioActualToExpected = newRoot.N / estExpectedTreeSize;"
            ],
            [
                76,
                "        // Try to make sure the second best node could not likely catch up upon deeper search"
            ],
            [
                77,
                "        float optimisticNewSecondBestN = bestMoveInfo.BestNSecond + estNewVisitsThisMove * 0.75f;"
            ],
            [
                78,
                "        bool couldCatchUp = optimisticNewSecondBestN > bestMoveInfo.BestN;"
            ],
            [
                80,
                "        bool qualifies = !couldCatchUp && ratioActualToExpected >= 0.75f;"
            ],
            [
                81,
                ""
            ],
            [
                82,
                "        if (!bestMoveInfo.BestMove.IsNull && qualifies)"
            ],
            [
                84,
                "          // Log.Info($\"\\r\\nInstamove already {CountSearchContinuations} sureness {surenessFactor} \" +"
            ],
            [
                85,
                "          //          $\"Tree size factor {treeSizeFactor} N={bestMoveInfo.BestN} N2={bestMoveInfo.BestNSecond}\");"
            ],
            [
                86,
                "          InstamoveCount++;"
            ],
            [
                87,
                "          CountSearchContinuations++;"
            ],
            [
                88,
                ""
            ],
            [
                89,
                "          return (priorManager, newRoot.BestMoveInfo(false).BestMove, null);"
            ]
        ],
        "deleted": [
            [
                44,
                ""
            ],
            [
                45,
                "      if (newRoot != null"
            ],
            [
                66,
                "        float surenessFactor = treeSizeFactor * MathF.Min(10, bestMoveInfo.TopMovesNRatio);"
            ],
            [
                68,
                "        // Key parameter which determines how \"sure\" the top move"
            ],
            [
                69,
                "        // must be to selected as an instamove."
            ],
            [
                70,
                "        // The threshold increases with the number of already-done continuations,"
            ],
            [
                71,
                "        // to gently discourage too many consecutive instamoves unless they are compelling."
            ],
            [
                72,
                "        float instamoveSurenessThreshold = 4 + (2 * CountSearchContinuations);"
            ],
            [
                74,
                "        if (!bestMoveInfo.BestMove.IsNull)"
            ],
            [
                76,
                "          if (surenessFactor >= instamoveSurenessThreshold)"
            ],
            [
                77,
                "          {"
            ],
            [
                78,
                "            InstamoveCount++;"
            ],
            [
                79,
                "            CountSearchContinuations++;"
            ],
            [
                80,
                "            return (priorManager, newRoot.BestMoveInfo(false).BestMove, null);"
            ],
            [
                81,
                "          }"
            ]
        ]
    },
    "num_lines_added": 23,
    "num_lines_removed": 15
}