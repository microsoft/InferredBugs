{
    "hash": "ce1203ba9d49ded2b836ff54ff7afd8715cdb758",
    "message": "Make init durations more accurate",
    "file_num_lines": 306,
    "diff_parsed": {
        "added": [
            [
                29,
                "        private bool initTimeSent;"
            ],
            [
                30,
                ""
            ],
            [
                31,
                "        private DateTimeOffset receivedInvokeAt = DateTimeOffset.MinValue;"
            ],
            [
                32,
                ""
            ],
            [
                45,
                "        private readonly MockXRayProfiler xRayProfiler = new MockXRayProfiler();"
            ],
            [
                46,
                ""
            ],
            [
                49,
                "        public IXRayProfiler XRayProfiler { get { return xRayProfiler; } }"
            ],
            [
                103,
                "            if (!invoked)"
            ],
            [
                105,
                "                receivedInvokeAt = DateTimeOffset.Now;"
            ],
            [
                106,
                "                invoked = true;"
            ],
            [
                108,
                "            else"
            ],
            [
                112,
                "            var result = client.GetAsync(\"http://127.0.0.1:9001/2018-06-01/runtime/invocation/next\").Result;"
            ],
            [
                113,
                "            if (result.StatusCode != HttpStatusCode.OK)"
            ],
            [
                114,
                "            {"
            ],
            [
                115,
                "                throw new Exception(\"Got a bad response from the bootstrap\");"
            ],
            [
                116,
                "            }"
            ],
            [
                174,
                "                if (!initTimeSent)"
            ],
            [
                175,
                "                {"
            ],
            [
                176,
                "                    requestMessage.Headers.Add(\"Docker-Lambda-Invoke-Wait\", receivedInvokeAt.ToUnixTimeMilliseconds().ToString());"
            ],
            [
                177,
                "                    requestMessage.Headers.Add(\"Docker-Lambda-Init-End\", xRayProfiler.InitEnd.ToUnixTimeMilliseconds().ToString());"
            ],
            [
                178,
                "                    initTimeSent = true;"
            ],
            [
                179,
                "                }"
            ],
            [
                264,
                "                foreach (var line in ex.StackTrace"
            ],
            [
                265,
                "                    .Split(new string[] { System.Environment.NewLine }, StringSplitOptions.None)"
            ],
            [
                266,
                "                    .Select(s => s.Trim())"
            ],
            [
                267,
                "                    .Where(s => !string.IsNullOrWhiteSpace(s))"
            ],
            [
                268,
                "                    .Select(s => STACK_TRACE_INDENT + s))"
            ],
            [
                270,
                "                    builder.AppendLine(line);"
            ],
            [
                328,
                "        public DateTimeOffset InitEnd { get; private set; }"
            ],
            [
                329,
                ""
            ],
            [
                336,
                "            InitEnd = DateTimeOffset.Now;"
            ]
        ],
        "deleted": [
            [
                43,
                "        public IXRayProfiler XRayProfiler { get; } = new MockXRayProfiler();"
            ],
            [
                97,
                "            var result = client.GetAsync(\"http://127.0.0.1:9001/2018-06-01/runtime/invocation/next\").Result;"
            ],
            [
                98,
                "            if (result.StatusCode != HttpStatusCode.OK)"
            ],
            [
                100,
                "                throw new Exception(\"Got a bad response from the bootstrap\");"
            ],
            [
                102,
                ""
            ],
            [
                103,
                "            if (invoked)"
            ],
            [
                107,
                "            invoked = true;"
            ],
            [
                249,
                "                string[] array = (from s in ex.StackTrace.Split(new string[]"
            ],
            [
                250,
                "                    {"
            ],
            [
                251,
                "                        System.Environment.NewLine"
            ],
            [
                252,
                "                    }, StringSplitOptions.None)"
            ],
            [
                253,
                "                                  select s.Trim() into s"
            ],
            [
                254,
                "                                  where !string.IsNullOrWhiteSpace(s)"
            ],
            [
                255,
                "                                  select STACK_TRACE_INDENT + s).ToArray();"
            ],
            [
                256,
                "                foreach (string value in array)"
            ],
            [
                258,
                "                    builder.AppendLine(value);"
            ]
        ]
    },
    "num_lines_added": 31,
    "num_lines_removed": 16
}