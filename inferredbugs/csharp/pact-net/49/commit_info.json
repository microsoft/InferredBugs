{
    "hash": "bbf5cb84d844be84231632dce3426c3a9898da18",
    "message": "Adding functionality to clear mock provider handled request info",
    "file_num_lines": 210,
    "diff_parsed": {
        "added": [
            [
                2,
                "using System.Linq;"
            ],
            [
                32,
                "            var mockProviderRepository = Substitute.For<IMockProviderRepository>();"
            ],
            [
                40,
                "            IMockProviderRequestHandler handler = new MockProviderRequestHandler(mockRequestMapper, mockResponseMapper, mockProviderRepository);"
            ],
            [
                65,
                "            var mockProviderRepository = Substitute.For<IMockProviderRepository>();"
            ],
            [
                73,
                "            IMockProviderRequestHandler handler = new MockProviderRequestHandler(mockRequestMapper, mockResponseMapper, mockProviderRepository);"
            ],
            [
                97,
                "            var mockProviderRepository = Substitute.For<IMockProviderRepository>();"
            ],
            [
                108,
                "            IMockProviderRequestHandler handler = new MockProviderRequestHandler(mockRequestMapper, mockResponseMapper, mockProviderRepository);"
            ],
            [
                115,
                "        [Fact]"
            ],
            [
                116,
                "        public void Handle_WithNancyContext_AddHandledRequestIsCalledOnTheMockProviderRepository()"
            ],
            [
                124,
                "            var mockProviderRepository = Substitute.For<IMockProviderRepository>();"
            ],
            [
                140,
                "            IMockProviderRequestHandler handler = new MockProviderRequestHandler(mockRequestMapper, mockResponseMapper, mockProviderRepository);"
            ],
            [
                144,
                "            mockProviderRepository.Received(1).AddHandledRequest(Arg.Is<HandledRequest>(x => x.ActualRequest == actualRequest && x.MatchedInteraction == interactions.First()));"
            ],
            [
                145,
                "        }"
            ],
            [
                163,
                "            var mockProviderRepository = Substitute.For<IMockProviderRepository>();"
            ],
            [
                174,
                "            IMockProviderRequestHandler handler = new MockProviderRequestHandler(mockRequestMapper, mockResponseMapper, mockProviderRepository);"
            ],
            [
                199,
                "            var mockProviderRepository = Substitute.For<IMockProviderRepository>();"
            ],
            [
                217,
                "            IMockProviderRequestHandler handler = new MockProviderRequestHandler(mockRequestMapper, mockResponseMapper, mockProviderRepository);"
            ],
            [
                233,
                "            var mockProviderRepository = Substitute.For<IMockProviderRepository>();"
            ],
            [
                254,
                "            IMockProviderRequestHandler handler = new MockProviderRequestHandler(mockRequestMapper, mockResponseMapper, mockProviderRepository);"
            ]
        ],
        "deleted": [
            [
                31,
                "            var mockStatsProvider = Substitute.For<IStatsProvider>();"
            ],
            [
                39,
                "            IMockProviderRequestHandler handler = new MockProviderRequestHandler(mockRequestMapper, mockResponseMapper, mockStatsProvider);"
            ],
            [
                64,
                "            var mockStatsProvider = Substitute.For<IStatsProvider>();"
            ],
            [
                72,
                "            IMockProviderRequestHandler handler = new MockProviderRequestHandler(mockRequestMapper, mockResponseMapper, mockStatsProvider);"
            ],
            [
                96,
                "            var mockStatsProvider = Substitute.For<IStatsProvider>();"
            ],
            [
                107,
                "            IMockProviderRequestHandler handler = new MockProviderRequestHandler(mockRequestMapper, mockResponseMapper, mockStatsProvider);"
            ],
            [
                114,
                "        //TODO: This test needs to be moved to the interaction verification tests"
            ],
            [
                115,
                "        /*[Fact]"
            ],
            [
                116,
                "        public void Handle_WithNancyContext_CompareIsCalledOnTheProviderServiceRequestComparer()"
            ],
            [
                122,
                "            var mockRequestComparer = Substitute.For<IProviderServiceRequestComparer>();"
            ],
            [
                125,
                "            var mockStatsProvider = Substitute.For<IStatsProvider>();"
            ],
            [
                141,
                "            IMockProviderRequestHandler handler = new MockProviderRequestHandler(mockRequestMapper, mockResponseMapper, mockStatsProvider);"
            ],
            [
                145,
                "            mockRequestComparer.Received(1).Compare(expectedRequest, actualRequest);"
            ],
            [
                146,
                "        }*/"
            ],
            [
                164,
                "            var mockStatsProvider = Substitute.For<IStatsProvider>();"
            ],
            [
                175,
                "            IMockProviderRequestHandler handler = new MockProviderRequestHandler(mockRequestMapper, mockResponseMapper, mockStatsProvider);"
            ],
            [
                200,
                "            var mockStatsProvider = Substitute.For<IStatsProvider>();"
            ],
            [
                218,
                "            IMockProviderRequestHandler handler = new MockProviderRequestHandler(mockRequestMapper, mockResponseMapper, mockStatsProvider);"
            ],
            [
                225,
                "        //TODO: Move this test to interaction verifications"
            ],
            [
                226,
                "        /*[Fact]"
            ],
            [
                227,
                "        public void Handle_WithNancyContextRequestThatDoesNotMatchExpectedRequest_ResponseMapperIsCalledAndReturns500Response()"
            ],
            [
                228,
                "        {"
            ],
            [
                229,
                "            var expectedRequest = new ProviderServiceRequest"
            ],
            [
                230,
                "            {"
            ],
            [
                231,
                "                Method = HttpVerb.Get,"
            ],
            [
                232,
                "                Path = \"/Test\""
            ],
            [
                233,
                "            };"
            ],
            [
                234,
                "            var actualRequest = new ProviderServiceRequest"
            ],
            [
                235,
                "            {"
            ],
            [
                236,
                "                Method = HttpVerb.Put,"
            ],
            [
                237,
                "                Path = \"/Test\""
            ],
            [
                238,
                "            };"
            ],
            [
                239,
                "            var expectedResponse = new ProviderServiceResponse { Status = 200 };"
            ],
            [
                240,
                "            var nancyResponse = new Response { StatusCode = HttpStatusCode.OK };"
            ],
            [
                241,
                "            var compareException = new CompareFailedException(\"Something failed\");"
            ],
            [
                242,
                ""
            ],
            [
                243,
                "            var mockRequestMapper = Substitute.For<IProviderServiceRequestMapper>();"
            ],
            [
                244,
                "            var mockResponseMapper = Substitute.For<INancyResponseMapper>();"
            ],
            [
                245,
                "            var mockStatsProvider = Substitute.For<IStatsProvider>();"
            ],
            [
                246,
                ""
            ],
            [
                247,
                "            var nancyContext = new NancyContext"
            ],
            [
                248,
                "            {"
            ],
            [
                249,
                "                Request = new Request(\"GET\", \"/Test\", \"HTTP\")"
            ],
            [
                250,
                "            };"
            ],
            [
                251,
                ""
            ],
            [
                252,
                "            var interactions = new List<ProviderServiceInteraction>"
            ],
            [
                253,
                "            {"
            ],
            [
                254,
                "                new ProviderServiceInteraction { Request = expectedRequest, Response = expectedResponse }"
            ],
            [
                255,
                "            };"
            ],
            [
                256,
                ""
            ],
            [
                257,
                "            nancyContext.SetMockInteraction(interactions);"
            ],
            [
                258,
                ""
            ],
            [
                259,
                "            mockRequestMapper.Convert(nancyContext.Request).Returns(actualRequest);"
            ],
            [
                260,
                "            mockRequestComparer"
            ],
            [
                261,
                "                .When(x => x.Compare(expectedRequest, actualRequest))"
            ],
            [
                262,
                "                .Do(x => { throw compareException; });"
            ],
            [
                263,
                ""
            ],
            [
                264,
                "            mockResponseMapper.Convert(expectedResponse).Returns(nancyResponse);"
            ],
            [
                265,
                ""
            ],
            [
                266,
                "            mockResponseMapper.Convert(Arg.Any<ProviderServiceResponse>())"
            ],
            [
                267,
                "                .Returns(new Response"
            ],
            [
                268,
                "                {"
            ],
            [
                269,
                "                    StatusCode = HttpStatusCode.InternalServerError"
            ],
            [
                270,
                "                });"
            ],
            [
                271,
                ""
            ],
            [
                272,
                "            IMockProviderRequestHandler handler = new MockProviderRequestHandler(mockRequestMapper, mockResponseMapper, mockStatsProvider);"
            ],
            [
                273,
                ""
            ],
            [
                274,
                "            var response = handler.Handle(nancyContext);"
            ],
            [
                275,
                ""
            ],
            [
                276,
                "            mockResponseMapper.Received(1).Convert(Arg.Is<ProviderServiceResponse>(x => x.Status == 500));"
            ],
            [
                277,
                "            Assert.Equal(HttpStatusCode.InternalServerError, response.StatusCode);"
            ],
            [
                278,
                "            Assert.NotEmpty(response.ReasonPhrase);"
            ],
            [
                279,
                "        }*/"
            ],
            [
                280,
                ""
            ],
            [
                281,
                "        //TODO: Need a test for StatsProvider"
            ],
            [
                282,
                ""
            ],
            [
                292,
                "            var mockStatsProvider = Substitute.For<IStatsProvider>();"
            ],
            [
                313,
                "            IMockProviderRequestHandler handler = new MockProviderRequestHandler(mockRequestMapper, mockResponseMapper, mockStatsProvider);"
            ]
        ]
    },
    "num_lines_added": 19,
    "num_lines_removed": 78
}