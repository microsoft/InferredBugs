{
    "hash": "76fc88a91e1df088ef50781bf639012d0192f8cd",
    "message": "Add regex options and grep modes",
    "file_num_lines": 112,
    "diff_parsed": {
        "added": [
            [
                35,
                ""
            ],
            [
                36,
                "            var lines = new List<string>(pattern.Split(new [] {'`'}));"
            ],
            [
                37,
                ""
            ],
            [
                38,
                "            var options = new Options();"
            ],
            [
                41,
                "                string optionString = lines[0];"
            ],
            [
                44,
                "                options = ParseOptions(optionString);"
            ],
            [
                47,
                "            Regex regex = new Regex(String.Join(\"`\", lines), options.RegexOptions);"
            ],
            [
                49,
                "            switch (options.Mode)"
            ],
            [
                50,
                "            {"
            ],
            [
                51,
                "            case Modes.Match:"
            ],
            [
                52,
                "                MatchCollection matches = regex.Matches(input);"
            ],
            [
                53,
                "                Console.WriteLine(matches.Count);"
            ],
            [
                54,
                "                break;"
            ],
            [
                55,
                "            case Modes.Grep:"
            ],
            [
                56,
                "            case Modes.AntiGrep:"
            ],
            [
                57,
                "                var stringReader = new StringReader(input);"
            ],
            [
                58,
                "                string line;"
            ],
            [
                59,
                "                while ((line = stringReader.ReadLine()) != null)"
            ],
            [
                60,
                "                {"
            ],
            [
                61,
                "                    if (regex.IsMatch(line) ^ (options.Mode == Modes.AntiGrep))"
            ],
            [
                62,
                "                        Console.WriteLine(line);"
            ],
            [
                63,
                "                }"
            ],
            [
                64,
                "                break;"
            ],
            [
                65,
                "            default:"
            ],
            [
                66,
                "                throw new NotImplementedException();"
            ],
            [
                67,
                "            }"
            ],
            [
                75,
                "        private static Options ParseOptions(string optionString)"
            ],
            [
                77,
                ""
            ],
            [
                78,
                "            var options = new Options();"
            ],
            [
                79,
                ""
            ],
            [
                80,
                "            foreach (char c in optionString)"
            ],
            [
                81,
                "            {"
            ],
            [
                82,
                "                switch (c)"
            ],
            [
                83,
                "                {"
            ],
            [
                84,
                "                // Parse RegexOptions"
            ],
            [
                85,
                "                case 'c':"
            ],
            [
                86,
                "                    options.RegexOptions |= RegexOptions.CultureInvariant;"
            ],
            [
                87,
                "                    break;"
            ],
            [
                88,
                "                case 'e':"
            ],
            [
                89,
                "                    options.RegexOptions |= RegexOptions.ECMAScript;"
            ],
            [
                90,
                "                    break;"
            ],
            [
                91,
                "                case 'i':"
            ],
            [
                92,
                "                    options.RegexOptions |= RegexOptions.IgnoreCase;"
            ],
            [
                93,
                "                    break;"
            ],
            [
                94,
                "                case 'm':"
            ],
            [
                95,
                "                    options.RegexOptions |= RegexOptions.Multiline;"
            ],
            [
                96,
                "                    break;"
            ],
            [
                97,
                "                case 'n':"
            ],
            [
                98,
                "                    options.RegexOptions |= RegexOptions.ExplicitCapture;"
            ],
            [
                99,
                "                    break;"
            ],
            [
                100,
                "                case 'r':"
            ],
            [
                101,
                "                    options.RegexOptions |= RegexOptions.RightToLeft;"
            ],
            [
                102,
                "                    break;"
            ],
            [
                103,
                "                case 's':"
            ],
            [
                104,
                "                    options.RegexOptions |= RegexOptions.Singleline;"
            ],
            [
                105,
                "                    break;"
            ],
            [
                106,
                "                case 'x':"
            ],
            [
                107,
                "                    options.RegexOptions |= RegexOptions.IgnorePatternWhitespace;"
            ],
            [
                108,
                "                    break;"
            ],
            [
                109,
                ""
            ],
            [
                110,
                "                // Parse Mode"
            ],
            [
                111,
                "                case 'G':"
            ],
            [
                112,
                "                    options.Mode = Modes.Grep;"
            ],
            [
                113,
                "                    break;"
            ],
            [
                114,
                "                case 'A':"
            ],
            [
                115,
                "                    options.Mode = Modes.AntiGrep;"
            ],
            [
                116,
                "                    break;"
            ],
            [
                117,
                "                case 'S':"
            ],
            [
                118,
                "                    options.Mode = Modes.Split;"
            ],
            [
                119,
                "                    break;"
            ],
            [
                120,
                ""
            ],
            [
                121,
                "                default:"
            ],
            [
                122,
                "                    break;"
            ],
            [
                123,
                "                }"
            ],
            [
                124,
                "            }"
            ],
            [
                125,
                ""
            ],
            [
                126,
                "            return options;"
            ]
        ],
        "deleted": [
            [
                35,
                "            char[] delimiter = {'\\n'};"
            ],
            [
                36,
                "            var lines = new List<string>(pattern.Split(delimiter));"
            ],
            [
                39,
                "                string options = lines[0];"
            ],
            [
                42,
                "                ParseOptions(options);"
            ],
            [
                45,
                "            Regex regex = new Regex(String.Join(\"\\n\", lines));"
            ],
            [
                47,
                "            MatchCollection matches = regex.Matches(input);"
            ],
            [
                48,
                ""
            ],
            [
                49,
                "            Console.WriteLine(matches.Count);"
            ],
            [
                57,
                "        private static void ParseOptions(string options)"
            ],
            [
                59,
                "            throw new NotImplementedException();"
            ]
        ]
    },
    "num_lines_added": 77,
    "num_lines_removed": 10
}