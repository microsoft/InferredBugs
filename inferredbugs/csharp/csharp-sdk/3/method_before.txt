  [Test]
		public void PutPolicyTest(){
			PutPolicy policy = new PutPolicy ("lskjd:lskd");
			policy.CallBackUrl = "callbackUrl.com";
			policy.ReturnUrl = "returnUrl.com";
			bool exp = false;
			try{
				policy.Token ();
			}catch{
				exp = true;
				Assert.IsTrue (true, "PutPolicyTest Failure1");
			}
			Assert.IsTrue (exp, "PutPolicyTest Failure2");
			exp = false;


			policy = new PutPolicy ("bucket");
			policy.CallBackUrl = "callbackUrl.com";
			try{
				policy.Token ();
			}catch{
				exp = true;
				Assert.IsTrue (true, "PutPolicyTest Failure3");
			}
			Assert.IsTrue (exp, "PutPolicyTest Failure4");
			exp = false;


			policy = new PutPolicy("bucket");
			policy.CallBackBody="uid=123";
			policy.CallBackUrl="www.qiniu.com";
			policy.DetectMime = 1;
			policy.FsizeLimit=4096;
			policy.FsizeMin=0;
			policy.InsertOnly = 1;
			policy.PersistentNotifyUrl="www.yourdomain.com/persistentNotifyUrl";
			policy.PersistentOps = "avthumb/m3u8/preset/video_16x9_440k";
			policy.CallbackHost = "180.97.211.38";
            policy.CallbackFetchKey = 0;
            policy.CallbackBodyType = "application/json";
			try {
				string result = policy.ToString();
				string expect = "{\"scope\":\"bucket\",\"callBackUrl\":\"www.qiniu.com\",\"callBackBody\":\"uid=123\",\"deadline\":0,\"insertOnly\":1,\"detectMime\":1,\"fsizeLimit\":4096,\"fsizeMin\":0,\"persistentNotifyUrl\":\"www.yourdomain.com/persistentNotifyUrl\",\"persistentOps\":\"avthumb/m3u8/preset/video_16x9_440k\",\"callbackHost\":\"180.97.211.38\",\"callbackBodyType\":\"application/json\",\"callbackFetchKey\":0}";
				//Assert.IsTrue(result==expect,"PutPolicyTest Failure5");
				Assert.AreEqual(result, expect);
			} catch (Exception ee){
				Assert.IsTrue (false, ee.Message.ToString());
			}

		}