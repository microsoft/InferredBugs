{
    "hash": "589111ae0bf5ac775e70d7ebe8c17e6dc6fa6ec5",
    "message": "Update reflection to dispose DMD",
    "file_num_lines": 417,
    "diff_parsed": {
        "added": [
            [
                599,
                "            using (var method = new DynamicMethodDefinition($\"{field} Getter\", typeof(TReturn), new[] { typeof(object) })) {"
            ],
            [
                600,
                "                var il = method.GetILProcessor();"
            ],
            [
                601,
                ""
            ],
            [
                602,
                "                if (!field.IsStatic) {"
            ],
            [
                603,
                "                    il.Emit(OpCodes.Ldarg_0);"
            ],
            [
                604,
                "                    if (field.DeclaringType.GetTypeInfo().IsValueType) {"
            ],
            [
                605,
                "                        il.Emit(OpCodes.Unbox_Any, field.DeclaringType);"
            ],
            [
                606,
                "                    }"
            ],
            [
                609,
                "                il.Emit(!field.IsStatic ? OpCodes.Ldfld : OpCodes.Ldsfld, field);"
            ],
            [
                610,
                "                il.Emit(OpCodes.Ret);"
            ],
            [
                612,
                "                return (GetDelegate<TReturn>)method.Generate().CreateDelegate(typeof(GetDelegate<TReturn>));"
            ],
            [
                613,
                "            }"
            ],
            [
                625,
                "            using (var method = new DynamicMethodDefinition($\"{field} Setter\", typeof(void),"
            ],
            [
                626,
                "                new[] { typeof(object), typeof(TValue) })) {"
            ],
            [
                627,
                "                var il = method.GetILProcessor();"
            ],
            [
                629,
                "                if (!field.IsStatic) {"
            ],
            [
                630,
                "                    il.Emit(OpCodes.Ldarg_0);"
            ],
            [
                631,
                "                }"
            ],
            [
                633,
                "                il.Emit(OpCodes.Ldarg_1);"
            ],
            [
                634,
                "                il.Emit(!field.IsStatic ? OpCodes.Stfld : OpCodes.Stsfld, field);"
            ],
            [
                636,
                "                il.Emit(OpCodes.Ret);"
            ],
            [
                638,
                "                return (SetDelegate<TValue>)method.Generate().CreateDelegate(typeof(SetDelegate<TValue>));"
            ],
            [
                639,
                "            }"
            ],
            [
                651,
                "            using (var method = new DynamicMethodDefinition($\"{field} SetterByRef\", typeof(void),"
            ],
            [
                652,
                "                new[] { typeof(TInstance).MakeByRefType(), typeof(TValue) })) {"
            ],
            [
                653,
                "                var il = method.GetILProcessor();"
            ],
            [
                655,
                "                if (!field.IsStatic) {"
            ],
            [
                656,
                "                    il.Emit(OpCodes.Ldarg_0);"
            ],
            [
                657,
                "                }"
            ],
            [
                659,
                "                il.Emit(OpCodes.Ldarg_1);"
            ],
            [
                660,
                "                il.Emit(!field.IsStatic ? OpCodes.Stfld : OpCodes.Stsfld, field);"
            ],
            [
                661,
                "                il.Emit(OpCodes.Ret);"
            ],
            [
                663,
                "                return (SetDelegateRef<TInstance, TValue>)method.Generate().CreateDelegate(typeof(SetDelegateRef<TInstance, TValue>));"
            ],
            [
                664,
                "            }"
            ],
            [
                676,
                "            using (var method = new DynamicMethodDefinition($\"{property} Getter\", typeof(TReturn), new[] { typeof(object) })) {"
            ],
            [
                677,
                "                var il = method.GetILProcessor();"
            ],
            [
                679,
                "                var getMethod = property.GetGetMethod(nonPublic: true);"
            ],
            [
                681,
                "                if (!getMethod.IsStatic) {"
            ],
            [
                682,
                "                    il.Emit(OpCodes.Ldarg_0);"
            ],
            [
                683,
                "                }"
            ],
            [
                685,
                "                il.Emit(OpCodes.Call, getMethod);"
            ],
            [
                686,
                "                il.Emit(OpCodes.Ret);"
            ],
            [
                688,
                "                return (GetDelegate<TReturn>)method.Generate().CreateDelegate(typeof(GetDelegate<TReturn>));"
            ],
            [
                689,
                "            }"
            ],
            [
                701,
                "            using (var method = new DynamicMethodDefinition($\"{property} Getter\", typeof(TReturn), new[] { typeof(TInstance).MakeByRefType() })) {"
            ],
            [
                702,
                "                var il = method.GetILProcessor();"
            ],
            [
                704,
                "                // Cache this as well?"
            ],
            [
                705,
                "                var getMethod = property.GetGetMethod(nonPublic: true);"
            ],
            [
                707,
                "                if (!getMethod.IsStatic) {"
            ],
            [
                708,
                "                    il.Emit(OpCodes.Ldarg_0);"
            ],
            [
                709,
                "                }"
            ],
            [
                711,
                "                il.Emit(OpCodes.Call, getMethod);"
            ],
            [
                712,
                "                il.Emit(OpCodes.Ret);"
            ],
            [
                714,
                "                return (GetDelegateRef<TInstance, TReturn>)method.Generate().CreateDelegate(typeof(GetDelegateRef<TInstance, TReturn>));"
            ],
            [
                715,
                "            }"
            ],
            [
                728,
                "            using (var method = new DynamicMethodDefinition($\"{property} Setter\", typeof(void),"
            ],
            [
                729,
                "                new[] { typeof(object), typeof(TValue) })) {"
            ],
            [
                730,
                "                var il = method.GetILProcessor();"
            ],
            [
                732,
                "                var setMethod = property.GetSetMethod(true);"
            ],
            [
                734,
                "                if (!setMethod.IsStatic) {"
            ],
            [
                735,
                "                    il.Emit(OpCodes.Ldarg_0);"
            ],
            [
                736,
                "                }"
            ],
            [
                738,
                "                il.Emit(OpCodes.Ldarg_1);"
            ],
            [
                739,
                "                il.Emit(OpCodes.Call, setMethod);"
            ],
            [
                740,
                "                il.Emit(OpCodes.Ret);"
            ],
            [
                742,
                "                return (SetDelegate<TValue>)method.Generate().CreateDelegate(typeof(SetDelegate<TValue>));"
            ],
            [
                743,
                "            }"
            ],
            [
                755,
                "            using (var method = new DynamicMethodDefinition($\"{property} SetterByRef\", typeof(void),"
            ],
            [
                756,
                "                new[] { typeof(TInstance).MakeByRefType(), typeof(TValue) })) {"
            ],
            [
                757,
                "                var il = method.GetILProcessor();"
            ],
            [
                759,
                "                var setMethod = property.GetSetMethod(true);"
            ],
            [
                761,
                "                if (!setMethod.IsStatic) {"
            ],
            [
                762,
                "                    il.Emit(OpCodes.Ldarg_0);"
            ],
            [
                763,
                "                }"
            ],
            [
                765,
                "                il.Emit(OpCodes.Ldarg_1);"
            ],
            [
                766,
                "                il.Emit(OpCodes.Call, setMethod);"
            ],
            [
                767,
                "                il.Emit(OpCodes.Ret);"
            ],
            [
                769,
                "                return (SetDelegateRef<TInstance, TValue>)method.Generate().CreateDelegate(typeof(SetDelegateRef<TInstance, TValue>));"
            ],
            [
                770,
                "            }"
            ]
        ],
        "deleted": [
            [
                599,
                "            var method = new DynamicMethodDefinition($\"{field} Getter\", typeof(TReturn), new[] { typeof(object) });"
            ],
            [
                600,
                "            var il = method.GetILProcessor();"
            ],
            [
                601,
                ""
            ],
            [
                602,
                "            if (!field.IsStatic) {"
            ],
            [
                603,
                "                il.Emit(OpCodes.Ldarg_0);"
            ],
            [
                604,
                "                if (field.DeclaringType.GetTypeInfo().IsValueType) {"
            ],
            [
                605,
                "                    il.Emit(OpCodes.Unbox_Any, field.DeclaringType);"
            ],
            [
                607,
                "            }"
            ],
            [
                609,
                "            il.Emit(!field.IsStatic ? OpCodes.Ldfld : OpCodes.Ldsfld, field);"
            ],
            [
                610,
                "            il.Emit(OpCodes.Ret);"
            ],
            [
                612,
                "            return (GetDelegate<TReturn>)method.Generate().CreateDelegate(typeof(GetDelegate<TReturn>));"
            ],
            [
                624,
                "            var method = new DynamicMethodDefinition($\"{field} Setter\", typeof(void),"
            ],
            [
                625,
                "                new[] { typeof(object), typeof(TValue) });"
            ],
            [
                626,
                "            var il = method.GetILProcessor();"
            ],
            [
                628,
                "            if (!field.IsStatic) {"
            ],
            [
                629,
                "                il.Emit(OpCodes.Ldarg_0);"
            ],
            [
                630,
                "            }"
            ],
            [
                632,
                "            il.Emit(OpCodes.Ldarg_1);"
            ],
            [
                633,
                "            il.Emit(!field.IsStatic ? OpCodes.Stfld : OpCodes.Stsfld, field);"
            ],
            [
                635,
                "            il.Emit(OpCodes.Ret);"
            ],
            [
                637,
                "            return (SetDelegate<TValue>)method.Generate().CreateDelegate(typeof(SetDelegate<TValue>));"
            ],
            [
                649,
                "            var method = new DynamicMethodDefinition($\"{field} SetterByRef\", typeof(void),"
            ],
            [
                650,
                "                new[] { typeof(TInstance).MakeByRefType(), typeof(TValue) });"
            ],
            [
                651,
                "            var il = method.GetILProcessor();"
            ],
            [
                653,
                "            if (!field.IsStatic) {"
            ],
            [
                654,
                "                il.Emit(OpCodes.Ldarg_0);"
            ],
            [
                655,
                "            }"
            ],
            [
                657,
                "            il.Emit(OpCodes.Ldarg_1);"
            ],
            [
                658,
                "            il.Emit(!field.IsStatic ? OpCodes.Stfld : OpCodes.Stsfld, field);"
            ],
            [
                659,
                "            il.Emit(OpCodes.Ret);"
            ],
            [
                661,
                "            return (SetDelegateRef<TInstance, TValue>)method.Generate().CreateDelegate(typeof(SetDelegateRef<TInstance, TValue>));"
            ],
            [
                673,
                "            var method = new DynamicMethodDefinition($\"{property} Getter\", typeof(TReturn), new[] { typeof(object) });"
            ],
            [
                674,
                "            var il = method.GetILProcessor();"
            ],
            [
                676,
                "            var getMethod = property.GetGetMethod(nonPublic: true);"
            ],
            [
                678,
                "            if (!getMethod.IsStatic) {"
            ],
            [
                679,
                "                il.Emit(OpCodes.Ldarg_0);"
            ],
            [
                680,
                "            }"
            ],
            [
                682,
                "            il.Emit(OpCodes.Call, getMethod);"
            ],
            [
                683,
                "            il.Emit(OpCodes.Ret);"
            ],
            [
                685,
                "            return (GetDelegate<TReturn>)method.Generate().CreateDelegate(typeof(GetDelegate<TReturn>));"
            ],
            [
                697,
                "            var method = new DynamicMethodDefinition($\"{property} Getter\", typeof(TReturn), new[] { typeof(TInstance).MakeByRefType() });"
            ],
            [
                698,
                "            var il = method.GetILProcessor();"
            ],
            [
                700,
                "            // Cache this as well?"
            ],
            [
                701,
                "            var getMethod = property.GetGetMethod(nonPublic: true);"
            ],
            [
                703,
                "            if (!getMethod.IsStatic) {"
            ],
            [
                704,
                "                il.Emit(OpCodes.Ldarg_0);"
            ],
            [
                705,
                "            }"
            ],
            [
                707,
                "            il.Emit(OpCodes.Call, getMethod);"
            ],
            [
                708,
                "            il.Emit(OpCodes.Ret);"
            ],
            [
                710,
                "            return (GetDelegateRef<TInstance, TReturn>)method.Generate().CreateDelegate(typeof(GetDelegateRef<TInstance, TReturn>));"
            ],
            [
                723,
                "            var method = new DynamicMethodDefinition($\"{property} Setter\", typeof(void),"
            ],
            [
                724,
                "                new[] { typeof(object), typeof(TValue) });"
            ],
            [
                725,
                "            var il = method.GetILProcessor();"
            ],
            [
                727,
                "            var setMethod = property.GetSetMethod(true);"
            ],
            [
                729,
                "            if (!setMethod.IsStatic) {"
            ],
            [
                730,
                "                il.Emit(OpCodes.Ldarg_0);"
            ],
            [
                731,
                "            }"
            ],
            [
                733,
                "            il.Emit(OpCodes.Ldarg_1);"
            ],
            [
                734,
                "            il.Emit(OpCodes.Call, setMethod);"
            ],
            [
                735,
                "            il.Emit(OpCodes.Ret);"
            ],
            [
                737,
                "            return (SetDelegate<TValue>)method.Generate().CreateDelegate(typeof(SetDelegate<TValue>));"
            ],
            [
                749,
                "            var method = new DynamicMethodDefinition($\"{property} SetterByRef\", typeof(void),"
            ],
            [
                750,
                "                new[] { typeof(TInstance).MakeByRefType(), typeof(TValue) });"
            ],
            [
                751,
                "            var il = method.GetILProcessor();"
            ],
            [
                753,
                "            var setMethod = property.GetSetMethod(true);"
            ],
            [
                755,
                "            if (!setMethod.IsStatic) {"
            ],
            [
                756,
                "                il.Emit(OpCodes.Ldarg_0);"
            ],
            [
                757,
                "            }"
            ],
            [
                759,
                "            il.Emit(OpCodes.Ldarg_1);"
            ],
            [
                760,
                "            il.Emit(OpCodes.Call, setMethod);"
            ],
            [
                761,
                "            il.Emit(OpCodes.Ret);"
            ],
            [
                763,
                "            return (SetDelegateRef<TInstance, TValue>)method.Generate().CreateDelegate(typeof(SetDelegateRef<TInstance, TValue>));"
            ]
        ]
    },
    "num_lines_added": 79,
    "num_lines_removed": 72
}