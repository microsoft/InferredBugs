{
    "hash": "4b402658ca95c6abbab0db0ea41d600ebd9dcab1",
    "message": "More documentation about broken JPEGs + more secure resource allocation with \"using\"",
    "file_num_lines": 288,
    "diff_parsed": {
        "added": [
            [
                401,
                "        // Checks if the JPEG picture scanned by the given stream"
            ],
            [
                402,
                "        // may contain abnormalities (0xff 0x00 instead of 0xff)"
            ],
            [
                416,
                "        // Clean abnormalities in JPEG binary streams"
            ],
            [
                422,
                "            using(BinaryReader r = new BinaryReader(s))"
            ],
            [
                423,
                "            using (BinaryWriter w = new BinaryWriter(mem))"
            ],
            [
                425,
                "                byte prevB = 0;"
            ],
            [
                426,
                "                byte b;"
            ],
            [
                428,
                "                s.Seek(0, SeekOrigin.Begin);"
            ],
            [
                429,
                "                while (s.Position < s.Length)"
            ],
            [
                430,
                "                {"
            ],
            [
                431,
                "                    b = r.ReadByte();"
            ],
            [
                432,
                "                    if ((0xFF == prevB) && (0x00 == b)) b = r.ReadByte();"
            ],
            [
                433,
                ""
            ],
            [
                434,
                "                    w.Write(b);"
            ],
            [
                435,
                "                    prevB = b;"
            ],
            [
                436,
                "                }"
            ]
        ],
        "deleted": [
            [
                414,
                "        // Clean anomalies in JPEG binary streams"
            ],
            [
                418,
                "            BinaryReader r = new BinaryReader(s);"
            ],
            [
                420,
                "            BinaryWriter w = new BinaryWriter(mem);"
            ],
            [
                421,
                "            byte prevB = 0;"
            ],
            [
                422,
                "            byte b;"
            ],
            [
                424,
                "            r.BaseStream.Seek(0, SeekOrigin.Begin);"
            ],
            [
                425,
                "            while (r.BaseStream.Position < r.BaseStream.Length)"
            ],
            [
                427,
                "                b = r.ReadByte();"
            ],
            [
                428,
                "                if ((0xFF == prevB) && (0x00 == b)) b = r.ReadByte();"
            ],
            [
                430,
                "                w.Write(b);"
            ],
            [
                431,
                "                prevB = b;"
            ],
            [
                434,
                "            r.Close();"
            ]
        ]
    },
    "num_lines_added": 16,
    "num_lines_removed": 12
}