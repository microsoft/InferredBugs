{
    "hash": "c50c92e0c77c7cd4d46733054af2c1cb922808fc",
    "message": "SC-66: Fix parsing cached value for non filled cell",
    "file_num_lines": 77,
    "diff_parsed": {
        "added": [
            [
                22,
                "        public void Value_Getter_returns_point_value_of_Bar_chart()"
            ],
            [
                28,
                "            ISeries chart6Series = ((IChart)this.fixture.Pre025.Slides[1].Shapes.First(sp => sp.Id == 4)).SeriesCollection[0];"
            ],
            [
                31,
                "            double pointValue1 = chart1.SeriesCollection[1].Points[0].Value;"
            ],
            [
                32,
                "            double pointValue2 = chart6Series.Points[0].Value;"
            ],
            [
                35,
                "            Assert.Equal(56, pointValue1);"
            ],
            [
                36,
                "            Assert.Equal(72.66, pointValue2);"
            ],
            [
                37,
                "        }"
            ],
            [
                38,
                ""
            ],
            [
                39,
                "        [Fact]"
            ],
            [
                40,
                "        public void Value_Getter_returns_point_value_of_Scatter_chart()"
            ],
            [
                41,
                "        {"
            ],
            [
                42,
                "            // Arrange"
            ],
            [
                43,
                "            IPresentation presentation = this.fixture.Pre021;"
            ],
            [
                44,
                "            var shapes1 = presentation.Slides[0].Shapes;"
            ],
            [
                45,
                "            var chart1 = (IChart) shapes1.First(x => x.Id == 3);"
            ],
            [
                46,
                ""
            ],
            [
                47,
                "            // Act"
            ],
            [
                48,
                "            double scatterChartPointValue = chart1.SeriesCollection[2].Points[0].Value;"
            ],
            [
                49,
                ""
            ],
            [
                50,
                "            // Assert"
            ],
            [
                52,
                "        }"
            ],
            [
                53,
                ""
            ],
            [
                54,
                "        [Fact]"
            ],
            [
                55,
                "        public void Value_Getter_returns_point_value_of_Line_chart()"
            ],
            [
                56,
                "        {"
            ],
            [
                57,
                "            // Arrange"
            ],
            [
                58,
                "            var chart2 = this.GetShape<IChart>(\"021.pptx\", 2, 4);"
            ],
            [
                59,
                "            var point = chart2.SeriesCollection[1].Points[0];"
            ],
            [
                60,
                ""
            ],
            [
                61,
                "            // Act"
            ],
            [
                62,
                "            double lineChartPointValue = point.Value;"
            ],
            [
                63,
                ""
            ],
            [
                64,
                "            // Assert"
            ],
            [
                101,
                "            point.Value.Should().Be(newValue);"
            ],
            [
                103,
                "            var stream = new MemoryStream();"
            ],
            [
                104,
                "            chart.ParentSlide.ParentPresentation.SaveAs(stream);"
            ],
            [
                105,
                "            chart = this.GetShape<IChart>(stream, 3, 5);"
            ],
            [
                106,
                "            var savedChartPoint = chart.SeriesCollection[0].Points[0];"
            ],
            [
                107,
                "            savedChartPoint.Value.Should().Be(newValue);"
            ],
            [
                108,
                ""
            ],
            [
                109,
                "            var pointCellValue = this.GetCellValue<double>(chart.WorkbookByteArray, \"B2\");"
            ],
            [
                110,
                "            pointCellValue.Should().Be(newValue);"
            ]
        ],
        "deleted": [
            [
                22,
                "        public void Value_Getter_returns_chart_point_value_of_Bar_chart()"
            ],
            [
                27,
                "            var shapes2 = presentation.Slides[1].Shapes;"
            ],
            [
                29,
                "            var chart2 = (IChart) shapes2.First(x => x.Id == 4);"
            ],
            [
                32,
                "            double barChartPointValue = chart1.SeriesCollection[1].Points[0].Value;"
            ],
            [
                33,
                "            double scatterChartPointValue = chart1.SeriesCollection[2].Points[0].Value;"
            ],
            [
                34,
                "            double lineChartPointValue = chart2.SeriesCollection[1].Points[0].Value;"
            ],
            [
                37,
                "            Assert.Equal(56, barChartPointValue);"
            ],
            [
                48,
                "            ISeries seriesCase3 = ((IChart)this.fixture.Pre025.Slides[1].Shapes.First(sp => sp.Id == 4)).SeriesCollection[0];"
            ],
            [
                54,
                "            double seriesPointValueCase3 = seriesCase3.Points[0].Value;"
            ],
            [
                61,
                "            seriesPointValueCase3.Should().Be(72.7);"
            ],
            [
                78,
                "            var savedPre = new MemoryStream();"
            ],
            [
                79,
                "            chart.ParentSlide.ParentPresentation.SaveAs(savedPre);"
            ],
            [
                80,
                "            chart = this.GetShape<IChart>(savedPre, 3, 5);"
            ],
            [
                82,
                "            chart.SeriesCollection[0].Points[0].Value.Should().Be(newValue);"
            ]
        ]
    },
    "num_lines_added": 42,
    "num_lines_removed": 14
}