{
    "hash": "c5804abb31bd74f26101ad28acdd5c12273d2a8f",
    "message": "find arguments backed by arrays and pass them as multiValuedArguments",
    "file_num_lines": 390,
    "diff_parsed": {
        "added": [
            [
                338,
                "            var multiValuedArguments = typeof(Options)"
            ],
            [
                339,
                "                .GetPropertiesRecursively()"
            ],
            [
                340,
                "                .Where(p => p.PropertyType.IsArray)"
            ],
            [
                341,
                "                .SelectMany(p =>"
            ],
            [
                342,
                "                    p.CustomAttributes"
            ],
            [
                343,
                "                        .Where(a => a.AttributeType == typeof(ArgumentAttribute))"
            ],
            [
                344,
                "                        .Select(a => new[] { a.ConstructorArguments[0].Value, a.ConstructorArguments[1].Value })"
            ],
            [
                345,
                "                        .SelectMany(v => v))"
            ],
            [
                346,
                "                .Select(v => v.ToString())"
            ],
            [
                347,
                "                .Where(v => v != \"\\u0000\")"
            ],
            [
                348,
                "                .ToArray();"
            ],
            [
                349,
                ""
            ],
            [
                364,
                "                    multiValuedArguments,"
            ]
        ],
        "deleted": []
    },
    "num_lines_added": 13,
    "num_lines_removed": 0
}