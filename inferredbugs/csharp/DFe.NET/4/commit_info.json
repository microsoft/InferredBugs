{
    "hash": "b041860543f80b45fcd76925b83d693005113783",
    "message": "verifica\u00e7\u00e3o detPag == null v3.1",
    "file_num_lines": 532,
    "diff_parsed": {
        "added": [
            [
                54,
                "namespace NFe.Danfe.Nativo.NFCe {"
            ],
            [
                55,
                "    public class DanfeNativoNfce {"
            ],
            [
                66,
                "            decimal troco = decimal.Zero, decimal totalPago = decimal.Zero, string font = null) {"
            ],
            [
                70,
                "        private void Inicializa(string xml, ConfiguracaoDanfeNfce configuracaoDanfe, string cIdToken, string csc, decimal troco, decimal totalPago, string font = null) {"
            ],
            [
                82,
                "        public void Imprimir(string nomeImpressora = null, string salvarArquivoPdfEm = null) {"
            ],
            [
                88,
                "            if (!string.IsNullOrEmpty(salvarArquivoPdfEm)) {"
            ],
            [
                98,
                "        private void printCupom_PrintPage(object sender, PrintPageEventArgs e) {"
            ],
            [
                102,
                "        public void GerarJPEG(string filename) {"
            ],
            [
                105,
                "            using (Bitmap bmp = new Bitmap(300, 70000)) {"
            ],
            [
                106,
                "                using (Graphics g = Graphics.FromImage(bmp)) {"
            ],
            [
                113,
                "            using (Bitmap bmpFinal = new Bitmap(300, _y)) {"
            ],
            [
                114,
                "                using (Graphics g = Graphics.FromImage(bmpFinal)) {"
            ],
            [
                122,
                "        private void GerarNfCe(Graphics graphics) {"
            ],
            [
                132,
                "            if (_logo != null) {"
            ],
            [
                136,
                "            if (_logo == null) {"
            ],
            [
                140,
                "            #region cabe\u00e7alho"
            ],
            [
                158,
                "            #region conting\u00eancia"
            ],
            [
                159,
                "            if (_nfe.infNFe.ide.tpEmis != TipoEmissao.teNormal) {"
            ],
            [
                165,
                "            #endregion"
            ],
            [
                169,
                "            #region tabela de itens"
            ],
            [
                198,
                "            #region preencher itens"
            ],
            [
                199,
                "            foreach (det detalhe in det) {"
            ],
            [
                248,
                "                if (valorDescontoItem > 0.0m) {"
            ],
            [
                263,
                "                if (valorAcrescimoItem > 0.0m) {"
            ],
            [
                277,
                "                if (valorDescontoItem > 0.0m || valorAcrescimoItem > 0.0m) {"
            ],
            [
                290,
                "            #endregion"
            ],
            [
                320,
                "            if (totalDesconto > 0) {"
            ],
            [
                346,
                "            foreach (pag pag in _nfe.infNFe.pag) {"
            ],
            [
                352,
                "                if (pag.detPag != null)"
            ],
            [
                353,
                "                    foreach (var detPag in pag.detPag) {"
            ],
            [
                354,
                "                        AdicionaFormaPagamento(x, larguraLinhaMargemDireita, g, detPag.tPag, detPag.vPag);"
            ],
            [
                355,
                "                    }"
            ],
            [
                360,
                "            if (_troco > 0) {"
            ],
            [
                369,
                "            #endregion"
            ],
            [
                377,
                "            int textoConsulteChaveX = ((larguraLinha - textoConsulteChave.Medida.Largura) / 2);"
            ],
            [
                385,
                "            int urlConsultaX = ((larguraLinha - urlConsulta.Medida.Largura) / 2);"
            ],
            [
                393,
                "            int urlChaveX = ((larguraLinha - chave.Medida.Largura) / 2);"
            ],
            [
                398,
                "            #endregion"
            ],
            [
                407,
                "            int consumidorX = (larguraLinha - consumidor.Medida.Largura) / 2;"
            ],
            [
                415,
                "            int dadosNfceX = (larguraLinha - dadosNfce.Medida.Largura) / 2;"
            ],
            [
                420,
                "            if (_nfe.infNFe.ide.tpEmis == TipoEmissao.teNormal) {"
            ],
            [
                424,
                "                int protocoloAutorizacaoX = (larguraLinha - protocoloAutorizacao.Medida.Largura) / 2;"
            ],
            [
                432,
                "                int dataAutorizacaoX = (larguraLinha - dataAutorizacao.Medida.Largura) / 2;"
            ],
            [
                437,
                "            if (_nfe.infNFe.ide.tpEmis != TipoEmissao.teNormal) {"
            ],
            [
                447,
                "            int qrCodeImagemX = (larguraLinha - qrCodeImagem.Size.Width) / 2;"
            ],
            [
                460,
                "            if (tributosIncidentes != 0) {"
            ],
            [
                466,
                "                int tributosTotaisX = (larguraLinha - tributosTotais.Medida.Largura) / 2;"
            ],
            [
                480,
                "                if (_nfe.infNFe != null)"
            ],
            [
                484,
                "            if (!string.IsNullOrEmpty(observacoes)) {"
            ],
            [
                507,
                "        private string EnderecoEmitente() {"
            ],
            [
                512,
                "            if (enderEmit.fone != null) {"
            ],
            [
                523,
                "            if (string.IsNullOrEmpty(enderEmit.nro)) {"
            ],
            [
                527,
                "            if (!string.IsNullOrEmpty(enderEmit.nro)) {"
            ],
            [
                542,
                "        private string CnpjERazaoSocial() {"
            ],
            [
                547,
                "            if (!string.IsNullOrEmpty(emitente.xNome)) {"
            ],
            [
                551,
                "            if (!string.IsNullOrEmpty(emitente.xFant)) {"
            ],
            [
                558,
                "        private static string ObtemUrlQrCode(NFeZeus nfce, string idToken, string csc) {"
            ],
            [
                567,
                "        private static string MontaMensagemDadosNfce(NFeZeus nfce) {"
            ],
            [
                580,
                "        private static string MontaMensagemConsumidor(dest dest) {"
            ],
            [
                583,
                "            if (dest == null || (string.IsNullOrEmpty(dest.CPF) && string.IsNullOrEmpty(dest.CNPJ))) {"
            ],
            [
                588,
                "            if (!string.IsNullOrEmpty(dest.idEstrangeiro)) {"
            ],
            [
                594,
                "            if (!string.IsNullOrEmpty(dest.CPF)) {"
            ],
            [
                599,
                "            if (!string.IsNullOrEmpty(dest.CNPJ)) {"
            ],
            [
                604,
                "            if (!string.IsNullOrEmpty(dest.xNome)) {"
            ],
            [
                648,
                "        private static string GeraChaveAcesso(NFeZeus nfce) {"
            ],
            [
                653,
                "            foreach (char c in chaveAcesso) {"
            ],
            [
                657,
                "                if (contaChaveAcesso == 4) {"
            ],
            [
                665,
                "        private static AdicionarTexto CriaHeaderColuna(string texto, Graphics graphics, int x, int y) {"
            ],
            [
                672,
                "        private static void LinhaHorizontal(Graphics g, int x, int y, int larguraLinha) {"
            ],
            [
                677,
                "            int y, int larguraLinha) {"
            ],
            [
                683,
                "            int posisaoXTexto = x + larguraLogo + (((larguraLinha - larguraLogo) - adicionarTexto.Medida.Largura) / 2);"
            ],
            [
                689,
                "        private static int MensagemContingencia(Graphics g, int larguraLinha, int y) {"
            ],
            [
                691,
                "            int restoContingenciaTituloX = (larguraLinha - contingenciaTitulo.Medida.Largura) / 2;"
            ],
            [
                696,
                "            int restoPendenteAutorizacaoTituloX = (larguraLinha - pendenteAutorizacaoTitulo.Medida.Largura) / 2;"
            ],
            [
                702,
                "        private void CarregarXml(string xml) {"
            ],
            [
                703,
                "            try {"
            ],
            [
                707,
                "            } catch (Exception) {"
            ],
            [
                708,
                "                try {"
            ],
            [
                711,
                "                } catch (Exception) {"
            ],
            [
                718,
                "        private static string ObtemDescricao(FormaPagamento? formaPagamento) {"
            ],
            [
                719,
                "            switch (formaPagamento) {"
            ]
        ],
        "deleted": [
            [
                54,
                "namespace NFe.Danfe.Nativo.NFCe"
            ],
            [
                55,
                "{"
            ],
            [
                56,
                "    public class DanfeNativoNfce"
            ],
            [
                57,
                "    {"
            ],
            [
                68,
                "            decimal troco = decimal.Zero, decimal totalPago = decimal.Zero, string font = null)"
            ],
            [
                69,
                "        {"
            ],
            [
                73,
                "        private void Inicializa(string xml, ConfiguracaoDanfeNfce configuracaoDanfe, string cIdToken, string csc, decimal troco, decimal totalPago, string font = null)"
            ],
            [
                74,
                "        {"
            ],
            [
                86,
                "        public void Imprimir(string nomeImpressora = null, string salvarArquivoPdfEm = null)"
            ],
            [
                87,
                "        {"
            ],
            [
                93,
                "            if (!string.IsNullOrEmpty(salvarArquivoPdfEm))"
            ],
            [
                94,
                "            {"
            ],
            [
                104,
                "        private void printCupom_PrintPage(object sender, PrintPageEventArgs e)"
            ],
            [
                105,
                "        {"
            ],
            [
                109,
                "        public void GerarJPEG(string filename)"
            ],
            [
                110,
                "        {"
            ],
            [
                113,
                "            using (Bitmap bmp = new Bitmap(300, 70000))"
            ],
            [
                114,
                "            {"
            ],
            [
                115,
                "                using (Graphics g = Graphics.FromImage(bmp))"
            ],
            [
                116,
                "                {"
            ],
            [
                123,
                "            using (Bitmap bmpFinal = new Bitmap(300, _y))"
            ],
            [
                124,
                "            {"
            ],
            [
                125,
                "                using (Graphics g = Graphics.FromImage(bmpFinal))"
            ],
            [
                126,
                "                {"
            ],
            [
                134,
                "        private void GerarNfCe(Graphics graphics)"
            ],
            [
                135,
                "        {"
            ],
            [
                145,
                "            if (_logo != null)"
            ],
            [
                146,
                "            {"
            ],
            [
                150,
                "            if (_logo == null)"
            ],
            [
                151,
                "            {"
            ],
            [
                155,
                "#region cabe\u00e7alho"
            ],
            [
                173,
                "#region conting\u00eancia"
            ],
            [
                174,
                "            if (_nfe.infNFe.ide.tpEmis != TipoEmissao.teNormal)"
            ],
            [
                175,
                "            {"
            ],
            [
                181,
                "#endregion"
            ],
            [
                185,
                "#region tabela de itens"
            ],
            [
                214,
                "#region preencher itens"
            ],
            [
                215,
                "            foreach (det detalhe in det)"
            ],
            [
                216,
                "            {"
            ],
            [
                265,
                "                if (valorDescontoItem > 0.0m)"
            ],
            [
                266,
                "                {"
            ],
            [
                281,
                "                if (valorAcrescimoItem > 0.0m)"
            ],
            [
                282,
                "                {"
            ],
            [
                296,
                "                if (valorDescontoItem > 0.0m || valorAcrescimoItem > 0.0m)"
            ],
            [
                297,
                "                {"
            ],
            [
                310,
                "#endregion"
            ],
            [
                340,
                "            if (totalDesconto > 0)"
            ],
            [
                341,
                "            {"
            ],
            [
                367,
                "            foreach (pag pag in _nfe.infNFe.pag)"
            ],
            [
                368,
                "            {"
            ],
            [
                374,
                "                foreach (var detPag in pag.detPag) {"
            ],
            [
                375,
                "                    AdicionaFormaPagamento(x, larguraLinhaMargemDireita, g, detPag.tPag, detPag.vPag);"
            ],
            [
                376,
                "                }"
            ],
            [
                381,
                "            if (_troco > 0)"
            ],
            [
                382,
                "            {"
            ],
            [
                391,
                "#endregion"
            ],
            [
                399,
                "            int textoConsulteChaveX = ((larguraLinha - textoConsulteChave.Medida.Largura)/2);"
            ],
            [
                407,
                "            int urlConsultaX = ((larguraLinha - urlConsulta.Medida.Largura)/2);"
            ],
            [
                415,
                "            int urlChaveX = ((larguraLinha - chave.Medida.Largura)/2);"
            ],
            [
                420,
                "#endregion"
            ],
            [
                429,
                "            int consumidorX = (larguraLinha - consumidor.Medida.Largura)/2;"
            ],
            [
                437,
                "            int dadosNfceX = (larguraLinha - dadosNfce.Medida.Largura)/2;"
            ],
            [
                442,
                "            if (_nfe.infNFe.ide.tpEmis == TipoEmissao.teNormal)"
            ],
            [
                443,
                "            {"
            ],
            [
                447,
                "                int protocoloAutorizacaoX = (larguraLinha - protocoloAutorizacao.Medida.Largura)/2;"
            ],
            [
                455,
                "                int dataAutorizacaoX = (larguraLinha - dataAutorizacao.Medida.Largura)/2;"
            ],
            [
                460,
                "            if (_nfe.infNFe.ide.tpEmis != TipoEmissao.teNormal)"
            ],
            [
                461,
                "            {"
            ],
            [
                471,
                "            int qrCodeImagemX = (larguraLinha - qrCodeImagem.Size.Width)/2;"
            ],
            [
                484,
                "            if (tributosIncidentes != 0)"
            ],
            [
                485,
                "            {"
            ],
            [
                491,
                "                int tributosTotaisX = (larguraLinha - tributosTotais.Medida.Largura)/2;"
            ],
            [
                505,
                "                if(_nfe.infNFe != null)"
            ],
            [
                509,
                "            if (!string.IsNullOrEmpty(observacoes))"
            ],
            [
                510,
                "            {"
            ],
            [
                533,
                "        private string EnderecoEmitente()"
            ],
            [
                534,
                "        {"
            ],
            [
                539,
                "            if (enderEmit.fone != null)"
            ],
            [
                540,
                "            {"
            ],
            [
                551,
                "            if (string.IsNullOrEmpty(enderEmit.nro))"
            ],
            [
                552,
                "            {"
            ],
            [
                556,
                "            if (!string.IsNullOrEmpty(enderEmit.nro))"
            ],
            [
                557,
                "            {"
            ],
            [
                572,
                "        private string CnpjERazaoSocial()"
            ],
            [
                573,
                "        {"
            ],
            [
                578,
                "            if (!string.IsNullOrEmpty(emitente.xNome))"
            ],
            [
                579,
                "            {"
            ],
            [
                583,
                "            if (!string.IsNullOrEmpty(emitente.xFant))"
            ],
            [
                584,
                "            {"
            ],
            [
                591,
                "        private static string ObtemUrlQrCode(NFeZeus nfce, string idToken, string csc)"
            ],
            [
                592,
                "        {"
            ],
            [
                601,
                "        private static string MontaMensagemDadosNfce(NFeZeus nfce)"
            ],
            [
                602,
                "        {"
            ],
            [
                615,
                "        private static string MontaMensagemConsumidor(dest dest)"
            ],
            [
                616,
                "        {"
            ],
            [
                619,
                "            if (dest == null || (string.IsNullOrEmpty(dest.CPF) && string.IsNullOrEmpty(dest.CNPJ)))"
            ],
            [
                620,
                "            {"
            ],
            [
                625,
                "            if (!string.IsNullOrEmpty(dest.idEstrangeiro))"
            ],
            [
                626,
                "            {"
            ],
            [
                632,
                "            if (!string.IsNullOrEmpty(dest.CPF))"
            ],
            [
                633,
                "            {"
            ],
            [
                638,
                "            if (!string.IsNullOrEmpty(dest.CNPJ))"
            ],
            [
                639,
                "            {"
            ],
            [
                644,
                "            if (!string.IsNullOrEmpty(dest.xNome))"
            ],
            [
                645,
                "            {"
            ],
            [
                689,
                "        private static string GeraChaveAcesso(NFeZeus nfce)"
            ],
            [
                690,
                "        {"
            ],
            [
                695,
                "            foreach (char c in chaveAcesso)"
            ],
            [
                696,
                "            {"
            ],
            [
                700,
                "                if (contaChaveAcesso == 4)"
            ],
            [
                701,
                "                {"
            ],
            [
                709,
                "        private static AdicionarTexto CriaHeaderColuna(string texto, Graphics graphics, int x, int y)"
            ],
            [
                710,
                "        {"
            ],
            [
                717,
                "        private static void LinhaHorizontal(Graphics g, int x, int y, int larguraLinha)"
            ],
            [
                718,
                "        {"
            ],
            [
                723,
                "            int y, int larguraLinha)"
            ],
            [
                724,
                "        {"
            ],
            [
                730,
                "            int posisaoXTexto = x + larguraLogo + (((larguraLinha - larguraLogo) - adicionarTexto.Medida.Largura)/2);"
            ],
            [
                736,
                "        private static int MensagemContingencia(Graphics g, int larguraLinha, int y)"
            ],
            [
                737,
                "        {"
            ],
            [
                739,
                "            int restoContingenciaTituloX = (larguraLinha - contingenciaTitulo.Medida.Largura)/2;"
            ],
            [
                744,
                "            int restoPendenteAutorizacaoTituloX = (larguraLinha - pendenteAutorizacaoTitulo.Medida.Largura)/2;"
            ],
            [
                750,
                "        private void CarregarXml(string xml)"
            ],
            [
                751,
                "        {"
            ],
            [
                752,
                "            try"
            ],
            [
                753,
                "            {"
            ],
            [
                757,
                "            }"
            ],
            [
                758,
                "            catch (Exception)"
            ],
            [
                759,
                "            {"
            ],
            [
                760,
                "                try"
            ],
            [
                761,
                "                {"
            ],
            [
                764,
                "                }"
            ],
            [
                765,
                "                catch (Exception)"
            ],
            [
                766,
                "                {"
            ],
            [
                773,
                "        private static string ObtemDescricao(FormaPagamento? formaPagamento)"
            ],
            [
                774,
                "        {"
            ],
            [
                775,
                "            switch (formaPagamento)"
            ],
            [
                776,
                "            {"
            ]
        ]
    },
    "num_lines_added": 81,
    "num_lines_removed": 138
}