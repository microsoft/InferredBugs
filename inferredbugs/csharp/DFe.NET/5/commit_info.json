{
    "hash": "76eefd0b704e2d0c368cf026901d851bb427ee63",
    "message": "configura\u00e7\u00e3o padrao de identa\u00e7\u00e3o do c\u00f3digo",
    "file_num_lines": 592,
    "diff_parsed": {
        "added": [
            [
                54,
                "namespace NFe.Danfe.Nativo.NFCe"
            ],
            [
                55,
                "{"
            ],
            [
                56,
                "    public class DanfeNativoNfce"
            ],
            [
                57,
                "    {"
            ],
            [
                68,
                "            decimal troco = decimal.Zero, decimal totalPago = decimal.Zero, string font = null)"
            ],
            [
                69,
                "        {"
            ],
            [
                73,
                "        private void Inicializa(string xml, ConfiguracaoDanfeNfce configuracaoDanfe, string cIdToken, string csc, decimal troco, decimal totalPago, string font = null)"
            ],
            [
                74,
                "        {"
            ],
            [
                86,
                "        public void Imprimir(string nomeImpressora = null, string salvarArquivoPdfEm = null)"
            ],
            [
                87,
                "        {"
            ],
            [
                93,
                "            if (!string.IsNullOrEmpty(salvarArquivoPdfEm))"
            ],
            [
                94,
                "            {"
            ],
            [
                104,
                "        private void printCupom_PrintPage(object sender, PrintPageEventArgs e)"
            ],
            [
                105,
                "        {"
            ],
            [
                109,
                "        public void GerarJPEG(string filename)"
            ],
            [
                110,
                "        {"
            ],
            [
                113,
                "            using (Bitmap bmp = new Bitmap(300, 70000))"
            ],
            [
                114,
                "            {"
            ],
            [
                115,
                "                using (Graphics g = Graphics.FromImage(bmp))"
            ],
            [
                116,
                "                {"
            ],
            [
                123,
                "            using (Bitmap bmpFinal = new Bitmap(300, _y))"
            ],
            [
                124,
                "            {"
            ],
            [
                125,
                "                using (Graphics g = Graphics.FromImage(bmpFinal))"
            ],
            [
                126,
                "                {"
            ],
            [
                134,
                "        private void GerarNfCe(Graphics graphics)"
            ],
            [
                135,
                "        {"
            ],
            [
                145,
                "            if (_logo != null)"
            ],
            [
                146,
                "            {"
            ],
            [
                150,
                "            if (_logo == null)"
            ],
            [
                151,
                "            {"
            ],
            [
                174,
                "            if (_nfe.infNFe.ide.tpEmis != TipoEmissao.teNormal)"
            ],
            [
                175,
                "            {"
            ],
            [
                215,
                "            foreach (det detalhe in det)"
            ],
            [
                216,
                "            {"
            ],
            [
                265,
                "                if (valorDescontoItem > 0.0m)"
            ],
            [
                266,
                "                {"
            ],
            [
                281,
                "                if (valorAcrescimoItem > 0.0m)"
            ],
            [
                282,
                "                {"
            ],
            [
                296,
                "                if (valorDescontoItem > 0.0m || valorAcrescimoItem > 0.0m)"
            ],
            [
                297,
                "                {"
            ],
            [
                340,
                "            if (totalDesconto > 0)"
            ],
            [
                341,
                "            {"
            ],
            [
                367,
                "            foreach (pag pag in _nfe.infNFe.pag)"
            ],
            [
                368,
                "            {"
            ],
            [
                375,
                "                    foreach (var detPag in pag.detPag)"
            ],
            [
                376,
                "                    {"
            ],
            [
                383,
                "            if (_troco > 0)"
            ],
            [
                384,
                "            {"
            ],
            [
                444,
                "            if (_nfe.infNFe.ide.tpEmis == TipoEmissao.teNormal)"
            ],
            [
                445,
                "            {"
            ],
            [
                462,
                "            if (_nfe.infNFe.ide.tpEmis != TipoEmissao.teNormal)"
            ],
            [
                463,
                "            {"
            ],
            [
                486,
                "            if (tributosIncidentes != 0)"
            ],
            [
                487,
                "            {"
            ],
            [
                511,
                "            if (!string.IsNullOrEmpty(observacoes))"
            ],
            [
                512,
                "            {"
            ],
            [
                524,
                "        private void AdicionaFormaPagamento(int x, int larguraLinhaMargemDireita, Graphics g, FormaPagamento? formaPagamento, decimal? vPag)"
            ],
            [
                525,
                "        {"
            ],
            [
                536,
                "        private string EnderecoEmitente()"
            ],
            [
                537,
                "        {"
            ],
            [
                542,
                "            if (enderEmit.fone != null)"
            ],
            [
                543,
                "            {"
            ],
            [
                554,
                "            if (string.IsNullOrEmpty(enderEmit.nro))"
            ],
            [
                555,
                "            {"
            ],
            [
                559,
                "            if (!string.IsNullOrEmpty(enderEmit.nro))"
            ],
            [
                560,
                "            {"
            ],
            [
                575,
                "        private string CnpjERazaoSocial()"
            ],
            [
                576,
                "        {"
            ],
            [
                581,
                "            if (!string.IsNullOrEmpty(emitente.xNome))"
            ],
            [
                582,
                "            {"
            ],
            [
                586,
                "            if (!string.IsNullOrEmpty(emitente.xFant))"
            ],
            [
                587,
                "            {"
            ],
            [
                594,
                "        private static string ObtemUrlQrCode(NFeZeus nfce, string idToken, string csc)"
            ],
            [
                595,
                "        {"
            ],
            [
                604,
                "        private static string MontaMensagemDadosNfce(NFeZeus nfce)"
            ],
            [
                605,
                "        {"
            ],
            [
                618,
                "        private static string MontaMensagemConsumidor(dest dest)"
            ],
            [
                619,
                "        {"
            ],
            [
                622,
                "            if (dest == null || (string.IsNullOrEmpty(dest.CPF) && string.IsNullOrEmpty(dest.CNPJ)))"
            ],
            [
                623,
                "            {"
            ],
            [
                628,
                "            if (!string.IsNullOrEmpty(dest.idEstrangeiro))"
            ],
            [
                629,
                "            {"
            ],
            [
                635,
                "            if (!string.IsNullOrEmpty(dest.CPF))"
            ],
            [
                636,
                "            {"
            ],
            [
                641,
                "            if (!string.IsNullOrEmpty(dest.CNPJ))"
            ],
            [
                642,
                "            {"
            ],
            [
                647,
                "            if (!string.IsNullOrEmpty(dest.xNome))"
            ],
            [
                648,
                "            {"
            ],
            [
                692,
                "        private static string GeraChaveAcesso(NFeZeus nfce)"
            ],
            [
                693,
                "        {"
            ],
            [
                698,
                "            foreach (char c in chaveAcesso)"
            ],
            [
                699,
                "            {"
            ],
            [
                703,
                "                if (contaChaveAcesso == 4)"
            ],
            [
                704,
                "                {"
            ],
            [
                712,
                "        private static AdicionarTexto CriaHeaderColuna(string texto, Graphics graphics, int x, int y)"
            ],
            [
                713,
                "        {"
            ],
            [
                720,
                "        private static void LinhaHorizontal(Graphics g, int x, int y, int larguraLinha)"
            ],
            [
                721,
                "        {"
            ],
            [
                726,
                "            int y, int larguraLinha)"
            ],
            [
                727,
                "        {"
            ],
            [
                739,
                "        private static int MensagemContingencia(Graphics g, int larguraLinha, int y)"
            ],
            [
                740,
                "        {"
            ],
            [
                753,
                "        private void CarregarXml(string xml)"
            ],
            [
                754,
                "        {"
            ],
            [
                755,
                "            try"
            ],
            [
                756,
                "            {"
            ],
            [
                760,
                "            }"
            ],
            [
                761,
                "            catch (Exception)"
            ],
            [
                762,
                "            {"
            ],
            [
                763,
                "                try"
            ],
            [
                764,
                "                {"
            ],
            [
                767,
                "                }"
            ],
            [
                768,
                "                catch (Exception)"
            ],
            [
                769,
                "                {"
            ],
            [
                776,
                "        private static string ObtemDescricao(FormaPagamento? formaPagamento)"
            ],
            [
                777,
                "        {"
            ],
            [
                778,
                "            switch (formaPagamento)"
            ],
            [
                779,
                "            {"
            ]
        ],
        "deleted": [
            [
                54,
                "namespace NFe.Danfe.Nativo.NFCe {"
            ],
            [
                55,
                "    public class DanfeNativoNfce {"
            ],
            [
                66,
                "            decimal troco = decimal.Zero, decimal totalPago = decimal.Zero, string font = null) {"
            ],
            [
                70,
                "        private void Inicializa(string xml, ConfiguracaoDanfeNfce configuracaoDanfe, string cIdToken, string csc, decimal troco, decimal totalPago, string font = null) {"
            ],
            [
                82,
                "        public void Imprimir(string nomeImpressora = null, string salvarArquivoPdfEm = null) {"
            ],
            [
                88,
                "            if (!string.IsNullOrEmpty(salvarArquivoPdfEm)) {"
            ],
            [
                98,
                "        private void printCupom_PrintPage(object sender, PrintPageEventArgs e) {"
            ],
            [
                102,
                "        public void GerarJPEG(string filename) {"
            ],
            [
                105,
                "            using (Bitmap bmp = new Bitmap(300, 70000)) {"
            ],
            [
                106,
                "                using (Graphics g = Graphics.FromImage(bmp)) {"
            ],
            [
                113,
                "            using (Bitmap bmpFinal = new Bitmap(300, _y)) {"
            ],
            [
                114,
                "                using (Graphics g = Graphics.FromImage(bmpFinal)) {"
            ],
            [
                122,
                "        private void GerarNfCe(Graphics graphics) {"
            ],
            [
                132,
                "            if (_logo != null) {"
            ],
            [
                136,
                "            if (_logo == null) {"
            ],
            [
                159,
                "            if (_nfe.infNFe.ide.tpEmis != TipoEmissao.teNormal) {"
            ],
            [
                199,
                "            foreach (det detalhe in det) {"
            ],
            [
                248,
                "                if (valorDescontoItem > 0.0m) {"
            ],
            [
                263,
                "                if (valorAcrescimoItem > 0.0m) {"
            ],
            [
                277,
                "                if (valorDescontoItem > 0.0m || valorAcrescimoItem > 0.0m) {"
            ],
            [
                320,
                "            if (totalDesconto > 0) {"
            ],
            [
                346,
                "            foreach (pag pag in _nfe.infNFe.pag) {"
            ],
            [
                353,
                "                    foreach (var detPag in pag.detPag) {"
            ],
            [
                360,
                "            if (_troco > 0) {"
            ],
            [
                420,
                "            if (_nfe.infNFe.ide.tpEmis == TipoEmissao.teNormal) {"
            ],
            [
                437,
                "            if (_nfe.infNFe.ide.tpEmis != TipoEmissao.teNormal) {"
            ],
            [
                460,
                "            if (tributosIncidentes != 0) {"
            ],
            [
                484,
                "            if (!string.IsNullOrEmpty(observacoes)) {"
            ],
            [
                496,
                "        private void AdicionaFormaPagamento(int x, int larguraLinhaMargemDireita, Graphics g, FormaPagamento? formaPagamento, decimal? vPag) {"
            ],
            [
                507,
                "        private string EnderecoEmitente() {"
            ],
            [
                512,
                "            if (enderEmit.fone != null) {"
            ],
            [
                523,
                "            if (string.IsNullOrEmpty(enderEmit.nro)) {"
            ],
            [
                527,
                "            if (!string.IsNullOrEmpty(enderEmit.nro)) {"
            ],
            [
                542,
                "        private string CnpjERazaoSocial() {"
            ],
            [
                547,
                "            if (!string.IsNullOrEmpty(emitente.xNome)) {"
            ],
            [
                551,
                "            if (!string.IsNullOrEmpty(emitente.xFant)) {"
            ],
            [
                558,
                "        private static string ObtemUrlQrCode(NFeZeus nfce, string idToken, string csc) {"
            ],
            [
                567,
                "        private static string MontaMensagemDadosNfce(NFeZeus nfce) {"
            ],
            [
                580,
                "        private static string MontaMensagemConsumidor(dest dest) {"
            ],
            [
                583,
                "            if (dest == null || (string.IsNullOrEmpty(dest.CPF) && string.IsNullOrEmpty(dest.CNPJ))) {"
            ],
            [
                588,
                "            if (!string.IsNullOrEmpty(dest.idEstrangeiro)) {"
            ],
            [
                594,
                "            if (!string.IsNullOrEmpty(dest.CPF)) {"
            ],
            [
                599,
                "            if (!string.IsNullOrEmpty(dest.CNPJ)) {"
            ],
            [
                604,
                "            if (!string.IsNullOrEmpty(dest.xNome)) {"
            ],
            [
                648,
                "        private static string GeraChaveAcesso(NFeZeus nfce) {"
            ],
            [
                653,
                "            foreach (char c in chaveAcesso) {"
            ],
            [
                657,
                "                if (contaChaveAcesso == 4) {"
            ],
            [
                665,
                "        private static AdicionarTexto CriaHeaderColuna(string texto, Graphics graphics, int x, int y) {"
            ],
            [
                672,
                "        private static void LinhaHorizontal(Graphics g, int x, int y, int larguraLinha) {"
            ],
            [
                677,
                "            int y, int larguraLinha) {"
            ],
            [
                689,
                "        private static int MensagemContingencia(Graphics g, int larguraLinha, int y) {"
            ],
            [
                702,
                "        private void CarregarXml(string xml) {"
            ],
            [
                703,
                "            try {"
            ],
            [
                707,
                "            } catch (Exception) {"
            ],
            [
                708,
                "                try {"
            ],
            [
                711,
                "                } catch (Exception) {"
            ],
            [
                718,
                "        private static string ObtemDescricao(FormaPagamento? formaPagamento) {"
            ],
            [
                719,
                "            switch (formaPagamento) {"
            ]
        ]
    },
    "num_lines_added": 118,
    "num_lines_removed": 58
}