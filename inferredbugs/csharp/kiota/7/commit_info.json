{
    "hash": "c321523877136e884e2ee2f4ff2c5928ad86ad86",
    "message": "- fixes an issue where relative path replacement would return the wrong value\n\nSigned-off-by: Vincent Biret <vibiret@microsoft.com>",
    "file_num_lines": 208,
    "diff_parsed": {
        "added": [
            [
                28,
                "            subNS.AddClass(messageClassDef);"
            ],
            [
                30,
                "                Name = messageClassDef.Name,"
            ],
            [
                32,
                "                    Name = messageClassDef.Name,"
            ],
            [
                36,
                "            ILanguageRefiner.Refine(new GenerationConfiguration { Language = GenerationLanguage.TypeScript, ClientNamespaceName = graphNS.Name }, root);"
            ],
            [
                54,
                "            ILanguageRefiner.Refine(new GenerationConfiguration { Language = GenerationLanguage.TypeScript, ClientNamespaceName = string.Empty }, root);"
            ],
            [
                58,
                "        public void ReplacesImportsInOtherTrunk() {"
            ],
            [
                59,
                "            var usedRangeNS1 = graphNS.AddNamespace($\"{graphNS.Name}.workbooks.workbook.tables.worksheet.pivotTables.usedRange\");"
            ],
            [
                60,
                "            var usedRangeNS2 = graphNS.AddNamespace($\"{graphNS.Name}.workbooks.workbook.worksheets.usedRange\");"
            ],
            [
                61,
                "            var workbookNS = graphNS.AddNamespace($\"{graphNS.Name}.workbooks.workbook\");"
            ],
            [
                62,
                "            var workbookRangeClassDef = new CodeClass(workbookNS) {"
            ],
            [
                63,
                "                Name = \"workbookRange\","
            ],
            [
                64,
                "            };"
            ],
            [
                65,
                "            workbookNS.AddClass(workbookRangeClassDef);"
            ],
            [
                66,
                "            var usedRangeClassDef1 = new CodeClass(usedRangeNS1) {"
            ],
            [
                67,
                "                Name = \"usedRangeRequestBuilder\","
            ],
            [
                68,
                "            };"
            ],
            [
                69,
                "            usedRangeNS1.AddClass(usedRangeClassDef1);"
            ],
            [
                70,
                ""
            ],
            [
                71,
                "            var declaration1 = usedRangeClassDef1.StartBlock as CodeClass.Declaration;"
            ],
            [
                72,
                "            declaration1.Usings.Add(new (usedRangeClassDef1) {"
            ],
            [
                73,
                "                Name = workbookNS.Name,"
            ],
            [
                74,
                "                Declaration = new (usedRangeClassDef1) {"
            ],
            [
                75,
                "                    Name = workbookRangeClassDef.Name,"
            ],
            [
                76,
                "                    TypeDefinition = workbookRangeClassDef,"
            ],
            [
                77,
                "                }"
            ],
            [
                78,
                "            });"
            ],
            [
                79,
                "            var usedRangeClassDef2 = new CodeClass(usedRangeNS2) {"
            ],
            [
                80,
                "                Name = \"usedRangeRequestBuilder\","
            ],
            [
                81,
                "            };"
            ],
            [
                82,
                "            usedRangeNS2.AddClass(usedRangeClassDef2);"
            ],
            [
                83,
                "            var declaration2 = usedRangeClassDef2.StartBlock as CodeClass.Declaration;"
            ],
            [
                84,
                "            declaration2.Usings.Add(new (usedRangeClassDef2) {"
            ],
            [
                85,
                "                Name = workbookNS.Name,"
            ],
            [
                86,
                "                Declaration = new (usedRangeClassDef2) {"
            ],
            [
                87,
                "                    Name = workbookRangeClassDef.Name,"
            ],
            [
                88,
                "                    TypeDefinition = workbookRangeClassDef,"
            ],
            [
                89,
                "                }"
            ],
            [
                90,
                "            });"
            ],
            [
                91,
                "            ILanguageRefiner.Refine(new GenerationConfiguration { Language = GenerationLanguage.TypeScript, ClientNamespaceName = graphNS.Name }, root);"
            ],
            [
                92,
                "            Assert.Equal(\"../../../../workbookRange\", declaration1.Usings.First().Declaration.Name);"
            ],
            [
                93,
                "            Assert.Equal(\"../../workbookRange\", declaration2.Usings.First().Declaration.Name);"
            ],
            [
                94,
                "        }"
            ],
            [
                95,
                "        [Fact]"
            ]
        ],
        "deleted": [
            [
                29,
                "                Name = \"graph\","
            ],
            [
                31,
                "                    Name = \"Message\","
            ],
            [
                35,
                "            ILanguageRefiner.Refine(new GenerationConfiguration { Language = GenerationLanguage.TypeScript }, root);"
            ],
            [
                53,
                "            ILanguageRefiner.Refine(new GenerationConfiguration { Language = GenerationLanguage.TypeScript }, root);"
            ]
        ]
    },
    "num_lines_added": 43,
    "num_lines_removed": 4
}