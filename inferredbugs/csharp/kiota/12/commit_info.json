{
    "hash": "47e0c270b6950fe5030c248c754a83129ca0780d",
    "message": "- assigns path parameters in constructor for dotnet\n\nSigned-off-by: Vincent Biret <vibiret@microsoft.com>",
    "file_num_lines": 24,
    "diff_parsed": {
        "added": [
            [
                17,
                "            conventions.AddParametersAssignment(writer, urlTemplateParametersProp, new (CodeTypeBase, string, string)[] {"
            ],
            [
                18,
                "                (codeElement.IndexType, codeElement.ParameterName, \"position\")"
            ],
            [
                19,
                "            });"
            ],
            [
                20,
                "            conventions.AddRequestBuilderBody(parentClass, returnType, writer, conventions.TempDictionaryVarName, \"return \");"
            ]
        ],
        "deleted": [
            [
                9,
                "        private const string TempDictionaryVarName = \"urlTplParams\";"
            ],
            [
                18,
                "            var stringSuffix = codeElement.IndexType.Name.Equals(\"string\", StringComparison.OrdinalIgnoreCase) ? string.Empty : \".ToString()\";"
            ],
            [
                19,
                "            writer.WriteLines($\"var {TempDictionaryVarName} = new {urlTemplateParametersProp.Type.Name}({urlTemplateParametersProp.Name.ToFirstCharacterUpperCase()});\","
            ],
            [
                20,
                "                                $\"{TempDictionaryVarName}.Add(\\\"{codeElement.ParameterName}\\\", position{stringSuffix});\");"
            ],
            [
                21,
                "            conventions.AddRequestBuilderBody(parentClass, returnType, writer, TempDictionaryVarName, \"return \");"
            ]
        ]
    },
    "num_lines_added": 4,
    "num_lines_removed": 5
}