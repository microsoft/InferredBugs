{
    "hash": "b601a2e025e553fe900ba66feeaa877cfd2c7bf7",
    "message": "Async support and associated tests",
    "file_num_lines": 168,
    "diff_parsed": {
        "added": [
            [
                12,
                "using System.Threading.Tasks;"
            ],
            [
                20,
                "\tpublic class MongoDbSet<TEntity> : IMongoDbSet<TEntity>, IAsyncMongoDbSet"
            ],
            [
                24,
                "\t\tprivate IAsyncDbEntityChangeWriter<TEntity> DbWriter { get; set; }"
            ],
            [
                25,
                "\t\tprivate IDbEntityReader<TEntity> DbReader { get; set; }"
            ],
            [
                65,
                "\t\tpublic MongoDbSet(IDbEntityReader<TEntity> reader, IAsyncDbEntityChangeWriter<TEntity> writer)"
            ],
            [
                67,
                "\t\t\tDbReader = reader;"
            ],
            [
                68,
                "\t\t\tDbWriter = writer;"
            ],
            [
                78,
                "\t\t\tDbWriter = new AsyncDbEntityWriter<TEntity>(database, entityMapper);"
            ],
            [
                79,
                "\t\t\tDbReader = new DbEntityReader<TEntity>(database, entityMapper);"
            ],
            [
                163,
                "\t\tprivate void CheckEntityValidation()"
            ],
            [
                177,
                "\t\t}"
            ],
            [
                178,
                ""
            ],
            [
                179,
                "\t\t/// <summary>"
            ],
            [
                180,
                "\t\t/// Writes all of the items in the changeset to the database."
            ],
            [
                181,
                "\t\t/// </summary>"
            ],
            [
                182,
                "\t\t/// <returns></returns>"
            ],
            [
                183,
                "\t\tpublic virtual void SaveChanges()"
            ],
            [
                184,
                "\t\t{"
            ],
            [
                185,
                "\t\t\tif (DbWriter == null)"
            ],
            [
                186,
                "\t\t\t{"
            ],
            [
                187,
                "\t\t\t\tthrow new InvalidOperationException(\"No IDbEntityWriter has been set.\");"
            ],
            [
                188,
                "\t\t\t}"
            ],
            [
                189,
                ""
            ],
            [
                190,
                "\t\t\tChangeTracker.DetectChanges();"
            ],
            [
                191,
                "\t\t\tCheckEntityValidation();"
            ],
            [
                192,
                "\t\t\tDbWriter.WriteChanges(ChangeTracker);"
            ],
            [
                193,
                "\t\t}"
            ],
            [
                194,
                ""
            ],
            [
                195,
                "\t\t/// <summary>"
            ],
            [
                196,
                "\t\t/// Writes all of the items in the changeset to the database."
            ],
            [
                197,
                "\t\t/// </summary>"
            ],
            [
                198,
                "\t\t/// <returns></returns>"
            ],
            [
                199,
                "\t\tpublic async Task SaveChangesAsync()"
            ],
            [
                200,
                "\t\t{"
            ],
            [
                201,
                "\t\t\tif (DbWriter == null)"
            ],
            [
                202,
                "\t\t\t{"
            ],
            [
                203,
                "\t\t\t\tthrow new InvalidOperationException(\"No IDbEntityWriter has been set.\");"
            ],
            [
                204,
                "\t\t\t}"
            ],
            [
                206,
                "\t\t\tChangeTracker.DetectChanges();"
            ],
            [
                207,
                "\t\t\tCheckEntityValidation();"
            ],
            [
                208,
                "\t\t\tawait DbWriter.WriteChangesAsync(ChangeTracker);"
            ],
            [
                215,
                "\t\t\tif (DbReader == null)"
            ],
            [
                220,
                "\t\t\tvar queryable = DbReader.AsQueryable() as IMongoFrameworkQueryable<TEntity, TEntity>;"
            ]
        ],
        "deleted": [
            [
                19,
                "\tpublic class MongoDbSet<TEntity> : IMongoDbSet<TEntity>"
            ],
            [
                23,
                "\t\tprivate IDbEntityChangeWriter<TEntity> dbWriter { get; set; }"
            ],
            [
                24,
                "\t\tprivate IDbEntityReader<TEntity> dbReader { get; set; }"
            ],
            [
                64,
                "\t\tpublic MongoDbSet(IDbEntityReader<TEntity> reader, IDbEntityChangeWriter<TEntity> writer)"
            ],
            [
                66,
                "\t\t\tdbReader = reader;"
            ],
            [
                67,
                "\t\t\tdbWriter = writer;"
            ],
            [
                77,
                "\t\t\tdbWriter = new DbEntityWriter<TEntity>(database, entityMapper);"
            ],
            [
                78,
                "\t\t\tdbReader = new DbEntityReader<TEntity>(database, entityMapper);"
            ],
            [
                162,
                "\t\t/// <summary>"
            ],
            [
                163,
                "\t\t/// Writes all of the items in the changeset to the database."
            ],
            [
                164,
                "\t\t/// </summary>"
            ],
            [
                165,
                "\t\tpublic virtual void SaveChanges()"
            ],
            [
                167,
                "\t\t\tif (dbWriter == null)"
            ],
            [
                168,
                "\t\t\t{"
            ],
            [
                169,
                "\t\t\t\tthrow new InvalidOperationException(\"No IDbEntityWriter has been set.\");"
            ],
            [
                170,
                "\t\t\t}"
            ],
            [
                171,
                ""
            ],
            [
                172,
                "\t\t\tChangeTracker.DetectChanges();"
            ],
            [
                173,
                ""
            ],
            [
                187,
                "\t\t\tdbWriter.WriteChanges(ChangeTracker);"
            ],
            [
                194,
                "\t\t\tif (dbReader == null)"
            ],
            [
                199,
                "\t\t\tvar queryable = dbReader.AsQueryable() as IMongoFrameworkQueryable<TEntity, TEntity>;"
            ]
        ]
    },
    "num_lines_added": 43,
    "num_lines_removed": 22
}