{
    "hash": "70a5a5a0b37a093ec284d52b1b4c6b5129839abf",
    "message": "feat(tenpayv3): \u65b0\u589e\u4ece\u8bc1\u4e66\u5bfc\u51fa\u8bc1\u4e66\u5e8f\u5217\u53f7\u7684\u5de5\u5177\u7c7b\u65b9\u6cd5",
    "file_num_lines": 176,
    "diff_parsed": {
        "added": [
            [
                42,
                "        /// <param name=\"privateKey\">PKCS#8 \u79c1\u94a5\uff08PEM \u683c\u5f0f\uff09\u3002</param>"
            ],
            [
                76,
                "        /// <param name=\"publicKey\">PKCS#8 \u516c\u94a5\uff08PEM \u683c\u5f0f\uff09\u3002</param>"
            ],
            [
                95,
                "        /// <param name=\"certificate\">\u8bc1\u4e66\uff08PEM \u683c\u5f0f\uff09\u3002</param>"
            ],
            [
                129,
                "        /// <param name=\"privateKey\">PKCS#8 \u79c1\u94a5\uff08PEM \u683c\u5f0f\uff09\u3002</param>"
            ],
            [
                161,
                "        /// <param name=\"publicKey\">PKCS#8 \u516c\u94a5\uff08PEM \u683c\u5f0f\uff09\u3002</param>"
            ],
            [
                178,
                "        /// <param name=\"certificate\">\u8bc1\u4e66\uff08PEM \u683c\u5f0f\uff09\u3002</param>"
            ],
            [
                193,
                "        /// <para>\u4ece CRT/CER \u8bc1\u4e66\u4e2d\u5bfc\u51fa PKCS#8 \u516c\u94a5\u3002</para>"
            ],
            [
                199,
                "        /// <param name=\"certificate\">\u8bc1\u4e66\uff08PEM \u683c\u5f0f\uff09\u3002</param>"
            ],
            [
                200,
                "        /// <returns>PKCS#8 \u516c\u94a5\uff08PEM \u683c\u5f0f\uff09\u3002</returns>"
            ],
            [
                203,
                "            if (certificate == null) throw new ArgumentNullException(nameof(certificate));"
            ],
            [
                204,
                ""
            ],
            [
                215,
                "        /// <summary>"
            ],
            [
                216,
                "        /// <para>\u4ece CRT/CER \u8bc1\u4e66\u4e2d\u5bfc\u51fa\u8bc1\u4e66\u5e8f\u5217\u53f7\u3002</para>"
            ],
            [
                217,
                "        /// </summary>"
            ],
            [
                218,
                "        /// <param name=\"certificate\">\u8bc1\u4e66\uff08PEM \u683c\u5f0f\uff09\u3002</param>"
            ],
            [
                219,
                "        /// <returns>\u8bc1\u4e66\u5e8f\u5217\u53f7\u3002</returns>"
            ],
            [
                220,
                "        public static string ExportSerialNumber(string certificate)"
            ],
            [
                221,
                "        {"
            ],
            [
                222,
                "            if (certificate == null) throw new ArgumentNullException(nameof(certificate));"
            ],
            [
                223,
                ""
            ],
            [
                224,
                "            X509Certificate cert = ParseX509Certificate(certificate);"
            ],
            [
                225,
                "            return cert.CertificateStructure.SerialNumber.Value.ToString();"
            ],
            [
                226,
                "        }"
            ],
            [
                227,
                ""
            ],
            [
                247,
                "        {"
            ],
            [
                248,
                "            X509Certificate cert = ParseX509Certificate(certificate);"
            ],
            [
                249,
                "            return (RsaKeyParameters)cert.GetPublicKey();"
            ],
            [
                250,
                "        }"
            ],
            [
                251,
                ""
            ],
            [
                252,
                "        private static X509Certificate ParseX509Certificate(string certificate)"
            ],
            [
                257,
                "                return (X509Certificate)pemReader.ReadObject();"
            ]
        ],
        "deleted": [
            [
                42,
                "        /// <param name=\"privateKey\">PKCS#8 \u79c1\u94a5\uff08pem \u683c\u5f0f\uff09\u3002</param>"
            ],
            [
                76,
                "        /// <param name=\"publicKey\">PKCS#8 \u516c\u94a5\uff08pem \u683c\u5f0f\uff09\u3002</param>"
            ],
            [
                95,
                "        /// <param name=\"certificate\">\u8bc1\u4e66\uff08cer \u683c\u5f0f\uff09\u3002</param>"
            ],
            [
                129,
                "        /// <param name=\"privateKey\">PKCS#8 \u79c1\u94a5\uff08pem \u683c\u5f0f\uff09\u3002</param>"
            ],
            [
                161,
                "        /// <param name=\"publicKey\">PKCS#8 \u516c\u94a5\uff08pem \u683c\u5f0f\uff09\u3002</param>"
            ],
            [
                178,
                "        /// <param name=\"certificate\">\u8bc1\u4e66\uff08cer \u683c\u5f0f\uff09\u3002</param>"
            ],
            [
                193,
                "        /// <para>\u4ece CRT/CER \u8bc1\u4e66\u4e2d\u63d0\u53d6 PKCS#8 \u516c\u94a5\u3002</para>"
            ],
            [
                199,
                "        /// <param name=\"certificate\">\u8bc1\u4e66\uff08cer \u683c\u5f0f\uff09\u3002</param>"
            ],
            [
                200,
                "        /// <returns>PKCS#8 \u516c\u94a5\uff08pem \u683c\u5f0f\uff09\u3002</returns>"
            ],
            [
                236,
                "                X509Certificate cert = (X509Certificate)pemReader.ReadObject();"
            ],
            [
                237,
                "                return (RsaKeyParameters)cert.GetPublicKey();"
            ]
        ]
    },
    "num_lines_added": 31,
    "num_lines_removed": 11
}