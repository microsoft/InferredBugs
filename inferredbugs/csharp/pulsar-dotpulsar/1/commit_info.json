{
    "hash": "2541edfc3ba77a09cf0b265ad38a2b7ee3f0e5bf",
    "message": "Compression wired up and seems to work. Needs more testing.",
    "file_num_lines": 102,
    "diff_parsed": {
        "added": [
            [
                18,
                "    using DotPulsar.Internal.Compression;"
            ],
            [
                23,
                "    using System.Linq;"
            ],
            [
                65,
                ""
            ],
            [
                66,
                "            ICompressorFactory? compressorFactory = null;"
            ],
            [
                67,
                ""
            ],
            [
                68,
                "            if (options.CompressionType != CompressionType.None)"
            ],
            [
                69,
                "            {"
            ],
            [
                70,
                "                var compressionType = (Internal.PulsarApi.CompressionType) options.CompressionType;"
            ],
            [
                71,
                "                compressorFactory = CompressionFactories.CompressorFactories().SingleOrDefault(f => f.CompressionType == compressionType);"
            ],
            [
                72,
                "                if (compressorFactory is null)"
            ],
            [
                73,
                "                    throw new CompressionException($\"Support for {compressionType} compression was not found\");"
            ],
            [
                74,
                "            }"
            ],
            [
                75,
                ""
            ],
            [
                78,
                "            var factory = new ProducerChannelFactory(correlationId, _processManager, _connectionPool, executor, options, compressorFactory);"
            ],
            [
                97,
                "            var factory = new ConsumerChannelFactory(correlationId, _processManager, _connectionPool, executor, options, CompressionFactories.DecompressorFactories());"
            ],
            [
                116,
                "            var factory = new ReaderChannelFactory(correlationId, _processManager, _connectionPool, executor, options, CompressionFactories.DecompressorFactories());"
            ]
        ],
        "deleted": [
            [
                65,
                "            var factory = new ProducerChannelFactory(correlationId, _processManager, _connectionPool, executor, options);"
            ],
            [
                84,
                "            var factory = new ConsumerChannelFactory(correlationId, _processManager, _connectionPool, executor, options);"
            ],
            [
                103,
                "            var factory = new ReaderChannelFactory(correlationId, _processManager, _connectionPool, executor, options);"
            ]
        ]
    },
    "num_lines_added": 16,
    "num_lines_removed": 3
}