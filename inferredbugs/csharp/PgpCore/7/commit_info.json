{
    "hash": "c7dfc8208bfe077e58c5c81a5d88a1f98fed61e3",
    "message": "Adding a few more tests. Then fixing those tests. If the file is not signed the message is never a signature list. In that case it throws. Checks against the one pass signature list.",
    "file_num_lines": 893,
    "diff_parsed": {
        "added": [
            [
                937,
                ""
            ],
            [
                955,
                "            var publicKey = Utilities.ReadPublicKey(publicKeyStream);"
            ],
            [
                957,
                "            PgpObjectFactory plainFact = null;"
            ],
            [
                965,
                "            if (message is PgpCompressedData cData)"
            ],
            [
                967,
                "                using (Stream compDataIn = cData.GetDataStream())"
            ],
            [
                968,
                "                {"
            ],
            [
                969,
                "                    plainFact = new PgpObjectFactory(compDataIn);"
            ],
            [
                970,
                "                }"
            ],
            [
                971,
                ""
            ],
            [
                975,
                "            if (message is PgpOnePassSignatureList pgpOnePassSignatureList)"
            ],
            [
                977,
                "                PgpOnePassSignature pgpOnePassSignature = pgpOnePassSignatureList[0];"
            ],
            [
                979,
                "                var verified = publicKey.KeyId == pgpOnePassSignature.KeyId || publicKey.GetKeySignatures().Cast<PgpSignature>().Select(x => x.KeyId).Contains(pgpOnePassSignature.KeyId);"
            ],
            [
                980,
                "                if (verified == false)"
            ],
            [
                981,
                "                    throw new PgpException(\"Failed to verify file.\");"
            ],
            [
                983,
                "                message = plainFact.NextPgpObject();"
            ],
            [
                985,
                "            else"
            ],
            [
                986,
                "                throw new PgpException(\"File was not signed.\");"
            ],
            [
                988,
                "            if (message is PgpLiteralData ld)"
            ],
            [
                989,
                "            {"
            ]
        ],
        "deleted": [
            [
                937,
                ""
            ],
            [
                952,
                "            var publicKey = Utilities.ReadPublicKey(publicKeyStream);"
            ],
            [
                953,
                "            if (pbe == null || pbe.KeyId != publicKey.KeyId)"
            ],
            [
                954,
                "                throw new PgpException(\"Failed to verify file.\");"
            ],
            [
                955,
                ""
            ],
            [
                959,
                "            PgpObjectFactory plainFact = null;"
            ],
            [
                968,
                "            if (message is PgpOnePassSignatureList)"
            ],
            [
                973,
                "            if (message is PgpCompressedData)"
            ],
            [
                975,
                "                PgpCompressedData cData = (PgpCompressedData)message;"
            ],
            [
                976,
                "                PgpObjectFactory of = null;"
            ],
            [
                978,
                "                using (Stream compDataIn = cData.GetDataStream())"
            ],
            [
                979,
                "                {"
            ],
            [
                980,
                "                    of = new PgpObjectFactory(compDataIn);"
            ],
            [
                981,
                "                }"
            ],
            [
                983,
                "                message = of.NextPgpObject();"
            ],
            [
                984,
                "                if (message is PgpOnePassSignatureList)"
            ],
            [
                985,
                "                {"
            ],
            [
                986,
                "                    message = of.NextPgpObject();"
            ],
            [
                987,
                "                    PgpLiteralData Ld = null;"
            ],
            [
                988,
                "                    Ld = (PgpLiteralData)message;"
            ],
            [
                989,
                "                    Stream unc = Ld.GetInputStream();"
            ],
            [
                990,
                "                    Streams.PipeAll(unc, outputStream);"
            ],
            [
                991,
                "                }"
            ],
            [
                992,
                "                else"
            ],
            [
                993,
                "                {"
            ],
            [
                994,
                "                    PgpLiteralData Ld = null;"
            ],
            [
                995,
                "                    Ld = (PgpLiteralData)message;"
            ],
            [
                996,
                "                    Stream unc = Ld.GetInputStream();"
            ],
            [
                997,
                "                    Streams.PipeAll(unc, outputStream);"
            ],
            [
                998,
                "                }"
            ],
            [
                1000,
                "            else if (message is PgpLiteralData)"
            ],
            [
                1001,
                "            {"
            ],
            [
                1002,
                "                PgpLiteralData ld = (PgpLiteralData)message;"
            ],
            [
                1003,
                "                string outFileName = ld.FileName;"
            ]
        ]
    },
    "num_lines_added": 19,
    "num_lines_removed": 34
}