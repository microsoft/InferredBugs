{
    "hash": "e92d7ccebd98ed8a77a90d039e8d46357be92c76",
    "message": "add stepup variables and methods, add user auth",
    "file_num_lines": 425,
    "diff_parsed": {
        "added": [
            [
                90,
                "        public uint StepUp"
            ],
            [
                91,
                "        {"
            ],
            [
                92,
                "            get => (uint)_stepUp.Value;"
            ],
            [
                93,
                "            set"
            ],
            [
                94,
                "            {"
            ],
            [
                95,
                "                _stepUp.Value = value;"
            ],
            [
                96,
                "                _stepUp.Timestamp = DateTime.Now;"
            ],
            [
                97,
                "                _stepUp.ClearChangeMasks(SystemContext, false);"
            ],
            [
                98,
                "            }"
            ],
            [
                99,
                "        }"
            ],
            [
                100,
                ""
            ],
            [
                185,
                "                    _stepUp = CreateBaseVariable(dataFolder, \"StepUp\", \"StepUp\", BuiltInType.UInt32, ValueRanks.Scalar, AccessLevels.CurrentReadOrWrite, \"Constantly increasing value\");"
            ],
            [
                186,
                "                    _alternatingBoolean = CreateBaseVariable(dataFolder, \"AlternatingBoolean\", \"AlternatingBoolean\", BuiltInType.Boolean, ValueRanks.Scalar, AccessLevels.CurrentRead, \"Alternating boolean value\");"
            ],
            [
                187,
                "                    _randomSignedInt32 = CreateBaseVariable(dataFolder, \"RandomSignedInt32\", \"RandomSignedInt32\", BuiltInType.Int32, ValueRanks.Scalar, AccessLevels.CurrentRead, \"Random signed 32 bit integer value\");"
            ],
            [
                188,
                "                    _randomUnsignedInt32 = CreateBaseVariable(dataFolder, \"RandomUnsignedInt32\", \"RandomUnsignedInt32\", BuiltInType.UInt32, ValueRanks.Scalar, AccessLevels.CurrentRead, \"Random unsigned 32 bit integer value\");"
            ],
            [
                189,
                "                    _spikeData = CreateBaseVariable(dataFolder, \"SpikeData\", \"SpikeData\", BuiltInType.Double, ValueRanks.Scalar, AccessLevels.CurrentRead, \"Value which generates randomly spikes\");"
            ],
            [
                190,
                "                    _dipData = CreateBaseVariable(dataFolder, \"DipData\", \"DipData\", BuiltInType.Double, ValueRanks.Scalar, AccessLevels.CurrentRead, \"Value which generates randomly dips\");"
            ],
            [
                191,
                "                    _posTrendData = CreateBaseVariable(dataFolder, \"PositiveTrendData\", \"PositiveTrendData\", BuiltInType.Float, ValueRanks.Scalar, AccessLevels.CurrentRead, \"Value with a slow positive trend\");"
            ],
            [
                192,
                "                    _negTrendData = CreateBaseVariable(dataFolder, \"NegativeTrendData\", \"NegativeTrendData\", BuiltInType.Float, ValueRanks.Scalar, AccessLevels.CurrentRead, \"Value with a slow negative trend\");"
            ],
            [
                195,
                "                    MethodState resetTrendMethod = CreateMethod(methodsFolder, \"ResetTrend\", \"ResetTrend\", \"Reset the trend values to their baseline value\");"
            ],
            [
                196,
                "                    SetResetTrendMethodProperties(ref resetTrendMethod);"
            ],
            [
                197,
                "                    MethodState resetStepUpMethod = CreateMethod(methodsFolder, \"ResetStepUp\", \"ResetStepUp\", \"Resets the StepUp counter to 0\");"
            ],
            [
                198,
                "                    SetResetStepUpMethodProperties(ref resetStepUpMethod);"
            ],
            [
                199,
                "                    MethodState startStepUpMethod = CreateMethod(methodsFolder, \"StartStepUp\", \"StartStepUp\", \"Starts the StepUp counter\");"
            ],
            [
                200,
                "                    SetStartStepUpMethodProperties(ref startStepUpMethod);"
            ],
            [
                201,
                "                    MethodState stopStepUpMethod = CreateMethod(methodsFolder, \"StopStepUp\", \"StopStepUp\", \"Stops the StepUp counter\");"
            ],
            [
                202,
                "                    SetStopStepUpMethodProperties(ref stopStepUpMethod);"
            ],
            [
                214,
                "        /// Sets properies of the ResetTrend method."
            ],
            [
                215,
                "        /// </summary>"
            ],
            [
                216,
                "        private void SetResetTrendMethodProperties(ref MethodState method)"
            ],
            [
                217,
                "        {"
            ],
            [
                218,
                "            method.OnCallMethod = new GenericMethodCalledEventHandler(OnResetTrendCall);"
            ],
            [
                219,
                "        }"
            ],
            [
                220,
                ""
            ],
            [
                221,
                "        /// <summary>"
            ],
            [
                222,
                "        /// Sets properies of the ResetStepUp method."
            ],
            [
                223,
                "        /// </summary>"
            ],
            [
                224,
                "        private void SetResetStepUpMethodProperties(ref MethodState method)"
            ],
            [
                225,
                "        {"
            ],
            [
                226,
                "            method.OnCallMethod = new GenericMethodCalledEventHandler(OnResetStepUpCall);"
            ],
            [
                227,
                "        }"
            ],
            [
                228,
                ""
            ],
            [
                229,
                "        /// <summary>"
            ],
            [
                230,
                "        /// Sets properies of the StartStepUp method."
            ],
            [
                231,
                "        /// </summary>"
            ],
            [
                232,
                "        private void SetStartStepUpMethodProperties(ref MethodState method)"
            ],
            [
                233,
                "        {"
            ],
            [
                234,
                "            method.OnCallMethod = new GenericMethodCalledEventHandler(OnStartStepUpCall);"
            ],
            [
                235,
                "        }"
            ],
            [
                236,
                ""
            ],
            [
                237,
                "        /// <summary>"
            ],
            [
                238,
                "        /// Sets properies of the StopStepUp method."
            ],
            [
                240,
                "        private void SetStopStepUpMethodProperties(ref MethodState method)"
            ],
            [
                242,
                "            method.OnCallMethod = new GenericMethodCalledEventHandler(OnStopStepUpCall);"
            ],
            [
                248,
                "        private BaseDataVariableState CreateBaseVariable(NodeState parent, string path, string name, BuiltInType dataType, int valueRank, byte accessLevel, string description)"
            ],
            [
                250,
                "            return CreateBaseVariable(parent, path, name, (uint)dataType, valueRank, accessLevel, description);"
            ],
            [
                256,
                "        private BaseDataVariableState CreateBaseVariable(NodeState parent, string path, string name, NodeId dataType, int valueRank, byte accessLevel, string description)"
            ],
            [
                271,
                "            variable.UserAccessLevel = accessLevel;"
            ],
            [
                276,
                "            variable.Description = new LocalizedText(description);"
            ],
            [
                377,
                "            variable.UserAccessLevel = accessLevel;"
            ],
            [
                451,
                "        private MethodState CreateMethod(NodeState parent, string path, string name, string description)"
            ],
            [
                463,
                "                UserExecutable = true,"
            ],
            [
                464,
                "                Description = new LocalizedText(description)"
            ],
            [
                504,
                "        private ServiceResult OnResetTrendCall(ISystemContext context, MethodState method, IList<object> inputArguments, IList<object> outputArguments)"
            ],
            [
                507,
                "            Logger.Debug($\"ResetTrend method called\");"
            ],
            [
                508,
                "            return ServiceResult.Good;"
            ],
            [
                509,
                "        }"
            ],
            [
                510,
                ""
            ],
            [
                511,
                "        /// <summary>"
            ],
            [
                512,
                "        /// Method to reset the stepup value. Executes synchronously."
            ],
            [
                513,
                "        /// </summary>"
            ],
            [
                514,
                "        private ServiceResult OnResetStepUpCall(ISystemContext context, MethodState method, IList<object> inputArguments, IList<object> outputArguments)"
            ],
            [
                515,
                "        {"
            ],
            [
                516,
                "            Program.PlcSimulation.ResetStepUpData();"
            ],
            [
                517,
                "            Logger.Debug($\"ResetStepUp method called\");"
            ],
            [
                518,
                "            return ServiceResult.Good;"
            ],
            [
                519,
                "        }"
            ],
            [
                520,
                ""
            ],
            [
                521,
                "        /// <summary>"
            ],
            [
                522,
                "        /// Method to start the stepup value. Executes synchronously."
            ],
            [
                523,
                "        /// </summary>"
            ],
            [
                524,
                "        private ServiceResult OnStartStepUpCall(ISystemContext context, MethodState method, IList<object> inputArguments, IList<object> outputArguments)"
            ],
            [
                525,
                "        {"
            ],
            [
                526,
                "            Program.PlcSimulation.StartStepUp();"
            ],
            [
                527,
                "            Logger.Debug($\"StartStepUp method called\");"
            ],
            [
                528,
                "            return ServiceResult.Good;"
            ],
            [
                529,
                "        }"
            ],
            [
                530,
                ""
            ],
            [
                531,
                "        /// <summary>"
            ],
            [
                532,
                "        /// Method to stop the stepup value. Executes synchronously."
            ],
            [
                533,
                "        /// </summary>"
            ],
            [
                534,
                "        private ServiceResult OnStopStepUpCall(ISystemContext context, MethodState method, IList<object> inputArguments, IList<object> outputArguments)"
            ],
            [
                535,
                "        {"
            ],
            [
                536,
                "            Program.PlcSimulation.StopStepUp();"
            ],
            [
                537,
                "            Logger.Debug($\"StopStepUp method called\");"
            ],
            [
                541,
                "        private BaseDataVariableState _stepUp = null;"
            ]
        ],
        "deleted": [
            [
                174,
                "                    _alternatingBoolean = CreateBaseVariable(dataFolder, \"AlternatingBoolean\", \"AlternatingBoolean\", BuiltInType.Boolean, ValueRanks.Scalar, AccessLevels.CurrentRead);"
            ],
            [
                175,
                "                    _randomSignedInt32 = CreateBaseVariable(dataFolder, \"RandomSignedInt32\", \"RandomSignedInt32\", BuiltInType.Int32, ValueRanks.Scalar, AccessLevels.CurrentRead);"
            ],
            [
                176,
                "                    _randomUnsignedInt32 = CreateBaseVariable(dataFolder, \"RandomUnsignedInt32\", \"RandomUnsignedInt32\", BuiltInType.UInt32, ValueRanks.Scalar, AccessLevels.CurrentRead);"
            ],
            [
                177,
                "                    _spikeData = CreateBaseVariable(dataFolder, \"SpikeData\", \"SpikeData\", BuiltInType.Double, ValueRanks.Scalar, AccessLevels.CurrentRead);"
            ],
            [
                178,
                "                    _dipData = CreateBaseVariable(dataFolder, \"DipData\", \"DipData\", BuiltInType.Double, ValueRanks.Scalar, AccessLevels.CurrentRead);"
            ],
            [
                179,
                "                    _posTrendData = CreateBaseVariable(dataFolder, \"PositiveTrendData\", \"PositiveTrendData\", BuiltInType.Float, ValueRanks.Scalar, AccessLevels.CurrentRead);"
            ],
            [
                180,
                "                    _negTrendData = CreateBaseVariable(dataFolder, \"NegativeTrendData\", \"NegativeTrendData\", BuiltInType.Float, ValueRanks.Scalar, AccessLevels.CurrentRead);"
            ],
            [
                183,
                ""
            ],
            [
                184,
                "                    MethodState resetMethod = CreateMethod(methodsFolder, \"Reset\", \"Reset\");"
            ],
            [
                185,
                "                    SetResetMethodProperties(ref resetMethod);"
            ],
            [
                197,
                "        /// Sets properies of the Reset method."
            ],
            [
                199,
                "        private void SetResetMethodProperties(ref MethodState method)"
            ],
            [
                201,
                "            method.OnCallMethod = new GenericMethodCalledEventHandler(OnResetCall);"
            ],
            [
                207,
                "        private BaseDataVariableState CreateBaseVariable(NodeState parent, string path, string name, BuiltInType dataType, int valueRank, byte accessLevel)"
            ],
            [
                209,
                "            return CreateBaseVariable(parent, path, name, (uint)dataType, valueRank, accessLevel);"
            ],
            [
                215,
                "        private BaseDataVariableState CreateBaseVariable(NodeState parent, string path, string name, NodeId dataType, int valueRank, byte accessLevel)"
            ],
            [
                230,
                "            variable.UserAccessLevel = AccessLevels.CurrentReadOrWrite;"
            ],
            [
                335,
                "            variable.UserAccessLevel = AccessLevels.CurrentReadOrWrite;"
            ],
            [
                409,
                "        private MethodState CreateMethod(NodeState parent, string path, string name)"
            ],
            [
                421,
                "                UserExecutable = true"
            ],
            [
                461,
                "        private ServiceResult OnResetCall(ISystemContext context, MethodState method, IList<object> inputArguments, IList<object> outputArguments)"
            ],
            [
                464,
                "            Logger.Debug($\"Reset method called\");"
            ]
        ]
    },
    "num_lines_added": 96,
    "num_lines_removed": 22
}