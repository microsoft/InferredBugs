{
    "hash": "b0c9880dc3904b450de5a9f0c9c46ff285c40292",
    "message": "- Started on Bulk API (IndexAsync<T>(IEnumerable<T>))\n-- Zero copy version (that supports deletes planned next).",
    "file_num_lines": 260,
    "diff_parsed": {
        "added": [
            [
                29,
                "\t\t\tWebResponse response = null;"
            ],
            [
                32,
                "\t\t\t\tresponse = connection.GetResponse();"
            ],
            [
                34,
                "\t\t\t\tresponse.Close();"
            ],
            [
                37,
                "\t\t\tcatch (WebException e)"
            ],
            [
                46,
                "\t\t\t\treturn new ConnectionStatus(new ConnectionError() { HttpStatusCode = ((HttpWebResponse)e.Response).StatusCode, Message = e.Message, OriginalException = e, Type = ConnectionErrorType.Server });"
            ],
            [
                49,
                "\t\t\tfinally"
            ],
            [
                50,
                "\t\t\t{"
            ],
            [
                51,
                "\t\t\t\tif (response != null)"
            ],
            [
                52,
                "\t\t\t\t\tresponse.Close();"
            ],
            [
                53,
                "\t\t\t}"
            ],
            [
                54,
                ""
            ],
            [
                61,
                "\t\t\tStream postStream = null;"
            ],
            [
                62,
                "\t\t\tWebResponse response = null;"
            ],
            [
                67,
                "\t\t\t\tpostStream = connection.GetRequestStream();"
            ],
            [
                70,
                "\t\t\t\tresponse = connection.GetResponse();"
            ],
            [
                72,
                "\t\t\t\tresponse.Close();"
            ],
            [
                75,
                "\t\t\tcatch (WebException e)"
            ],
            [
                82,
                "\t\t\t\telse"
            ],
            [
                92,
                "\t\t\tfinally"
            ],
            [
                93,
                "\t\t\t{"
            ],
            [
                94,
                "\t\t\t\tif (postStream != null)"
            ],
            [
                95,
                "\t\t\t\t\tpostStream.Close();"
            ],
            [
                96,
                "\t\t\t\tif (response != null)"
            ],
            [
                97,
                "\t\t\t\t\tresponse.Close();"
            ],
            [
                98,
                "\t\t\t}"
            ],
            [
                157,
                "\t\t\t\t\tnew WaitOrTimerCallback(ThreadTimeoutCallback),"
            ],
            [
                175,
                "\t\tprivate static void ThreadTimeoutCallback(object state, bool timedOut)"
            ],
            [
                193,
                "\t\t\tStream responseStream = null;"
            ],
            [
                199,
                "\t\t\t\tresponseStream = state.Response.GetResponseStream();"
            ],
            [
                209,
                "\t\t\t\tresponseStream.Close();"
            ],
            [
                210,
                ""
            ],
            [
                216,
                "\t\t\tfinally"
            ],
            [
                217,
                "\t\t\t{"
            ],
            [
                218,
                "\t\t\t\tif (responseStream != null)"
            ],
            [
                219,
                "\t\t\t\t\tresponseStream.Close();"
            ],
            [
                220,
                "\t\t\t}"
            ],
            [
                225,
                "\t\t\tStream responseStream = null;"
            ],
            [
                229,
                "\t\t\t\tresponseStream = state.StreamResponse;"
            ],
            [
                233,
                "\t\t\t\t\tstate.RequestData.Append(Encoding.UTF8.GetString(state.BufferRead, 0, read));"
            ],
            [
                252,
                "\t\t\tfinally"
            ],
            [
                253,
                "\t\t\t{"
            ],
            [
                254,
                "\t\t\t\tif (responseStream != null)"
            ],
            [
                255,
                "\t\t\t\t\tresponseStream.Close();"
            ],
            [
                256,
                "\t\t\t\tallDone.Set();"
            ],
            [
                257,
                "\t\t\t}"
            ],
            [
                258,
                ""
            ],
            [
                269,
                "\t\t\tmyReq.Timeout = 1000 * 60; // 1 minute timeout."
            ],
            [
                270,
                "\t\t\tmyReq.ReadWriteTimeout = 1000 * 60; // 1 minute timeout."
            ]
        ],
        "deleted": [
            [
                31,
                "\t\t\t\tvar response = connection.GetResponse();"
            ],
            [
                35,
                "\t\t\tcatch (WebException e)"
            ],
            [
                44,
                "\t\t\t\treturn new ConnectionStatus(new ConnectionError() { HttpStatusCode = ((HttpWebResponse)e.Response).StatusCode, Message = e.Message, OriginalException = e, Type = ConnectionErrorType.Server });"
            ],
            [
                57,
                "\t\t\t\tvar postStream = connection.GetRequestStream();"
            ],
            [
                60,
                "\t\t\t\tvar response = connection.GetResponse();"
            ],
            [
                64,
                "\t\t\tcatch (WebException e)"
            ],
            [
                71,
                "\t\t\t\telse"
            ],
            [
                139,
                "\t\t\t\t\tnew WaitOrTimerCallback(TimeoutCallback),"
            ],
            [
                157,
                "\t\tprivate static void TimeoutCallback(object state, bool timedOut)"
            ],
            [
                180,
                "\t\t\t\tStream responseStream = state.Response.GetResponseStream();"
            ],
            [
                181,
                ""
            ],
            [
                191,
                "\t\t\t\treturn;"
            ],
            [
                204,
                ""
            ],
            [
                205,
                "\t\t\t\tStream responseStream = state.StreamResponse;"
            ],
            [
                209,
                "\t\t\t\t\tstate.RequestData.Append(Encoding.ASCII.GetString(state.BufferRead, 0, read));"
            ],
            [
                216,
                "\t\t\t\t\tstate.Response.Close();"
            ],
            [
                229,
                "\t\t\tallDone.Set();"
            ]
        ]
    },
    "num_lines_added": 48,
    "num_lines_removed": 17
}