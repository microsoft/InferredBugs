{
    "hash": "0b6c13681fd33007f8f566ec7d4dab395bb39214",
    "message": "1. Set default dropout to 0\n2. Move feed forward out of decoder\n3. Support named weights",
    "file_num_lines": 213,
    "diff_parsed": {
        "added": [
            [
                22,
                "        private MultiProcessorNetworkWrapper<IFeedForwardLayer> m_encoderFFLayer; //The feed forward layers over devices after all layers in encoder"
            ],
            [
                100,
                "            m_encoderFFLayer = new MultiProcessorNetworkWrapper<IFeedForwardLayer>(new FeedForwardLayer(\"FeedForward\", contextDim, modelMetaData.Vocab.TargetWordSize, dropoutRatio: 0.0f, deviceId: raDeviceIds.GetNextItem(), isTrainable: true), DeviceIds);"
            ],
            [
                139,
                "                    m_encoderFFLayer.GetNetworkOnDevice(deviceIdIdx),"
            ],
            [
                214,
                "            (IEncoder encoder, IWeightTensor srcEmbedding, IFeedForwardLayer encoderFFLayer, IWeightTensor posEmbedding, IWeightTensor segmentEmbedding) = GetNetworksOnDeviceAt(deviceIdIdx);"
            ],
            [
                249,
                "            IWeightTensor ffLayer = encoderFFLayer.Process(clsWeightTensor, batchSize, computeGraph);"
            ]
        ],
        "deleted": [
            [
                22,
                "        private MultiProcessorNetworkWrapper<IFeedForwardLayer> m_decoderFFLayer; //The feed forward layers over devices after all layers in encoder"
            ],
            [
                100,
                "            m_decoderFFLayer = new MultiProcessorNetworkWrapper<IFeedForwardLayer>(new FeedForwardLayer(\"FeedForward\", contextDim, modelMetaData.Vocab.TargetWordSize, dropoutRatio: 0.0f, deviceId: raDeviceIds.GetNextItem(), isTrainable: true), DeviceIds);"
            ],
            [
                139,
                "                    m_decoderFFLayer.GetNetworkOnDevice(deviceIdIdx),"
            ],
            [
                214,
                "            (IEncoder encoder, IWeightTensor srcEmbedding, IFeedForwardLayer decoderFFLayer, IWeightTensor posEmbedding, IWeightTensor segmentEmbedding) = GetNetworksOnDeviceAt(deviceIdIdx);"
            ],
            [
                249,
                "            IWeightTensor ffLayer = decoderFFLayer.Process(clsWeightTensor, batchSize, computeGraph);"
            ]
        ]
    },
    "num_lines_added": 5,
    "num_lines_removed": 5
}