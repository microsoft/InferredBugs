{
    "hash": "c6b251752be5b8bc61229d0ca461282903b31d16",
    "message": "Bug fix",
    "file_num_lines": 212,
    "diff_parsed": {
        "added": [
            [
                182,
                "        // Add event handler for monitoring"
            ],
            [
                198,
                "        if (ep != null)"
            ],
            [
                200,
                "            TimeSpan ts = DateTime.Now - ep.StartDateTime;"
            ],
            [
                201,
                "            double sentPerMin = 0;"
            ],
            [
                202,
                "            double wordPerSec = 0;"
            ],
            [
                203,
                "            if (ts.TotalMinutes > 0)"
            ],
            [
                204,
                "            {"
            ],
            [
                205,
                "                sentPerMin = ep.ProcessedSentencesInTotal / ts.TotalMinutes;"
            ],
            [
                206,
                "            }"
            ],
            [
                208,
                "            if (ts.TotalSeconds > 0)"
            ],
            [
                209,
                "            {"
            ],
            [
                210,
                "                wordPerSec = ep.ProcessedWordsInTotal / ts.TotalSeconds;"
            ],
            [
                211,
                "            }"
            ],
            [
                213,
                "            Logger.WriteLine($\"Update = {ep.Update}, Epoch = {ep.Epoch}, LR = {ep.LearningRate:F6}, AvgCost = {ep.AvgCostInTotal:F4}, Sent = {ep.ProcessedSentencesInTotal}, SentPerMin = {sentPerMin:F}, WordPerSec = {wordPerSec:F}\");"
            ],
            [
                215,
                "            Assert.IsFalse(double.IsNaN(ep.AvgCostInTotal));"
            ],
            [
                216,
                "        }"
            ],
            [
                217,
                "        else"
            ],
            [
                218,
                "        {"
            ],
            [
                219,
                "            throw new ArgumentNullException(\"The input event argument e is not a CostEventArg.\");"
            ],
            [
                220,
                "        }"
            ],
            [
                227,
                "        if (ep != null)"
            ],
            [
                229,
                "            TimeSpan ts = DateTime.Now - ep.StartDateTime;"
            ],
            [
                230,
                "            double sentPerMin = 0;"
            ],
            [
                231,
                "            double wordPerSec = 0;"
            ],
            [
                232,
                "            if (ts.TotalMinutes > 0)"
            ],
            [
                233,
                "            {"
            ],
            [
                234,
                "                sentPerMin = ep.ProcessedSentencesInTotal / ts.TotalMinutes;"
            ],
            [
                235,
                "            }"
            ],
            [
                237,
                "            if (ts.TotalSeconds > 0)"
            ],
            [
                238,
                "            {"
            ],
            [
                239,
                "                wordPerSec = ep.ProcessedWordsInTotal / ts.TotalSeconds;"
            ],
            [
                240,
                "            }"
            ],
            [
                242,
                "            Logger.WriteLine($\"Update = {ep.Update}, Epoch = {ep.Epoch}, LR = {ep.LearningRate:F6}, AvgCost = {ep.AvgCostInTotal:F4}, Sent = {ep.ProcessedSentencesInTotal}, SentPerMin = {sentPerMin:F}, WordPerSec = {wordPerSec:F}\");"
            ],
            [
                244,
                "            Assert.IsFalse(double.IsNaN(ep.AvgCostInTotal));"
            ],
            [
                246,
                "            Assert.IsTrue(ep.AvgCostInTotal < lastEpochAvgCost);"
            ],
            [
                247,
                "            lastEpochAvgCost = ep.AvgCostInTotal;"
            ],
            [
                248,
                "        }"
            ],
            [
                249,
                "        else"
            ],
            [
                250,
                "        {"
            ],
            [
                251,
                "            throw new ArgumentNullException(\"The input event argument e is not a CostEventArg.\");"
            ],
            [
                252,
                "        }"
            ]
        ],
        "deleted": [
            [
                182,
                "        // Add event handler for monitoring"
            ],
            [
                198,
                ""
            ],
            [
                199,
                "        TimeSpan ts = DateTime.Now - ep.StartDateTime;"
            ],
            [
                200,
                "        double sentPerMin = 0;"
            ],
            [
                201,
                "        double wordPerSec = 0;"
            ],
            [
                202,
                "        if (ts.TotalMinutes > 0)"
            ],
            [
                203,
                "        {"
            ],
            [
                204,
                "            sentPerMin = ep.ProcessedSentencesInTotal / ts.TotalMinutes;"
            ],
            [
                205,
                "        }"
            ],
            [
                206,
                ""
            ],
            [
                207,
                "        if (ts.TotalSeconds > 0)"
            ],
            [
                209,
                "            wordPerSec = ep.ProcessedWordsInTotal / ts.TotalSeconds;"
            ],
            [
                210,
                "        }"
            ],
            [
                212,
                "        Logger.WriteLine($\"Update = {ep.Update}, Epoch = {ep.Epoch}, LR = {ep.LearningRate:F6}, AvgCost = {ep.AvgCostInTotal:F4}, Sent = {ep.ProcessedSentencesInTotal}, SentPerMin = {sentPerMin:F}, WordPerSec = {wordPerSec:F}\");"
            ],
            [
                214,
                "        Assert.IsFalse(double.IsNaN(ep.AvgCostInTotal));"
            ],
            [
                222,
                "        TimeSpan ts = DateTime.Now - ep.StartDateTime;"
            ],
            [
                223,
                "        double sentPerMin = 0;"
            ],
            [
                224,
                "        double wordPerSec = 0;"
            ],
            [
                225,
                "        if (ts.TotalMinutes > 0)"
            ],
            [
                227,
                "            sentPerMin = ep.ProcessedSentencesInTotal / ts.TotalMinutes;"
            ],
            [
                228,
                "        }"
            ],
            [
                230,
                "        if (ts.TotalSeconds > 0)"
            ],
            [
                231,
                "        {"
            ],
            [
                232,
                "            wordPerSec = ep.ProcessedWordsInTotal / ts.TotalSeconds;"
            ],
            [
                233,
                "        }"
            ],
            [
                235,
                "        Logger.WriteLine($\"Update = {ep.Update}, Epoch = {ep.Epoch}, LR = {ep.LearningRate:F6}, AvgCost = {ep.AvgCostInTotal:F4}, Sent = {ep.ProcessedSentencesInTotal}, SentPerMin = {sentPerMin:F}, WordPerSec = {wordPerSec:F}\");"
            ],
            [
                237,
                "        Assert.IsFalse(double.IsNaN(ep.AvgCostInTotal));"
            ],
            [
                239,
                "        Assert.IsTrue(ep.AvgCostInTotal < lastEpochAvgCost);"
            ],
            [
                240,
                "        lastEpochAvgCost = ep.AvgCostInTotal;"
            ]
        ]
    },
    "num_lines_added": 41,
    "num_lines_removed": 29
}