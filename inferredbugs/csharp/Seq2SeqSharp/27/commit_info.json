{
    "hash": "9c897983ba14cd3844da27715484a9ce27b2b5f0",
    "message": "Add mean operator and new unit test",
    "file_num_lines": 181,
    "diff_parsed": {
        "added": [
            [
                1,
                "\ufeff// Copyright (c) Zhongkai Fu. All rights reserved."
            ],
            [
                2,
                "// https://github.com/zhongkaifu/Seq2SeqSharp"
            ],
            [
                3,
                "//"
            ],
            [
                4,
                "// This file is part of Seq2SeqSharp."
            ],
            [
                5,
                "//"
            ],
            [
                6,
                "// Seq2SeqSharp is licensed under the BSD-3-Clause license found in the LICENSE file in the root directory of this source tree."
            ],
            [
                7,
                "//"
            ],
            [
                8,
                "// Seq2SeqSharp is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of"
            ],
            [
                9,
                "// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the BSD-3-Clause License for more details."
            ],
            [
                10,
                ""
            ],
            [
                11,
                "using AdvUtils;"
            ],
            [
                165,
                "    [TestMethod]"
            ],
            [
                166,
                "    public void TestMean()"
            ],
            [
                167,
                "    {"
            ],
            [
                168,
                "        int batchSize = 5;"
            ],
            [
                169,
                "        int vocabSize = 20;"
            ],
            [
                170,
                "        TensorAllocator.InitDevices(ProcessorTypeEnums.CPU, new int[] { 0 });"
            ],
            [
                171,
                "        var graph = new ComputeGraphTensor(new WeightTensorFactory(), 0, true);"
            ],
            [
                172,
                ""
            ],
            [
                173,
                "        var tensorA = BuildRandomTensor(shape: new long[2] { batchSize, vocabSize }, name: \"tensorA\", isTrainable: true);"
            ],
            [
                174,
                "        var tensorMean = graph.Mean(tensorA, 1);"
            ],
            [
                175,
                ""
            ],
            [
                176,
                "        var tensorWeights = tensorA.ToWeightArray();"
            ],
            [
                177,
                "        var tensorMeanWegiths = tensorMean.ToWeightArray();"
            ],
            [
                178,
                ""
            ],
            [
                179,
                ""
            ],
            [
                180,
                "        for (int i = 0; i < batchSize; i++)"
            ],
            [
                181,
                "        {"
            ],
            [
                182,
                "            float sum = 0.0f;"
            ],
            [
                183,
                "            for (int j = 0; j < vocabSize; j++)"
            ],
            [
                184,
                "            {"
            ],
            [
                185,
                "                sum += tensorWeights[i * vocabSize + j];"
            ],
            [
                186,
                "            }"
            ],
            [
                187,
                "            float mean = sum / vocabSize;"
            ],
            [
                188,
                ""
            ],
            [
                189,
                "            float mean1 = (float)Math.Round(mean, 5);"
            ],
            [
                190,
                "            float mean2 = (float)Math.Round(tensorMeanWegiths[i], 5);"
            ],
            [
                191,
                ""
            ],
            [
                192,
                "            Logger.WriteLine($\"row '{i}': mean from .net core = '{mean1}', mean from mean operator = '{mean2}'\");"
            ],
            [
                193,
                ""
            ],
            [
                194,
                "            Assert.IsTrue(mean1 == mean2);"
            ],
            [
                195,
                "        }"
            ],
            [
                196,
                "    }"
            ],
            [
                197,
                ""
            ],
            [
                198,
                ""
            ],
            [
                221,
                "        double r1 = Math.Round(sum, 5);"
            ],
            [
                222,
                "        double r2 = Math.Round(sum2, 5);"
            ],
            [
                223,
                ""
            ],
            [
                224,
                ""
            ],
            [
                225,
                "        Logger.WriteLine($\"sum = '{sum}', sum2 = '{sum2}', r1 = '{r1}', r2 = '{r2}'\");"
            ],
            [
                227,
                "        Assert.IsTrue(r1 == r2);"
            ]
        ],
        "deleted": [
            [
                1,
                "\ufeffusing AdvUtils;"
            ],
            [
                177,
                "        Assert.IsTrue(Math.Round(sum, 5) == Math.Round(sum2, 5));"
            ]
        ]
    },
    "num_lines_added": 51,
    "num_lines_removed": 2
}