{
    "hash": "87c0d785ba7b246e75d7cd5779d92adcbbd0bd3d",
    "message": "1. Bug fix: Valid corpus uses inconsistent shuffle type than settings\n2. Bug fix: The last valid mini-batch gets missed during validation\n3. Code refactoring",
    "file_num_lines": 521,
    "diff_parsed": {
        "added": [
            [
                159,
                "            m_srcEmbedding = new MultiProcessorNetworkWrapper<IWeightTensor>(new WeightTensor(new long[2] { modelMetaData.Vocab.SourceWordSize, modelMetaData.SrcEmbeddingDim }, raDeviceIds.GetNextItem(), normType: NormType.Uniform, fanOut: true, name: \"SrcEmbeddings\", isTrainable: m_isSrcEmbTrainable), DeviceIds);"
            ],
            [
                162,
                "            m_tgtEmbedding = new MultiProcessorNetworkWrapper<IWeightTensor>(new WeightTensor(new long[2] { modelMetaData.Vocab.TargetWordSize, modelMetaData.TgtEmbeddingDim }, raDeviceIds.GetNextItem(), normType: NormType.Uniform, fanOut: true, name: \"TgtEmbeddings\", isTrainable: m_isTgtEmbTrainable), DeviceIds);"
            ]
        ],
        "deleted": [
            [
                159,
                "            m_srcEmbedding = new MultiProcessorNetworkWrapper<IWeightTensor>(new WeightTensor(new long[2] { modelMetaData.Vocab.SourceWordSize, modelMetaData.SrcEmbeddingDim }, raDeviceIds.GetNextItem(), normal: NormType.Uniform, fanOut: false, name: \"SrcEmbeddings\", isTrainable: m_isSrcEmbTrainable), DeviceIds);"
            ],
            [
                162,
                "            m_tgtEmbedding = new MultiProcessorNetworkWrapper<IWeightTensor>(new WeightTensor(new long[2] { modelMetaData.Vocab.TargetWordSize, modelMetaData.TgtEmbeddingDim }, raDeviceIds.GetNextItem(), normal: NormType.Uniform, fanOut: false, name: \"TgtEmbeddings\", isTrainable: m_isTgtEmbTrainable), DeviceIds);"
            ]
        ]
    },
    "num_lines_added": 2,
    "num_lines_removed": 2
}