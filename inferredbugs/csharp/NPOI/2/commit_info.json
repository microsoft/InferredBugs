{
    "hash": "0e8b8fd370b7a60258ac824b9ae05a556d7c1663",
    "message": "Fix column width calculations for AutoSizeColumn",
    "file_num_lines": 420,
    "diff_parsed": {
        "added": [
            [
                39,
                "        private const char defaultChar = '0';"
            ],
            [
                303,
                ""
            ],
            [
                308,
                "            Font windowsFont = IFont2Font(font);"
            ],
            [
                314,
                "            using (Graphics g = Graphics.FromHwnd(IntPtr.Zero))"
            ],
            [
                346,
                "                            SizeF sf = MeasureString(g, txt, windowsFont);"
            ],
            [
                350,
                "                            width = Math.Max(width, (w / colspan / defaultCharWidth) + cell.CellStyle.Indention);"
            ],
            [
                360,
                "                            double w = Math.Round(MeasureString(g, txt, windowsFont).Width, 0, MidpointRounding.ToEven);"
            ],
            [
                361,
                "                            width = Math.Max(width, (w / colspan / defaultCharWidth) + cell.CellStyle.Indention);"
            ],
            [
                407,
                "                            SizeF sf = MeasureString(g, txt, windowsFont);"
            ],
            [
                411,
                "                            width = Math.Max(width, (w / colspan / defaultCharWidth) + cell.CellStyle.Indention);"
            ],
            [
                418,
                "                            double w = Math.Round(MeasureString(g, txt, windowsFont).Width, 0, MidpointRounding.ToEven);"
            ],
            [
                419,
                "                            width = Math.Max(width, (w / colspan / defaultCharWidth) + cell.CellStyle.Indention);"
            ],
            [
                454,
                "            int defaultCharWidth = getDefaultCharWidth(wb);"
            ],
            [
                493,
                "            int defaultCharWidth = getDefaultCharWidth(wb);"
            ],
            [
                657,
                "            IFont defaultFont = wb.GetFontAt(0);"
            ],
            [
                658,
                "            Font font = IFont2Font(defaultFont);"
            ],
            [
                659,
                "            using (Graphics g = Graphics.FromHwnd(IntPtr.Zero))"
            ],
            [
                660,
                "            {"
            ],
            [
                661,
                "                double width = MeasureString(g, new string(defaultChar, 1), font).Width;"
            ],
            [
                662,
                "                return (int)Math.Round(width, 0, MidpointRounding.ToEven);"
            ],
            [
                663,
                "            }"
            ],
            [
                664,
                "        }"
            ],
            [
                665,
                ""
            ],
            [
                666,
                "        private static SizeF MeasureString(Graphics g, string text, Font font)"
            ],
            [
                667,
                "        {"
            ],
            [
                668,
                "            var size = g.MeasureString(text, font);"
            ],
            [
                670,
                "            // MeasureString adds padding so we do this to remove it"
            ],
            [
                671,
                "            // https://stackoverflow.com/a/11708952/1409101"
            ],
            [
                672,
                "            var actualWidth = g.MeasureString(text + text, font).Width - size.Width;"
            ],
            [
                673,
                "            return new SizeF(actualWidth, size.Height);"
            ]
        ],
        "deleted": [
            [
                39,
                "        private static char defaultChar = '0';"
            ],
            [
                303,
                "            IFont defaultFont = wb.GetFontAt((short)0);"
            ],
            [
                304,
                "            Font windowsFont = IFont2Font(defaultFont);"
            ],
            [
                314,
                "            using (Bitmap bmp = new Bitmap(1, 1))"
            ],
            [
                315,
                "            using (Graphics g = Graphics.FromImage(bmp))"
            ],
            [
                327,
                "                        windowsFont = IFont2Font(font);"
            ],
            [
                348,
                "                            SizeF sf = g.MeasureString(txt, windowsFont);"
            ],
            [
                352,
                "                            width = Math.Max(width, (w / colspan / defaultCharWidth) * 2 + cell.CellStyle.Indention);"
            ],
            [
                362,
                "                            double w = Math.Round(g.MeasureString(txt, windowsFont).Width, 0, MidpointRounding.ToEven);"
            ],
            [
                363,
                "                            width = Math.Max(width, (w / colspan / defaultCharWidth) * 2 + cell.CellStyle.Indention);"
            ],
            [
                391,
                "                        windowsFont = IFont2Font(font);"
            ],
            [
                410,
                "                            SizeF sf = g.MeasureString(txt, windowsFont);"
            ],
            [
                414,
                "                            width = Math.Max(width, (w / colspan / defaultCharWidth) * 2 + cell.CellStyle.Indention);"
            ],
            [
                421,
                "                            double w = Math.Round(g.MeasureString(txt, windowsFont).Width, 0, MidpointRounding.ToEven);"
            ],
            [
                422,
                "                            width = Math.Max(width, (w * 1.0 / colspan / defaultCharWidth) * 2 + cell.CellStyle.Indention);"
            ],
            [
                452,
                "            IFont defaultFont = wb.GetFontAt((short)0);"
            ],
            [
                458,
                "            Font font = IFont2Font(defaultFont);"
            ],
            [
                459,
                "            int defaultCharWidth = TextRenderer.MeasureText(\"\" + new String(defaultChar, 1), font).Width;"
            ],
            [
                494,
                "            IFont defaultFont = wb.GetFontAt((short)0);"
            ],
            [
                495,
                ""
            ],
            [
                500,
                "            Font font = IFont2Font(defaultFont);"
            ],
            [
                501,
                "            int defaultCharWidth = TextRenderer.MeasureText(\"\" + new String(defaultChar, 1), font).Width;"
            ],
            [
                665,
                "            //TODO: Implement!"
            ],
            [
                666,
                "            return 1;"
            ],
            [
                667,
                "            //throw new NotImplementedException();"
            ],
            [
                668,
                "            //IFont defaultFont = wb.GetFontAt(0);"
            ],
            [
                670,
                "            //IAttributedString str = new AttributedString(defaultChar.ToString());"
            ],
            [
                671,
                "            //copyAttributes(defaultFont, str, 0, 1);"
            ],
            [
                672,
                "            //ITextLayout layout = new TextLayout(str.getIterator(), fontRenderContext);"
            ],
            [
                673,
                "            //return (int)layout.getAdvance();"
            ]
        ]
    },
    "num_lines_added": 30,
    "num_lines_removed": 30
}