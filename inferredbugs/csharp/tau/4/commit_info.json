{
    "hash": "e88d00ca4eab00c24c67574a7fbe640f2f0af53c",
    "message": "Simplify graph creation",
    "file_num_lines": 174,
    "diff_parsed": {
        "added": [
            [
                25,
                "        private readonly float angleRange;"
            ],
            [
                145,
                "            createBars();"
            ],
            [
                148,
                "        private void createBars()"
            ],
            [
                150,
                "            float radius = Height * 2;"
            ],
            [
                167,
                "            for (int i = 0; i < bins.Length; i++)"
            ],
            [
                168,
                "                barsContainer.Add(new Bar"
            ],
            [
                171,
                "                    Position = Extensions.GetCircularPosition(radius - 17, (i * bin_per_angle) - (angleRange / 2)) + new Vector2(0, radius),"
            ],
            [
                173,
                "                });"
            ]
        ],
        "deleted": [
            [
                12,
                "using osu.Framework.Layout;"
            ],
            [
                26,
                "        private float radius;"
            ],
            [
                27,
                "        private float angleRange;"
            ],
            [
                29,
                "        private readonly LayoutValue layout = new LayoutValue(Invalidation.DrawSize);"
            ],
            [
                36,
                ""
            ],
            [
                37,
                "            AddLayout(layout);"
            ],
            [
                150,
                "            radius = (Height * 4) / 2;"
            ],
            [
                151,
                "            barsContainer.AddRange(calculateBars());"
            ],
            [
                152,
                "        }"
            ],
            [
                153,
                ""
            ],
            [
                154,
                "        protected override void Update()"
            ],
            [
                155,
                "        {"
            ],
            [
                156,
                "            base.Update();"
            ],
            [
                157,
                ""
            ],
            [
                158,
                "            if (hitEvents == null || hitEvents.Count == 0)"
            ],
            [
                159,
                "                return;"
            ],
            [
                160,
                ""
            ],
            [
                161,
                "            if (!layout.IsValid)"
            ],
            [
                162,
                "            {"
            ],
            [
                163,
                "                foreach (Bar bar in barsContainer)"
            ],
            [
                164,
                "                {"
            ],
            [
                165,
                "                    var pos = Extensions.GetCircularPosition(radius - 17, (bar.Index * bin_per_angle) - (angleRange / 2));"
            ],
            [
                166,
                "                    pos.Y += radius;"
            ],
            [
                167,
                ""
            ],
            [
                168,
                "                    bar.Position = pos;"
            ],
            [
                169,
                "                }"
            ],
            [
                170,
                ""
            ],
            [
                171,
                "                layout.Validate();"
            ],
            [
                172,
                "            }"
            ],
            [
                175,
                "        private Bar[] calculateBars()"
            ],
            [
                192,
                "            var bars = new Bar[totalDistributionBins];"
            ],
            [
                194,
                "            for (int i = 0; i < bars.Length; i++)"
            ],
            [
                195,
                "                bars[i] = new Bar"
            ],
            [
                199,
                "                };"
            ],
            [
                200,
                ""
            ],
            [
                201,
                "            return bars;"
            ]
        ]
    },
    "num_lines_added": 8,
    "num_lines_removed": 36
}