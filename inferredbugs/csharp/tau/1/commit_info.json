{
    "hash": "e1dda8ef1a75df524f130218f810eabb2a3f0448",
    "message": "Implement new ResumeOverlay design instead",
    "file_num_lines": 123,
    "diff_parsed": {
        "added": [
            [
                3,
                "using osu.Framework.Bindables;"
            ],
            [
                8,
                "using osu.Framework.Input.Events;"
            ],
            [
                10,
                "using osu.Game.Rulesets.Tau.UI.Cursor;"
            ],
            [
                20,
                "        private TauClickToResumeContainer clickContainer;"
            ],
            [
                21,
                "        private Container container;"
            ],
            [
                22,
                "        private TauCursor.AbsoluteCursor absoluteCursor;"
            ],
            [
                24,
                "        protected override string Message => \"Move the cursor to the highlighted area.\";"
            ],
            [
                34,
                "            Add(container = new Container"
            ],
            [
                39,
                "                Size = new Vector2(4),"
            ],
            [
                42,
                "                Alpha = 0f,"
            ],
            [
                45,
                "                    clickContainer = new TauClickToResumeContainer(angleRange)"
            ],
            [
                51,
                "                        Current = new BindableDouble((angleRange / 360) * 0.25f),"
            ],
            [
                52,
                "                        ResumeRequested = Resume"
            ],
            [
                56,
                ""
            ],
            [
                57,
                "            Add(absoluteCursor = new TauCursor.AbsoluteCursor"
            ],
            [
                58,
                "            {"
            ],
            [
                59,
                "                Alpha = 0"
            ],
            [
                60,
                "            });"
            ],
            [
                63,
                "        protected override void PopIn()"
            ],
            [
                65,
                "            base.PopIn();"
            ],
            [
                66,
                ""
            ],
            [
                67,
                "            absoluteCursor.Show();"
            ],
            [
                68,
                "            clickContainer.Rotation = ScreenSpaceDrawQuad.Centre.GetDegreesFromPosition(ToScreenSpace(GameplayCursor.ActiveCursor.DrawPosition)) - ((angleRange * 0.25f) / 2);"
            ],
            [
                69,
                "            container.FadeIn(200);"
            ],
            [
                70,
                "        }"
            ],
            [
                72,
                "        protected override void PopOut()"
            ],
            [
                73,
                "        {"
            ],
            [
                74,
                "            base.PopOut();"
            ],
            [
                75,
                "            container.FadeOut(200);"
            ],
            [
                76,
                "            absoluteCursor.Hide();"
            ],
            [
                77,
                "        }"
            ],
            [
                79,
                "        private class TauClickToResumeContainer : CircularProgress, IKeyBindingHandler<TauAction>"
            ],
            [
                80,
                "        {"
            ],
            [
                81,
                "            public override bool Contains(Vector2 screenSpacePos) => CheckForValidation(ScreenSpaceDrawQuad.Centre.GetDegreesFromPosition(screenSpacePos) - 90);"
            ],
            [
                83,
                "            public bool CheckForValidation(float angle)"
            ],
            [
                85,
                "                var rotation = Rotation + 270;"
            ],
            [
                87,
                "                if (rotation >= 360)"
            ],
            [
                88,
                "                    rotation -= 360;"
            ],
            [
                90,
                "                if (angle < rotation)"
            ],
            [
                91,
                "                    return false;"
            ],
            [
                93,
                "                var range = Rotation + 270 + (AngleRange * 0.25f);"
            ],
            [
                95,
                "                if (range >= 360)"
            ],
            [
                96,
                "                    range -= 360;"
            ],
            [
                98,
                "                if (angle > range)"
            ],
            [
                99,
                "                    return false;"
            ],
            [
                100,
                ""
            ],
            [
                101,
                "                return true;"
            ],
            [
                102,
                "            }"
            ],
            [
                105,
                "            public readonly float AngleRange;"
            ],
            [
                107,
                "            public TauClickToResumeContainer(float angleRange)"
            ],
            [
                109,
                "                AngleRange = angleRange;"
            ],
            [
                111,
                ""
            ],
            [
                112,
                "                Alpha = 0.25f;"
            ],
            [
                113,
                "            }"
            ],
            [
                114,
                ""
            ],
            [
                115,
                "            protected override bool OnHover(HoverEvent e)"
            ],
            [
                116,
                "            {"
            ],
            [
                117,
                "                this.FadeTo(0.5f, 200);"
            ],
            [
                118,
                ""
            ],
            [
                119,
                "                return base.OnHover(e);"
            ],
            [
                120,
                "            }"
            ],
            [
                121,
                ""
            ],
            [
                122,
                "            protected override void OnHoverLost(HoverLostEvent e)"
            ],
            [
                123,
                "            {"
            ],
            [
                124,
                "                this.FadeTo(0.25f, 200);"
            ],
            [
                125,
                ""
            ],
            [
                126,
                "                base.OnHoverLost(e);"
            ],
            [
                135,
                "                        if (!IsHovered)"
            ],
            [
                136,
                "                            return false;"
            ]
        ],
        "deleted": [
            [
                5,
                "using osu.Framework.Graphics.Textures;"
            ],
            [
                12,
                "using SixLabors.ImageSharp;"
            ],
            [
                13,
                "using SixLabors.ImageSharp.PixelFormats;"
            ],
            [
                21,
                "        protected override string Message => \"Move the paddle to the highlighted area.\";"
            ],
            [
                31,
                "        }"
            ],
            [
                32,
                ""
            ],
            [
                33,
                "        protected override void PopIn()"
            ],
            [
                34,
                "        {"
            ],
            [
                35,
                "            base.PopIn();"
            ],
            [
                36,
                ""
            ],
            [
                37,
                "            TauClickToResumeContainer t;"
            ],
            [
                38,
                ""
            ],
            [
                39,
                "            Add(new Container"
            ],
            [
                44,
                "                Size = new Vector2(0.63f),"
            ],
            [
                49,
                "                    t = new TauClickToResumeContainer"
            ],
            [
                54,
                "                        Texture = createTexture(),"
            ],
            [
                56,
                "                        InnerRadius = 0.4f,"
            ],
            [
                57,
                "                        Current ="
            ],
            [
                58,
                "                        {"
            ],
            [
                59,
                "                            Value = .5f"
            ],
            [
                60,
                "                        }"
            ],
            [
                66,
                "        private Texture createTexture()"
            ],
            [
                68,
                "            const int width = 128;"
            ],
            [
                69,
                "            const int border_thickness = 15;"
            ],
            [
                71,
                "            var image = new Image<Rgba32>(width, width);"
            ],
            [
                73,
                "            var gradientTextureBoth = new Texture(width, width, true);"
            ],
            [
                75,
                "            for (int i = 0; i < width; ++i)"
            ],
            [
                77,
                "                for (int j = 0; j < width; ++j)"
            ],
            [
                78,
                "                {"
            ],
            [
                79,
                "                    byte brightness = (byte)(0.25f * 255); // 25%"
            ],
            [
                81,
                "                    if (j < border_thickness || j > (width - border_thickness))"
            ],
            [
                82,
                "                        brightness = 255;"
            ],
            [
                84,
                "                    image[i, j] = new Rgba32("
            ],
            [
                85,
                "                        255,"
            ],
            [
                86,
                "                        255,"
            ],
            [
                87,
                "                        255,"
            ],
            [
                88,
                "                        brightness);"
            ],
            [
                89,
                "                }"
            ],
            [
                90,
                "            }"
            ],
            [
                92,
                "            gradientTextureBoth.SetData(new TextureUpload(image));"
            ],
            [
                94,
                "            return gradientTextureBoth;"
            ],
            [
                95,
                "        }"
            ],
            [
                97,
                "        private class TauClickToResumeContainer : CircularProgress, IKeyBindingHandler<TauAction>"
            ],
            [
                98,
                "        {"
            ],
            [
                99,
                "            public override bool HandlePositionalInput => true;"
            ],
            [
                103,
                "            public TauClickToResumeContainer()"
            ]
        ]
    },
    "num_lines_added": 69,
    "num_lines_removed": 46
}