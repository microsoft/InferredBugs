{
    "hash": "aba54d42dd10250a2a12070bb6ff5a0b7e2bc245",
    "message": "Add IRateLimiterProvider and IApiRateLimiterProvider\n\nBREAKING: Create default constructors ApiRateLimiter() and BinanceApiUserProvider() to replace ApiRateLimiter(null) and BinanceApiUserProvider(null).",
    "file_num_lines": 94,
    "diff_parsed": {
        "added": [
            [
                26,
                "        private readonly IRateLimiterProvider _rateLimiterProvider;"
            ],
            [
                40,
                "        /// The default constructor with default <see cref=\"IRateLimiterProvider\"/>."
            ],
            [
                42,
                "        public ApiRateLimiter()"
            ],
            [
                43,
                "            : this(new RateLimiterProvider())"
            ],
            [
                44,
                "        { }"
            ],
            [
                45,
                ""
            ],
            [
                46,
                "        /// <summary>"
            ],
            [
                47,
                "        /// The DI constructor."
            ],
            [
                48,
                "        /// </summary>"
            ],
            [
                49,
                "        /// <param name=\"rateLimiterProvider\">The rate limiter provider (required).</param>"
            ],
            [
                50,
                "        public ApiRateLimiter(IRateLimiterProvider rateLimiterProvider)"
            ],
            [
                52,
                "            Throw.IfNull(rateLimiterProvider, nameof(rateLimiterProvider));"
            ],
            [
                53,
                ""
            ],
            [
                54,
                "            _rateLimiterProvider = rateLimiterProvider;"
            ],
            [
                85,
                "                var limiter = _rateLimiterProvider.CreateRateLimiter();"
            ]
        ],
        "deleted": [
            [
                6,
                "using Microsoft.Extensions.DependencyInjection;"
            ],
            [
                27,
                "        private readonly IServiceProvider _services;"
            ],
            [
                41,
                "        /// Constructor."
            ],
            [
                43,
                "        /// <param name=\"services\"></param>"
            ],
            [
                44,
                "        public ApiRateLimiter(IServiceProvider services = null)"
            ],
            [
                46,
                "            _services = services;"
            ],
            [
                77,
                "                var limiter = _services?.GetService<IRateLimiter>() ?? new RateLimiter();"
            ]
        ]
    },
    "num_lines_added": 15,
    "num_lines_removed": 7
}