{
    "hash": "933780bb68cca4a3a03609d16f347f3d11778ad5",
    "message": "reuse only authenticationprovider from ClientContextType.PnPCoreSdk stored in ctxSettings.AuthenticationManager as otherwise we would need to cache PnPContext by Authflow and tenant in order to make sure we always get the right pnpcontext when convert back in GetPnPContext",
    "file_num_lines": 84,
    "diff_parsed": {
        "added": [
            [
                50,
                "            var factory = BuildContextFactory();"
            ],
            [
                52,
                "            if(ctxSettings!=null && ctxSettings.AuthenticationManager!=null)"
            ],
            [
                54,
                "                var iAuthProvider = ctxSettings.AuthenticationManager.PnPCoreAuthenticationProvider;"
            ],
            [
                55,
                "                if(iAuthProvider!=null)"
            ],
            [
                57,
                "                    return factory.Create(ctxUri, iAuthProvider);"
            ],
            [
                60,
                "            return factory.Create(ctxUri, AuthenticationProviderFactory.GetAuthenticationProvider(context));"
            ]
        ],
        "deleted": [
            [
                8,
                "using System.Collections.Concurrent;"
            ],
            [
                21,
                "        private ConcurrentDictionary<string,PnPContext> pnpContextCached = new ConcurrentDictionary<string, PnPContext>();"
            ],
            [
                53,
                ""
            ],
            [
                54,
                "            PnPContext cachedContext;"
            ],
            [
                55,
                "            if (pnpContextCached.TryGetValue(ctxUri.Authority.ToLower(), out cachedContext))"
            ],
            [
                57,
                "                if (cachedContext.Uri == ctxUri)"
            ],
            [
                58,
                "                {"
            ],
            [
                59,
                "                    return cachedContext;"
            ],
            [
                60,
                "                }"
            ],
            [
                61,
                "                else"
            ],
            [
                63,
                "                    return cachedContext.Clone(ctxUri);"
            ],
            [
                66,
                "            else"
            ],
            [
                67,
                "            {"
            ],
            [
                68,
                "                var factory = BuildContextFactory();"
            ],
            [
                69,
                "                return factory.Create(ctxUri, AuthenticationProviderFactory.GetAuthenticationProvider(context));"
            ],
            [
                70,
                "            }"
            ],
            [
                128,
                "            //shloud do only for AppOnly Context"
            ],
            [
                129,
                "            if (!pnpContextCached.ContainsKey(pnpContext.Uri.Authority.ToLower()))"
            ],
            [
                130,
                "            {"
            ],
            [
                131,
                "                pnpContextCached.TryAdd(pnpContext.Uri.Authority.ToLower(),pnpContext);"
            ],
            [
                132,
                "            }"
            ]
        ]
    },
    "num_lines_added": 6,
    "num_lines_removed": 21
}