{
    "hash": "3487b7905e347c41b769211995edccd8950321c0",
    "message": "finalised end-to-end attribute flows section.",
    "file_num_lines": 1631,
    "diff_parsed": {
        "added": [
            [
                1023,
                "                var sectionTitle = \"End-to-End Attribute Flows Summary\";"
            ],
            [
                1063,
                "        [SuppressMessage(\"Microsoft.Design\", \"CA1031:DoNotCatchGeneralExceptionTypes\", Justification = \"Reviewed. Ignored.\")]"
            ],
            [
                1080,
                "                    this.WriteSectionHeader(\"Import Flows\", 5, \"Import Flows\", this.ConnectorGuid + this.currentDataSourceObjectType);"
            ],
            [
                1088,
                "                    this.WriteSectionHeader(\"Export Flows\", 5, \"Export Flows\", this.ConnectorGuid + this.currentDataSourceObjectType);"
            ],
            [
                1094,
                "            catch (Exception e)"
            ],
            [
                1095,
                "            {"
            ],
            [
                1096,
                "                Logger.Instance.WriteError(\"Error while processing end-to-end attribute flows. Current Object Type: {0}. Error: {1}\", this.currentDataSourceObjectType, e.ToString());"
            ],
            [
                1097,
                "            }"
            ],
            [
                1183,
                "                var column24 = new DataColumn(\"Source\");"
            ],
            [
                1184,
                "                var column34 = new DataColumn(\"TargetAttribute\");"
            ],
            [
                1185,
                "                var column44 = new DataColumn(\"OutboundSyncRulePrecedence\", typeof(int));"
            ],
            [
                1186,
                "                var column54 = new DataColumn(\"OutboundSyncRule\");"
            ],
            [
                1187,
                "                var column64 = new DataColumn(\"TargetConnector\");"
            ],
            [
                1188,
                "                var column74 = new DataColumn(\"OutboundSyncRuleSyncRuleScopingCondition\");"
            ],
            [
                1189,
                "                var column84 = new DataColumn(\"TargetConnectorGuid\");"
            ],
            [
                1190,
                "                var column94 = new DataColumn(\"OutboundSyncRuleSyncRuleGuid\");"
            ],
            [
                1200,
                "                table4.Columns.Add(column94);"
            ],
            [
                1201,
                "                table4.PrimaryKey = new[] { column14, column34, column54, column64 };"
            ],
            [
                1268,
                "                // Inbound Sync Rule Name"
            ],
            [
                1269,
                "                printTable.Rows.Add((new OrderedDictionary { { \"TableIndex\", 2 }, { \"ColumnIndex\", 1 }, { \"Hidden\", true }, { \"SortOrder\", -1 }, { \"BookmarkIndex\", -1 }, { \"JumpToBookmarkIndex\", -1 }, { \"ChangeIgnored\", true } }).Values.Cast<object>().ToArray());"
            ],
            [
                1270,
                ""
            ],
            [
                1275,
                "                // Source"
            ],
            [
                1278,
                "                // Target Attribute"
            ],
            [
                1279,
                "                printTable.Rows.Add((new OrderedDictionary { { \"TableIndex\", 3 }, { \"ColumnIndex\", 2 }, { \"Hidden\", false }, { \"SortOrder\", -1 }, { \"BookmarkIndex\", -1 }, { \"JumpToBookmarkIndex\", -1 }, { \"ChangeIgnored\", false } }).Values.Cast<object>().ToArray());"
            ],
            [
                1280,
                ""
            ],
            [
                1282,
                "                printTable.Rows.Add((new OrderedDictionary { { \"TableIndex\", 3 }, { \"ColumnIndex\", 3 }, { \"Hidden\", true }, { \"SortOrder\", 0 }, { \"BookmarkIndex\", -1 }, { \"JumpToBookmarkIndex\", -1 }, { \"ChangeIgnored\", false } }).Values.Cast<object>().ToArray());"
            ],
            [
                1285,
                "                printTable.Rows.Add((new OrderedDictionary { { \"TableIndex\", 3 }, { \"ColumnIndex\", 4 }, { \"Hidden\", false }, { \"SortOrder\", -1 }, { \"BookmarkIndex\", -1 }, { \"JumpToBookmarkIndex\", 8 }, { \"ChangeIgnored\", false } }).Values.Cast<object>().ToArray());"
            ],
            [
                1288,
                "                printTable.Rows.Add((new OrderedDictionary { { \"TableIndex\", 3 }, { \"ColumnIndex\", 5 }, { \"Hidden\", false }, { \"SortOrder\", -1 }, { \"BookmarkIndex\", -1 }, { \"JumpToBookmarkIndex\", 7 }, { \"ChangeIgnored\", false } }).Values.Cast<object>().ToArray());"
            ],
            [
                1291,
                "                printTable.Rows.Add((new OrderedDictionary { { \"TableIndex\", 3 }, { \"ColumnIndex\", 6 }, { \"Hidden\", false }, { \"SortOrder\", -1 }, { \"BookmarkIndex\", -1 }, { \"JumpToBookmarkIndex\", -1 }, { \"ChangeIgnored\", false } }).Values.Cast<object>().ToArray());"
            ],
            [
                1294,
                "                printTable.Rows.Add((new OrderedDictionary { { \"TableIndex\", 3 }, { \"ColumnIndex\", 7 }, { \"Hidden\", true }, { \"SortOrder\", -1 }, { \"BookmarkIndex\", -1 }, { \"JumpToBookmarkIndex\", -1 }, { \"ChangeIgnored\", true } }).Values.Cast<object>().ToArray());"
            ],
            [
                1297,
                "                printTable.Rows.Add((new OrderedDictionary { { \"TableIndex\", 3 }, { \"ColumnIndex\", 8 }, { \"Hidden\", true }, { \"SortOrder\", -1 }, { \"BookmarkIndex\", -1 }, { \"JumpToBookmarkIndex\", -1 }, { \"ChangeIgnored\", true } }).Values.Cast<object>().ToArray());"
            ],
            [
                1332,
                "                    var metaverseAttributesXPath = \"//synchronizationRule[translate(connector, '\" + Documenter.LowercaseLetters + \"', '\" + Documenter.UppercaseLetters + \"') = '\" + connectorGuid + \"' and direction = 'Inbound' \" + Documenter.SyncRuleDisabledCondition + \" and sourceObjectType = '\" + this.currentDataSourceObjectType + \"']/attribute-mappings/mapping/dest\";"
            ],
            [
                1333,
                "                    var metaverseAttributes = from inboundSyncRuleDestination in config.XPathSelectElements(metaverseAttributesXPath)"
            ],
            [
                1334,
                "                                              let dest = (string)inboundSyncRuleDestination"
            ],
            [
                1335,
                "                                              orderby dest"
            ],
            [
                1336,
                "                                              select dest;"
            ],
            [
                1337,
                "                    foreach (var metaverseAttribute in metaverseAttributes.Distinct())"
            ],
            [
                1339,
                "                        Documenter.AddRow(table, new object[] { metaverseAttribute, \"&#8592;\" });"
            ],
            [
                1340,
                ""
            ],
            [
                1341,
                "                        var inboundSyncRuleXPath = \"//synchronizationRule[translate(connector, '\" + Documenter.LowercaseLetters + \"', '\" + Documenter.UppercaseLetters + \"') = '\" + connectorGuid + \"' and direction = 'Inbound' \" + Documenter.SyncRuleDisabledCondition + \" and sourceObjectType = '\" + this.currentDataSourceObjectType + \"' and ./attribute-mappings/mapping/dest = '\" + metaverseAttribute + \"']\";"
            ],
            [
                1342,
                "                        var inboundSyncRules = config.XPathSelectElements(inboundSyncRuleXPath);"
            ],
            [
                1343,
                "                        inboundSyncRules = from syncRule in inboundSyncRules"
            ],
            [
                1344,
                "                                           let inboundSyncRulePrecedence = (int)syncRule.Element(\"precedence\")"
            ],
            [
                1345,
                "                                           orderby inboundSyncRulePrecedence"
            ],
            [
                1346,
                "                                           select syncRule;"
            ],
            [
                1347,
                ""
            ],
            [
                1348,
                "                        var inboundSyncRuleRank = 0; // Used only for sorting, not displayed on the report"
            ],
            [
                1349,
                "                        foreach (var inboundSyncRule in inboundSyncRules)"
            ],
            [
                1351,
                "                            var inboundSyncRuleName = (string)inboundSyncRule.Element(\"name\");"
            ],
            [
                1352,
                "                            var inboundSyncRuleGuid = (string)inboundSyncRule.Element(\"id\");"
            ],
            [
                1353,
                "                            var targetObjectType = (string)inboundSyncRule.Element(\"targetObjectType\");"
            ],
            [
                1354,
                "                            ++inboundSyncRuleRank;"
            ],
            [
                1355,
                ""
            ],
            [
                1356,
                "                            var transformation = inboundSyncRule.XPathSelectElement(\"./attribute-mappings/mapping[dest = '\" + metaverseAttribute + \"']\");"
            ],
            [
                1379,
                "                            Documenter.AddRow(table2, new object[] { metaverseAttribute, source, inboundSyncRuleName, inboundSyncRuleRank, inboundSyncRuleScopingConditionString, inboundSyncRuleGuid });"
            ],
            [
                1386,
                "                                var outboundSyncRules = config.XPathSelectElements(\"//synchronizationRule[sourceObjectType = '\" + targetObjectType + \"' and direction = 'Outbound' \" + Documenter.SyncRuleDisabledCondition + \" and (attribute-mappings/mapping/src/attr = '\" + metaverseAttribute + \"' or contains(attribute-mappings/mapping/expression, '[\" + metaverseAttribute + \"]'))]\");"
            ],
            [
                1391,
                "                                var outboundSyncRuleRank = 0;"
            ],
            [
                1398,
                "                                    ++outboundSyncRuleRank; // Used only for sorting, not displayed on the report"
            ],
            [
                1400,
                "                                    var targetAttributeMapping = outboundSyncRule.XPathSelectElement(\"attribute-mappings/mapping[./src/attr = '\" + metaverseAttribute + \"' or contains(expression, '[\" + metaverseAttribute + \"]')]\");"
            ],
            [
                1401,
                "                                    var mappingExpression = (string)targetAttributeMapping.XPathSelectElement(\"./expression\");"
            ],
            [
                1402,
                "                                    var mappingSourceAttribute = (string)targetAttributeMapping.XPathSelectElement(\"./src/attr\");"
            ],
            [
                1403,
                "                                    var mappingSource = (string)targetAttributeMapping.XPathSelectElement(\"./src\");"
            ],
            [
                1404,
                "                                    var targetAttribute = (string)targetAttributeMapping.XPathSelectElement(\"./dest\");"
            ],
            [
                1425,
                "                                        Documenter.AddRow(table4, new object[] { metaverseAttribute, metaverseSource, targetAttribute, outboundSyncRuleRank, outboundSyncRuleName, outboundConnectorName, outboundSyncRuleScopingCondition, outboundConnectorGuid, outboundSyncRuleGuid });"
            ],
            [
                1475,
                "                // Import Flows"
            ],
            [
                1476,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 0 }, { \"ColumnName\", \"Import Flows\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 5 }, { \"ColWidth\", 0 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1477,
                ""
            ],
            [
                1478,
                "                // Export Flows"
            ],
            [
                1479,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 1 }, { \"ColumnName\", \"Export Flows\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 7 }, { \"ColWidth\", 0 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1480,
                ""
            ],
            [
                1481,
                "                // Header Row 2"
            ],
            [
                1483,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 0 }, { \"ColumnName\", \"Metaverse Attribute\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 8 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1486,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 1 }, { \"ColumnName\", \"&#8592;\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 2 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1489,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 2 }, { \"ColumnName\", \"Connector Source\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1492,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 3 }, { \"ColumnName\", \"Inbound Sync Rule\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1495,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 4 }, { \"ColumnName\", \"Inbound Sync Rule Scoping Condition\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1498,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 5 }, { \"ColumnName\", \"Metaverse Attribute\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 8 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1501,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 6 }, { \"ColumnName\", \"&#8594;\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 2 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1502,
                ""
            ],
            [
                1503,
                "                // Source"
            ],
            [
                1504,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 7 }, { \"ColumnName\", \"Source\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1507,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 8 }, { \"ColumnName\", \"Target\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1510,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 9 }, { \"ColumnName\", \"Outbound Sync Rule\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1513,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 10 }, { \"ColumnName\", \"Target Connector\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1516,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 11 }, { \"ColumnName\", \"Outbound Sync Rule Scoping Condition\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1714,
                "                // Outbound Sync Rule Name"
            ],
            [
                1715,
                "                printTable.Rows.Add((new OrderedDictionary { { \"TableIndex\", 2 }, { \"ColumnIndex\", 1 }, { \"Hidden\", true }, { \"SortOrder\", -1 }, { \"BookmarkIndex\", -1 }, { \"JumpToBookmarkIndex\", -1 }, { \"ChangeIgnored\", true } }).Values.Cast<object>().ToArray());"
            ],
            [
                1716,
                ""
            ],
            [
                1778,
                "                    var targetAttributesXPath = \"//synchronizationRule[translate(connector, '\" + Documenter.LowercaseLetters + \"', '\" + Documenter.UppercaseLetters + \"') = '\" + connectorGuid + \"' and direction = 'Outbound' \" + Documenter.SyncRuleDisabledCondition + \" and targetObjectType = '\" + this.currentDataSourceObjectType + \"']/attribute-mappings/mapping/dest\";"
            ],
            [
                1779,
                "                    var targetAttributes = from outboundSyncRuleDestination in config.XPathSelectElements(targetAttributesXPath)"
            ],
            [
                1780,
                "                                           let dest = (string)outboundSyncRuleDestination"
            ],
            [
                1781,
                "                                           orderby dest"
            ],
            [
                1782,
                "                                           select dest;"
            ],
            [
                1783,
                ""
            ],
            [
                1784,
                "                    foreach (var targetAttribute in targetAttributes.Distinct())"
            ],
            [
                1786,
                "                        Documenter.AddRow(table, new object[] { targetAttribute, \"&#8592;\" });"
            ],
            [
                1787,
                ""
            ],
            [
                1788,
                "                        var outboundSyncRuleXPath = \"//synchronizationRule[translate(connector, '\" + Documenter.LowercaseLetters + \"', '\" + Documenter.UppercaseLetters + \"') = '\" + connectorGuid + \"' and direction = 'Outbound' \" + Documenter.SyncRuleDisabledCondition + \" and targetObjectType = '\" + this.currentDataSourceObjectType + \"' and ./attribute-mappings/mapping/dest = '\" + targetAttribute + \"']\";"
            ],
            [
                1789,
                "                        var outboundSyncRules = config.XPathSelectElements(outboundSyncRuleXPath);"
            ],
            [
                1790,
                "                        outboundSyncRules = from syncRule in outboundSyncRules"
            ],
            [
                1791,
                "                                            let precedence = (int)syncRule.Element(\"precedence\")"
            ],
            [
                1792,
                "                                            orderby precedence"
            ],
            [
                1793,
                "                                            select syncRule;"
            ],
            [
                1794,
                ""
            ],
            [
                1795,
                "                        var outboundSyncRuleRank = 0; // Used only for sorting, not displayed on the report"
            ],
            [
                1796,
                "                        foreach (var outboundSyncRule in outboundSyncRules)"
            ],
            [
                1798,
                "                            var outboundSyncRuleName = (string)outboundSyncRule.Element(\"name\");"
            ],
            [
                1799,
                "                            var outboundSyncRuleGuid = (string)outboundSyncRule.Element(\"id\");"
            ],
            [
                1800,
                "                            var sourceObjectType = (string)outboundSyncRule.Element(\"sourceObjectType\");"
            ],
            [
                1801,
                "                            ++outboundSyncRuleRank;"
            ],
            [
                1802,
                ""
            ],
            [
                1803,
                "                            var transformation = outboundSyncRule.XPathSelectElement(\"./attribute-mappings/mapping[dest = '\" + targetAttribute + \"']\");"
            ],
            [
                1826,
                "                            Documenter.AddRow(table2, new object[] { targetAttribute, source, outboundSyncRuleName, outboundSyncRuleRank, outboundSyncRuleScopingConditionString, outboundSyncRuleGuid });"
            ],
            [
                1848,
                "                                    var inboundSyncRules = config.XPathSelectElements(\"//synchronizationRule[targetObjectType = '\" + sourceObjectType + \"' and direction = 'Inbound' \" + Documenter.SyncRuleDisabledCondition + \" and (attribute-mappings/mapping/dest = '\" + metaverseAttribute + \"' or contains(attribute-mappings/mapping/expression, '[\" + metaverseAttribute + \"]'))]\");"
            ],
            [
                1854,
                "                                    var inboundSyncRuleRank = 0;"
            ],
            [
                1861,
                "                                        ++inboundSyncRuleRank; // Used only for sorting, not displayed on the report"
            ],
            [
                1863,
                "                                        var metaverseAttributeMapping = inboundSyncRule.XPathSelectElement(\"attribute-mappings/mapping[dest = '\" + metaverseAttribute + \"' or contains(expression, '[\" + metaverseAttribute + \"]')]\");"
            ],
            [
                1864,
                "                                        var mappingExpression = (string)metaverseAttributeMapping.XPathSelectElement(\"./expression\");"
            ],
            [
                1865,
                "                                        var mappingSourceAttribute = (string)metaverseAttributeMapping.XPathSelectElement(\"./src/attr\");"
            ],
            [
                1866,
                "                                        var mappingSource = (string)metaverseAttributeMapping.XPathSelectElement(\"./src\");"
            ],
            [
                1872,
                "                                            var inboundSyncRuleScopingConditionCount = inboundSyncRuleScopingConditions.Count();"
            ],
            [
                1887,
                "                                            Documenter.AddRow(table4, new object[] { targetAttribute, metaverseAttribute, metaverseSource, inboundSyncRuleRank, inboundSyncRuleName, inboundConnectorName, inboundSyncRuleScopingCondition, inboundConnectorGuid, inboundSyncRuleGuid });"
            ],
            [
                1937,
                "                // Export Flows"
            ],
            [
                1938,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 0 }, { \"ColumnName\", \"Export Flows\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 5 }, { \"ColWidth\", 0 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1939,
                ""
            ],
            [
                1940,
                "                // Import Flows"
            ],
            [
                1941,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 1 }, { \"ColumnName\", \"Import Flows\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 6 }, { \"ColWidth\", 0 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1942,
                ""
            ],
            [
                1943,
                "                // Header Row 2"
            ],
            [
                1945,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 0 }, { \"ColumnName\", \"CS Attribute\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1948,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 1 }, { \"ColumnName\", \"&#8592;\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 2 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1951,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 2 }, { \"ColumnName\", \"Source\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1954,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 3 }, { \"ColumnName\", \"Outbound Sync Rule\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1957,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 4 }, { \"ColumnName\", \"Outbound Sync Rule Scoping Condition\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 13 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1960,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 5 }, { \"ColumnName\", \"Metaverse Attribute\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1963,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 6 }, { \"ColumnName\", \"&#8592;\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 2 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1966,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 7 }, { \"ColumnName\", \"Source\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1969,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 8 }, { \"ColumnName\", \"Inbound Sync Rule\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1972,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 9 }, { \"ColumnName\", \"Source Connector\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1975,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 1 }, { \"ColumnIndex\", 10 }, { \"ColumnName\", \"Inbound Sync Rule Scoping Condition\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 15 } }).Values.Cast<object>().ToArray());"
            ]
        ],
        "deleted": [
            [
                1023,
                "                var sectionTitle = \"Attribute Flows Summary\";"
            ],
            [
                1054,
                "            catch (Exception e)"
            ],
            [
                1055,
                "            {"
            ],
            [
                1056,
                "                Logger.Instance.WriteError(\"Error while processing end-to-end attribute flows. Error: {0}\", e.ToString());"
            ],
            [
                1057,
                "            }"
            ],
            [
                1083,
                "                    this.WriteSectionHeader(\"End-to-End Import Flows Summary\", 5);"
            ],
            [
                1091,
                "                    this.WriteSectionHeader(\"End-to-End Export Flows Summary\", 5);"
            ],
            [
                1182,
                "                var column24 = new DataColumn(\"TargetAttribute\");"
            ],
            [
                1183,
                "                var column34 = new DataColumn(\"OutboundSyncRulePrecedence\", typeof(int));"
            ],
            [
                1184,
                "                var column44 = new DataColumn(\"OutboundSyncRule\");"
            ],
            [
                1185,
                "                var column54 = new DataColumn(\"TargetConnector\");"
            ],
            [
                1186,
                "                var column64 = new DataColumn(\"OutboundSyncRuleSyncRuleScopingCondition\");"
            ],
            [
                1187,
                "                var column74 = new DataColumn(\"TargetConnectorGuid\");"
            ],
            [
                1188,
                "                var column84 = new DataColumn(\"OutboundSyncRuleSyncRuleGuid\");"
            ],
            [
                1198,
                "                table4.PrimaryKey = new[] { column14, column24, column44, column54 };"
            ],
            [
                1269,
                "                // Target Attribute"
            ],
            [
                1273,
                "                printTable.Rows.Add((new OrderedDictionary { { \"TableIndex\", 3 }, { \"ColumnIndex\", 2 }, { \"Hidden\", true }, { \"SortOrder\", 0 }, { \"BookmarkIndex\", -1 }, { \"JumpToBookmarkIndex\", -1 }, { \"ChangeIgnored\", false } }).Values.Cast<object>().ToArray());"
            ],
            [
                1276,
                "                printTable.Rows.Add((new OrderedDictionary { { \"TableIndex\", 3 }, { \"ColumnIndex\", 3 }, { \"Hidden\", false }, { \"SortOrder\", -1 }, { \"BookmarkIndex\", -1 }, { \"JumpToBookmarkIndex\", 7 }, { \"ChangeIgnored\", false } }).Values.Cast<object>().ToArray());"
            ],
            [
                1279,
                "                printTable.Rows.Add((new OrderedDictionary { { \"TableIndex\", 3 }, { \"ColumnIndex\", 4 }, { \"Hidden\", false }, { \"SortOrder\", -1 }, { \"BookmarkIndex\", -1 }, { \"JumpToBookmarkIndex\", 6 }, { \"ChangeIgnored\", false } }).Values.Cast<object>().ToArray());"
            ],
            [
                1282,
                "                printTable.Rows.Add((new OrderedDictionary { { \"TableIndex\", 3 }, { \"ColumnIndex\", 5 }, { \"Hidden\", false }, { \"SortOrder\", -1 }, { \"BookmarkIndex\", -1 }, { \"JumpToBookmarkIndex\", -1 }, { \"ChangeIgnored\", false } }).Values.Cast<object>().ToArray());"
            ],
            [
                1285,
                "                printTable.Rows.Add((new OrderedDictionary { { \"TableIndex\", 3 }, { \"ColumnIndex\", 6 }, { \"Hidden\", true }, { \"SortOrder\", -1 }, { \"BookmarkIndex\", -1 }, { \"JumpToBookmarkIndex\", -1 }, { \"ChangeIgnored\", true } }).Values.Cast<object>().ToArray());"
            ],
            [
                1288,
                "                printTable.Rows.Add((new OrderedDictionary { { \"TableIndex\", 3 }, { \"ColumnIndex\", 7 }, { \"Hidden\", true }, { \"SortOrder\", -1 }, { \"BookmarkIndex\", -1 }, { \"JumpToBookmarkIndex\", -1 }, { \"ChangeIgnored\", true } }).Values.Cast<object>().ToArray());"
            ],
            [
                1323,
                "                    var inboundSyncRuleXPath = \"//synchronizationRule[translate(connector, '\" + Documenter.LowercaseLetters + \"', '\" + Documenter.UppercaseLetters + \"') = '\" + connectorGuid + \"' and direction = '\" + SyncRuleDocumenter.SyncRuleDirection.Inbound.ToString() + \"' and sourceObjectType = '\" + this.currentDataSourceObjectType + \"' and count(./attribute-mappings/mapping) != 0]\";"
            ],
            [
                1324,
                "                    var inoundSyncRules = config.XPathSelectElements(inboundSyncRuleXPath);"
            ],
            [
                1325,
                "                    inoundSyncRules = from syncRule in inoundSyncRules"
            ],
            [
                1326,
                "                                      let precedence = (int)syncRule.Element(\"precedence\")"
            ],
            [
                1327,
                "                                      orderby precedence"
            ],
            [
                1328,
                "                                      select syncRule;"
            ],
            [
                1329,
                ""
            ],
            [
                1330,
                "                    foreach (var inboundSyncRule in inoundSyncRules)"
            ],
            [
                1332,
                "                        var inboundSyncRuleName = (string)inboundSyncRule.Element(\"name\");"
            ],
            [
                1333,
                "                        var inboundSyncRuleGuid = (string)inboundSyncRule.Element(\"id\");"
            ],
            [
                1334,
                "                        var inboundSyncRulePrecedence = (int)inboundSyncRule.Element(\"precedence\"); // Used only for sorting, not displayed on the report"
            ],
            [
                1335,
                "                        var targetObjectType = (string)inboundSyncRule.Element(\"targetObjectType\");"
            ],
            [
                1336,
                "                        var transformations = inboundSyncRule.XPathSelectElements(\"./attribute-mappings/mapping\");"
            ],
            [
                1337,
                "                        foreach (var transformation in transformations)"
            ],
            [
                1339,
                "                            var metaverseAttribute = (string)transformation.Element(\"dest\");"
            ],
            [
                1345,
                "                            if (table.Select(\"MetaverseAttribute = '\" + metaverseAttribute + \"'\").Count() == 0)"
            ],
            [
                1346,
                "                            {"
            ],
            [
                1347,
                "                                Documenter.AddRow(table, new object[] { metaverseAttribute, \"&#8592;\" });"
            ],
            [
                1348,
                "                            }"
            ],
            [
                1349,
                ""
            ],
            [
                1352,
                ""
            ],
            [
                1354,
                ""
            ],
            [
                1369,
                "                            Documenter.AddRow(table2, new object[] { metaverseAttribute, source, inboundSyncRuleName, inboundSyncRulePrecedence, inboundSyncRuleScopingConditionString, inboundSyncRuleGuid });"
            ],
            [
                1376,
                "                                var outboundSyncRules = config.XPathSelectElements(\"//synchronizationRule[sourceObjectType = '\" + targetObjectType + \"' and direction = 'Outbound' \" + Documenter.SyncRuleDisabledCondition + \" and attribute-mappings/mapping/src/attr = '\" + metaverseAttribute + \"']\");"
            ],
            [
                1381,
                ""
            ],
            [
                1388,
                "                                    var outboundSyncRulePrecedence = (int)outboundSyncRule.Element(\"precedence\"); // Used only for sorting, not displayed on the report"
            ],
            [
                1389,
                ""
            ],
            [
                1390,
                "                                    var mappingExpression = outboundSyncRule.XPathSelectElement(\"attribute-mappings/mapping[./src/attr = '\" + metaverseAttribute + \"']/expression\");"
            ],
            [
                1391,
                "                                    var mappingSourceAttribute = outboundSyncRule.XPathSelectElement(\"attribute-mappings/mapping[./src/attr = '\" + metaverseAttribute + \"']/src/attr\");"
            ],
            [
                1392,
                "                                    var mappingSource = outboundSyncRule.XPathSelectElement(\"attribute-mappings/mapping[./src/attr = '\" + metaverseAttribute + \"']/src\");"
            ],
            [
                1395,
                ""
            ],
            [
                1400,
                ""
            ],
            [
                1402,
                ""
            ],
            [
                1417,
                "                                        Documenter.AddRow(table4, new object[] { metaverseAttribute, metaverseSource, outboundSyncRulePrecedence, outboundSyncRuleName, outboundConnectorName, outboundSyncRuleScopingCondition, outboundConnectorGuid, outboundSyncRuleGuid });"
            ],
            [
                1468,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 0 }, { \"ColumnName\", \"Metaverse Attribute\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1471,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 1 }, { \"ColumnName\", \"&#8592;\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 2 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1474,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 2 }, { \"ColumnName\", \"Connector Source\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1477,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 3 }, { \"ColumnName\", \"Inbound Sync Rule\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1480,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 4 }, { \"ColumnName\", \"Inbound Sync Rule Scoping Condition\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 13 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1483,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 5 }, { \"ColumnName\", \"Metaverse Attribute\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1486,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 6 }, { \"ColumnName\", \"&#8594;\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 2 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1489,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 7 }, { \"ColumnName\", \"Target\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1492,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 8 }, { \"ColumnName\", \"Outbound Sync Rule\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1495,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 9 }, { \"ColumnName\", \"Target Connector\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1498,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 10 }, { \"ColumnName\", \"Outbound Sync Rule Scoping Condition\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 15 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1757,
                "                    var outboundSyncRuleXPath = \"//synchronizationRule[translate(connector, '\" + Documenter.LowercaseLetters + \"', '\" + Documenter.UppercaseLetters + \"') = '\" + connectorGuid + \"' and direction = '\" + SyncRuleDocumenter.SyncRuleDirection.Outbound.ToString() + \"' and targetObjectType = '\" + this.currentDataSourceObjectType + \"' and count(./attribute-mappings/mapping) != 0]\";"
            ],
            [
                1758,
                "                    var outboundSyncRules = config.XPathSelectElements(outboundSyncRuleXPath);"
            ],
            [
                1759,
                "                    outboundSyncRules = from syncRule in outboundSyncRules"
            ],
            [
                1760,
                "                                        let precedence = (int)syncRule.Element(\"precedence\")"
            ],
            [
                1761,
                "                                        orderby precedence"
            ],
            [
                1762,
                "                                        select syncRule;"
            ],
            [
                1763,
                ""
            ],
            [
                1764,
                "                    foreach (var outboundSyncRule in outboundSyncRules)"
            ],
            [
                1766,
                "                        var outboundSyncRuleName = (string)outboundSyncRule.Element(\"name\");"
            ],
            [
                1767,
                "                        var outboundSyncRuleGuid = (string)outboundSyncRule.Element(\"id\");"
            ],
            [
                1768,
                "                        var outboundSyncRulePrecedence = (int)outboundSyncRule.Element(\"precedence\"); // Used only for sorting, not displayed on the report"
            ],
            [
                1769,
                "                        var sourceObjectType = (string)outboundSyncRule.Element(\"sourceObjectType\");"
            ],
            [
                1770,
                "                        var transformations = outboundSyncRule.XPathSelectElements(\"./attribute-mappings/mapping\");"
            ],
            [
                1771,
                "                        foreach (var transformation in transformations)"
            ],
            [
                1773,
                "                            var targetAttribute = (string)transformation.Element(\"dest\");"
            ],
            [
                1779,
                "                            if (table.Select(\"DataSourceAttribute = '\" + targetAttribute + \"'\").Count() == 0)"
            ],
            [
                1780,
                "                            {"
            ],
            [
                1781,
                "                                Documenter.AddRow(table, new object[] { targetAttribute, \"&#8592;\" });"
            ],
            [
                1782,
                "                            }"
            ],
            [
                1783,
                ""
            ],
            [
                1786,
                ""
            ],
            [
                1788,
                ""
            ],
            [
                1803,
                "                            Documenter.AddRow(table2, new object[] { targetAttribute, source, outboundSyncRuleName, outboundSyncRulePrecedence, outboundSyncRuleScopingConditionString, outboundSyncRuleGuid });"
            ],
            [
                1825,
                "                                    var inboundSyncRules = config.XPathSelectElements(\"//synchronizationRule[targetObjectType = '\" + sourceObjectType + \"' and direction = 'Inbound' \" + Documenter.SyncRuleDisabledCondition + \" and attribute-mappings/mapping/dest = '\" + metaverseAttribute + \"']\");"
            ],
            [
                1837,
                "                                        var inboundSyncRulePrecedence = (int)inboundSyncRule.Element(\"precedence\"); // Used only for sorting, not displayed on the report"
            ],
            [
                1838,
                ""
            ],
            [
                1839,
                "                                        var mappingExpression = inboundSyncRule.XPathSelectElement(\"attribute-mappings/mapping[dest = '\" + metaverseAttribute + \"']/expression\");"
            ],
            [
                1840,
                "                                        var mappingSourceAttribute = inboundSyncRule.XPathSelectElement(\"attribute-mappings/mapping[dest = '\" + metaverseAttribute + \"']/src/attr\");"
            ],
            [
                1841,
                "                                        var mappingSource = inboundSyncRule.XPathSelectElement(\"attribute-mappings/mapping[dest = '\" + metaverseAttribute + \"']/src\");"
            ],
            [
                1844,
                ""
            ],
            [
                1849,
                ""
            ],
            [
                1850,
                "                                            var inboundSyncRuleScopingConditionCount = outboundSyncRuleScopingConditions.Count();"
            ],
            [
                1851,
                ""
            ],
            [
                1866,
                "                                            Documenter.AddRow(table4, new object[] { targetAttribute, metaverseAttribute, metaverseSource, inboundSyncRulePrecedence, inboundSyncRuleName, inboundConnectorName, inboundSyncRuleScopingCondition, inboundConnectorGuid, inboundSyncRuleGuid });"
            ],
            [
                1917,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 0 }, { \"ColumnName\", \"CS Attribute\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1920,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 1 }, { \"ColumnName\", \"&#8592;\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 2 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1923,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 2 }, { \"ColumnName\", \"Source\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1926,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 3 }, { \"ColumnName\", \"Outbound Sync Rule\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1929,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 4 }, { \"ColumnName\", \"Outbound Sync Rule Scoping Condition\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 13 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1932,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 5 }, { \"ColumnName\", \"Metaverse Attribute\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1935,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 6 }, { \"ColumnName\", \"&#8592;\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 2 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1938,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 7 }, { \"ColumnName\", \"Source\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1941,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 8 }, { \"ColumnName\", \"Inbound Sync Rule\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1944,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 9 }, { \"ColumnName\", \"Source Connector\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 10 } }).Values.Cast<object>().ToArray());"
            ],
            [
                1947,
                "                headerTable.Rows.Add((new OrderedDictionary { { \"RowIndex\", 0 }, { \"ColumnIndex\", 10 }, { \"ColumnName\", \"Inbound Sync Rule Scoping Condition\" }, { \"RowSpan\", 1 }, { \"ColSpan\", 1 }, { \"ColWidth\", 15 } }).Values.Cast<object>().ToArray());"
            ]
        ]
    },
    "num_lines_added": 140,
    "num_lines_removed": 112
}