{
    "hash": "62126d3f39af7731af64f27e670c5320648ceff9",
    "message": "AnimationTimeline\u306e\u8ffd\u52a0\u3092View->View\u304b\u3089View->ViewModel\u306b\u3057\u305f",
    "file_num_lines": 46,
    "diff_parsed": {
        "added": [
            [
                32,
                "        if (DataContext is BaseEditorViewModel viewModel"
            ],
            [
                33,
                "            && viewModel.Setter is IAnimatablePropertyInstance setter)"
            ],
            [
                36,
                "            if (editView.DataContext is EditViewModel editViewModel)"
            ],
            [
                38,
                "                AnimationTimelineViewModel? anmViewModel ="
            ],
            [
                39,
                "                    editViewModel.AnimationTimelines.FirstOrDefault(i => ReferenceEquals(i.Setter, setter));"
            ],
            [
                40,
                ""
            ],
            [
                41,
                "                if (anmViewModel != null)"
            ],
            [
                43,
                "                    anmViewModel.IsSelected.Value = true;"
            ],
            [
                45,
                "                else"
            ],
            [
                47,
                "                    Layer? layer = setter.FindRequiredLogicalParent<Layer>();"
            ],
            [
                48,
                "                    editViewModel.AnimationTimelines.Add("
            ],
            [
                49,
                "                        new AnimationTimelineViewModel(layer, setter, viewModel.Description));"
            ],
            [
                50,
                "                }"
            ]
        ],
        "deleted": [
            [
                32,
                "        if (DataContext is not BaseEditorViewModel vm) return;"
            ],
            [
                33,
                ""
            ],
            [
                34,
                "        if (vm.Setter is IAnimatablePropertyInstance setter)"
            ],
            [
                37,
                ""
            ],
            [
                38,
                "            foreach (FATabViewItem item in editView.BottomTabView.TabItems.OfType<FATabViewItem>())"
            ],
            [
                40,
                "                if (item.DataContext is AnimationTimelineViewModel anmVm && ReferenceEquals(anmVm.Setter, setter))"
            ],
            [
                42,
                "                    editView.BottomTabView.SelectedItem = item;"
            ],
            [
                43,
                "                    return;"
            ],
            [
                45,
                "            }"
            ],
            [
                46,
                ""
            ],
            [
                47,
                "            PropertiesEditor propsEdit = this.FindLogicalAncestorOfType<PropertiesEditor>();"
            ],
            [
                48,
                ""
            ],
            [
                49,
                "            if (propsEdit.DataContext is PropertiesEditorViewModel propsVm)"
            ],
            [
                50,
                "            {"
            ],
            [
                51,
                "                var item = new FATabViewItem"
            ],
            [
                53,
                "                    Header = $\"{propsVm.Layer.Name} / {setter.Property.Name}\","
            ],
            [
                54,
                "                    DataContext = new AnimationTimelineViewModel(propsVm.Layer, setter, vm.Description),"
            ],
            [
                55,
                "                    Content = new AnimationTimeline(),"
            ],
            [
                56,
                "                    IsClosable = true"
            ],
            [
                57,
                "                };"
            ],
            [
                58,
                "                (editView.BottomTabView.TabItems as IList)?.Add(item);"
            ],
            [
                59,
                "                item.IsSelected = true;"
            ]
        ]
    },
    "num_lines_added": 13,
    "num_lines_removed": 22
}