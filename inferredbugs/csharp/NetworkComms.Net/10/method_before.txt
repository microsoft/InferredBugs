        private static void SelectLogging()
        {
            //If the user wants to enable logging 
            Console.WriteLine("\nTo enable comms logging press 'y'. To leave logging disabled and continue press any other key.");
            var loggingEnableKey = Console.ReadKey(true);

            if (loggingEnableKey.Key == ConsoleKey.Y)
            {
                //////////////////////////////////////////////////////////////////////
                /////////////// VERY SIMPLE CONOLSE ONLY LOGGER AVAILABLE ////////////
                //////////////////////////////////////////////////////////////////////
                //NameValueCollection properties = new NameValueCollection();
                //properties["showDateTime"] = "true";
                //properties["showLogName"] = "false";
                //properties["level"] = "All";
                //NetworkComms.EnableLogging(new Common.Logging.Simple.ConsoleOutLoggerFactoryAdapter(properties));

                //////////////////////////////////////////////////////////////////////
                //// THE FOLLOWING LOGGER USES THE MUCH MORE VERSATILE LOG4NET////////
                //// Requires the prescense of Common.Logging.Log4Net.dll & log4net.dll 
                //////////////////////////////////////////////////////////////////////
                LoggingConfiguration logConfig = new LoggingConfiguration();
                FileTarget fileTarget = new FileTarget();
                fileTarget.FileName = "${basedir}/file.txt";
                fileTarget.Layout = "${date:format=HH\\:MM\\:ss} ${logger} ${message}";

                logConfig.AddTarget("file", fileTarget);

                LoggingRule rule = new LoggingRule("*", LogLevel.Debug, fileTarget);
                logConfig.LoggingRules.Add(rule);
                
                NetworkComms.EnableLogging(logConfig);

                Console.WriteLine(" ... logging enabled. DEBUG level ouput and above directed to console. ALL output also directed to log file, log.txt.");

                //We can write to our logger from an external program as well
                NetworkComms.Logger.Info("NetworkCommsDotNet logging enabled");
            }
        }