{
    "hash": "17039d3096f29fd0229517d5b6383f48ab59b047",
    "message": "Bug fixes to stream usage on incoming data. Also some DFS fixes.",
    "file_num_lines": 388,
    "diff_parsed": {
        "added": [
            [
                178,
                "            return DeserialiseDataObject<T>(new MemoryStream(receivedObjectBytes, 0, receivedObjectBytes.Length, false, true));"
            ],
            [
                185,
                "        /// <param name=\"receivedObjectStream\">Byte array containing serialized and compressed object</param>"
            ],
            [
                187,
                "        public T DeserialiseDataObject<T>(MemoryStream receivedObjectStream)"
            ],
            [
                189,
                "            return DeserialiseDataObject<T>(receivedObjectStream, null, null);"
            ],
            [
                202,
                "            return DeserialiseDataObject<T>(new MemoryStream(receivedObjectBytes, 0, receivedObjectBytes.Length, false, true), dataProcessors, options);"
            ],
            [
                209,
                "        /// <param name=\"receivedObjectStream\">Byte array containing serialized and compressed object</param>"
            ],
            [
                213,
                "        public T DeserialiseDataObject<T>(MemoryStream receivedObjectStream, List<DataProcessor> dataProcessors, Dictionary<string, string> options)"
            ],
            [
                215,
                "            if (receivedObjectStream == null) throw new ArgumentNullException(\"Provided paramater receivedObjectBytes should not be null.\");"
            ],
            [
                216,
                ""
            ],
            [
                217,
                "            //Ensure the stream is at the beginning"
            ],
            [
                218,
                "            receivedObjectStream.Seek(0, SeekOrigin.Begin);"
            ],
            [
                221,
                "            object baseRes = ArraySerializer.DeserialiseArrayObject(receivedObjectStream, typeof(T), dataProcessors, options);"
            ],
            [
                225,
                "                return DeserialiseGeneralObject<T>(receivedObjectStream, dataProcessors, options);"
            ],
            [
                228,
                "        private T DeserialiseGeneralObject<T>(MemoryStream receivedObjectStream, List<DataProcessor> dataProcessors, Dictionary<string, string> options)"
            ],
            [
                231,
                "            MemoryStream inputStream = receivedObjectStream;"
            ],
            [
                337,
                "                {"
            ],
            [
                338,
                "                    byte[] bytesToSerialise = objectToSerialise as byte[];"
            ],
            [
                340,
                "                    return new StreamSendWrapper(new ThreadSafeStream(new MemoryStream(bytesToSerialise, 0, bytesToSerialise.Length, false, true), true));"
            ],
            [
                341,
                "                }"
            ],
            [
                425,
                "        /// <param name=\"inputStream\">Byte array containing serialized and compressed object</param>"
            ],
            [
                430,
                "        public static unsafe object DeserialiseArrayObject(MemoryStream inputStream, Type objType, List<DataProcessor> dataProcessors, Dictionary<string, string> options)"
            ],
            [
                438,
                "                {"
            ],
            [
                439,
                "                    try"
            ],
            [
                440,
                "                    {"
            ],
            [
                441,
                "                        return (object)inputStream.GetBuffer();"
            ],
            [
                442,
                "                    }"
            ],
            [
                443,
                "                    catch (UnauthorizedAccessException)"
            ],
            [
                444,
                "                    {"
            ],
            [
                445,
                "                        return (object)inputStream.ToArray();"
            ],
            [
                446,
                "                    }"
            ],
            [
                447,
                "                }"
            ],
            [
                454,
                "                        numElements = (int)(inputStream.Length / Marshal.SizeOf(elementType));"
            ],
            [
                458,
                "                        inputStream.Read(temp, (int)inputStream.Length - sizeof(int), sizeof(int));"
            ],
            [
                472,
                "                            MemoryStream inputBytesStream = null;"
            ],
            [
                473,
                "                            try"
            ],
            [
                474,
                "                            {"
            ],
            [
                475,
                "                                //We hope that the buffer is publicly accessible as otherwise it defeats the point of having a special serializer for arrays"
            ],
            [
                476,
                "                                inputBytesStream = new MemoryStream(inputStream.GetBuffer(), 0, (int)(inputStream.Length - ((dataProcessors == null || dataProcessors.Count == 0) ? 0 : sizeof(int))));"
            ],
            [
                477,
                "                            }"
            ],
            [
                478,
                "                            catch (UnauthorizedAccessException)"
            ],
            [
                479,
                "                            {"
            ],
            [
                480,
                "                                inputBytesStream = new MemoryStream(inputStream.ToArray(), 0, (int)(inputStream.Length - ((dataProcessors == null || dataProcessors.Count == 0) ? 0 : sizeof(int))));"
            ],
            [
                481,
                "                            }"
            ],
            [
                482,
                ""
            ],
            [
                483,
                "                            using (inputBytesStream)"
            ]
        ],
        "deleted": [
            [
                178,
                "            return DeserialiseDataObject<T>(new MemoryStream(receivedObjectBytes));"
            ],
            [
                185,
                "        /// <param name=\"receivedObjectBytes\">Byte array containing serialized and compressed object</param>"
            ],
            [
                187,
                "        public T DeserialiseDataObject<T>(MemoryStream receivedObjectBytes)"
            ],
            [
                189,
                "            return DeserialiseDataObject<T>(receivedObjectBytes, null, null);"
            ],
            [
                202,
                "            return DeserialiseDataObject<T>(new MemoryStream(receivedObjectBytes), dataProcessors, options);"
            ],
            [
                209,
                "        /// <param name=\"receivedObjectBytes\">Byte array containing serialized and compressed object</param>"
            ],
            [
                213,
                "        public T DeserialiseDataObject<T>(MemoryStream receivedObjectBytes, List<DataProcessor> dataProcessors, Dictionary<string, string> options)"
            ],
            [
                215,
                "            if (receivedObjectBytes == null) throw new ArgumentNullException(\"Provided paramater receivedObjectBytes should not be null.\");"
            ],
            [
                218,
                "            object baseRes = ArraySerializer.DeserialiseArrayObject(receivedObjectBytes, typeof(T), dataProcessors, options);"
            ],
            [
                222,
                "                return DeserialiseGeneralObject<T>(receivedObjectBytes, dataProcessors, options);"
            ],
            [
                225,
                "        private T DeserialiseGeneralObject<T>(MemoryStream receivedObjectBytes, List<DataProcessor> dataProcessors, Dictionary<string, string> options)"
            ],
            [
                228,
                "            MemoryStream inputStream = receivedObjectBytes;"
            ],
            [
                335,
                "                    return new StreamSendWrapper(new ThreadSafeStream(new MemoryStream(objectToSerialise as byte[]), true));"
            ],
            [
                419,
                "        /// <param name=\"receivedObjectBytes\">Byte array containing serialized and compressed object</param>"
            ],
            [
                424,
                "        public static unsafe object DeserialiseArrayObject(MemoryStream receivedObjectBytes, Type objType, List<DataProcessor> dataProcessors, Dictionary<string, string> options)"
            ],
            [
                432,
                "                    return (object)receivedObjectBytes;"
            ],
            [
                439,
                "                        numElements = (int)(receivedObjectBytes.Length / Marshal.SizeOf(elementType));"
            ],
            [
                443,
                "                        receivedObjectBytes.Read(temp, (int)receivedObjectBytes.Length - sizeof(int), sizeof(int));"
            ],
            [
                448,
                ""
            ],
            [
                458,
                "                            using (MemoryStream inputBytesStream = new MemoryStream(receivedObjectBytes.GetBuffer(), 0, (int)(receivedObjectBytes.Length - ((dataProcessors == null || dataProcessors.Count == 0) ? 0 : sizeof(int)))))"
            ]
        ]
    },
    "num_lines_added": 45,
    "num_lines_removed": 20
}