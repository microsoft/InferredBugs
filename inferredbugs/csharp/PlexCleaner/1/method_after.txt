        private static void CreateLogger(string logfile)
        {
            // Enable Serilog debug output to the console
            SelfLog.Enable(Console.Error);

            // Log to console
            // outputTemplate = "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}"
            // Remove lj to quote strings
            LoggerConfiguration loggerConfiguration = new LoggerConfiguration();
            loggerConfiguration.WriteTo.Console(theme: AnsiConsoleTheme.Code, outputTemplate: "[{Timestamp:HH:mm:ss} {Level:u3}] {Message}{NewLine}{Exception}");

            // Log to file
            // outputTemplate = "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}"
            // Remove lj to quote strings
            if (!string.IsNullOrEmpty(logfile))
                loggerConfiguration.WriteTo.Async(action => action.File(path: logfile, outputTemplate: "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message}{NewLine}{Exception}"));

            // Create static Serilog logger
            Log.Logger = loggerConfiguration.CreateLogger();

            // Set library logger to Serilog logger
            LoggerFactory loggerFactory = new LoggerFactory();
            loggerFactory.AddSerilog(Log.Logger);
            LogOptions.CreateLogger(loggerFactory);
        }