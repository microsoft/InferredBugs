{
    "hash": "1259215908155fd0ec20f1af75a1a8f247c41d0e",
    "message": "Make ContainerBuild.Build parallel",
    "file_num_lines": 250,
    "diff_parsed": {
        "added": [
            [
                237,
                "            var instance1 = new NoDependencyServiceB();"
            ],
            [
                238,
                "            var instance2 = new MultipleInterfaceServiceA();"
            ],
            [
                239,
                "            builder.RegisterInstance<I3>(instance1);"
            ],
            [
                240,
                "            builder.RegisterInstance<I1, I2>(instance2);"
            ],
            [
                243,
                ""
            ],
            [
                244,
                "            var resolve1a = container.Resolve<I3>();"
            ],
            [
                245,
                "            var resolve1b = container.Resolve<I3>();"
            ],
            [
                246,
                "            Assert.That(resolve1a, Is.EqualTo(instance1));"
            ],
            [
                247,
                "            Assert.That(resolve1b, Is.EqualTo(instance1));"
            ],
            [
                248,
                "            Assert.Throws<VContainerException>(() => container.Resolve<NoDependencyServiceB>());"
            ],
            [
                249,
                ""
            ],
            [
                250,
                "            var resolve2a = container.Resolve<I1>();"
            ],
            [
                251,
                "            var resolve2b = container.Resolve<I2>();"
            ],
            [
                252,
                "            Assert.That(resolve2a, Is.EqualTo(instance2));"
            ],
            [
                253,
                "            Assert.That(resolve2b, Is.EqualTo(instance2));"
            ],
            [
                254,
                "            Assert.Throws<VContainerException>(() => container.Resolve<MultipleInterfaceServiceA>());"
            ]
        ],
        "deleted": [
            [
                237,
                "            var instance = new NoDependencyServiceB();"
            ],
            [
                238,
                "            builder.RegisterInstance<I3>(instance);"
            ],
            [
                241,
                "            var obj1 = container.Resolve<I3>();"
            ],
            [
                242,
                "            var obj2 = container.Resolve<I3>();"
            ],
            [
                243,
                "            Assert.That(obj1, Is.EqualTo(instance));"
            ],
            [
                244,
                "            Assert.That(obj2, Is.EqualTo(instance));"
            ]
        ]
    },
    "num_lines_added": 16,
    "num_lines_removed": 6
}