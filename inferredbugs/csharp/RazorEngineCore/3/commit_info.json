{
    "hash": "6aa073c3bee90c51f13e30faa702c901d620d2bd",
    "message": "Added Async() methods.\nUpdated to Load/Save File to use FileStream as it supports asynchronous IO.\nSimply duplicated synchronous Unit Tests into asynchronous ones.",
    "file_num_lines": 88,
    "diff_parsed": {
        "added": [
            [
                4,
                "using System.Threading.Tasks;"
            ],
            [
                11,
                "        protected readonly Type templateType;"
            ],
            [
                23,
                "            return LoadFromFileAsync(fileName: fileName).GetAwaiter().GetResult();"
            ],
            [
                26,
                "        public static async Task<RazorEngineCompiledTemplate> LoadFromFileAsync(string fileName)"
            ],
            [
                27,
                "        {"
            ],
            [
                28,
                "            MemoryStream memoryStream = new MemoryStream();"
            ],
            [
                29,
                ""
            ],
            [
                30,
                "            using (FileStream fileStream = new FileStream("
            ],
            [
                31,
                "                path: fileName,"
            ],
            [
                32,
                "                mode: FileMode.Open,"
            ],
            [
                33,
                "                access: FileAccess.Read,"
            ],
            [
                34,
                "                share: FileShare.None,"
            ],
            [
                35,
                "                bufferSize: 4096,"
            ],
            [
                36,
                "                useAsync: true))"
            ],
            [
                37,
                "            {"
            ],
            [
                38,
                "                await fileStream.CopyToAsync(memoryStream);"
            ],
            [
                39,
                "            }"
            ],
            [
                40,
                ""
            ],
            [
                41,
                "            return new RazorEngineCompiledTemplate(assemblyByteCode: memoryStream);"
            ],
            [
                42,
                "        }"
            ],
            [
                43,
                ""
            ],
            [
                45,
                "        {"
            ],
            [
                46,
                "            return LoadFromStreamAsync(stream).GetAwaiter().GetResult();"
            ],
            [
                47,
                "        }"
            ],
            [
                48,
                ""
            ],
            [
                49,
                "        public static async Task<RazorEngineCompiledTemplate> LoadFromStreamAsync(Stream stream)"
            ],
            [
                52,
                "            await stream.CopyToAsync(memoryStream);"
            ],
            [
                54,
                ""
            ],
            [
                57,
                ""
            ],
            [
                58,
                "        /*public static async Task<T> LoadFromStreamAsync<T>(Stream stream)"
            ],
            [
                59,
                "            where T: RazorEngineCompiledTemplate, new()"
            ],
            [
                60,
                "        {"
            ],
            [
                61,
                "            MemoryStream memoryStream = new MemoryStream();"
            ],
            [
                62,
                "            await stream.CopyToAsync(memoryStream);"
            ],
            [
                63,
                "            memoryStream.Position = 0;"
            ],
            [
                64,
                ""
            ],
            [
                65,
                "            T instance = (T) Activator.CreateInstance<T>();"
            ],
            [
                66,
                ""
            ],
            [
                67,
                "            return new T(memoryStream);"
            ],
            [
                68,
                "        }*/"
            ],
            [
                72,
                "            SaveToStreamAsync(stream).GetAwaiter().GetResult();"
            ],
            [
                75,
                "        public Task SaveToStreamAsync(Stream stream)"
            ],
            [
                77,
                "            return this.assemblyByteCode.CopyToAsync(stream);"
            ],
            [
                80,
                "        public void SaveToFile(string fileName)"
            ],
            [
                81,
                "        {"
            ],
            [
                82,
                "            SaveToFileAsync(fileName).GetAwaiter().GetResult();"
            ],
            [
                83,
                "        }"
            ],
            [
                84,
                ""
            ],
            [
                85,
                "        public Task SaveToFileAsync(string fileName)"
            ],
            [
                86,
                "        {"
            ],
            [
                87,
                "            using (FileStream fileStream = new FileStream("
            ],
            [
                88,
                "                path: fileName,"
            ],
            [
                89,
                "                mode: FileMode.OpenOrCreate,"
            ],
            [
                90,
                "                access: FileAccess.Write,"
            ],
            [
                91,
                "                share: FileShare.None,"
            ],
            [
                92,
                "                bufferSize: 4096,"
            ],
            [
                93,
                "                useAsync: true))"
            ],
            [
                94,
                "            {"
            ],
            [
                95,
                "                return assemblyByteCode.CopyToAsync(fileStream);"
            ],
            [
                96,
                "            }"
            ],
            [
                97,
                "        }"
            ],
            [
                98,
                ""
            ],
            [
                100,
                "        {"
            ],
            [
                101,
                "            return RunAsync(model).GetAwaiter().GetResult();"
            ],
            [
                102,
                "        }"
            ],
            [
                103,
                ""
            ],
            [
                104,
                "        public async Task<string> RunAsync(object model = null)"
            ],
            [
                113,
                "            await instance.ExecuteAsync();"
            ]
        ],
        "deleted": [
            [
                10,
                "        private readonly Type templateType;"
            ],
            [
                22,
                "            return new RazorEngineCompiledTemplate(new MemoryStream(File.ReadAllBytes(fileName)));"
            ],
            [
                28,
                "            stream.CopyTo(memoryStream);"
            ],
            [
                30,
                ""
            ],
            [
                36,
                "            this.assemblyByteCode.CopyTo(stream);"
            ],
            [
                39,
                "        public void SaveToFile(string fileName)"
            ],
            [
                41,
                "            File.WriteAllBytes(fileName, this.assemblyByteCode.ToArray());"
            ],
            [
                53,
                "            instance.ExecuteAsync().Wait();"
            ]
        ]
    },
    "num_lines_added": 68,
    "num_lines_removed": 8
}