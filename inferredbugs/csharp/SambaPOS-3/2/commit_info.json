{
    "hash": "a3bf47ede5b1e738495f02f8b41daf411945dae1",
    "message": "decimal support for fluentscript",
    "file_num_lines": 358,
    "diff_parsed": {
        "added": [
            [
                21,
                "                var day = (int)((LDate)obj).Value.DayOfWeek;"
            ],
            [
                24,
                ""
            ],
            [
                40,
                "            if (val == null) return LObjects.Null;"
            ],
            [
                43,
                ""
            ],
            [
                44,
                "            if (type == typeof(int))"
            ],
            [
                46,
                ""
            ],
            [
                49,
                ""
            ],
            [
                50,
                "            if (type == typeof(decimal))"
            ],
            [
                51,
                "                return new LNumber(Convert.ToDouble(val));"
            ],
            [
                52,
                ""
            ],
            [
                63,
                "                return new LDayOfWeek((DayOfWeek)val);"
            ],
            [
                72,
                "                if (type == typeof(List<object>) || gentype == typeof(List<>) || gentype == typeof(IList<>))"
            ],
            [
                73,
                "                    return new LArray((IList)val);"
            ],
            [
                75,
                "                if (type == typeof(Dictionary<string, object>))"
            ],
            [
                76,
                "                    return new LMap((Dictionary<string, object>)val);"
            ],
            [
                112,
                ""
            ],
            [
                124,
                "            if (hostLangType == typeof(decimal)) return LTypes.Number;"
            ],
            [
                130,
                ""
            ],
            [
                142,
                "            if (langTypeName == LTypes.Bool.Name) return LTypes.Bool;"
            ],
            [
                143,
                "            if (langTypeName == LTypes.Date.Name) return LTypes.Date;"
            ],
            [
                144,
                "            if (langTypeName == LTypes.Time.Name) return LTypes.Time;"
            ],
            [
                145,
                "            if (langTypeName == LTypes.Number.Name) return LTypes.Number;"
            ],
            [
                146,
                "            if (langTypeName == LTypes.String.Name) return LTypes.String;"
            ],
            [
                180,
                "            lclass.Type = lclassType;"
            ],
            [
                213,
                "            //if (ltype == LTypes.Number) return typeof(int);"
            ],
            [
                220,
                ""
            ],
            [
                221,
                "            return typeof(object);"
            ],
            [
                238,
                ""
            ],
            [
                283,
                "                if (item is LObject)"
            ],
            [
                285,
                "                    val = ((LObject)item).GetValue();"
            ],
            [
                334,
                ""
            ],
            [
                343,
                "                else if (sourceArg.Type == LTypes.Array)"
            ],
            [
                346,
                "                    if (param.ParameterType.IsArray)"
            ],
            [
                348,
                "                        if (param.ParameterType == typeof(string[]))"
            ],
            [
                350,
                "                            var convertedVal = ConvertToHostLangArray(param.ParameterType, (LArray)sourceArg);"
            ],
            [
                359,
                "                        if (gentype == typeof(IList<object>))"
            ],
            [
                365,
                "                        else if (gentype == typeof(List<>) || gentype == typeof(IList<>))"
            ],
            [
                375,
                "        }"
            ],
            [
                448,
                "            var hostType = typeof(int);"
            ],
            [
                449,
                "            if (type == typeof(string[]))"
            ],
            [
                452,
                "                hostType = typeof(string);"
            ],
            [
                457,
                "                hostType = typeof(bool);"
            ],
            [
                462,
                "                hostType = typeof(DateTime);"
            ],
            [
                467,
                "                hostType = typeof(TimeSpan);"
            ],
            [
                472,
                "                hostType = typeof(double);"
            ],
            [
                477,
                "                hostType = typeof(float);"
            ],
            [
                482,
                "                hostType = typeof(long);"
            ],
            [
                487,
                "                hostType = typeof(int);"
            ],
            [
                490,
                "            for (var ndx = 0; ndx < fsarray.Count; ndx++)"
            ]
        ],
        "deleted": [
            [
                21,
                "                var day = (int)((LDate) obj).Value.DayOfWeek;"
            ],
            [
                24,
                ""
            ],
            [
                40,
                "            if (val == null) return LObjects.Null;"
            ],
            [
                43,
                ""
            ],
            [
                44,
                "            if (type == typeof(int))"
            ],
            [
                46,
                ""
            ],
            [
                49,
                ""
            ],
            [
                60,
                "                return new LDayOfWeek((DayOfWeek) val);"
            ],
            [
                69,
                "                if (type == typeof(List<object>) || gentype == typeof (List<>) || gentype == typeof (IList<>))"
            ],
            [
                70,
                "                    return new LArray((IList) val);"
            ],
            [
                72,
                "                if (type == typeof (Dictionary<string, object>))"
            ],
            [
                73,
                "                    return new LMap((Dictionary<string, object>) val);"
            ],
            [
                109,
                ""
            ],
            [
                126,
                ""
            ],
            [
                138,
                "            if (langTypeName == LTypes.Bool.Name   ) return LTypes.Bool;"
            ],
            [
                139,
                "            if (langTypeName == LTypes.Date.Name   ) return LTypes.Date;"
            ],
            [
                140,
                "            if (langTypeName == LTypes.Time.Name   ) return LTypes.Time;"
            ],
            [
                141,
                "            if (langTypeName == LTypes.Number.Name ) return LTypes.Number;"
            ],
            [
                142,
                "            if (langTypeName == LTypes.String.Name ) return LTypes.String;"
            ],
            [
                176,
                "            lclass.Type = lclassType;"
            ],
            [
                209,
                "            if (ltype == LTypes.Number) return typeof(int);"
            ],
            [
                216,
                ""
            ],
            [
                217,
                "            return typeof (object);"
            ],
            [
                234,
                ""
            ],
            [
                279,
                "                if(item is LObject)"
            ],
            [
                281,
                "                    val = ((LObject) item).GetValue();"
            ],
            [
                330,
                ""
            ],
            [
                339,
                "                else if (sourceArg.Type == LTypes.Array )"
            ],
            [
                342,
                "                    if(param.ParameterType.IsArray)"
            ],
            [
                344,
                "                        if(param.ParameterType == typeof(string[]))"
            ],
            [
                346,
                "                            var convertedVal = ConvertToHostLangArray(param.ParameterType, (LArray) sourceArg);"
            ],
            [
                355,
                "                        if (gentype == typeof (IList<object>))"
            ],
            [
                361,
                "                        else if (gentype == typeof (List<>) || gentype == typeof (IList<>))"
            ],
            [
                371,
                "        }"
            ],
            [
                444,
                "            var hostType = typeof (int);"
            ],
            [
                445,
                "            if (     type == typeof(string[]))"
            ],
            [
                448,
                "                hostType = typeof (string);"
            ],
            [
                453,
                "                hostType = typeof (bool);"
            ],
            [
                458,
                "                hostType = typeof (DateTime);"
            ],
            [
                463,
                "                hostType = typeof (TimeSpan);"
            ],
            [
                468,
                "                hostType = typeof (double);"
            ],
            [
                473,
                "                hostType = typeof (float);"
            ],
            [
                478,
                "                hostType = typeof (long);"
            ],
            [
                483,
                "                hostType = typeof (int);"
            ],
            [
                486,
                "            for(var ndx = 0; ndx < fsarray.Count; ndx++)"
            ]
        ]
    },
    "num_lines_added": 49,
    "num_lines_removed": 45
}