{
    "hash": "5df9747038242041a292580265b60f071cfdd7c1",
    "message": "Fixed a bug in Contact.UpdatePosition for masspoints.",
    "file_num_lines": 601,
    "diff_parsed": {
        "added": [
            [
                165,
                "        private ThreadManager threadManager = ThreadManager.Instance;"
            ],
            [
                224,
                "        public void AddBody(SoftBody body)"
            ],
            [
                225,
                "        {"
            ],
            [
                226,
                "            if (body == null) throw new ArgumentNullException(\"body\", \"body can't be null.\");"
            ],
            [
                227,
                "            if (softbodies.Contains(body)) throw new ArgumentException(\"The body was already added to the world.\", \"body\");"
            ],
            [
                228,
                ""
            ],
            [
                229,
                "            this.softbodies.Add(body);"
            ],
            [
                230,
                "            this.CollisionSystem.AddEntity(body);"
            ],
            [
                231,
                ""
            ],
            [
                232,
                "            events.RaiseAddedSoftBody(body);"
            ],
            [
                233,
                ""
            ],
            [
                234,
                "            foreach (Constraint constraint in body.springs)"
            ],
            [
                235,
                "                AddConstraint(constraint);"
            ],
            [
                236,
                ""
            ],
            [
                237,
                "            foreach (SoftBody.MassPoint massPoint in body.points)"
            ],
            [
                238,
                "            {"
            ],
            [
                239,
                "                events.RaiseAddedRigidBody(massPoint);"
            ],
            [
                240,
                "                rigidBodies.Add(massPoint);"
            ],
            [
                241,
                "            }"
            ],
            [
                242,
                "        }"
            ],
            [
                243,
                ""
            ],
            [
                244,
                "        public bool RemoveBody(SoftBody body)"
            ],
            [
                245,
                "        {"
            ],
            [
                246,
                "            if (!this.softbodies.Remove(body)) return false;"
            ],
            [
                247,
                ""
            ],
            [
                248,
                "            this.CollisionSystem.RemoveEntity(body);"
            ],
            [
                249,
                ""
            ],
            [
                250,
                "            events.RaiseRemovedSoftBody(body);"
            ],
            [
                251,
                ""
            ],
            [
                252,
                "            foreach (Constraint constraint in body.springs)"
            ],
            [
                253,
                "                RemoveConstraint(constraint);"
            ],
            [
                254,
                ""
            ],
            [
                255,
                "            foreach (SoftBody.MassPoint massPoint in body.points)"
            ],
            [
                256,
                "                RemoveBody(massPoint, true);"
            ],
            [
                257,
                ""
            ],
            [
                258,
                "            return true;"
            ],
            [
                259,
                "        }"
            ],
            [
                260,
                ""
            ],
            [
                261,
                "        /// <summary>"
            ],
            [
                262,
                "        /// Gets the <see cref=\"CollisionSystem\"/> used"
            ],
            [
                263,
                "        /// to detect collisions."
            ],
            [
                264,
                "        /// </summary>"
            ],
            [
                265,
                "        public CollisionSystem CollisionSystem { set; get; }"
            ],
            [
                266,
                ""
            ],
            [
                427,
                "            if (!removeMassPoints && body.IsParticle) return false;"
            ],
            [
                468,
                "            this.CollisionSystem.AddEntity(body);"
            ],
            [
                772,
                "                    if(islands[i].IsActive()) threadManager.AddTask(arbiterCallback, islands[i]);"
            ],
            [
                775,
                "                threadManager.Execute();"
            ],
            [
                797,
                "                    if (!(body.isParticle))"
            ],
            [
                826,
                "            if (!(body.isParticle))"
            ],
            [
                870,
                "                    threadManager.AddTask(integrateCallback, body);"
            ],
            [
                873,
                "                threadManager.Execute();"
            ]
        ],
        "deleted": [
            [
                165,
                "        public void AddBody(SoftBody body)"
            ],
            [
                166,
                "        {"
            ],
            [
                167,
                "            if (body == null) throw new ArgumentNullException(\"body\", \"body can't be null.\");"
            ],
            [
                168,
                "            if (softbodies.Contains(body)) throw new ArgumentException(\"The body was already added to the world.\", \"body\");"
            ],
            [
                169,
                ""
            ],
            [
                170,
                "            this.softbodies.Add(body);"
            ],
            [
                171,
                "            this.CollisionSystem.AddEntity(body);"
            ],
            [
                172,
                ""
            ],
            [
                173,
                "            events.RaiseAddedSoftBody(body);"
            ],
            [
                174,
                ""
            ],
            [
                175,
                "            foreach (Constraint constraint in body.springs)"
            ],
            [
                176,
                "                AddConstraint(constraint);"
            ],
            [
                177,
                ""
            ],
            [
                178,
                "            foreach (SoftBody.MassPoint massPoint in body.points)"
            ],
            [
                179,
                "                AddBody(massPoint);"
            ],
            [
                180,
                "        }"
            ],
            [
                181,
                ""
            ],
            [
                182,
                "        public bool RemoveBody(SoftBody body)"
            ],
            [
                183,
                "        {"
            ],
            [
                184,
                "            if(!this.softbodies.Remove(body)) return false;"
            ],
            [
                185,
                ""
            ],
            [
                186,
                "            this.CollisionSystem.RemoveEntity(body);"
            ],
            [
                187,
                ""
            ],
            [
                188,
                "            events.RaiseRemovedSoftBody(body);"
            ],
            [
                189,
                ""
            ],
            [
                190,
                "            foreach (Constraint constraint in body.springs)"
            ],
            [
                191,
                "                RemoveConstraint(constraint);"
            ],
            [
                192,
                ""
            ],
            [
                193,
                "            foreach (SoftBody.MassPoint massPoint in body.points)"
            ],
            [
                194,
                "                RemoveBody(massPoint,true);"
            ],
            [
                195,
                ""
            ],
            [
                196,
                "            return true;"
            ],
            [
                197,
                "        }"
            ],
            [
                198,
                ""
            ],
            [
                199,
                "        /// <summary>"
            ],
            [
                200,
                "        /// Gets the <see cref=\"CollisionSystem\"/> used"
            ],
            [
                201,
                "        /// to detect collisions."
            ],
            [
                202,
                "        /// </summary>"
            ],
            [
                203,
                "        public CollisionSystem CollisionSystem {  set; get; }"
            ],
            [
                204,
                ""
            ],
            [
                220,
                ""
            ],
            [
                244,
                "            ThreadManager.InitializeInstance();"
            ],
            [
                245,
                ""
            ],
            [
                426,
                "            if (!removeMassPoints && body.IsMassPoint) return false;"
            ],
            [
                467,
                "            if(!(body.isMassPoint)) this.CollisionSystem.AddEntity(body);"
            ],
            [
                525,
                "        float stupidCalculus = 0.0f;"
            ],
            [
                526,
                ""
            ],
            [
                527,
                ""
            ],
            [
                774,
                "                    if(islands[i].IsActive()) ThreadManager.internalInstance.AddTask(arbiterCallback, islands[i]);"
            ],
            [
                777,
                "                ThreadManager.internalInstance.Execute();"
            ],
            [
                799,
                "                    if (!(body.isMassPoint))"
            ],
            [
                828,
                "            if (!(body.isMassPoint))"
            ],
            [
                872,
                "                    ThreadManager.internalInstance.AddTask(integrateCallback, body);"
            ],
            [
                875,
                "                ThreadManager.internalInstance.Execute();"
            ]
        ]
    },
    "num_lines_added": 52,
    "num_lines_removed": 54
}