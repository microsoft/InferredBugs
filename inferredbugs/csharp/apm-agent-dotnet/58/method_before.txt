  [Fact]
		public void TagsOnTransactionAndSpan()
		{
			const string transactionName = "TestTransaction";
			const string transactionType = "UnitTest";
			const string spanName = "TestSpan";
			const string exceptionMessage = "Foo!";
			var payloadSender = new MockPayloadSender();
			var agent = new ApmAgent(new TestAgentComponents(payloadSender: payloadSender));

			var transaction = agent.Tracer.StartTransaction(transactionName, transactionType);
			transaction.Tags["fooTransaction1"] = "barTransaction1";
			transaction.Tags["fooTransaction2"] = "barTransaction2";

			var span = transaction.StartSpan(spanName, ApiConstants.TypeExternal);
			span.Tags["fooSpan1"] = "barSpan1";
			span.Tags["fooSpan2"] = "barSpan2";

			Thread.Sleep(5); //Make sure we have duration > 0

			try
			{
				throw new InvalidOperationException(exceptionMessage);
			}
			catch (Exception e)
			{
				span.CaptureException(e);
			}

			span.End();
			transaction.End();

			payloadSender.Transactions.Should().ContainSingle();
			payloadSender.Errors.Should().ContainSingle();
			payloadSender.FirstError.Exception.Message.Should().Be(exceptionMessage);

			payloadSender.FirstTransaction.Tags.Should().Contain("fooTransaction1", "barTransaction1");
			payloadSender.FirstTransaction.Context.Tags.Should().Contain("fooTransaction1", "barTransaction1");

			payloadSender.FirstTransaction.Tags.Should().Contain("fooTransaction2", "barTransaction2");
			payloadSender.FirstTransaction.Context.Tags.Should().Contain("fooTransaction2", "barTransaction2");

			payloadSender.SpansOnFirstTransaction[0].Tags.Should().Contain("fooSpan1", "barSpan1");
			payloadSender.SpansOnFirstTransaction[0].Context.Tags.Should().Contain("fooSpan1", "barSpan1");

			payloadSender.SpansOnFirstTransaction[0].Tags.Should().Contain("fooSpan2", "barSpan2");
			payloadSender.SpansOnFirstTransaction[0].Context.Tags.Should().Contain("fooSpan2", "barSpan2");
		}