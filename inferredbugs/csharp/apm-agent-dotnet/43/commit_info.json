{
    "hash": "6bd2a2d266ac1a6d32e11585fb8ad6797d8f0644",
    "message": "Adapting tests to intake v2 #13 - WIP",
    "file_num_lines": 393,
    "diff_parsed": {
        "added": [
            [
                92,
                "\t\t\tvar firstSpan = payloadSender.FirstSpan;"
            ],
            [
                107,
                "\t\t\tvar payloadSender = new MockPayloadSender();"
            ],
            [
                108,
                "\t\t\tvar agent = new ApmAgent(new TestAgentComponents(logger, payloadSender: payloadSender));"
            ],
            [
                131,
                "\t\t\tpayloadSender.Transactions.Should().NotBeNull();"
            ],
            [
                132,
                "\t\t\tpayloadSender.Spans.Should().ContainSingle();"
            ],
            [
                194,
                "\t\t\tvar (listener, payloadSender, _) = RegisterListenerAndStartTransaction();"
            ],
            [
                203,
                "\t\t\t\tvar firstSpan = payloadSender.FirstSpan;"
            ],
            [
                219,
                "\t\t\tvar (listener, payloadSender, _) = RegisterListenerAndStartTransaction();"
            ],
            [
                228,
                "\t\t\t\tvar firstSpan = payloadSender.FirstSpan;"
            ],
            [
                281,
                "\t\t\t\tpayloadSender.FirstError.Exception.Message.Should().Be(exceptionMsg);"
            ],
            [
                282,
                "\t\t\t\tpayloadSender.FirstError.Exception.Type.Should().Be(typeof(Exception).FullName);"
            ],
            [
                292,
                "\t\t\tvar (listener, payloadSender, _) = RegisterListenerAndStartTransaction();"
            ],
            [
                303,
                "\t\t\tpayloadSender.FirstSpan.Type.Should().Be(ApiConstants.TypeExternal);"
            ],
            [
                304,
                "\t\t\tpayloadSender.FirstSpan.Subtype.Should().Be(ApiConstants.SubtypeHttp);"
            ],
            [
                305,
                "\t\t\tpayloadSender.FirstSpan.Action.Should().BeNull(); //we don't set Action for HTTP calls"
            ],
            [
                314,
                "\t\t\tvar (listener, payloadSender, _) = RegisterListenerAndStartTransaction();"
            ],
            [
                325,
                "\t\t\tpayloadSender.FirstSpan.Name.Should().Be(\"GET localhost\");"
            ],
            [
                335,
                "\t\t\tvar (listener, payloadSender, _) = RegisterListenerAndStartTransaction();"
            ],
            [
                348,
                "\t\t\t\tvar firstSpan = payloadSender.FirstSpan;"
            ],
            [
                363,
                "\t\t\tvar (listener, payloadSender, _) = RegisterListenerAndStartTransaction();"
            ],
            [
                372,
                "\t\t\t\tvar firstSpan = payloadSender.FirstSpan;"
            ],
            [
                410,
                "\t\t\t\tmockPayloadSender.Transactions.Should().NotBeEmpty();"
            ],
            [
                421,
                "\t\t\tvar payloadSender = new MockPayloadSender();"
            ],
            [
                422,
                "\t\t\tvar agent = new ApmAgent(new TestAgentComponents(payloadSender: payloadSender));"
            ],
            [
                425,
                "\t\t\tvar spans = payloadSender.Spans;"
            ],
            [
                438,
                "\t\t\t\tspans = payloadSender.Spans;"
            ],
            [
                481,
                "\t\t\t\tmockPayloadSender.Transactions.Should().NotBeEmpty();"
            ],
            [
                521,
                "\t\t\t\tmockPayloadSender.Clear();"
            ],
            [
                538,
                "\t\t\t\tmockPayloadSender.FirstTransaction.Should().NotBeNull();"
            ]
        ],
        "deleted": [
            [
                92,
                "\t\t\tvar firstSpan = Agent.TransactionContainer.Transactions.Value.Spans[0] as Span;"
            ],
            [
                107,
                "\t\t\tvar agent = new ApmAgent(new TestAgentComponents(logger));"
            ],
            [
                130,
                "\t\t\tAgent.TransactionContainer.Transactions.Value.Should().NotBeNull();"
            ],
            [
                131,
                "\t\t\tAgent.TransactionContainer.Transactions.Value.Spans.Should().ContainSingle();"
            ],
            [
                193,
                "\t\t\tvar (listener, _, _) = RegisterListenerAndStartTransaction();"
            ],
            [
                202,
                "\t\t\t\tvar firstSpan = Agent.TransactionContainer.Transactions.Value.Spans[0] as Span;"
            ],
            [
                218,
                "\t\t\tvar (listener, _, _) = RegisterListenerAndStartTransaction();"
            ],
            [
                227,
                "\t\t\t\tvar firstSpan = Agent.TransactionContainer.Transactions.Value.Spans[0] as Span;"
            ],
            [
                280,
                "\t\t\t\tpayloadSender.Errors[0].Errors[0].Exception.Message.Should().Be(exceptionMsg);"
            ],
            [
                281,
                "\t\t\t\tpayloadSender.Errors[0].Errors[0].Exception.Type.Should().Be(typeof(Exception).FullName);"
            ],
            [
                291,
                "\t\t\tvar (listener, _, _) = RegisterListenerAndStartTransaction();"
            ],
            [
                302,
                "\t\t\tAgent.TransactionContainer.Transactions.Value.Spans[0].Type.Should().Be(ApiConstants.TypeExternal);"
            ],
            [
                303,
                "\t\t\tAgent.TransactionContainer.Transactions.Value.Spans[0].Subtype.Should().Be(ApiConstants.SubtypeHttp);"
            ],
            [
                304,
                "\t\t\tAgent.TransactionContainer.Transactions.Value.Spans[0].Action.Should().BeNull(); //we don't set Action for HTTP calls"
            ],
            [
                313,
                "\t\t\tvar (listener, _, _) = RegisterListenerAndStartTransaction();"
            ],
            [
                324,
                "\t\t\tAgent.TransactionContainer.Transactions.Value.Spans[0].Name.Should().Be(\"GET localhost\");"
            ],
            [
                334,
                "\t\t\tvar (listener, _, _) = RegisterListenerAndStartTransaction();"
            ],
            [
                347,
                "\t\t\t\tvar firstSpan = Agent.TransactionContainer.Transactions.Value.Spans[0] as Span;"
            ],
            [
                362,
                "\t\t\tvar (listener, _, _) = RegisterListenerAndStartTransaction();"
            ],
            [
                371,
                "\t\t\t\tvar firstSpan = Agent.TransactionContainer.Transactions.Value.Spans[0] as Span;"
            ],
            [
                409,
                "\t\t\t\tmockPayloadSender.Payloads[0].Transactions.Should().NotBeEmpty();"
            ],
            [
                420,
                "\t\t\tvar agent = new ApmAgent(new TestAgentComponents());"
            ],
            [
                423,
                "\t\t\tvar spans = Agent.TransactionContainer.Transactions.Value.Spans;"
            ],
            [
                436,
                "\t\t\t\tspans = Agent.TransactionContainer.Transactions.Value.Spans;"
            ],
            [
                479,
                "\t\t\t\tmockPayloadSender.Payloads[0].Transactions.Should().NotBeEmpty();"
            ],
            [
                519,
                "\t\t\t\tmockPayloadSender.Payloads.Clear();"
            ],
            [
                536,
                "\t\t\t\tmockPayloadSender.Payloads[0].Transactions[0].Should().NotBeNull();"
            ]
        ]
    },
    "num_lines_added": 29,
    "num_lines_removed": 27
}