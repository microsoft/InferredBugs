  private void AssertWith1TransactionAnd1Error(Action<ApmAgent> action)
		{
			var payloadSender = new MockPayloadSender();
			var agent = new ApmAgent(new TestAgentComponents(payloadSender: payloadSender));

			action(agent);

			Assert.NotEmpty(payloadSender.Payloads);
			Assert.NotEmpty(payloadSender.Payloads[0].Transactions);

			Assert.Equal(TransactionName, payloadSender.Payloads[0].Transactions[0].Name);
			Assert.Equal(TransactionType, payloadSender.Payloads[0].Transactions[0].Type);


			//`await Task.Delay` is inaccurate, so we enable 10% error in the test
			var expectedTransactionLength = SleepLength - (SleepLength * 0.1);
			var duration = payloadSender.Payloads[0].Transactions[0].Duration;
			Assert.True(duration >= expectedTransactionLength, $"Expected {duration} to be greater or equal to: {expectedTransactionLength}");

			Assert.NotEmpty(payloadSender.Errors);
			Assert.NotEmpty(payloadSender.Errors[0].Errors);

			Assert.Equal(typeof(InvalidOperationException).FullName, payloadSender.Errors[0].Errors[0].Exception.Type);
			Assert.Equal(ExceptionMessage, payloadSender.Errors[0].Errors[0].Exception.Message);
		}