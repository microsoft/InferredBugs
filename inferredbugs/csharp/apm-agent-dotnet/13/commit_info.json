{
    "hash": "0d7eaa01f993cec12b297865688f04425a299f09",
    "message": "Add servicename configsetting",
    "file_num_lines": 137,
    "diff_parsed": {
        "added": [
            [
                1,
                "\ufeffusing System;"
            ],
            [
                2,
                "using System.Linq;"
            ],
            [
                3,
                "using System.Reflection;"
            ],
            [
                43,
                "\t\t\t\t$\"Error {nameof(TestAgentConfigurationReader)}: Failed parsing server URL from {TestAgentConfigurationReader.Origin}: {ConfigConsts.ConfigKeys.Urls}, value: {serverUrl}\","
            ],
            [
                88,
                "\t\t\t\t$\"Error {nameof(TestAgentConfigurationReader)}: Failed parsing server URL from {TestAgentConfigurationReader.Origin}: {ConfigConsts.ConfigKeys.Urls}, value: {serverUrl2}\","
            ],
            [
                132,
                "\t\t\t\t$\"Error Config: Failed parsing log level from {TestAgentConfigurationReader.Origin}: {ConfigConsts.ConfigKeys.Level}, value: {logLevelValue}. Defaulting to log level 'Error'\","
            ],
            [
                147,
                "\t\t\t//By default XUnit uses 'testhost' as the entry assembly, and that is what the"
            ],
            [
                148,
                "\t\t\t//agent reports if we don't set it to anything:"
            ],
            [
                149,
                "\t\t\tAssert.False(string.IsNullOrEmpty(payloadSender.Payloads[0].Service.Name));"
            ],
            [
                150,
                "\t\t\tAssert.False(payloadSender.Payloads[0].Service.Name.Contains('.'));"
            ],
            [
                151,
                "\t\t}"
            ],
            [
                152,
                ""
            ],
            [
                153,
                "\t\t/// <summary>"
            ],
            [
                154,
                "\t\t/// Sets the ELASTIC_APM_SERVICE_NAME environment variable and makes sure that"
            ],
            [
                155,
                "\t\t/// when the agent sends data to the server it has the value from the"
            ],
            [
                156,
                "\t\t/// ELASTIC_APM_SERVICE_NAME environment variable as service name."
            ],
            [
                157,
                "\t\t/// </summary>"
            ],
            [
                158,
                "\t\t[Fact]"
            ],
            [
                159,
                "\t\tpublic void ReadServiceNameViaEnvironmentVariable()"
            ],
            [
                160,
                "\t\t{"
            ],
            [
                161,
                "\t\t\tvar serviceName = \"MyService123\";"
            ],
            [
                162,
                "\t\t\tEnvironment.SetEnvironmentVariable(ConfigConsts.ConfigKeys.ServiceName, serviceName);"
            ],
            [
                163,
                "\t\t\tvar payloadSender = new MockPayloadSender();"
            ],
            [
                164,
                "\t\t\tvar agent = new ApmAgent(new AgentComponents(payloadSender: payloadSender));"
            ],
            [
                165,
                "\t\t\tagent.Tracer.CaptureTransaction(\"TestTransactionName\", \"TestTransactionType\", (t) => {  Thread.Sleep(2);  });"
            ],
            [
                166,
                ""
            ],
            [
                167,
                "\t\t\tAssert.Equal(serviceName, payloadSender.Payloads[0].Service.Name);"
            ],
            [
                168,
                "\t\t}"
            ],
            [
                169,
                ""
            ],
            [
                170,
                "\t\t/// <summary>"
            ],
            [
                171,
                "\t\t/// Sets the ELASTIC_APM_SERVICE_NAME environment variable to a value that contains a '.'"
            ],
            [
                172,
                "\t\t/// Makes sure that when the agent sends data to the server it has the value from the"
            ],
            [
                173,
                "\t\t/// ELASTIC_APM_SERVICE_NAME environment variable as service name and also makes sure that"
            ],
            [
                174,
                "\t\t/// the '.' is replaced."
            ],
            [
                175,
                "\t\t/// </summary>"
            ],
            [
                176,
                "\t\t[Fact]"
            ],
            [
                177,
                "\t\tpublic void ReadServiceNameWithDotViaEnvironmentVariable()"
            ],
            [
                178,
                "\t\t{"
            ],
            [
                179,
                "\t\t\tvar serviceName = \"My.Service.Test\";"
            ],
            [
                180,
                "\t\t\tEnvironment.SetEnvironmentVariable(ConfigConsts.ConfigKeys.ServiceName, serviceName);"
            ],
            [
                181,
                "\t\t\tvar payloadSender = new MockPayloadSender();"
            ],
            [
                182,
                "\t\t\tvar agent = new ApmAgent(new AgentComponents(payloadSender: payloadSender));"
            ],
            [
                183,
                "\t\t\tagent.Tracer.CaptureTransaction(\"TestTransactionName\", \"TestTransactionType\", (t) => {  Thread.Sleep(2);  });"
            ],
            [
                184,
                ""
            ],
            [
                185,
                "\t\t\tAssert.Equal(serviceName.Replace('.', '_'), payloadSender.Payloads[0].Service.Name);"
            ]
        ],
        "deleted": [
            [
                1,
                "\ufeffusing System.Reflection;"
            ],
            [
                41,
                "\t\t\t\t$\"Error {nameof(TestAgentConfigurationReader)}: Failed parsing server URL from {TestAgentConfigurationReader.Origin}: {TestAgentConfigurationReader.Keys.Urls}, value: {serverUrl}\","
            ],
            [
                86,
                "\t\t\t\t$\"Error {nameof(TestAgentConfigurationReader)}: Failed parsing server URL from {TestAgentConfigurationReader.Origin}: {TestAgentConfigurationReader.Keys.Urls}, value: {serverUrl2}\","
            ],
            [
                130,
                "\t\t\t\t$\"Error Config: Failed parsing log level from {TestAgentConfigurationReader.Origin}: {TestAgentConfigurationReader.Keys.Level}, value: {logLevelValue}. Defaulting to log level 'Error'\","
            ],
            [
                145,
                "\t\t\t//Assert.Equal(\"Elastic_Apm_Tests\", payloadSender.Payloads[0].Service.Name); - WIP"
            ]
        ]
    },
    "num_lines_added": 45,
    "num_lines_removed": 5
}