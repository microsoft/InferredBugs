{
    "hash": "6c80aeeb96c19d750cb79844ea01f52137cf09fd",
    "message": "Added support for multi-line msgid output to po file",
    "file_num_lines": 401,
    "diff_parsed": {
        "added": [
            [
                166,
                "\t\t\t\t\tstring prefix = hasReferences ? \"\" : prefix = \"#~ \";"
            ],
            [
                167,
                ""
            ],
            [
                168,
                "                    WriteString(stream, hasReferences, \"msgid\", item.Id);"
            ],
            [
                169,
                "                    WriteString(stream, hasReferences, \"msgstr\", escape(item.Message));"
            ],
            [
                170,
                "                    stream.WriteLine(\"\");"
            ],
            [
                261,
                "\t\t\t\tbool itemStarted = false;"
            ],
            [
                275,
                "\t\t\t\t\t\t\titemStarted = true;"
            ],
            [
                297,
                "\t\t\t\t\tif (itemStarted || line.StartsWith(\"#~\"))"
            ],
            [
                325,
                "\t\t\t\t\titemStarted = false;"
            ],
            [
                352,
                "            TranslateItem message = new TranslateItem { Id = \"\" };"
            ],
            [
                395,
                "        /// <summary>"
            ],
            [
                396,
                "        /// Helper for writing either a msgid or msgstr to the po file."
            ],
            [
                397,
                "        /// </summary>"
            ],
            [
                398,
                "        /// <param name=\"stream\"></param>"
            ],
            [
                399,
                "        /// <param name=\"hasReferences\"></param>"
            ],
            [
                400,
                "        /// <param name=\"type\">\"msgid\" or \"msgstr\"</param>"
            ],
            [
                401,
                "        /// <param name=\"value\"></param>"
            ],
            [
                402,
                "        private static void WriteString(StreamWriter stream, bool hasReferences, string type, string value)"
            ],
            [
                403,
                "        {"
            ],
            [
                404,
                "        // Logic for outputting multi-line msgid."
            ],
            [
                405,
                "        //"
            ],
            [
                406,
                "        // IN : a<LF>b"
            ],
            [
                407,
                "        // OUT: msgid \"a\\n\""
            ],
            [
                408,
                "        //      msgid \"b\""
            ],
            [
                409,
                "        //"
            ],
            [
                410,
                "        // IN : a<LF>b<LF>"
            ],
            [
                411,
                "        // OUT: msgid \"a\\n\""
            ],
            [
                412,
                "        //      msgid \"b\\n\""
            ],
            [
                413,
                "        //"
            ],
            [
                414,
                "\t\t\tstring prefix = hasReferences ? \"\" : prefix = \"#~ \";"
            ],
            [
                415,
                "\t\t\tvalue = value ?? \"\";"
            ],
            [
                416,
                "            value = value.Replace(\"\\r\\n\", \"\\n\");"
            ],
            [
                417,
                "            string[] lines = value.Split('\\n');"
            ],
            [
                418,
                "            if (lines.Length > 1) {"
            ],
            [
                419,
                "                stream.WriteLine(string.Format(\"{0}{1} \\\"\\\"\", prefix, type));"
            ],
            [
                420,
                "                for (int i = 0; i < lines.Length; ++i) {"
            ],
            [
                421,
                "                    string m = lines[i];"
            ],
            [
                422,
                "                    bool last = i == lines.Length -1;"
            ],
            [
                423,
                "                    if (m.Length != 0) {"
            ],
            [
                424,
                "                        stream.WriteLine(string.Format(\"\\\"{0}{1}\\\"\", m, last ? \"\" : \"\\\\n\"));"
            ],
            [
                425,
                "                    }"
            ],
            [
                426,
                "                }"
            ],
            [
                427,
                "            }"
            ],
            [
                428,
                "            else {"
            ],
            [
                429,
                "                stream.WriteLine(string.Format(\"{0}{1} \\\"{2}\\\"\", prefix, type, value));"
            ],
            [
                430,
                "            }"
            ],
            [
                431,
                "        }"
            ],
            [
                432,
                ""
            ],
            [
                467,
                "\t\t\tRegex regex_unescape = new Regex(\"\\\\\\\\[abfnrtv?\\\"'\\\\\\\\]|\\\\\\\\[0-3]?[0-7]{1,2}|\\\\\\\\u[0-9a-fA-F]{4}|.\", RegexOptions.Singleline);"
            ]
        ],
        "deleted": [
            [
                166,
                "\t\t\t\t\tif (hasReferences)"
            ],
            [
                167,
                "\t\t\t\t\t{"
            ],
            [
                168,
                "\t\t\t\t\t\tstream.WriteLine(\"msgid \\\"\" + escape(item.Id) + \"\\\"\");"
            ],
            [
                169,
                "\t\t\t\t\t\tstream.WriteLine(\"msgstr \\\"\" + escape(item.Message) + \"\\\"\");"
            ],
            [
                170,
                "\t\t\t\t\t\tstream.WriteLine(\"\");"
            ],
            [
                171,
                "\t\t\t\t\t}"
            ],
            [
                172,
                "\t\t\t\t\telse"
            ],
            [
                173,
                "\t\t\t\t\t{"
            ],
            [
                174,
                "\t\t\t\t\t\tstream.WriteLine(\"#~ msgid \\\"\" + escape(item.Id) + \"\\\"\");"
            ],
            [
                175,
                "\t\t\t\t\t\tstream.WriteLine(\"#~ msgstr \\\"\" + escape(item.Message) + \"\\\"\");"
            ],
            [
                176,
                "\t\t\t\t\t\tstream.WriteLine(\"\");"
            ],
            [
                177,
                "\t\t\t\t\t}"
            ],
            [
                178,
                ""
            ],
            [
                269,
                "\t\t\t\tbool currentlyReadingItem = false;"
            ],
            [
                283,
                "\t\t\t\t\t\t\tcurrentlyReadingItem = true;"
            ],
            [
                305,
                "\t\t\t\t\tif (currentlyReadingItem || line.StartsWith(\"#~\"))"
            ],
            [
                333,
                "\t\t\t\t\tcurrentlyReadingItem = false;"
            ],
            [
                360,
                "            TranslateItem message = new TranslateItem();"
            ],
            [
                437,
                "\t\t\tRegex regex_unescape = new Regex(\"\\\\\\\\[abfnrtv?\\\"'\\\\\\\\]|\\\\\\\\[0-3]?[0-7]{1,2}|\\\\\\\\u[0-9a-fA-F]{4}|.\");"
            ]
        ]
    },
    "num_lines_added": 49,
    "num_lines_removed": 19
}