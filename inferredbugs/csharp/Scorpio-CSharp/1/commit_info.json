{
    "hash": "078a0f4216a8f327dddc748705d689a34f6e80f4",
    "message": "\u589e\u52a0\u58f0\u660etable  \u652f\u6301 \u6570\u5b57 Key\u7684\u8bed\u6cd5",
    "file_num_lines": 580,
    "diff_parsed": {
        "added": [
            [
                196,
                "            for (; ; )"
            ],
            [
                198,
                "                Token token = ReadToken();"
            ],
            [
                199,
                "                if (token.Type == TokenType.ElseIf) {"
            ],
            [
                200,
                "                    ret.AddElseIf(ParseCondition(true, Executable_Block.If));"
            ],
            [
                201,
                "                } else if (token.Type == TokenType.Else) {"
            ],
            [
                202,
                "                    if (PeekToken().Type == TokenType.If) {"
            ],
            [
                203,
                "                        ReadToken();"
            ],
            [
                204,
                "                        ret.AddElseIf(ParseCondition(true, Executable_Block.If));"
            ],
            [
                205,
                "                    } else {"
            ],
            [
                206,
                "                        UndoToken();"
            ],
            [
                207,
                "                        break;"
            ],
            [
                208,
                "                    }"
            ],
            [
                209,
                "                } else {"
            ],
            [
                210,
                "                    UndoToken();"
            ],
            [
                211,
                "                    break;"
            ],
            [
                212,
                "                }"
            ],
            [
                214,
                "            if (PeekToken().Type == TokenType.Else)"
            ],
            [
                248,
                "                        ParseFor_Simple((string)token.Lexeme, obj);"
            ],
            [
                256,
                "        private void ParseFor_Simple(string Identifier, CodeObject obj)"
            ],
            [
                257,
                "        {"
            ],
            [
                258,
                "            CodeForSimple ret = new CodeForSimple(m_script);"
            ],
            [
                259,
                "            ret.Identifier = Identifier;"
            ],
            [
                260,
                "            ret.Begin = obj;"
            ],
            [
                261,
                "            ret.Finished = GetObject();"
            ],
            [
                262,
                "            if (PeekToken().Type == TokenType.Comma)"
            ],
            [
                263,
                "            {"
            ],
            [
                264,
                "                ReadToken();"
            ],
            [
                265,
                "                ret.Step = GetObject();"
            ],
            [
                266,
                "            }"
            ],
            [
                267,
                "            ReadRightParenthesis();"
            ],
            [
                268,
                "            ret.SetContextExecutable(ParseStatementBlock(Executable_Block.For));"
            ],
            [
                269,
                "            m_scriptExecutable.AddScriptInstruction(new ScriptInstruction(Opcode.CALL_FORSIMPLE, ret));"
            ],
            [
                270,
                "        }"
            ],
            [
                574,
                "                if (token.Type == TokenType.Identifier || token.Type == TokenType.String || token.Type == TokenType.Number) {"
            ],
            [
                577,
                "                        ret.Variables.Add(new TableVariable(token.Lexeme, GetObject()));"
            ]
        ],
        "deleted": [
            [
                196,
                "            Token token = PeekToken();"
            ],
            [
                197,
                "            while (token.Type == TokenType.ElseIf)"
            ],
            [
                199,
                "                ReadToken();"
            ],
            [
                200,
                "                ret.AddElseIf(ParseCondition(true, Executable_Block.If));"
            ],
            [
                201,
                "                token = PeekToken();"
            ],
            [
                203,
                "            if (token.Type == TokenType.Else)"
            ],
            [
                237,
                "                        CodeForSimple ret = new CodeForSimple(m_script);"
            ],
            [
                238,
                "                        ret.Identifier = (string)token.Lexeme;"
            ],
            [
                239,
                "                        ret.Begin = obj;"
            ],
            [
                240,
                "                        ret.Finished = GetObject();"
            ],
            [
                241,
                "                        if (PeekToken().Type == TokenType.Comma)"
            ],
            [
                242,
                "                        {"
            ],
            [
                243,
                "                            ReadToken();"
            ],
            [
                244,
                "                            ret.Step = GetObject();"
            ],
            [
                245,
                "                        }"
            ],
            [
                246,
                "                        ReadRightParenthesis();"
            ],
            [
                247,
                "                        ret.SetContextExecutable(ParseStatementBlock(Executable_Block.For));"
            ],
            [
                248,
                "                        m_scriptExecutable.AddScriptInstruction(new ScriptInstruction(Opcode.CALL_FORSIMPLE, ret));"
            ],
            [
                559,
                "                if (token.Type == TokenType.Identifier)"
            ],
            [
                560,
                "                {"
            ],
            [
                563,
                "                        ret.Variables.Add(new TableVariable((string)token.Lexeme, GetObject()));"
            ]
        ]
    },
    "num_lines_added": 35,
    "num_lines_removed": 21
}