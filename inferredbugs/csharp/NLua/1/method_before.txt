  private static int str_gsub (lua_State L) {
		  uint srcl;
		  CharPtr src = luaL_checklstring(L, 1, out srcl);
		  CharPtr p = luaL_checkstring(L, 2);
		  int  tr = lua_type(L, 3);
		  int max_s = luaL_optint(L, 4, (int)(srcl+1));
		  int anchor = 0;
		  if (p[0] == '^')
		  {
			  p = p.next();
			  anchor = 1;
		  }
		  int n = 0;
		  MatchState ms = new MatchState();
		  luaL_Buffer b = new luaL_Buffer();
		  luaL_argcheck(L, tr == LUA_TNUMBER || tr == LUA_TSTRING ||
						   tr == LUA_TFUNCTION || tr == LUA_TTABLE, 3,
							  "string/function/table expected");
		  luaL_buffinit(L, b);
		  ms.L = L;
		  ms.src_init = src;
		  ms.src_end = src+srcl;
		  while (n < max_s) {
			CharPtr e;
			ms.level = 0;
			e = match(ms, src, p);
			if (e != null) {
			  n++;
			  add_value(ms, b, src, e);
			}
			if ((e!=null) && e>src) /* non empty match? */
			  src = e;  /* skip it */
			else if (src < ms.src_end)
			{
				char c = src[0];
				src = src.next();
				luaL_addchar(b, c);
			}
			else break;
			if (anchor != 0) break;
		  }
		  luaL_addlstring(b, src, (uint)(ms.src_end-src));
		  luaL_pushresult(b);
		  lua_pushinteger(L, n);  /* number of substitutions */
		  return 2;
		}