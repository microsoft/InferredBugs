        public static string GetName(this Type t)
        {
            if (t.IsEnum)
            {
                var te = ConfigurationRepository.Instance.ForType<TsEnumAttribute>(t);
                string ns = t.Name;
                if (te != null && !String.IsNullOrEmpty(te.Name))
                {
                    ns = te.Name;
                }
                return ns;
            }

            var tc = ConfigurationRepository.Instance.ForType<TsClassAttribute>(t);
            var ti = ConfigurationRepository.Instance.ForType<TsInterfaceAttribute>(t);
            string nameFromAttr = tc != null ? tc.Name : ti.Name;
            var name = (!String.IsNullOrEmpty(nameFromAttr) ? nameFromAttr : t.CleanGenericName()) + t.SerializeGenericArguments();
            if (ti != null)
            {
                if (ti.AutoI && !name.StartsWith("I")) name = "I" + name;
            }
            return name;
        }