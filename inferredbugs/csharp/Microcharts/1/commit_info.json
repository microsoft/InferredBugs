{
    "hash": "f808183c5cfed66f42020c1552812a0d766992c3",
    "message": "add avalonia endpoint",
    "file_num_lines": 29,
    "diff_parsed": {
        "added": [
            [
                3,
                "using Avalonia.Media.Imaging;"
            ],
            [
                13,
                "        public ChartView Parent { get; }"
            ],
            [
                15,
                "        public ChartDrawOperation(ChartView parent)"
            ],
            [
                17,
                "            Parent = parent;"
            ],
            [
                21,
                "        public bool HitTest(Point p) => Parent.Bounds.Contains(p);"
            ],
            [
                28,
                "                Parent.Chart?.Draw(skia.SkCanvas, (int)Parent.Bounds.Width, (int)Parent.Bounds.Height);"
            ],
            [
                32,
                "        public Rect Bounds => Parent.Bounds;"
            ]
        ],
        "deleted": [
            [
                12,
                "        readonly Func<Chart?> chartGetter;"
            ],
            [
                13,
                "        readonly Func<Rect> boundsGetter;"
            ],
            [
                15,
                "        public ChartDrawOperation(Func<Chart?> chartGetter, Func<Rect> boundsGetter)"
            ],
            [
                17,
                "            this.chartGetter = chartGetter;"
            ],
            [
                18,
                "            this.boundsGetter = boundsGetter;"
            ],
            [
                22,
                "        public bool HitTest(Point p) => boundsGetter().Contains(p);"
            ],
            [
                27,
                "            var bounds = boundsGetter();"
            ],
            [
                28,
                "            var chart = chartGetter();"
            ],
            [
                29,
                "            var width = (int)bounds.Width;"
            ],
            [
                30,
                "            var height = (int)bounds.Height;"
            ],
            [
                31,
                ""
            ],
            [
                32,
                "            var bitmap = new SKBitmap(width, height, false);"
            ],
            [
                33,
                "            var canvas = new SKCanvas(bitmap);"
            ],
            [
                34,
                "            canvas.Save();"
            ],
            [
                35,
                ""
            ],
            [
                36,
                "            chart?.Draw(canvas, width, height);"
            ],
            [
                37,
                ""
            ],
            [
                40,
                "                skia.SkCanvas.DrawBitmap(bitmap, (int)bounds.X, (int)bounds.Y);"
            ],
            [
                44,
                "        public Rect Bounds => boundsGetter();"
            ]
        ]
    },
    "num_lines_added": 7,
    "num_lines_removed": 19
}