        private void Configuration(IGlobalConfiguration globalConfiguration)
        {
            var mysqlOption = new MySqlStorageOptions
            {
                TransactionIsolationLevel = IsolationLevel.ReadCommitted,
                QueuePollInterval = TimeSpan.FromSeconds(15),
                JobExpirationCheckInterval = TimeSpan.FromHours(1),
                CountersAggregateInterval = TimeSpan.FromMinutes(5),
                PrepareSchemaIfNecessary = true,
                DashboardJobListLimit = 50000,
                TransactionTimeout = TimeSpan.FromMinutes(1),
                TablesPrefix = "hangfire"
            };
            globalConfiguration.UseStorage(
                    new MySqlStorage(
                        JsonConfig.GetSection("HangfireMysqlConnectionString").Get<string>()
                        , mysqlOption
                    ))
                .UseConsole(new ConsoleOptions()
                {
                    BackgroundColor = "#000079"
                })
                .UseHangfireHttpJob(new HangfireHttpJobOptions
                {
                    MailOption = new MailOption
                    {
                        Server = JsonConfig.GetSection("HangfireMail:Server").Get<string>(),
                        Port = JsonConfig.GetSection("HangfireMail:Port").Get<int>(),
                        UseSsl = JsonConfig.GetSection("HangfireMail:UseSsl").Get<bool>(),
                        User = JsonConfig.GetSection("HangfireMail:User").Get<string>(),
                        Password = JsonConfig.GetSection("HangfireMail:Password").Get<string>(),
                    },
                    DefaultRecurringQueueName = JsonConfig.GetSection("DefaultRecurringQueueName").Get<string>(),
                    DefaultBackGroundJobQueueName = "DEFAULT",
                    DefaultTimeZone = "Asia/Shanghai",
                    //EnableDingTalk = true,
                    //CurrentDomain = "http://localhost:5000"
                    //RecurringJobTimeZone = TimeZoneInfo.Local,
                    // CheckHttpResponseStatusCode = code => (int)code < 400   //===》(default)
                    //AddHttpJobFilter = (jobContent) =>
                    //{
                    //    //添加httpjob的拦截器 如果返回false就代表不添加 返回true则真正的添加

                    //    if (jobContent.Url.StartsWith("http://localhost") ||
                    //        jobContent.Url.StartsWith("http://127.0.0.1"))
                    //    {
                    //        return true;
                    //    }

                    //    return false;
                    //}
                })
                .UseTagsWithMysql(sqlOptions: mysqlOption);
        }