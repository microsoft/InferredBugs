{
    "hash": "3c43ce05444db8a4c0591966f31b146b621241c5",
    "message": "Join dup code in #ifgroup, #loop and #eval; if statement to switch",
    "file_num_lines": 788,
    "diff_parsed": {
        "added": [
            [
                136,
                "                    else"
            ],
            [
                138,
                "                        if (ExpressionHelper.TryParseFunctionNameAndArguments(property.Name, out string functionName, out string arguments))"
            ],
            [
                139,
                "                        {"
            ],
            [
                140,
                "                            switch(functionName)"
            ],
            [
                141,
                "                            {"
            ],
            [
                142,
                "                                case \"ifgroup\":"
            ],
            [
                143,
                "                                    ConditionalGroupOperation(property.Name, arguments, parentArray, currentArrayToken, ref loopProperties, ref tokenToForm, childToken);"
            ],
            [
                144,
                "                                    isLoop = true;"
            ],
            [
                145,
                "                                    break;"
            ],
            [
                146,
                "                                case \"loop\":"
            ],
            [
                147,
                "                                    LoopOperation(property.Name, arguments, parentArray, currentArrayToken, ref loopProperties, ref arrayToForm, ref dictToForm, childToken);"
            ],
            [
                148,
                "                                    isLoop = true;"
            ],
            [
                149,
                "                                    break;"
            ],
            [
                150,
                "                                case \"eval\":"
            ],
            [
                151,
                "                                    EvalOperation(property, arguments, parentArray, currentArrayToken, ref loopProperties, ref tokensToAdd);"
            ],
            [
                152,
                "                                    break;"
            ],
            [
                153,
                "                            }"
            ],
            [
                154,
                "                        }"
            ],
            [
                155,
                "                        else if (property.Value.ToString().Trim().StartsWith(\"#\"))"
            ],
            [
                156,
                "                        {"
            ],
            [
                157,
                "                            property.Value = GetToken(ParseFunction(property.Value.ToString(), parentArray, currentArrayToken));"
            ],
            [
                158,
                "                        }"
            ],
            [
                311,
                "        private void LoopOperation(string propertyName, string arguments, IDictionary<string, JArray> parentArray, IDictionary<string, JToken> currentArrayToken, ref List<string> loopProperties, ref JArray arrayToForm, ref JObject dictToForm, JToken childToken)"
            ],
            [
                412,
                "            loopProperties.Add(propertyName);"
            ],
            [
                416,
                "        private void ConditionalGroupOperation(string propertyName, string arguments, IDictionary<string, JArray> parentArray, IDictionary<string, JToken> currentArrayToken, ref List<string> loopProperties, ref List<JToken> tokenToForm, JToken childToken)"
            ],
            [
                436,
                "                loopProperties.Add(propertyName);"
            ],
            [
                455,
                "                loopProperties.Add(propertyName);"
            ],
            [
                459,
                "        private void EvalOperation(JProperty property, string arguments, IDictionary<string, JArray> parentArray, IDictionary<string, JToken> currentArrayToken, ref List<string> loopProperties, ref List<JToken> tokensToAdd)"
            ]
        ],
        "deleted": [
            [
                136,
                "                    else if (property.Name.TrimStart().Replace(\" \", \"\").StartsWith(\"#eval(\"))"
            ],
            [
                137,
                "                    {"
            ],
            [
                138,
                "                        EvalOperation(property, parentArray, currentArrayToken, ref loopProperties, ref tokensToAdd);"
            ],
            [
                139,
                "                    }"
            ],
            [
                140,
                "                    else if (property.Name.TrimStart().Replace(\" \", \"\").StartsWith(\"#ifgroup(\"))"
            ],
            [
                141,
                "                    {"
            ],
            [
                142,
                "                        ConditionalGroupOperation(property, parentArray, currentArrayToken, ref loopProperties, ref tokenToForm, childToken);"
            ],
            [
                143,
                ""
            ],
            [
                144,
                "                        isLoop = true;"
            ],
            [
                145,
                "                    }"
            ],
            [
                146,
                "                    else if (property.Name.TrimStart().Replace(\" \", \"\").StartsWith(\"#loop(\"))"
            ],
            [
                147,
                "                    {"
            ],
            [
                148,
                "                        LoopOperation(property, parentArray, currentArrayToken, ref loopProperties, ref arrayToForm, ref dictToForm, childToken);"
            ],
            [
                149,
                "                        isLoop = true;"
            ],
            [
                150,
                "                    }"
            ],
            [
                151,
                "                    else if (property.Value.ToString().Trim().StartsWith(\"#\"))"
            ],
            [
                153,
                "                        property.Value = GetToken(ParseFunction(property.Value.ToString(), parentArray, currentArrayToken));"
            ],
            [
                306,
                "        private void LoopOperation(JProperty property, IDictionary<string, JArray> parentArray, IDictionary<string, JToken> currentArrayToken, ref List<string> loopProperties, ref JArray arrayToForm, ref JObject dictToForm, JToken childToken)"
            ],
            [
                308,
                "            ExpressionHelper.TryParseFunctionNameAndArguments(property.Name, out string functionName, out string arguments);"
            ],
            [
                408,
                "            loopProperties.Add(property.Name);"
            ],
            [
                412,
                "        private void ConditionalGroupOperation(JProperty property, IDictionary<string, JArray> parentArray, IDictionary<string, JToken> currentArrayToken, ref List<string> loopProperties, ref List<JToken> tokenToForm, JToken childToken)"
            ],
            [
                414,
                "            ExpressionHelper.TryParseFunctionNameAndArguments(property.Name, out string functionName, out string arguments);"
            ],
            [
                433,
                "                loopProperties.Add(property.Name);"
            ],
            [
                452,
                "                loopProperties.Add(property.Name);"
            ],
            [
                456,
                "        private void EvalOperation(JProperty property, IDictionary<string, JArray> parentArray, IDictionary<string, JToken> currentArrayToken, ref List<string> loopProperties, ref List<JToken> tokensToAdd)"
            ],
            [
                458,
                "            ExpressionHelper.TryParseFunctionNameAndArguments(property.Name, out string functionName, out string arguments);"
            ]
        ]
    },
    "num_lines_added": 28,
    "num_lines_removed": 26
}