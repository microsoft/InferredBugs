{
    "hash": "7483d99c811f61fd64d92dc9a58365c5de73d33b",
    "message": "Working on subsciptions",
    "file_num_lines": 68,
    "diff_parsed": {
        "added": [
            [
                3,
                "using MemBus.Subscribing;"
            ],
            [
                18,
                "            resolver.TryInvoke(r => r.Services = services);"
            ],
            [
                35,
                "            automaton.TryInvoke(a => a.Bus = this);"
            ],
            [
                36,
                "            automaton.TryInvoke(a => a.Services = services);"
            ],
            [
                56,
                "            shape.TryInvoke(s => s.Services = services);"
            ],
            [
                62,
                "            var sub = customization.ConstructSubscription(subscription);"
            ],
            [
                67,
                "        public IDisposable Subscribe<M>(Action<M> subscription, Action<ISubscriptionCustomizer<M>> customization)"
            ],
            [
                68,
                "        {"
            ],
            [
                69,
                "            var subC = new SubscriptionCustomizer<M>();"
            ],
            [
                70,
                "            customization(subC);"
            ],
            [
                71,
                "            return Subscribe(subscription, subC);"
            ],
            [
                72,
                "        }"
            ],
            [
                73,
                ""
            ]
        ],
        "deleted": [
            [
                17,
                "            resolver.TryInvoke(r => r.AcceptServices((IServices)services));"
            ],
            [
                34,
                "            automaton.TryInvoke(a => a.AcceptBus(this));"
            ],
            [
                35,
                "            automaton.TryInvoke(a => a.AcceptServices(services));"
            ],
            [
                55,
                "            shape.TryInvoke(s => s.AcceptServices(services));"
            ],
            [
                61,
                "            var parms = new StandardServices();"
            ],
            [
                62,
                "            parms.Add(subscription);"
            ],
            [
                63,
                "            var sub = customization.ConstructSubscription<M>(parms);"
            ]
        ]
    },
    "num_lines_added": 13,
    "num_lines_removed": 7
}