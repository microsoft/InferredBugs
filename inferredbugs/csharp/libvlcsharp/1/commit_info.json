{
    "hash": "5c7991527333e0150f1d48d21ec0961e47aca347",
    "message": "Add CreateMultipleMediaFromStreamPlay unit test",
    "file_num_lines": 152,
    "diff_parsed": {
        "added": [
            [
                86,
                "            Assert.AreNotEqual(IntPtr.Zero, media.NativeReference);"
            ],
            [
                150,
                ""
            ],
            [
                151,
                "        [Test]"
            ],
            [
                152,
                "        public async Task CreateMultipleMediaFromStreamPlay()"
            ],
            [
                153,
                "        {"
            ],
            [
                154,
                "            var libVLC1 = new LibVLC(new[] { \"--no-audio\" });"
            ],
            [
                155,
                "            var libVLC2 = new LibVLC(new[] { \"--no-sout-display\" });"
            ],
            [
                156,
                ""
            ],
            [
                157,
                "            var mp1 = new MediaPlayer(libVLC1);"
            ],
            [
                158,
                "            var mp2 = new MediaPlayer(libVLC2);"
            ],
            [
                159,
                ""
            ],
            [
                160,
                "            mp1.Play(new Media(libVLC1, await GetStreamFromUrl(\"http://www.quirksmode.org/html5/videos/big_buck_bunny.mp4\")));"
            ],
            [
                161,
                "            mp2.Play(new Media(libVLC2, await GetStreamFromUrl(\"https://streams.videolan.org/streams/mp3/05-Mr.%20Zebra.mp3\")));"
            ],
            [
                162,
                ""
            ],
            [
                163,
                "            await Task.Delay(10000);"
            ],
            [
                164,
                "        }"
            ],
            [
                165,
                ""
            ]
        ],
        "deleted": [
            [
                62,
                "                    Assert.False(media.IsParsed);"
            ],
            [
                63,
                "                    media.Parse();"
            ],
            [
                64,
                ""
            ],
            [
                65,
                "                    Assert.True(media.IsParsed);"
            ],
            [
                66,
                "                    Assert.AreEqual(Media.MediaParsedStatus.Done, media.ParsedStatus);"
            ],
            [
                91,
                "            media.Parse();"
            ],
            [
                92,
                "            Assert.NotZero(media.Tracks.First().Data.Audio.Channels);"
            ],
            [
                156,
                ""
            ]
        ]
    },
    "num_lines_added": 17,
    "num_lines_removed": 8
}