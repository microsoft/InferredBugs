{
    "hash": "9f4e0d2cd8878abd4100ee530f7dbfd5092990d9",
    "message": "InterceptingCatalog code refactoring",
    "file_num_lines": 57,
    "diff_parsed": {
        "added": [
            [
                1,
                "\ufeffnamespace MefContrib.Interception.Generics"
            ],
            [
                3,
                "    using System;"
            ],
            [
                4,
                "    using System.Collections.Generic;"
            ],
            [
                5,
                "    using System.ComponentModel.Composition.Hosting;"
            ],
            [
                6,
                "    using System.ComponentModel.Composition.Primitives;"
            ],
            [
                7,
                "    using System.Linq;"
            ],
            [
                8,
                ""
            ],
            [
                12,
                "        private readonly AggregateCatalog _catalog = new AggregateCatalog();"
            ],
            [
                13,
                "        private readonly IDictionary<Type, Type> _genericTypes = new Dictionary<Type, Type>();"
            ],
            [
                14,
                "        private readonly List<Type> _manufacturedParts = new List<Type>();"
            ],
            [
                31,
                "                {"
            ],
            [
                32,
                "                    genericTypes.Add("
            ],
            [
                33,
                "                        locator.GenericContractTypeDefinition,"
            ],
            [
                34,
                "                        locator.GenericImplementationTypeDefinition);"
            ],
            [
                35,
                "                }"
            ],
            [
                42,
                ""
            ],
            [
                44,
                "            _catalog.Catalogs.Add(new TypeCatalog(type));"
            ],
            [
                50,
                "            var returnedExports = new List<Tuple<ComposablePartDefinition, ExportDefinition>>();"
            ],
            [
                51,
                "            var importDefinitionType = TypeHelper.GetImportDefinitionType(definition);"
            ],
            [
                52,
                ""
            ],
            [
                65,
                ""
            ]
        ],
        "deleted": [
            [
                1,
                "\ufeffusing System;"
            ],
            [
                2,
                "using System.Collections.Generic;"
            ],
            [
                3,
                "using System.ComponentModel.Composition.Hosting;"
            ],
            [
                4,
                "using System.ComponentModel.Composition.Primitives;"
            ],
            [
                5,
                "using System.Linq;"
            ],
            [
                6,
                "using System.Text;"
            ],
            [
                7,
                ""
            ],
            [
                8,
                "namespace MefContrib.Interception.Generics"
            ],
            [
                13,
                "        private AggregateCatalog _catalog = new AggregateCatalog();"
            ],
            [
                14,
                "        private IDictionary<Type, Type> _genericTypes = new Dictionary<Type, Type>();"
            ],
            [
                15,
                "        private List<Type> _manufacturedParts = new List<Type>();"
            ],
            [
                32,
                "                    genericTypes.Add(locator.GenericContractTypeDefinition, locator.GenericImplementationTypeDefinition);"
            ],
            [
                40,
                "            var typeCatalog = new TypeCatalog(type);"
            ],
            [
                41,
                "            _catalog.Catalogs.Add(typeCatalog);"
            ],
            [
                47,
                "            List<Tuple<ComposablePartDefinition, ExportDefinition>> returnedExports = new List<Tuple<ComposablePartDefinition, ExportDefinition>>();"
            ],
            [
                48,
                "            Type importDefinitionType = TypeHelper.GetImportDefinitionType(definition);"
            ],
            [
                49,
                ""
            ],
            [
                50,
                "            ComposablePartDefinition partDefinition = null;"
            ],
            [
                51,
                ""
            ],
            [
                55,
                "            var genericExports = _catalog.GetExports(definition);"
            ]
        ]
    },
    "num_lines_added": 21,
    "num_lines_removed": 20
}