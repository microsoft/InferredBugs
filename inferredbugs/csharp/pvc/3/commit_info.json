{
    "hash": "43af85f326c51f110eacb4bd15d337821a70ee0b",
    "message": "Release streams in watcher tasks so renames/deletes can work when watcher is active.",
    "file_num_lines": 131,
    "diff_parsed": {
        "added": [
            [
                13,
                "        private readonly Func<Stream> streamFactory;"
            ],
            [
                14,
                "        private Stream _stream = null;"
            ],
            [
                15,
                "        private Stream stream"
            ],
            [
                16,
                "        {"
            ],
            [
                17,
                "            get"
            ],
            [
                18,
                "            {"
            ],
            [
                19,
                "                if (this._stream == null)"
            ],
            [
                20,
                "                    this._stream = streamFactory();"
            ],
            [
                21,
                ""
            ],
            [
                22,
                "                return this._stream;"
            ],
            [
                23,
                "            }"
            ],
            [
                24,
                "        }"
            ],
            [
                49,
                "            this.streamFactory = fileStream;"
            ],
            [
                55,
                "            this.streamFactory = memoryStream;"
            ],
            [
                61,
                "            this.streamFactory = bufferedStream;"
            ],
            [
                67,
                "            this.streamFactory = networkStream;"
            ],
            [
                73,
                "            this.streamFactory = pvcStream;"
            ],
            [
                97,
                "            get { return this.stream.CanRead; }"
            ],
            [
                102,
                "            get { return this.stream.CanSeek; }"
            ],
            [
                107,
                "            get { return this.stream.CanWrite; }"
            ],
            [
                112,
                "            this.stream.Flush();"
            ],
            [
                117,
                "            get { return this.stream.Length; }"
            ],
            [
                124,
                "                return this.stream.Position;"
            ],
            [
                128,
                "                this.stream.Position = value;"
            ],
            [
                134,
                "            return this.stream.Read(buffer, offset, count);"
            ],
            [
                139,
                "            return this.stream.Seek(offset, origin);"
            ],
            [
                144,
                "            this.stream.SetLength(value);"
            ],
            [
                149,
                "            this.stream.Write(buffer, offset, count);"
            ],
            [
                159,
                "            var streamPosition = this.stream.Position;"
            ],
            [
                160,
                "            this.stream.Position = 0;"
            ],
            [
                162,
                "            var result = new StreamReader(this.stream).ReadToEnd();"
            ],
            [
                163,
                "            this.stream.Position = streamPosition;"
            ],
            [
                168,
                "        /// <summary>"
            ],
            [
                169,
                "        /// Unloads stream so that attached files can be renamed or deleted. If accessed again, it will be"
            ],
            [
                170,
                "        /// recreated using the same arguments."
            ],
            [
                171,
                "        /// </summary>"
            ],
            [
                172,
                "        public void UnloadStream()"
            ],
            [
                173,
                "        {"
            ],
            [
                174,
                "            this._stream.Close();"
            ],
            [
                175,
                "            this._stream = null;"
            ],
            [
                176,
                "        }"
            ],
            [
                177,
                ""
            ]
        ],
        "deleted": [
            [
                13,
                "        private readonly Lazy<Stream> stream;"
            ],
            [
                38,
                "            this.stream = new Lazy<Stream>(fileStream);"
            ],
            [
                44,
                "            this.stream = new Lazy<Stream>(memoryStream);"
            ],
            [
                50,
                "            this.stream = new Lazy<Stream>(bufferedStream);"
            ],
            [
                56,
                "            this.stream = new Lazy<Stream>(networkStream);"
            ],
            [
                62,
                "            this.stream = new Lazy<Stream>(pvcStream);"
            ],
            [
                86,
                "            get { return this.stream.Value.CanRead; }"
            ],
            [
                91,
                "            get { return this.stream.Value.CanSeek; }"
            ],
            [
                96,
                "            get { return this.stream.Value.CanWrite; }"
            ],
            [
                101,
                "            this.stream.Value.Flush();"
            ],
            [
                106,
                "            get { return this.stream.Value.Length; }"
            ],
            [
                113,
                "                return this.stream.Value.Position;"
            ],
            [
                117,
                "                this.stream.Value.Position = value;"
            ],
            [
                123,
                "            return this.stream.Value.Read(buffer, offset, count);"
            ],
            [
                128,
                "            return this.stream.Value.Seek(offset, origin);"
            ],
            [
                133,
                "            this.stream.Value.SetLength(value);"
            ],
            [
                138,
                "            this.stream.Value.Write(buffer, offset, count);"
            ],
            [
                148,
                "            var streamPosition = this.stream.Value.Position;"
            ],
            [
                149,
                "            this.stream.Value.Position = 0;"
            ],
            [
                151,
                "            var result = new StreamReader(this.stream.Value).ReadToEnd();"
            ],
            [
                152,
                "            this.stream.Value.Position = streamPosition;"
            ]
        ]
    },
    "num_lines_added": 42,
    "num_lines_removed": 21
}