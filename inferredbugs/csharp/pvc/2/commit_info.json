{
    "hash": "6c119a5151a739d0446537393b925b79ef6b9e4d",
    "message": "Lazy stream creation, OriginalSourcePath added to streams. Fixes #15.",
    "file_num_lines": 97,
    "diff_parsed": {
        "added": [
            [
                13,
                "        private readonly Lazy<Stream> stream;"
            ],
            [
                15,
                "        /// <summary>"
            ],
            [
                16,
                "        /// Arbitrary name for a stream. For streams created by pvc.Source, this will be the name"
            ],
            [
                17,
                "        /// or relative path to the file. Don't rely on this for file name processing or detection,"
            ],
            [
                18,
                "        /// instead use OriginalSourcePath."
            ],
            [
                19,
                "        /// </summary>"
            ],
            [
                22,
                "        /// <summary>"
            ],
            [
                23,
                "        /// Location on disk of the original source for this stream. Useful for plugins that need"
            ],
            [
                24,
                "        /// to provide include paths or other similar configuration to their internals."
            ],
            [
                25,
                "        /// </summary>"
            ],
            [
                26,
                "        public string OriginalSourcePath { get; private set; }"
            ],
            [
                27,
                ""
            ],
            [
                28,
                "        public PvcStream(Func<FileStream> fileStream)"
            ],
            [
                30,
                "            this.stream = new Lazy<Stream>(fileStream);"
            ],
            [
                33,
                "        public PvcStream(Func<MemoryStream> memoryStream)"
            ],
            [
                35,
                "            this.stream = new Lazy<Stream>(memoryStream);"
            ],
            [
                38,
                "        public PvcStream(Func<BufferedStream> bufferedStream)"
            ],
            [
                40,
                "            this.stream = new Lazy<Stream>(bufferedStream);"
            ],
            [
                43,
                "        public PvcStream(Func<NetworkStream> networkStream)"
            ],
            [
                45,
                "            this.stream = new Lazy<Stream>(networkStream);"
            ],
            [
                49,
                "        {"
            ],
            [
                50,
                "            return this.As(streamName, null);"
            ],
            [
                51,
                "        }"
            ],
            [
                52,
                ""
            ],
            [
                53,
                "        public PvcStream As(string streamName, string originalSourcePath)"
            ],
            [
                56,
                "            this.OriginalSourcePath = originalSourcePath;"
            ],
            [
                62,
                "            get { return this.stream.Value.CanRead; }"
            ],
            [
                67,
                "            get { return this.stream.Value.CanSeek; }"
            ],
            [
                72,
                "            get { return this.stream.Value.CanWrite; }"
            ],
            [
                77,
                "            this.stream.Value.Flush();"
            ],
            [
                82,
                "            get { return this.stream.Value.Length; }"
            ],
            [
                89,
                "                return this.stream.Value.Position;"
            ],
            [
                93,
                "                this.stream.Value.Position = value;"
            ],
            [
                99,
                "            return this.stream.Value.Read(buffer, offset, count);"
            ],
            [
                109,
                "            this.stream.Value.SetLength(value);"
            ],
            [
                114,
                "            this.stream.Value.Write(buffer, offset, count);"
            ],
            [
                124,
                "            var streamPosition = this.stream.Value.Position;"
            ],
            [
                125,
                "            this.stream.Value.Position = 0;"
            ],
            [
                127,
                "            var result = new StreamReader(this.stream.Value).ReadToEnd();"
            ],
            [
                128,
                "            this.stream.Value.Position = streamPosition;"
            ]
        ],
        "deleted": [
            [
                13,
                "        private readonly Stream stream;"
            ],
            [
                17,
                "        public PvcStream(FileStream fileStream)"
            ],
            [
                19,
                "            this.stream = fileStream;"
            ],
            [
                22,
                "        public PvcStream(MemoryStream memoryStream)"
            ],
            [
                24,
                "            this.stream = memoryStream;"
            ],
            [
                27,
                "        public PvcStream(BufferedStream bufferedStream)"
            ],
            [
                29,
                "            this.stream = bufferedStream;"
            ],
            [
                32,
                "        public PvcStream(NetworkStream networkStream)"
            ],
            [
                34,
                "            this.stream = networkStream;"
            ],
            [
                45,
                "            get { return this.stream.CanRead; }"
            ],
            [
                50,
                "            get { return this.stream.CanSeek; }"
            ],
            [
                55,
                "            get { return this.stream.CanWrite; }"
            ],
            [
                60,
                "            this.stream.Flush();"
            ],
            [
                65,
                "            get { return this.stream.Length; }"
            ],
            [
                72,
                "                return this.stream.Position;"
            ],
            [
                76,
                "                this.stream.Position = value;"
            ],
            [
                82,
                "            return this.stream.Read(buffer, offset, count);"
            ],
            [
                92,
                "            this.stream.SetLength(value);"
            ],
            [
                97,
                "            this.stream.Write(buffer, offset, count);"
            ],
            [
                107,
                "            var streamPosition = this.stream.Position;"
            ],
            [
                108,
                "            this.stream.Position = 0;"
            ],
            [
                110,
                "            var result = new StreamReader(this.stream).ReadToEnd();"
            ],
            [
                111,
                "            this.stream.Position = streamPosition;"
            ]
        ]
    },
    "num_lines_added": 40,
    "num_lines_removed": 23
}