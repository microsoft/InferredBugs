{
    "hash": "df0f39401a18ce71e6624b729523d942f51f49bf",
    "message": "[Game] WIP : Building ships\n- Checking and removing the required items\n- Added TaxationManager by Spiral;",
    "file_num_lines": 1003,
    "diff_parsed": {
        "added": [
            [
                7,
                ""
            ],
            [
                27,
                "using AAEmu.Game.Utils.DB;"
            ],
            [
                28,
                ""
            ],
            [
                29,
                "using MySql.Data.MySqlClient;"
            ],
            [
                30,
                ""
            ],
            [
                31,
                "using NLog;"
            ],
            [
                98,
                "            // var housingAreas = new Dictionary<uint, HousingAreas>();"
            ],
            [
                99,
                "            // var houseTaxes = new Dictionary<uint, HouseTax>();"
            ],
            [
                158,
                "                            template.Taxation = TaxationsManager.Instance.taxations.ContainsKey(taxationId) ? TaxationsManager.Instance.taxations[taxationId] : null; template.GuardTowerSettingId = reader.GetUInt32(\"guard_tower_setting_id\", 0);"
            ],
            [
                236,
                ""
            ],
            [
                253,
                "                            template.ActabilityGroupId = !reader.IsDBNull(\"actability_group_id\") ? reader.GetUInt32(\"actability_group_id\") : 0;"
            ],
            [
                254,
                "                            template.ActabilityUp = !reader.IsDBNull(\"actability_up\") ? reader.GetUInt32(\"actability_up\") : 0;"
            ],
            [
                255,
                "                            template.DecoActAbilityGroupId = !reader.IsDBNull(\"deco_actability_group_id\") ? reader.GetUInt32(\"deco_actability_group_id\") : 0;"
            ],
            [
                258,
                "                            _housingDecorations.Add(template.Id, template);"
            ],
            [
                262,
                ""
            ],
            [
                280,
                "                }"
            ],
            [
                317,
                ""
            ],
            [
                321,
                ""
            ],
            [
                330,
                ""
            ],
            [
                459,
                "            CalculateBuildingTaxInfo(house.AccountId, house.Template, false, out var totalTaxAmountDue, out var heavyTaxHouseCount, out var normalTaxHouseCount, out var hostileTaxRate, out _);"
            ],
            [
                491,
                "                    requiresPayment,"
            ],
            [
                558,
                ""
            ],
            [
                569,
                "                connection.ActiveChar.SubtractMoney(SlotType.Inventory, totalTaxAmountDue, Models.Game.Items.Actions.ItemTaskType.HouseCreation);"
            ],
            [
                580,
                "            var house = Create(designId, connection.ActiveChar.Faction.Id);"
            ],
            [
                777,
                ""
            ],
            [
                795,
                "                    _log.Trace(\"New Tax Mail sent for {0} owned by {1}\", house.Name, house.OwnerId);"
            ],
            [
                820,
                ""
            ],
            [
                836,
                "            foreach (var h in myHouses)"
            ],
            [
                871,
                ""
            ],
            [
                878,
                ""
            ],
            [
                903,
                ""
            ],
            [
                949,
                ""
            ],
            [
                981,
                "                    onlineOwner.Inventory.MailAttachments.AddOrMoveExistingItem(ItemTaskType.Invalid, returnedItems[i]);"
            ],
            [
                984,
                ""
            ],
            [
                989,
                "                if (((i % 10) == 9) || (i == returnedItems.Count - 1))"
            ],
            [
                1023,
                ""
            ],
            [
                1024,
                "        public bool SetForSale(House house, uint price, uint buyerId, Character seller)"
            ],
            [
                1039,
                ""
            ],
            [
                1054,
                "            house.BroadcastPacket(new SCHouseSetForSalePacket(house.TlId, price, house.SellToPlayerId, buyerName, house.Name), false);"
            ],
            [
                1055,
                ""
            ],
            [
                1069,
                "            house.BroadcastPacket(new SCHouseResetForSalePacket(house.TlId, house.Name), false);"
            ],
            [
                1071,
                ""
            ],
            [
                1085,
                ""
            ],
            [
                1115,
                ""
            ],
            [
                1124,
                ""
            ],
            [
                1135,
                "            UpdateHouseFaction(house, character.Faction.Id);"
            ],
            [
                1137,
                ""
            ],
            [
                1191,
                ""
            ],
            [
                1197,
                ""
            ],
            [
                1214,
                ""
            ],
            [
                1215,
                ""
            ],
            [
                1227,
                ""
            ],
            [
                1261,
                "            doodad.Save();"
            ],
            [
                1262,
                ""
            ],
            [
                1264,
                "            if (item.Template.MaxCount > 1)"
            ],
            [
                1277,
                ""
            ],
            [
                1286,
                "            house.BroadcastPacket(new SCHousingRecoverTogglePacket(house.TlId, house.AllowRecover), false);"
            ]
        ],
        "deleted": [
            [
                20,
                "using AAEmu.Game.Utils.DB;"
            ],
            [
                22,
                "using MySql.Data.MySqlClient;"
            ],
            [
                23,
                "using NLog;"
            ],
            [
                95,
                "            //            var housingAreas = new Dictionary<uint, HousingAreas>();"
            ],
            [
                96,
                "            var houseTaxes = new Dictionary<uint, HouseTax>();"
            ],
            [
                119,
                "                using (var command = connection.CreateCommand())"
            ],
            [
                120,
                "                {"
            ],
            [
                121,
                "                    command.CommandText = \"SELECT * FROM taxations\";"
            ],
            [
                122,
                "                    command.Prepare();"
            ],
            [
                123,
                "                    using (var reader = new SQLiteWrapperReader(command.ExecuteReader()))"
            ],
            [
                124,
                "                    {"
            ],
            [
                125,
                "                        while (reader.Read())"
            ],
            [
                126,
                "                        {"
            ],
            [
                127,
                "                            var template = new HouseTax();"
            ],
            [
                128,
                "                            template.Id = reader.GetUInt32(\"id\");"
            ],
            [
                129,
                "                            template.Tax = reader.GetUInt32(\"tax\");"
            ],
            [
                130,
                "                            template.Show = reader.GetBoolean(\"show\", true);"
            ],
            [
                131,
                "                            houseTaxes.Add(template.Id, template);"
            ],
            [
                132,
                "                        }"
            ],
            [
                133,
                "                    }"
            ],
            [
                134,
                "                }"
            ],
            [
                135,
                ""
            ],
            [
                172,
                "                            template.Taxation = houseTaxes.ContainsKey(taxationId) ? houseTaxes[taxationId] : null;"
            ],
            [
                173,
                "                            template.GuardTowerSettingId = reader.GetUInt32(\"guard_tower_setting_id\", 0);"
            ],
            [
                251,
                ""
            ],
            [
                268,
                "                            template.ActabilityGroupId = !reader.IsDBNull(\"actability_group_id\") ? reader.GetUInt32(\"actability_group_id\") : 0 ;"
            ],
            [
                269,
                "                            template.ActabilityUp = !reader.IsDBNull(\"actability_up\") ? reader.GetUInt32(\"actability_up\") : 0 ;"
            ],
            [
                270,
                "                            template.DecoActAbilityGroupId = !reader.IsDBNull(\"deco_actability_group_id\") ? reader.GetUInt32(\"deco_actability_group_id\") : 0 ;"
            ],
            [
                273,
                "                            _housingDecorations.Add(template.Id,template);"
            ],
            [
                277,
                ""
            ],
            [
                295,
                "                }"
            ],
            [
                332,
                ""
            ],
            [
                336,
                ""
            ],
            [
                345,
                ""
            ],
            [
                474,
                "            CalculateBuildingTaxInfo(house.AccountId, house.Template, false, out var totalTaxAmountDue, out var heavyTaxHouseCount, out var normalTaxHouseCount, out var hostileTaxRate,out _);"
            ],
            [
                506,
                "                    requiresPayment,"
            ],
            [
                573,
                ""
            ],
            [
                584,
                "                connection.ActiveChar.SubtractMoney(SlotType.Inventory, totalTaxAmountDue,Models.Game.Items.Actions.ItemTaskType.HouseCreation);"
            ],
            [
                595,
                "            var house = Create(designId,connection.ActiveChar.Faction.Id);"
            ],
            [
                792,
                ""
            ],
            [
                810,
                "                    _log.Trace(\"New Tax Mail sent for {0} owned by {1}\",house.Name, house.OwnerId);"
            ],
            [
                835,
                ""
            ],
            [
                851,
                "            foreach(var h in myHouses)"
            ],
            [
                886,
                ""
            ],
            [
                893,
                ""
            ],
            [
                918,
                ""
            ],
            [
                964,
                ""
            ],
            [
                996,
                "                    onlineOwner.Inventory.MailAttachments.AddOrMoveExistingItem(ItemTaskType.Invalid,returnedItems[i]);"
            ],
            [
                999,
                ""
            ],
            [
                1004,
                "                if (((i % 10) == 9) || (i == returnedItems.Count-1))"
            ],
            [
                1038,
                ""
            ],
            [
                1039,
                "        public bool SetForSale(House house,uint price, uint buyerId, Character seller)"
            ],
            [
                1054,
                ""
            ],
            [
                1069,
                "            house.BroadcastPacket(new SCHouseSetForSalePacket(house.TlId, price, house.SellToPlayerId, buyerName,house.Name),false);"
            ],
            [
                1070,
                ""
            ],
            [
                1084,
                "            house.BroadcastPacket(new SCHouseResetForSalePacket(house.TlId,house.Name),false);"
            ],
            [
                1086,
                ""
            ],
            [
                1100,
                ""
            ],
            [
                1130,
                ""
            ],
            [
                1139,
                ""
            ],
            [
                1150,
                "            UpdateHouseFaction(house,character.Faction.Id);"
            ],
            [
                1152,
                ""
            ],
            [
                1206,
                ""
            ],
            [
                1212,
                ""
            ],
            [
                1229,
                ""
            ],
            [
                1230,
                ""
            ],
            [
                1242,
                ""
            ],
            [
                1276,
                "            doodad.Save();"
            ],
            [
                1277,
                ""
            ],
            [
                1279,
                "            if (item.Template.MaxCount > 1)"
            ],
            [
                1292,
                ""
            ],
            [
                1301,
                "            house.BroadcastPacket(new SCHousingRecoverTogglePacket(house.TlId,house.AllowRecover), false);"
            ]
        ]
    },
    "num_lines_added": 57,
    "num_lines_removed": 72
}