{
    "hash": "7f1a255c1d748a776f709919344924f4b20a0c20",
    "message": "Minor changes;",
    "file_num_lines": 114,
    "diff_parsed": {
        "added": [
            [
                85,
                "      using (var transform = cryptAlgorithm.CreateEncryptor(cryptAlgorithm.Key, cryptAlgorithm.IV))"
            ],
            [
                89,
                "        using (var csEncrypt = new CryptoStream(outputStream, transform, CryptoStreamMode.Write))"
            ],
            [
                90,
                "        {"
            ],
            [
                91,
                "          outputStream.Write(BitConverter.GetBytes(inputStream.Length), 0, sizeof(long));"
            ],
            [
                92,
                "          outputStream.Write(cryptAlgorithm.IV, 0, cryptAlgorithm.BlockSize / 8);"
            ],
            [
                94,
                "          inputStream.Position = 0;"
            ],
            [
                95,
                "          var dataBuffer = new byte[maxBufferSizeValue];"
            ],
            [
                97,
                "          while (inputStream.Position < inputStream.Length)"
            ],
            [
                98,
                "          {"
            ],
            [
                99,
                "            int dataSize = (inputStream.Length - inputStream.Position > maxBufferSizeValue) ? maxBufferSizeValue : (int)(inputStream.Length - inputStream.Position);"
            ],
            [
                101,
                "            int writedDataSize = CalculateDataSize(dataSize, maxBufferSizeValue);"
            ],
            [
                103,
                "            inputStream.Read(dataBuffer, 0, dataSize);"
            ],
            [
                104,
                "            csEncrypt.Write(dataBuffer, 0, writedDataSize);"
            ],
            [
                105,
                "          }"
            ],
            [
                133,
                "      using (var transform = cryptAlgorithm.CreateDecryptor(Key, iv))"
            ],
            [
                135,
                "        using (var csEncrypt = new CryptoStream(inputStream, transform, CryptoStreamMode.Read))"
            ],
            [
                137,
                "          var dataBuffer = new byte[maxBufferSizeValue];"
            ],
            [
                138,
                ""
            ],
            [
                139,
                "          while (inputStream.Position < inputStream.Length)"
            ],
            [
                140,
                "          {"
            ],
            [
                141,
                "            int dataSize = (inputStream.Length - inputStream.Position > maxBufferSizeValue) ? maxBufferSizeValue : (int)(inputStream.Length - inputStream.Position - deltaLength);"
            ],
            [
                143,
                "            csEncrypt.Read(dataBuffer, 0, dataSize);"
            ],
            [
                144,
                "            outputStream.Write(dataBuffer, 0, dataSize);"
            ],
            [
                145,
                "          }"
            ]
        ],
        "deleted": [
            [
                85,
                "      using (ICryptoTransform encryptor = cryptAlgorithm.CreateEncryptor(cryptAlgorithm.Key, cryptAlgorithm.IV))"
            ],
            [
                89,
                "        CryptoStream csEncrypt = new CryptoStream(outputStream, encryptor, CryptoStreamMode.Write);"
            ],
            [
                90,
                ""
            ],
            [
                91,
                "        outputStream.Write(BitConverter.GetBytes(inputStream.Length), 0, sizeof(long));"
            ],
            [
                92,
                "        outputStream.Write(cryptAlgorithm.IV, 0, cryptAlgorithm.BlockSize / 8);"
            ],
            [
                94,
                "        inputStream.Position = 0;"
            ],
            [
                95,
                "        byte[] dataBuffer = new byte[maxBufferSizeValue];"
            ],
            [
                97,
                "        while (inputStream.Position < inputStream.Length)"
            ],
            [
                98,
                "        {"
            ],
            [
                99,
                "          int dataSize = (inputStream.Length - inputStream.Position > maxBufferSizeValue) ? maxBufferSizeValue : (int)(inputStream.Length - inputStream.Position);"
            ],
            [
                101,
                "          int writedDataSize = CalculateDataSize(dataSize, maxBufferSizeValue);"
            ],
            [
                103,
                "          inputStream.Read(dataBuffer, 0, dataSize);"
            ],
            [
                104,
                "          csEncrypt.Write(dataBuffer, 0, writedDataSize);"
            ],
            [
                132,
                "      using (ICryptoTransform decryptor = cryptAlgorithm.CreateDecryptor(Key, iv))"
            ],
            [
                134,
                "        CryptoStream csEncrypt = new CryptoStream(inputStream, decryptor, CryptoStreamMode.Read);"
            ],
            [
                135,
                ""
            ],
            [
                136,
                "        byte[] dataBuffer = new byte[maxBufferSizeValue];"
            ],
            [
                137,
                ""
            ],
            [
                138,
                "        while (inputStream.Position < inputStream.Length)"
            ],
            [
                140,
                "          int dataSize = (inputStream.Length - inputStream.Position > maxBufferSizeValue) ? maxBufferSizeValue : (int)(inputStream.Length - inputStream.Position - deltaLength);"
            ],
            [
                142,
                "          csEncrypt.Read(dataBuffer, 0, dataSize);"
            ],
            [
                143,
                "          outputStream.Write(dataBuffer, 0, dataSize);"
            ]
        ]
    },
    "num_lines_added": 24,
    "num_lines_removed": 22
}