{"hash": "b35d1e7194b727c034ce56817059b3c3c6a0fca7", "message": "more resource savings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@758755 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 76, "diff_parsed": {"added": [[45, "        final OutputStream out = new FileOutputStream(output);"], [46, "        ArchiveOutputStream os = null;"], [47, "        try {"], [48, "            os = new ArchiveStreamFactory()"], [49, "                .createArchiveOutputStream(\"zip\", out);"], [57, "        } finally {"], [58, "            if (os != null) {"], [59, "                os.close();"], [60, "            } else {"], [61, "                out.close();"], [62, "            }"], [68, "        final InputStream is = new FileInputStream(output);"], [69, "        ArchiveInputStream in = null;"], [70, "        try {"], [71, "            in = new ArchiveStreamFactory()"], [72, "                .createArchiveInputStream(\"zip\", is);"], [76, "                File outfile = new File(resultDir.getCanonicalPath() + \"/result/\" + entry.getName());"], [78, "                OutputStream o = new FileOutputStream(outfile);"], [79, "                try {"], [80, "                    IOUtils.copy(in, o);"], [81, "                } finally {"], [82, "                    o.close();"], [83, "                }"], [86, "        } finally {"], [87, "            if (in != null) {"], [88, "                in.close();"], [89, "            } else {"], [90, "                is.close();"], [91, "            }"]], "deleted": [[45, "        {"], [46, "            final OutputStream out = new FileOutputStream(output);"], [47, "            final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(\"zip\", out);"], [48, ""], [56, "            os.close();"], [62, "        {"], [63, "            final InputStream is = new FileInputStream(output);"], [64, "            final ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(\"zip\", is);"], [65, ""], [66, "            File result = File.createTempFile(\"dir-result\", \"\");"], [67, "            result.delete();"], [68, "            result.mkdir();"], [72, "                File outfile = new File(result.getCanonicalPath() + \"/result/\" + entry.getName());"], [74, "                OutputStream out = new FileOutputStream(outfile);"], [75, "                IOUtils.copy(in, out);"], [76, "                out.close();"], [79, "            in.close();"]]}, "num_lines_added": 29, "num_lines_removed": 17}