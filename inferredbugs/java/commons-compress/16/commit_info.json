{"hash": "004124ac5dbf5edbf925078652526267468821e7", "message": "Improve cpio tests, submitted by Christian Grobmeier, COMPRESS-28\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@758588 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 66, "diff_parsed": {"added": [[26, "import java.util.HashMap;"], [27, "import java.util.Map;"], [35, "    public void testCpioArchiveCreation() throws Exception {"], [36, "        final File output = new File(dir, \"bla.cpio\");"], [37, ""], [38, "        final File file1 = getFile(\"test1.xml\");"], [39, "        final File file2 = getFile(\"test2.xml\");"], [40, ""], [41, "        final OutputStream out = new FileOutputStream(output);"], [43, "        os.putArchiveEntry(new CpioArchiveEntry(\"test1.xml\", file1.length()));"], [44, "        IOUtils.copy(new FileInputStream(file1), os);"], [45, "        os.closeArchiveEntry();"], [46, ""], [47, "        os.putArchiveEntry(new CpioArchiveEntry(\"test2.xml\", file2.length()));"], [48, "        IOUtils.copy(new FileInputStream(file2), os);"], [49, "        os.closeArchiveEntry();"], [50, ""], [51, "        os.close();"], [52, "    }"], [53, ""], [54, "    public void testCpioUnarchive() throws Exception {"], [55, "        final File output = new File(dir, \"bla.cpio\");"], [56, "        {"], [57, "            final File file1 = getFile(\"test1.xml\");"], [58, "            final File file2 = getFile(\"test2.xml\");"], [59, ""], [60, "            final OutputStream out = new FileOutputStream(output);"], [61, "            final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(\"cpio\", out);"], [62, "            os.putArchiveEntry(new CpioArchiveEntry(\"test1.xml\", file1.length()));"], [63, "            IOUtils.copy(new FileInputStream(file1), os);"], [64, "            os.closeArchiveEntry();"], [65, ""], [66, "            os.putArchiveEntry(new CpioArchiveEntry(\"test2.xml\", file2.length()));"], [67, "            IOUtils.copy(new FileInputStream(file2), os);"], [68, "            os.closeArchiveEntry();"], [69, ""], [70, "            os.close();"], [71, "            out.close();"], [72, "        }"], [73, ""], [74, "        // Unarchive Operation"], [75, "        final File input = output;"], [76, "        final InputStream is = new FileInputStream(input);"], [77, "        final ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(\"cpio\", is);"], [78, ""], [79, ""], [80, "        Map result = new HashMap();"], [81, "        ArchiveEntry entry = null;"], [82, "        while ((entry = in.getNextEntry()) != null) {"], [83, "            File target = new File(dir, entry.getName());"], [84, "            final OutputStream out = new FileOutputStream(target);"], [85, "            IOUtils.copy(in, out);"], [86, "            out.close();"], [87, "            result.put(entry.getName(), target);"], [88, "        }"], [90, ""], [91, "        int lineSepLength = System.getProperty(\"line.separator\").length();"], [92, ""], [93, "        File t = (File)result.get(\"test1.xml\");"], [94, "        assertTrue(\"Expected \" + t.getAbsolutePath() + \" to exist\", t.exists());"], [95, "        assertEquals(\"length of \" + t.getAbsolutePath(),"], [96, "                     72 + 4 * lineSepLength, t.length());"], [97, ""], [98, "        t = (File)result.get(\"test2.xml\");"], [99, "        assertTrue(\"Expected \" + t.getAbsolutePath() + \" to exist\", t.exists());"], [100, "        assertEquals(\"length of \" + t.getAbsolutePath(),"], [101, "                     73 + 5 * lineSepLength, t.length());"], [102, "    }"]], "deleted": [[33, "\tpublic void testCpioArchiveCreation() throws Exception {"], [34, "\t\tfinal File output = new File(dir, \"bla.cpio\");"], [35, ""], [36, "\t\tfinal File file1 = getFile(\"test1.xml\");"], [37, "\t\tfinal File file2 = getFile(\"test2.xml\");"], [38, ""], [39, "\t\tfinal OutputStream out = new FileOutputStream(output);"], [41, "\t\tos.putArchiveEntry(new CpioArchiveEntry(\"test1.xml\", file1.length()));"], [42, "\t\tIOUtils.copy(new FileInputStream(file1), os);"], [43, "\t\tos.closeArchiveEntry();"], [44, ""], [45, "\t\tos.putArchiveEntry(new CpioArchiveEntry(\"test2.xml\", file2.length()));"], [46, "\t\tIOUtils.copy(new FileInputStream(file2), os);"], [47, "\t\tos.closeArchiveEntry();"], [48, ""], [49, "\t\tos.close();"], [50, "\t}"], [51, ""], [52, "\tpublic void testCpioUnarchive() throws Exception {"], [53, "\t\tfinal File output = new File(dir, \"bla.cpio\");"], [54, "\t\t{"], [55, "\t\t\tfinal File file1 = getFile(\"test1.xml\");"], [56, "\t\t\tfinal File file2 = getFile(\"test2.xml\");"], [57, ""], [58, "\t\t\tfinal OutputStream out = new FileOutputStream(output);"], [59, "\t        final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(\"cpio\", out);"], [60, "\t\t\tos.putArchiveEntry(new CpioArchiveEntry(\"test1.xml\", file1.length()));"], [61, "\t\t\tIOUtils.copy(new FileInputStream(file1), os);"], [62, "\t\t\tos.closeArchiveEntry();"], [63, ""], [64, "\t\t\tos.putArchiveEntry(new CpioArchiveEntry(\"test2.xml\", file2.length()));"], [65, "\t\t\tIOUtils.copy(new FileInputStream(file2), os);"], [66, "\t\t\tos.closeArchiveEntry();"], [67, "\t\t\tos.close();"], [68, "\t\t}"], [69, ""], [70, "\t\t// Unarchive Operation"], [71, "\t\tfinal File input = output;"], [72, "\t\tfinal InputStream is = new FileInputStream(input);"], [73, "\t\tfinal ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(\"cpio\", is);"], [74, "\t\tfinal CpioArchiveEntry entry = (CpioArchiveEntry)in.getNextEntry();"], [75, ""], [76, "\t\tFile target = new File(dir, entry.getName());"], [77, "        final OutputStream out = new FileOutputStream(target);"], [78, ""], [79, "        IOUtils.copy(in, out);"], [80, ""], [81, "        out.close();"], [83, "\t}"]]}, "num_lines_added": 68, "num_lines_removed": 49}