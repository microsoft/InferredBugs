{"hash": "f4b2e931790b282fbde29b0446ca2e0fd418c630", "message": "close Database instances in unit tests to release Pool threads", "file_num_lines": 2082, "diff_parsed": {"added": [[485, "            Blob blob = new JDBCBlobFile(new File(\"src/test/resources/big.txt\"));"], [486, "            insertPersonBlob(db);"], [487, "            db //"], [488, "                    .update(\"update person_blob set document = :doc\") //"], [489, "                    .parameter(\"doc\", blob) //"], [490, "                    .counts() //"], [491, "                    .test() //"], [492, "                    .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [493, "                    .assertValue(1) //"], [494, "                    .assertComplete();"], [500, "        try (Database db = db()) {"], [501, "            insertPersonBlob(db);"], [502, "            db //"], [503, "                    .update(\"update person_blob set document = :doc\") //"], [504, "                    .parameter(\"doc\", Database.NULL_BLOB) //"], [505, "                    .counts() //"], [506, "                    .test() //"], [507, "                    .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [508, "                    .assertValue(1) //"], [509, "                    .assertComplete();"], [510, "        }"], [515, "        try (Database db = db()) {"], [516, "            db //"], [517, "                    .select(\"select score from person where name=:name\") //"], [518, "                    .parameter(null, \"FRED\"); //"], [519, "        }"], [524, "        try (Database db = db()) {"], [525, "            db //"], [526, "                    .select(\"select score from person where name=:name\") //"], [527, "                    .parameters(\"nam\", \"FRED\");"], [528, "        }"], [533, "        try (Database db = db()) {"], [534, "            db //"], [535, "                    .select(\"select score from person where name=:name\") //"], [536, "                    .parameters(\"FRED\", \"JOSEPH\");"], [537, "        }"], [542, "        try (Database db = db()) {"], [543, "            db //"], [544, "                    .select(\"select score from person where name=?\") //"], [545, "                    .parameters(\"FRED\", \"JOSEPH\") //"], [546, "                    .transacted() //"], [547, "                    .getAs(Integer.class) //"], [548, "                    .doOnNext(tx -> System.out.println(tx.isComplete() ? \"complete\" : tx.value())) //"], [549, "                    .test() //"], [550, "                    .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [551, "                    .assertValueCount(3) //"], [552, "                    .assertComplete();"], [553, "        }"], [558, "        try (Database db = db()) {"], [559, "            db //"], [560, "                    .select(Person10.class) //"], [561, "                    .transacted() //"], [562, "                    .valuesOnly() //"], [563, "                    .get().test() //"], [564, "                    .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [565, "                    .assertValueCount(3) //"], [566, "                    .assertComplete();"], [567, "        }"], [572, "        try (Database db = db()) {"], [573, "            db //"], [574, "                    .select(\"select name, score from person\") //"], [575, "                    .transacted() //"], [576, "                    .valuesOnly() //"], [577, "                    .autoMap(Person2.class) //"], [578, "                    .test() //"], [579, "                    .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [580, "                    .assertValueCount(3) //"], [581, "                    .assertComplete();"], [582, "        }"], [587, "        try (Database db = db()) {"], [588, "            db //"], [589, "                    .select(\"select name, score from person\") //"], [590, "                    .transacted() //"], [591, "                    .autoMap(Person2.class) //"], [592, "                    .test() //"], [593, "                    .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [594, "                    .assertValueCount(4) //"], [595, "                    .assertComplete();"], [596, "        }"]], "deleted": [[485, "        Blob blob = new JDBCBlobFile(new File(\"src/test/resources/big.txt\"));"], [486, "        insertPersonBlob(db);"], [487, "        db //"], [488, "                .update(\"update person_blob set document = :doc\") //"], [489, "                .parameter(\"doc\", blob) //"], [490, "                .counts() //"], [491, "                .test() //"], [492, "                .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [493, "                .assertValue(1) //"], [494, "                .assertComplete();"], [500, "        Database db = db();"], [501, "        insertPersonBlob(db);"], [502, "        db //"], [503, "                .update(\"update person_blob set document = :doc\") //"], [504, "                .parameter(\"doc\", Database.NULL_BLOB) //"], [505, "                .counts() //"], [506, "                .test() //"], [507, "                .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [508, "                .assertValue(1) //"], [509, "                .assertComplete();"], [514, "        db() //"], [515, "                .select(\"select score from person where name=:name\") //"], [516, "                .parameter(null, \"FRED\"); //"], [521, "        db() //"], [522, "                .select(\"select score from person where name=:name\") //"], [523, "                .parameters(\"nam\", \"FRED\");"], [528, "        db() //"], [529, "                .select(\"select score from person where name=:name\") //"], [530, "                .parameters(\"FRED\", \"JOSEPH\");"], [535, "        System.out.println(\"testSelectTransacted\");"], [536, "        db() //"], [537, "                .select(\"select score from person where name=?\") //"], [538, "                .parameters(\"FRED\", \"JOSEPH\") //"], [539, "                .transacted() //"], [540, "                .getAs(Integer.class) //"], [541, "                .doOnNext(tx -> System.out.println(tx.isComplete() ? \"complete\" : tx.value())) //"], [542, "                .test() //"], [543, "                .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [544, "                .assertValueCount(3) //"], [545, "                .assertComplete();"], [550, "        db() //"], [551, "                .select(Person10.class) //"], [552, "                .transacted() //"], [553, "                .valuesOnly() //"], [554, "                .get().test() //"], [555, "                .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [556, "                .assertValueCount(3) //"], [557, "                .assertComplete();"], [562, "        db() //"], [563, "                .select(\"select name, score from person\") //"], [564, "                .transacted() //"], [565, "                .valuesOnly() //"], [566, "                .autoMap(Person2.class) //"], [567, "                .test() //"], [568, "                .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [569, "                .assertValueCount(3) //"], [570, "                .assertComplete();"], [575, "        db() //"], [576, "                .select(\"select name, score from person\") //"], [577, "                .transacted() //"], [578, "                .autoMap(Person2.class) //"], [579, "                .test() //"], [580, "                .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [581, "                .assertValueCount(4) //"], [582, "                .assertComplete();"]]}, "num_lines_added": 79, "num_lines_removed": 65}