{"hash": "f0069b599a7c615bb8457d0db3e447d5cd4af269", "message": "ensure NonBlockingPool shutdowns down its internal Scheduler and ExecutorService on close", "file_num_lines": 2207, "diff_parsed": {"added": [[1811, "        try (Database db = db()) {"], [1812, "            db.select(\"select name, score from person where name='FRED'\") //"], [1813, "                    .getAs(String.class) //"], [1814, "                    .test().awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [1815, "                    .assertValues(\"FRED\") //"], [1816, "                    .assertComplete();"], [1817, "        }"], [1822, "        try (Database db = db()) {"], [1823, "            db //"], [1824, "                    .select(\"select name, score from person where name='FRED'\") //"], [1825, "                    .getAs(String.class, Integer.class, String.class) //"], [1826, "                    .test().awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [1827, "                    .assertNoValues() //"], [1828, "                    .assertError(MoreColumnsRequestedThanExistException.class);"], [1829, "        }"], [1834, "        try (Database db = db()) {"], [1835, "            db //"], [1836, "                    .select(\"select registered from person where name='FRED'\") //"], [1837, "                    .getAs(Long.class) //"], [1838, "                    .test().awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [1839, "                    .assertValue(FRED_REGISTERED_TIME) //"], [1840, "                    .assertComplete();"], [1841, "        }"], [1846, "        try (Database db = db()) {"], [1847, "            db //"], [1848, "                    .select(\"select registered from person where name='FRED'\") //"], [1849, "                    .getAs(Date.class) //"], [1850, "                    .map(d -> d.getTime()) //"], [1851, "                    .test().awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [1852, "                    .assertValue(FRED_REGISTERED_TIME) //"], [1853, "                    .assertComplete();"], [1854, "        }"], [1859, "        try (Database db = db()) {"], [1860, "            db //"], [1861, "                    .select(\"select registered from person where name='FRED'\") //"], [1862, "                    .getAs(Instant.class) //"], [1863, "                    .map(d -> d.toEpochMilli()) //"], [1864, "                    .test().awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [1865, "                    .assertValue(FRED_REGISTERED_TIME) //"], [1866, "                    .assertComplete();"], [1867, "        }"]], "deleted": [[1811, "        db().select(\"select name, score from person where name='FRED'\") //"], [1812, "                .getAs(String.class) //"], [1813, "                .test().awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [1814, "                .assertValues(\"FRED\") //"], [1815, "                .assertComplete();"], [1820, "        db() //"], [1821, "                .select(\"select name, score from person where name='FRED'\") //"], [1822, "                .getAs(String.class, Integer.class, String.class) //"], [1823, "                .test().awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [1824, "                .assertNoValues() //"], [1825, "                .assertError(MoreColumnsRequestedThanExistException.class);"], [1830, "        db() //"], [1831, "                .select(\"select registered from person where name='FRED'\") //"], [1832, "                .getAs(Long.class) //"], [1833, "                .test().awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [1834, "                .assertValue(FRED_REGISTERED_TIME) //"], [1835, "                .assertComplete();"], [1840, "        db() //"], [1841, "                .select(\"select registered from person where name='FRED'\") //"], [1842, "                .getAs(Date.class) //"], [1843, "                .map(d -> d.getTime()) //"], [1844, "                .test().awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [1845, "                .assertValue(FRED_REGISTERED_TIME) //"], [1846, "                .assertComplete();"], [1851, "        db() //"], [1852, "                .select(\"select registered from person where name='FRED'\") //"], [1853, "                .getAs(Instant.class) //"], [1854, "                .map(d -> d.toEpochMilli()) //"], [1855, "                .test().awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [1856, "                .assertValue(FRED_REGISTERED_TIME) //"], [1857, "                .assertComplete();"]]}, "num_lines_added": 41, "num_lines_removed": 31}