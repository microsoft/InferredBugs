{"hash": "aeada6999a30794ca3a7722958b6c5dd4ef5e7a7", "message": "close Database instances in unit tests to release Pool threads", "file_num_lines": 2090, "diff_parsed": {"added": [[601, "        try (Database db = db()) {"], [602, "            Tx<Tuple2<String, Integer>> t = db //"], [603, "                    .select(\"select name, score from person where name=?\") //"], [604, "                    .parameters(\"FRED\") //"], [605, "                    .transacted() //"], [606, "                    .getAs(String.class, Integer.class) //"], [607, "                    .test() //"], [608, "                    .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [609, "                    .assertValueCount(2) //"], [610, "                    .assertComplete() //"], [611, "                    .values().get(0);"], [612, "            assertEquals(\"FRED\", t.value()._1());"], [613, "            assertEquals(21, (int) t.value()._2());"], [614, "        }"], [619, "        try (Database db = db()) {"], [620, "            Tx<Tuple3<String, Integer, String>> t = db //"], [621, "                    .select(\"select name, score, name from person where name=?\") //"], [622, "                    .parameters(\"FRED\") //"], [623, "                    .transacted() //"], [624, "                    .getAs(String.class, Integer.class, String.class) //"], [625, "                    .test() //"], [626, "                    .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [627, "                    .assertValueCount(2) //"], [628, "                    .assertComplete() //"], [629, "                    .values().get(0);"], [630, "            assertEquals(\"FRED\", t.value()._1());"], [631, "            assertEquals(21, (int) t.value()._2());"], [632, "            assertEquals(\"FRED\", t.value()._3());"], [633, "        }"], [638, "        try (Database db = db()) {"], [639, "            Tx<Tuple4<String, Integer, String, Integer>> t = db //"], [640, "                    .select(\"select name, score, name, score from person where name=?\") //"], [641, "                    .parameters(\"FRED\") //"], [642, "                    .transacted() //"], [643, "                    .getAs(String.class, Integer.class, String.class, Integer.class) //"], [644, "                    .test() //"], [645, "                    .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [646, "                    .assertValueCount(2) //"], [647, "                    .assertComplete() //"], [648, "                    .values().get(0);"], [649, "            assertEquals(\"FRED\", t.value()._1());"], [650, "            assertEquals(21, (int) t.value()._2());"], [651, "            assertEquals(\"FRED\", t.value()._3());"], [652, "            assertEquals(21, (int) t.value()._4());"], [653, "        }"], [658, "        try (Database db = db()) {"], [659, "            Tx<Tuple5<String, Integer, String, Integer, String>> t = db //"], [660, "                    .select(\"select name, score, name, score, name from person where name=?\") //"], [661, "                    .parameters(\"FRED\") //"], [662, "                    .transacted() //"], [663, "                    .getAs(String.class, Integer.class, String.class, Integer.class, String.class) //"], [664, "                    .test() //"], [665, "                    .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [666, "                    .assertValueCount(2) //"], [667, "                    .assertComplete() //"], [668, "                    .values().get(0);"], [669, "            assertEquals(\"FRED\", t.value()._1());"], [670, "            assertEquals(21, (int) t.value()._2());"], [671, "            assertEquals(\"FRED\", t.value()._3());"], [672, "            assertEquals(21, (int) t.value()._4());"], [673, "            assertEquals(\"FRED\", t.value()._5());"], [674, "        }"]], "deleted": [[601, "        Tx<Tuple2<String, Integer>> t = db() //"], [602, "                .select(\"select name, score from person where name=?\") //"], [603, "                .parameters(\"FRED\") //"], [604, "                .transacted() //"], [605, "                .getAs(String.class, Integer.class) //"], [606, "                .test() //"], [607, "                .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [608, "                .assertValueCount(2) //"], [609, "                .assertComplete() //"], [610, "                .values().get(0);"], [611, "        assertEquals(\"FRED\", t.value()._1());"], [612, "        assertEquals(21, (int) t.value()._2());"], [617, "        Tx<Tuple3<String, Integer, String>> t = db() //"], [618, "                .select(\"select name, score, name from person where name=?\") //"], [619, "                .parameters(\"FRED\") //"], [620, "                .transacted() //"], [621, "                .getAs(String.class, Integer.class, String.class) //"], [622, "                .test() //"], [623, "                .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [624, "                .assertValueCount(2) //"], [625, "                .assertComplete() //"], [626, "                .values().get(0);"], [627, "        assertEquals(\"FRED\", t.value()._1());"], [628, "        assertEquals(21, (int) t.value()._2());"], [629, "        assertEquals(\"FRED\", t.value()._3());"], [634, "        Tx<Tuple4<String, Integer, String, Integer>> t = db() //"], [635, "                .select(\"select name, score, name, score from person where name=?\") //"], [636, "                .parameters(\"FRED\") //"], [637, "                .transacted() //"], [638, "                .getAs(String.class, Integer.class, String.class, Integer.class) //"], [639, "                .test() //"], [640, "                .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [641, "                .assertValueCount(2) //"], [642, "                .assertComplete() //"], [643, "                .values().get(0);"], [644, "        assertEquals(\"FRED\", t.value()._1());"], [645, "        assertEquals(21, (int) t.value()._2());"], [646, "        assertEquals(\"FRED\", t.value()._3());"], [647, "        assertEquals(21, (int) t.value()._4());"], [652, "        Tx<Tuple5<String, Integer, String, Integer, String>> t = db() //"], [653, "                .select(\"select name, score, name, score, name from person where name=?\") //"], [654, "                .parameters(\"FRED\") //"], [655, "                .transacted() //"], [656, "                .getAs(String.class, Integer.class, String.class, Integer.class, String.class) //"], [657, "                .test() //"], [658, "                .awaitDone(TIMEOUT_SECONDS, TimeUnit.SECONDS) //"], [659, "                .assertValueCount(2) //"], [660, "                .assertComplete() //"], [661, "                .values().get(0);"], [662, "        assertEquals(\"FRED\", t.value()._1());"], [663, "        assertEquals(21, (int) t.value()._2());"], [664, "        assertEquals(\"FRED\", t.value()._3());"], [665, "        assertEquals(21, (int) t.value()._4());"], [666, "        assertEquals(\"FRED\", t.value()._5());"]]}, "num_lines_added": 62, "num_lines_removed": 54}