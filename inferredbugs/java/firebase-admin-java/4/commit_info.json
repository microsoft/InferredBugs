{"hash": "08c3d3249e0ce0989a9af59e12cc642831de8804", "message": "Fail fast semantics in the FirebaseCredentials API (#18)", "file_num_lines": 263, "diff_parsed": {"added": [[47, "  public void testNullCertificate() throws IOException {"], [52, "  public void testNullRefreshToken() throws IOException {"], [94, "  public void canResolveTokenMoreThanOnce()"], [95, "      throws ExecutionException, InterruptedException, IOException {"], [129, "      throws ExecutionException, InterruptedException {"], [139, "      FirebaseCredentials.fromCertificate(inputStream, transport, Utils.getDefaultJsonFactory());"], [141, "    } catch (IOException e) {"], [143, "          \"Failed to parse service account: 'project_id' must be set\","], [151, "      throws ExecutionException, InterruptedException {"], [165, "      FirebaseCredentials.fromCertificate(inputStream, transport, Utils.getDefaultJsonFactory());"], [167, "    } catch (IOException e) {"], [168, "      Assert.assertEquals(\"Expected\", e.getMessage());"], [216, "      throws ExecutionException, InterruptedException {"], [230, "      FirebaseCredentials.fromRefreshToken(inputStream, transport, Utils.getDefaultJsonFactory());"], [232, "    } catch (IOException e) {"], [233, "      Assert.assertEquals(\"Expected\", e.getMessage());"], [238, "  public void forceRefreshWorks() throws ExecutionException, InterruptedException, IOException {"], [295, "    GoogleCredential fetchCredential() throws IOException {"], [300, "    FirebaseAccessToken fetchToken(GoogleCredential credential) throws IOException {"]], "deleted": [[47, "  public void testNullCertificate() {"], [52, "  public void testNullRefreshToken() {"], [94, "  public void canResolveTokenMoreThanOnce() throws ExecutionException, InterruptedException {"], [128, "      throws ExecutionException, InterruptedException, IOException {"], [136, "    FirebaseCredential credential ="], [137, "        FirebaseCredentials.fromCertificate(inputStream, transport, Utils.getDefaultJsonFactory());"], [140, "      Tasks.await(credential.getAccessToken(false));"], [142, "    } catch (Exception e) {"], [144, "          \"org.json.JSONException: Failed to parse service account: 'project_id' must be set\","], [152, "      throws ExecutionException, InterruptedException, IOException {"], [164, "    FirebaseCredential credential ="], [165, "        FirebaseCredentials.fromCertificate(inputStream, transport, Utils.getDefaultJsonFactory());"], [168, "      Tasks.await(credential.getAccessToken(false));"], [170, "    } catch (Exception e) {"], [171, "      Assert.assertEquals(\"java.io.IOException: Failed to read service account\", e.getMessage());"], [172, "      Assert.assertEquals(\"Expected\", e.getCause().getCause().getMessage());"], [220, "      throws ExecutionException, InterruptedException, IOException {"], [232, "    FirebaseCredential credential ="], [233, "        FirebaseCredentials.fromRefreshToken(inputStream, transport, Utils.getDefaultJsonFactory());"], [236, "      Tasks.await(credential.getAccessToken(false));"], [238, "    } catch (Exception e) {"], [239, "      Assert.assertEquals(\"java.io.IOException: Failed to read refresh token\", e.getMessage());"], [240, "      Assert.assertEquals(\"Expected\", e.getCause().getCause().getMessage());"], [245, "  public void forceRefreshWorks() throws ExecutionException, InterruptedException {"], [302, "    GoogleCredential fetchCredential() throws Exception {"], [307, "    FirebaseAccessToken fetchToken(GoogleCredential credential) throws Exception {"]]}, "num_lines_added": 19, "num_lines_removed": 26}