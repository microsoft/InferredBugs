{"hash": "0b356e1fdf6da40f01315f54dad0322a0d732803", "message": "fix: Cleaning up FirebaseApp state management (#476)", "file_num_lines": 226, "diff_parsed": {"added": [[53, "  private static final FirebaseOptions APP_OPTIONS = FirebaseOptions.builder()"], [54, "      .setCredentials(new MockGoogleCredentials(\"test-token\"))"], [55, "      .setProjectId(\"test-project\")"], [56, "      .build();"], [57, ""], [97, "  public void testInvokeAfterAppDelete() {"], [98, "    FirebaseApp app = FirebaseApp.initializeApp(APP_OPTIONS, \"testInvokeAfterAppDelete\");"], [99, "    FirebaseInstanceId instanceId = FirebaseInstanceId.getInstance(app);"], [100, "    assertNotNull(instanceId);"], [101, "    app.delete();"], [102, ""], [103, "    try {"], [104, "      FirebaseInstanceId.getInstance(app);"], [105, "      fail(\"No error thrown when invoking instanceId after deleting app\");"], [106, "    } catch (IllegalStateException ex) {"], [107, "      String message = \"FirebaseApp 'testInvokeAfterAppDelete' was deleted\";"], [108, "      assertEquals(message, ex.getMessage());"], [109, "    }"], [110, "  }"], [111, ""], [112, "  @Test"], [114, "    FirebaseApp.initializeApp(APP_OPTIONS);"], [142, "    FirebaseOptions options = APP_OPTIONS.toBuilder()"], [186, "    FirebaseOptions options = APP_OPTIONS.toBuilder()"]], "deleted": [[93, "    FirebaseOptions options = FirebaseOptions.builder()"], [94, "        .setCredentials(new MockGoogleCredentials(\"test-token\"))"], [95, "        .setProjectId(\"test-project\")"], [96, "        .build();"], [97, "    FirebaseApp.initializeApp(options);"], [125, "    FirebaseOptions options = FirebaseOptions.builder()"], [126, "        .setCredentials(new MockGoogleCredentials(\"test-token\"))"], [127, "        .setProjectId(\"test-project\")"], [171, "    FirebaseOptions options = FirebaseOptions.builder()"], [172, "        .setCredentials(new MockGoogleCredentials(\"test-token\"))"], [173, "        .setProjectId(\"test-project\")"]]}, "num_lines_added": 24, "num_lines_removed": 11}