{"hash": "4558a963d49702f7b715331582d3e41695562ced", "message": "\u8bcd\u5171\u73b0\u77e9\u9635\u5e8f\u5217\u5316", "file_num_lines": 74, "diff_parsed": {"added": [[5, "import java.io.*;"], [12, "public class Occurrence implements Serializable {"], [13, ""], [14, "\tpublic static void main(String[] args) throws Exception {"], [15, "//\t\tOccurrence occ = new Occurrence();"], [16, "//\t\tSet<String> all = new HashSet<String>();"], [17, "//\t\tall.add(\"ansj\");"], [18, "//\t\tall.add(\"sun\");"], [19, "//\t\tall.add(\"cq\");"], [20, "//\t\tocc.addWords(all);"], [21, "//"], [22, "//\t\tocc.saveModel(\"aaa\");"], [23, ""], [24, "\t\tOccurrence occ = loadModel(\"aaa\");"], [25, "\t\tSystem.out.println(occ.distance(\"ansj\", \"aa\"));"], [26, "\t}"], [27, ""], [39, "\tpublic void addWords(Collection<String> words) {"], [40, "\t\tList<Element> all = new ArrayList<Element>(words.size());"], [41, "\t\tfor (String word : words) {"], [42, "\t\t\tall.add(new Element(word));"], [43, "\t\t}"], [44, "\t\tadd(all);"], [45, "\t}"], [46, ""], [53, "\t\t\t\tcount = new Count(word.getNature(), seqId++);"], [85, ""], [87, "\t * \u5f97\u5230\u4e24\u4e2a\u8bcd\u7684\u8ddd\u79bb"], [88, "\t *"], [89, "\t * @return"], [91, "\tprivate Integer distance(String word1, String word2) {"], [92, "\t\tInteger distance = null;"], [93, "\t\tif ((distance = ww2Mc.get().get(word1 + CONN + word2)) != null) {"], [94, "\t\t\treturn distance;"], [95, "\t\t}"], [97, "\t\tif ((distance = ww2Mc.get().get(word2 + CONN + word1)) != null) {"], [98, "\t\t\treturn distance;"], [99, "\t\t}"], [100, "\t\treturn 0;"], [103, "\t/**"], [104, "\t * \u4fdd\u5b58\u6a21\u578b"], [105, "\t */"], [106, "\tpublic void saveModel(String filePath) throws IOException {"], [107, "\t\tObjectOutput oot = new ObjectOutputStream(new FileOutputStream(filePath));"], [108, "\t\toot.writeObject(this);"], [115, "\tpublic static Occurrence loadModel(String filePath) throws IOException, ClassNotFoundException {"], [116, "\t\tObjectInputStream ois = new ObjectInputStream(new FileInputStream(filePath));"], [117, "\t\treturn (Occurrence) ois.readObject();"]], "deleted": [[5, "import java.io.BufferedWriter;"], [6, "import java.io.File;"], [7, "import java.io.FileWriter;"], [8, "import java.io.IOException;"], [15, "public class Occurrence {"], [33, "\t\t\t\tcount = new Count(word.getNature());"], [66, "\t * \u4fdd\u5b58\u6a21\u578b"], [68, "\tpublic void saveModel(String filePath) throws IOException {"], [69, "\t\tBufferedWriter bw = new BufferedWriter(new FileWriter(new File(filePath))) ;"], [70, "\t\twriteMap(bw,idWordMap) ;"], [71, "\t\twriteMap(bw,word2Mc) ;"], [72, "\t\twriteMap(bw,ww2Mc.get()) ;"], [76, "\tprivate void writeMap(BufferedWriter bw, Map<?, ?> map) throws IOException {"], [77, "\t\tbw.write(word2Mc.size());"], [78, "\t\tbw.newLine();"], [79, "\t\tfor(Map.Entry entry : word2Mc.entrySet()){"], [80, "\t\t\tbw.write(entry.getKey()+\"\\t\"+entry.getValue());"], [81, "\t\t\tbw.newLine();"], [82, "\t\t}"], [89, "\tpublic void loadModel(String filePath) {"], [93, "\tclass Count {"], [94, "\t\tint id = 0;"], [95, "\t\tint count = 1; //\u8fd9\u4e2a\u8bcd"], [96, "\t\tint relationCount; //\u8fd9\u4e2a\u8bcd\u548c\u5176\u4ed6\u8bcd\u5171\u540c\u51fa\u73b0\u591a\u5c11\u6b21"], [97, "\t\tString nature;"], [98, ""], [99, "\t\tSet<Integer> relationSet = new HashSet<Integer>();"], [100, ""], [101, "\t\tpublic Count(String nature) {"], [102, "\t\t\tthis.nature = nature;"], [103, "\t\t\tseqId++;"], [104, "\t\t\tthis.id = seqId;"], [105, "\t\t}"], [106, ""], [107, ""], [108, "\t\tpublic void upCount() {"], [109, "\t\t\tthis.count++;"], [110, "\t\t}"], [111, ""], [112, "\t\tpublic void upRelation(int rId) {"], [113, "\t\t\tthis.relationCount++;"], [114, "\t\t\tthis.relationSet.add(rId);"], [115, "\t\t}"], [116, ""], [117, ""], [118, "\t\t@Override"], [119, "\t\tpublic String toString() {"], [120, "\t\t\treturn this.id + \"\\t\" + this.count + \"\\t\" + this.relationCount;"], [121, "\t\t}"], [122, "\t}"]]}, "num_lines_added": 48, "num_lines_removed": 50}