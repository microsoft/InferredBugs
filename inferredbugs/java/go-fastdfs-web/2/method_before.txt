    @RequestMapping("/file/downloadFile")
    @ResponseBody
    public void downloadFile(String path, String name, HttpServletRequest request, HttpServletResponse response) {
        response.setHeader("Content-Disposition", "attachment;filename=" + name);
        response.setContentType("application/octet-stream");
        String peersUrl = getPeers().getServerAddress();
        if(StrUtil.isNotBlank(getPeersGroupName())){
            peersUrl += "/"+getPeersGroupName();
        }else {
            peersUrl += "/group1";
        }
        BufferedInputStream in = null;
        try {
            URL url = new URL(peersUrl+path+"/"+name);
            in = new BufferedInputStream(url.openStream());
            response.reset();
            response.setContentType("application/octet-stream");
            String os = System.getProperty("os.name");
            if(os.toLowerCase().indexOf("windows") != -1){
                name = new String(name.getBytes("GBK"), "ISO-8859-1");
            }else{
                //判断浏览器
                String userAgent = request.getHeader("User-Agent").toLowerCase();
                if(userAgent.indexOf("msie") > 0){
                    name = URLEncoder.encode(name, "ISO-8859-1");
                }
            }
            response.setHeader("Content-Disposition","attachment;filename=" + name);
            // 将网络输入流转换为输出流
            int i;
            while ((i = in.read()) != -1) {
                response.getOutputStream().write(i);
            }
            response.getOutputStream().close();
        } catch (IOException e) {
            e.printStackTrace();
        }finally {
            try {
               if (in != null){
                   in.close();
               }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }