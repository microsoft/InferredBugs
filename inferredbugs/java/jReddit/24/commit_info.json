{"hash": "9cf75c1ac62a2c837d1de37c565cdcac210bef23", "message": "Refactored Submission class to remove unnecessary (and definitely wrongly implemented) info method. Refactored getters", "file_num_lines": 181, "diff_parsed": {"added": [[182, "    public double getCreatedUTC() {"], [183, "        return createdUTC;"], [186, "    public String getAuthor() {"], [187, "        return author;"], [190, "    public String getTitle() {"], [191, "        return title;"], [194, "    public String getSubreddit() {"], [195, "        return subreddit;"], [199, "     * This function comments on this submission saying the comment specified in"], [200, "     * <code>text</code> (CAN INCLUDE MARKDOWN)"], [202, "     * @param text The text to comment"], [206, "    public void comment(String text) throws IOException, ParseException {"], [207, "        JSONObject object = (JSONObject) restClient.post(\"thing_id=\" + fullName + \"&text=\" + text"], [208, "                + \"&uh=\" + user.getModhash(), ApiEndpointUtils.SUBMISSION_COMMENT, user.getCookie()).getResponseObject();"], [210, "        if (object.toJSONString().contains(\".error.USER_REQUIRED\")) {"], [211, "            throw new InvalidCookieException(\"Cookie not present\");"], [213, "            System.out.println(\"Commented on thread id \" + fullName"], [214, "                    + \" saying: \\\"\" + text + \"\\\"\");"], [218, "    /** Mark a post as NSFW **/"], [225, "    /** Unmark a post as NSFW **/"], [240, "        if (!(object.toJSONString().length() > 2)) {"], [243, "        } else {"], [245, "        }"], [256, "        if (!(object.toJSONString().length() > 2)) {"], [259, "        } else {"], [261, "        }"], [264, "    /** Upvote/downvote a submission */"]], "deleted": [[10, "import org.json.simple.JSONArray;"], [183, "    /**"], [184, "     * This function comments on this submission saying the comment specified in"], [185, "     * <code>text</code> (CAN INCLUDE MARKDOWN)"], [186, "     *"], [187, "     * @param text The text to comment"], [188, "     * @throws IOException    If connection fails"], [189, "     * @throws ParseException If JSON parsing fails"], [190, "     */"], [191, "    public void comment(String text) throws IOException, ParseException {"], [192, "        JSONObject object = (JSONObject) restClient.post(\"thing_id=\" + fullName + \"&text=\" + text"], [193, "                + \"&uh=\" + user.getModhash(), ApiEndpointUtils.SUBMISSION_COMMENT, user.getCookie()).getResponseObject();"], [194, ""], [195, "        if (object.toJSONString().contains(\".error.USER_REQUIRED\"))"], [196, "            throw new InvalidCookieException(\"Cookie not present\");"], [197, "        else"], [198, "            System.out.println(\"Commented on thread id \" + fullName"], [199, "                    + \" saying: \\\"\" + text + \"\\\"\");"], [200, "    }"], [201, ""], [202, "    /**"], [203, "     * This function returns the name of the author of this submission."], [204, "     *"], [205, "     * @return The author's name"], [206, "     * @throws IOException    If connection fails"], [207, "     * @throws ParseException If JSON parsing fails"], [208, "     */"], [209, "    public String getAuthor() throws IOException, ParseException {"], [210, "        if (author != null) {"], [211, "            return author;"], [212, "        }"], [213, "        if (url == null)"], [214, "            throw new IOException(\"URL needs to be present\");"], [215, ""], [216, "        return info(url).get(\"author\").toString();"], [217, "    }"], [218, ""], [219, "    /**"], [220, "     * This function returns the title of this submission."], [221, "     *"], [222, "     * @return The title"], [223, "     * @throws IOException    If connection fails"], [224, "     * @throws ParseException If JSON parsing fails"], [225, "     */"], [226, "    public String getTitle() throws IOException, ParseException {"], [227, "        if (title != null) {"], [228, "            return title;"], [229, "        }"], [230, ""], [231, "        if (url == null)"], [232, "            throw new IOException(\"URL needs to be present\");"], [233, ""], [234, "        return info(url).get(\"title\").toString();"], [235, "    }"], [236, ""], [237, "    /**"], [238, "     * This function returns the name of the subreddit that this submission was"], [239, "     * submitted to."], [240, "     *"], [241, "     * @return The name of the subreddit that this submission was submitted to"], [242, "     * @throws IOException    If the connection fails"], [243, "     * @throws ParseException If JSON parsing fails"], [244, "     */"], [245, "    public String getSubreddit() throws IOException, ParseException {"], [246, "        if (subreddit != null) {"], [247, "            return subreddit;"], [248, "        }"], [249, "        if (url == null)"], [250, "            throw new IOException(\"URL needs to be present\");"], [251, ""], [252, "        return info(url).get(\"subreddit\").toString();"], [255, "    /**"], [256, "     * This function returns the score of this sumbission (issues a new GET request"], [257, "     * to Reddit.com)."], [258, "     *"], [259, "     * @return The score of this submission"], [260, "     * @throws IOException    If the connection fails"], [261, "     * @throws ParseException If the JSON parsing fails"], [262, "     */"], [263, "    public int score() throws IOException, ParseException {"], [264, "        if (url == null)"], [265, "            throw new IOException(\"URL needs to be present\");"], [266, ""], [267, "        return Integer.parseInt(info(url).get(\"score\").toString());"], [270, "    /**"], [271, "     * This function returns the number of upvotes of this sumbission."], [272, "     *"], [273, "     * @return The number of upvotes of this submission"], [274, "     * @throws IOException    If the connection fails"], [275, "     * @throws ParseException If the JSON parsing fails"], [276, "     */"], [277, "    public int upVotes() throws IOException, ParseException {"], [278, "        if (url == null)"], [279, "            throw new IOException(\"URL needs to be present\");"], [280, ""], [281, "        return Integer.parseInt(info(url).get(\"ups\").toString());"], [284, "    /**"], [285, "     * This function returns the number of downvotes of this sumbission."], [286, "     *"], [287, "     * @return The number of downvotes of this submission"], [288, "     * @throws IOException    If the connection fails"], [289, "     * @throws ParseException If the JSON parsing fails"], [290, "     */"], [291, "    public int downVotes() throws IOException, ParseException {"], [292, "        if (url == null)"], [293, "            throw new IOException(\"URL needs to be present\");"], [294, ""], [295, "        return Integer.parseInt(info(url).get(\"downs\").toString());"], [299, "     * This function returns true if this submission is marked as NSFW (18+)"], [301, "     * @return This submission is NSFW"], [305, "    public boolean isNSFW() throws IOException, ParseException {"], [306, "        if (this.nsfw == null) {"], [307, "            if (url == null)"], [308, "                throw new IOException(\"URL needs to be present\");"], [310, "            return Boolean.parseBoolean(info(url).get(\"over_18\").toString());"], [312, "            return this.nsfw;"], [329, "     * This function returns true if this submission is a self-post"], [330, "     *"], [331, "     * @return This submission is a self post"], [332, "     * @throws IOException    If connection fails"], [333, "     * @throws ParseException If JSON parsing fails"], [334, "     */"], [335, "    public boolean isSelfPost() throws IOException, ParseException {"], [336, "        if (url == null)"], [337, "            throw new IOException(\"URL needs to be present\");"], [338, ""], [339, "        return Boolean.parseBoolean(info(url).get(\"is_self\").toString());"], [340, "    }"], [341, ""], [342, "    /**"], [343, "     * This function returns the number of comments in this sumbission."], [344, "     *"], [345, "     * @return The number of comments in this submission"], [346, "     * @throws IOException    If the connection fails"], [347, "     * @throws ParseException If the JSON parsing fails"], [348, "     */"], [349, "    public int commentCount() throws IOException, ParseException {"], [350, "        if (url == null)"], [351, "            throw new IOException(\"URL needs to be present\");"], [352, "        return Integer.parseInt(info(url).get(\"num_comments\").toString());"], [353, "    }"], [354, ""], [355, "    /**"], [363, "        if (!(object.toJSONString().length() > 2))"], [366, "        else"], [367, "            System.out.println(object.toJSONString());"], [368, "    }"], [369, ""], [370, "    /**"], [371, "     * This function rescinds, or normalizes this submission. <br />"], [372, "     * (i.e Removes a downvote or upvote)"], [373, "     *"], [374, "     * @throws IOException    If connection fails"], [375, "     * @throws ParseException If JSON parsing fails"], [376, "     */"], [377, "    public void rescind() throws IOException, ParseException {"], [378, "        JSONObject object = voteResponse(0);"], [379, "        if (!(object.toJSONString().length() > 2))"], [380, "            // Will return \"{}\""], [381, "            System.out.println(\"Successful rescind!\");"], [382, "        else"], [394, "        if (!(object.toJSONString().length() > 2))"], [397, "        else"], [406, ""], [407, "    private JSONObject info(String urlPath) throws IOException, ParseException {"], [408, "        urlPath += \"/info.json\";"], [409, "        Object object =  restClient.get(urlPath, user.getCookie()).getResponseObject();"], [410, ""], [411, "        JSONArray array = (JSONArray) object;"], [412, "        JSONObject obj = (JSONObject) array.get(0);"], [413, "        obj = (JSONObject) obj.get(\"data\");"], [414, "        array = (JSONArray) obj.get(\"children\");"], [415, "        obj = (JSONObject) array.get(0);"], [416, "        return (JSONObject) obj.get(\"data\");"], [417, "    }"], [418, ""], [419, "    public double getCreatedUTC() throws IOException, ParseException {"], [420, "        createdUTC = Double.parseDouble(info(url).get(\"created_utc\").toString());"], [421, "        return createdUTC;"], [422, "    }"]]}, "num_lines_added": 27, "num_lines_removed": 180}