{"hash": "e9b6081bc54cfe836931a3a1ccaa1aaeebd48c89", "message": "Adds RawClient.stream() -> RawFetchResponse. Raw response parsed on demand now to support streams.\nBasic ITests write 3 replicas of objects before testing walk() for consistent results", "file_num_lines": 175, "diff_parsed": {"added": [[154, "        return doFetch(bucket, key, meta, false);"], [155, "    }"], [156, ""], [157, "    public RawFetchResponse fetch(String bucket, String key) {"], [158, "        return doFetch(bucket, key, null, false);"], [159, "    }"], [160, ""], [161, "    /**"], [162, "     * Similar to fetch(), except the HTTP connection is left open, and the Riak"], [163, "     * response is provided as a stream and processed on request. The user must"], [164, "     * remember to call RawFetchResponse.close() on the return value."], [165, "     *"], [166, "     * @param bucket"], [167, "     *            The bucket containing the {@link RiakObject} to fetch."], [168, "     * @param key"], [169, "     *            The key of the {@link RiakObject} to fetch."], [170, "     * @param meta"], [171, "     *            Extra metadata to attach to the request such as an r- value"], [172, "     *            for the request, HTTP headers, and other query parameters. See"], [173, "     *            RequestMeta.readParams()."], [174, "     *"], [175, "     * @return A streaming {@link RawFetchResponse} containing HTTP response"], [176, "     *         information and the response stream. The stream is processed when"], [177, "     *         has/getObject() or has/getSibling() is called, or the stream can"], [178, "     *         be read using {@link RawFetchResponse}.getStream(). The HTTP"], [179, "     *         connection must be closed manually by the user by calling"], [180, "     *         {@link RawFetchResponse}.close()."], [181, "     */"], [182, "    public RawFetchResponse stream(String bucket, String key, RequestMeta meta) {"], [183, "        return doFetch(bucket, key, meta, true);"], [184, "    }"], [185, ""], [186, "    public RawFetchResponse stream(String bucket, String key) {"], [187, "        return doFetch(bucket, key, null, true);"], [188, "    }"], [189, ""], [190, "    private RawFetchResponse doFetch(String bucket, String key, RequestMeta meta, boolean streamResponse) {"], [202, "        HttpResponse r = helper.fetch(bucket, key, meta, streamResponse);"], [245, ""]], "deleted": [[165, "        HttpResponse r = helper.fetch(bucket, key, meta);"], [177, "    public RawFetchResponse fetch(String bucket, String key) {"], [178, "        return fetch(bucket, key, null);"], [179, "    }"], [180, ""], [212, ""]]}, "num_lines_added": 39, "num_lines_removed": 6}