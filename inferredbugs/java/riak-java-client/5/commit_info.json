{"hash": "cd0104e9cf321ef7c0dff6725957c89886864407", "message": "bz 1038 fix infinite loop in PBC setClientId\n\nAdd n_val of 3 to basic itest bucket set up as it assumes n_val >= 3\nAdd human readable response body to itest assert fail message\nFix whitspace/naming issues after review", "file_num_lines": 401, "diff_parsed": {"added": [[65, "\tprivate volatile ByteString clientID;"], [83, "\t\treturn getConnection(true);"], [86, "\tRiakConnection getConnection(boolean setClientId) throws IOException {"], [87, "        RiakConnection c = connections.get();"], [88, "        if (c == null || !c.endIdleAndCheckValid()) {"], [89, "            c = new RiakConnection(addr, port);"], [90, ""], [91, "            if (this.clientID != null && setClientId) {"], [92, "                setClientID(clientID);"], [93, "            }"], [94, "        }"], [95, "        connections.set(null);"], [96, "        return c;"], [97, "    }"], [98, ""], [158, "\t\tRiakConnection c = getConnection(false);"]], "deleted": [[65, "\tprivate ByteString clientID;"], [83, "\t\tRiakConnection c = connections.get();"], [84, "\t\tif (c == null || !c.endIdleAndCheckValid()) {"], [85, "\t\t\tc = new RiakConnection(addr, port);"], [86, ""], [87, "\t\t\tif (this.clientID != null) {"], [88, "\t\t\t\tsetClientID(clientID);"], [89, "\t\t\t}"], [90, "\t\t} else {"], [91, "\t\t\t// we're fine! //"], [92, "\t\t}"], [93, "\t\tconnections.set(null);"], [94, "\t\treturn c;"], [156, "\t\tRiakConnection c = getConnection();"]]}, "num_lines_added": 16, "num_lines_removed": 14}