{"hash": "43e2f4409a49bce242623bc81c1b677cc807a994", "message": "Can use SSL\n\nSocks5Server can accept SSL connection\nand add some arguments", "file_num_lines": 86, "diff_parsed": {"added": [[3, "import fucksocks.common.SSLConfiguration;"], [50, "    ArgUtil argUtil = new ArgUtil(args);"], [53, "    String sslConfigFilePath = null;"], [54, ""], [55, "    if (argUtil.hasArgsIn(\"-h\", \"--help\")) {"], [56, "      showHelp();"], [57, "      System.exit(0);"], [59, ""], [60, "    port = argUtil.getIntValue(\"-p\", 1080);"], [61, "    port = argUtil.getIntValueFromArg(\"--port=\", \"=\", port);"], [62, "    authValue = argUtil.getValue(\"-a\", null);"], [63, "    authValue = argUtil.getValueFromArg(\"--auth=\", \"=\", authValue);"], [64, "    sslConfigFilePath = argUtil.getValue(\"-c\", null);"], [65, "    sslConfigFilePath = argUtil.getValueFromArg(\"--ssl-config=\", \"=\", sslConfigFilePath);"], [66, ""], [67, ""], [68, "    SocksServerBuilder builder = null;"], [70, "      builder ="], [72, "              NoAuthenticationRequiredMethod());"], [81, "      builder ="], [83, "              ()).setUserManager(userManager);"], [84, ""], [85, "    }"], [86, "    builder.setBindPort(port);"], [87, "    if (sslConfigFilePath != null) {"], [88, "      SSLConfiguration configuration = SSLConfiguration.load(sslConfigFilePath);"], [89, "      builder.useSSL(configuration);"], [91, ""], [92, "    server = builder.build();"], [93, ""], [110, "    System.out.println(\"    -p, --port=<val>             Server bind port\");"], [111, "    System.out.println(\"    -a, --auth=<val1:val2>       Use username/password authentication\");"], [112, "    System.out.println(\"                                 Example: --auth=admin:1234\");"], [113, "    System.out.println(\"                                          --auth=admin:1234,root:1234\");"], [114, "    System.out.println(\"    -c, --ssl-config=<val>       SSL configuration file\");"], [115, "    System.out.println(\"    -h, --help                   Show help\");"]], "deleted": [[5, "import fucksocks.common.net.NetworkMonitor;"], [6, "import fucksocks.server.BasicSocksProxyServer;"], [42, "    BasicSocksProxyServer server = (BasicSocksProxyServer) socks5Server.server;"], [43, "    NetworkMonitor monitor = server.getNetworkMonitor();"], [44, "    while (true) {"], [45, "      logger.info(monitor.toString());"], [46, "      Thread.sleep(5000);"], [47, "    }"], [48, ""], [60, "    if (args != null) {"], [61, "      for (String arg : args) {"], [62, "        if (arg.equals(\"-h\") || arg.equals(\"--help\")) {"], [63, "          showHelp();"], [64, "          System.exit(0);"], [65, "        } else if (arg.startsWith(\"--port=\")) {"], [66, "          port = ArgUtil.intValueOf(arg);"], [67, "        } else if (arg.startsWith(\"--auth=\")) {"], [68, "          authValue = ArgUtil.valueOf(arg);"], [69, "        } else {"], [70, "          logger.error(\"Unknown argument[{}]\", arg);"], [71, "          return;"], [72, "        }"], [73, "      }"], [76, "      server ="], [78, "              NoAuthenticationRequiredMethod()).setBindPort(port).build();"], [87, "      server ="], [89, "              ()).setUserManager(userManager).setBindPort(port).build();"], [107, "    System.out.println(\"    --port=<val>         Server bind port\");"], [108, "    System.out.println(\"    --auth=<val1:val2>   Use username/password authentication\");"], [109, "    System.out.println(\"                         Example: --auth=admin:1234\");"], [110, "    System.out.println(\"                                  --auth=admin:1234,root:1234\");"], [111, "    System.out.println(\"    -h or --help         Show help\");"]]}, "num_lines_added": 36, "num_lines_removed": 32}