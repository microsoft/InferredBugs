{"hash": "8b8ea28cf5418969520449e3ef8690c79a306f45", "message": "get integers working", "file_num_lines": 159, "diff_parsed": {"added": [[9, "import org.yinwang.rubysonar.types.IntType;"], [48, "                return Analyzer.self.builtins.True;"], [50, "                return Analyzer.self.builtins.False;"], [55, "                return Analyzer.self.builtins.BaseBool;"], [67, "                return Analyzer.self.builtins.True;"], [69, "                return Analyzer.self.builtins.False;"], [74, "                return Analyzer.self.builtins.BaseBool;"], [90, "        if (ltype.isIntType() && rtype.isIntType()) {"], [91, "            IntType leftNum = ltype.asIntType();"], [92, "            IntType rightNum = rtype.asIntType();"], [95, "                return IntType.add(leftNum, rightNum);"], [99, "                return IntType.sub(leftNum, rightNum);"], [103, "                return IntType.mul(leftNum, rightNum);"], [107, "                return IntType.div(leftNum, rightNum);"], [113, "                IntType trueType, falseType;"], [119, "                    IntType tmpNum = rightNum;"], [138, "                            trueType = new IntType(leftNum);"], [142, "                            falseType = new IntType(leftNum);"], [168, "                            trueType = new IntType(leftNum);"], [172, "                            falseType = new IntType(leftNum);"]], "deleted": [[47, "                return new BoolType(BoolType.Value.True);"], [49, "                return new BoolType(BoolType.Value.False);"], [54, "                return new BoolType(BoolType.Value.Undecided);"], [66, "                return new BoolType(BoolType.Value.True);"], [68, "                return new BoolType(BoolType.Value.False);"], [73, "                return new BoolType(BoolType.Value.Undecided);"], [89, "        if (ltype.isNumType() && rtype.isNumType()) {"], [90, "            FloatType leftNum = ltype.asNumType();"], [91, "            FloatType rightNum = rtype.asNumType();"], [94, "                return FloatType.add(leftNum, rightNum);"], [98, "                return FloatType.sub(leftNum, rightNum);"], [102, "                return FloatType.mul(leftNum, rightNum);"], [106, "                return FloatType.div(leftNum, rightNum);"], [112, "                FloatType trueType, falseType;"], [118, "                    FloatType tmpNum = rightNum;"], [137, "                            trueType = new FloatType(leftNum);"], [141, "                            falseType = new FloatType(leftNum);"], [167, "                            trueType = new FloatType(leftNum);"], [171, "                            falseType = new FloatType(leftNum);"]]}, "num_lines_added": 20, "num_lines_removed": 19}