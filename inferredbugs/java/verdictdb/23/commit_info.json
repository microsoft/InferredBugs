{"hash": "f93ccda5219540a5be76c04e88dfc331eb7a6b85", "message": "Fix Spark things\n\n\nFormer-commit-id: de616605ef364e969d7346bbc020528b2439c23d", "file_num_lines": 100, "diff_parsed": {"added": [[26, ""], [36, "    while (queryResult.next()) {"], [37, "      schemas.add((String) queryResult.getValue(syntax.getSchemaNameColumnIndex()));"], [46, "    while (queryResult.next()) {"], [47, "      tables.add((String) queryResult.getValue(syntax.getTableNameColumnIndex()));"], [56, "    while (queryResult.next()) {"], [57, "      String type = (String) queryResult.getValue(syntax.getColumnTypeColumnIndex());"], [58, "      type = type.toLowerCase();"], [60, "      columns.add("], [61, "          new ImmutablePair<>((String) queryResult.getValue(syntax.getColumnNameColumnIndex()), type));"], [63, ""], [71, "    while (queryResult.next()) {"], [72, "      partition.add((String) queryResult.getValue(0));"], [74, ""], [90, "      if (result != null) {"]], "deleted": [[26, ""], [36, "    JdbcResultSet jdbcResultSet = new JdbcResultSet(queryResult);"], [37, "    try {"], [38, "      while (queryResult.next()) {"], [39, "        schemas.add(jdbcResultSet.getString(syntax.getSchemaNameColumnIndex()+1));"], [40, "      }"], [41, "    } catch (SQLException e) {"], [42, "      throw new VerdictDBDbmsException(e);"], [43, "    } finally {"], [44, "      jdbcResultSet.close();"], [53, "    JdbcResultSet jdbcResultSet = new JdbcResultSet(queryResult);"], [54, "    try {"], [55, "      while (queryResult.next()) {"], [56, "        tables.add(jdbcResultSet.getString(syntax.getTableNameColumnIndex()+1));"], [57, "      }"], [58, "    } catch (SQLException e) {"], [59, "      throw new VerdictDBDbmsException(e);"], [60, "    } finally {"], [61, "      jdbcResultSet.close();"], [70, "    JdbcResultSet jdbcResultSet = new JdbcResultSet(queryResult);"], [71, "    try {"], [72, "      while (queryResult.next()) {"], [73, "        String type = jdbcResultSet.getString(syntax.getColumnTypeColumnIndex()+1);"], [74, "        type = type.toLowerCase();"], [75, ""], [76, "//        // remove the size of type"], [77, "//        type = type.replaceAll(\"\\\\(.*\\\\)\", \"\");"], [79, "        columns.add("], [80, "            new ImmutablePair<>(jdbcResultSet.getString(syntax.getColumnNameColumnIndex()+1), type));"], [81, "      }"], [82, "    } catch (SQLException e) {"], [83, "      throw new VerdictDBDbmsException(e);"], [84, "    } finally {"], [85, "      jdbcResultSet.close();"], [94, "    JdbcResultSet jdbcResultSet = new JdbcResultSet(queryResult);"], [95, "    // the result of postgresql is a vector of column index"], [96, ""], [97, "    try {"], [98, "      if (syntax instanceof PostgresqlSyntax) {"], [99, "        queryResult.next();"], [100, "        Object o = jdbcResultSet.getObject(1);"], [101, "        String[] arr = o.toString().split(\" \");"], [102, "        List<Pair<String, String>> columns = getColumns(schema, table);"], [103, "        for (int i=0; i<arr.length; i++) {"], [104, "          partition.add(columns.get(Integer.valueOf(arr[i])-1).getKey());"], [105, "        }"], [106, "      }"], [107, "      else {"], [108, "        while (queryResult.next()) {"], [109, "          partition.add(jdbcResultSet.getString(1));"], [110, "        }"], [111, "      }"], [112, "    } catch (SQLException e) {"], [113, "      throw new VerdictDBDbmsException(e);"], [114, "    } finally {"], [115, "      jdbcResultSet.close();"], [117, "    jdbcResultSet.close();"], [133, "      if (result!=null) {"]]}, "num_lines_added": 15, "num_lines_removed": 58}