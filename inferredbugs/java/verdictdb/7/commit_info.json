{"hash": "4c8dd995165bca0fb44d984322c6f2a3452fd0e9", "message": "stratified sample works for groupby with expressions", "file_num_lines": 468, "diff_parsed": {"added": [[190, "//        for (SelectElem elem : elems) {"], [191, "//            if (!elem.isagg()) {"], [192, "//                if (elem.aliasPresent()) {"], [193, "//                    if (!elem.getAlias().equals(partitionColumnName())) {"], [194, "//                        newGroupby.add(new ColNameExpr(vc, elem.getAlias(), r.getAlias()));"], [195, "//                    }"], [196, "//                } else {        // does not happen"], [197, "//                    if (!elem.getExpr().toString().equals(partitionColumnName())) {"], [198, "//                        newGroupby.add(elem.getExpr().withTableSubstituted(r.getAlias()));"], [199, "//                    }"], [200, "//                }"], [201, "//            }"], [202, "//        }"]], "deleted": [[80, "        ((AggregatedRelation) r).setIncludeGroupsInToSql(includeGroupsInToSql);"], [191, "        for (SelectElem elem : elems) {"], [192, "            if (!elem.isagg()) {"], [193, "                if (elem.aliasPresent()) {"], [194, "                    if (!elem.getAlias().equals(partitionColumnName())) {"], [195, "                        newGroupby.add(new ColNameExpr(vc, elem.getAlias(), r.getAlias()));"], [196, "                    }"], [197, "                } else {"], [198, "                    if (!elem.getExpr().toString().equals(partitionColumnName())) {"], [199, "                        newGroupby.add(elem.getExpr().withTableSubstituted(r.getAlias()));"], [200, "                    }"], [201, "                }"], [202, "            }"], [203, "        }"]]}, "num_lines_added": 13, "num_lines_removed": 14}