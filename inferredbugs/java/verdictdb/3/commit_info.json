{"hash": "5d2c1070fcd3cc2054d883cb9758b24e70ab303b", "message": "sample planning added", "file_num_lines": 113, "diff_parsed": {"added": [[52, "\t\tList<List<SampleGroup>> candidates_list = new ArrayList<List<SampleGroup>>();"], [53, "\t\tfor (int i = 0; i < elems.size(); i++) {"], [54, "\t\t\tList<SampleGroup> candidates = source.findSample(elems.get(i));"], [55, "\t\t\tcandidates_list.add(candidates);"], [62, "\t\tSamplePlan plan = consolidate(candidates_list);"], [65, "\t\tfor (SampleGroup group : plan.getSampleGroups()) {"], [66, "\t\t\tList<SelectElem> elems = group.getElems();"], [67, "\t\t\tSet<SampleParam> samplesPart = group.sampleSet();"], [68, "\t\t\tindividuals.add(new ApproxAggregatedRelation(vc, source.approxWith(attachTableMapping(samplesPart)), elems));"]], "deleted": [[51, "\t\tList<Expr> exprs = exprsInSelectElems(elems);"], [52, ""], [54, "\t\tList<Pair<Map<Set<SampleParam>, List<Double>>, SelectElem>> candidates_list = new ArrayList<Pair<Map<Set<SampleParam>, List<Double>>, SelectElem>>();"], [55, "\t\tfor (int i = 0; i < exprs.size(); i++) {"], [56, "\t\t\tMap<Set<SampleParam>, List<Double>> candidates = source.findSample(exprs.get(i));"], [57, "\t\t\tcandidates_list.add(Pair.of(candidates, elems.get(i)));"], [64, "\t\tList<Pair<Set<SampleParam>, List<SelectElem>>> consolidated = consolidate(candidates_list);"], [67, "\t\tfor (Pair<Set<SampleParam>, List<SelectElem>> p : consolidated) {"], [68, "\t\t\tList<SelectElem> elemsPart = p.getRight();"], [69, "\t\t\tSet<SampleParam> samplesPart = p.getLeft();"], [70, "\t\t\tindividuals.add(new ApproxAggregatedRelation(vc, source.approxWith(attachTableMapping(samplesPart)), elemsPart));"]]}, "num_lines_added": 9, "num_lines_removed": 11}