 @Override
	public ExactRelation rewriteWithSubsampledErrorBounds() {
		ExactRelation newSource = source.rewriteWithSubsampledErrorBounds();
		List<SelectElem> sourceElems = null; // newSource.getSelectList();
		Set<String> colAliases = new HashSet<String>();
		for (SelectElem e : sourceElems) {
			if (e.aliasPresent()) {
				// we're only interested in the columns for which aliases are present.
				// note that every column with aggregate function must have an alias (enforced by ColNameExpr class).
				colAliases.add(e.getAlias());
			}
		}
		
		// we search for error bound columns based on the assumption that the error bound columns have the suffix attached
		// to the original agg columns. The suffix is obtained from the ApproxRelation#errColSuffix() method.
		// ApproxAggregatedRelation#rewriteWithSubsampledErrorBounds() method is responsible for having those columns. 
		List<SelectElem> elemsWithErr = new ArrayList<SelectElem>();
		for (SelectElem e : elems) {
			elemsWithErr.add(e);
			String errColName = errColName(e.getExpr().getText());
			if (colAliases.contains(errColName)) {
				elemsWithErr.add(new SelectElem(new ColNameExpr(errColName), errColName));
			}
		}
		
		ExactRelation r = new ProjectedRelation(vc, newSource, elemsWithErr);
		r.setAliasName(getAliasName());
		return r;
	}