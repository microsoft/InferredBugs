    @Test
    public void clientToServerBackpressure() throws InterruptedException {
        Object lock = new Object();

        RxNumbersGrpc.RxNumbersStub stub = RxNumbersGrpc.newRxStub(channel);
        BackpressureDetector clientBackpressureDetector = new BackpressureDetector(madMultipleCutoff);
        Sequence seq = new Sequence(200, clientBackpressureDetector);

        Flowable<NumberProto.Number> rxRequest = Flowable
                .fromIterable(seq)
                .doOnNext(i -> System.out.println(i + " -->"))
                .map(BackpressureIntegrationTest::protoNum);


        Single<NumberProto.Number> rxResponse = stub.requestPressure(rxRequest);

        rxResponse.subscribe(
                n -> {
                    System.out.println("Client done. " + n.getNumber(0));
                    synchronized (lock) {
                        lock.notify();
                    }
                },
                t -> {
                    t.printStackTrace();
                    synchronized (lock) {
                        lock.notify();
                    }
                });

        synchronized (lock) {
            lock.wait(TimeUnit.SECONDS.toMillis(20));
        }

        assertThat(clientBackpressureDetector.backpressureDelayOcurred()).isTrue();
    }