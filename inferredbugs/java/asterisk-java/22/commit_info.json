{"hash": "2d553de9e59961db6457daf0011bb6daae344721", "message": "-ManagerConnectionPool  https://secure.reucon.net/issues/browse/AJ-300. Fewer AMI connections - better performance.\n+VAR_AJ_DIAL_STATUS = \"AJ_DIAL_STATUS\"\n+management api\n-better shutdown\n*better perfomance\n*better log", "file_num_lines": 715, "diff_parsed": {"added": [[23, "import org.asteriskjava.util.DaemonThreadFactory;"], [29, "import java.util.concurrent.ScheduledThreadPoolExecutor;"], [30, "import java.util.concurrent.TimeUnit;"], [53, "    final Set<AsteriskChannelImpl> channels;"], [54, ""], [55, ""], [56, "\t\tScheduledThreadPoolExecutor traceScheduledExecutorService;"], [79, ""], [80, "\t      traceScheduledExecutorService = new ScheduledThreadPoolExecutor(1, new DaemonThreadFactory());//Executors.newSingleThreadScheduledExecutor"], [81, ""], [96, "\t      if (traceScheduledExecutorService != null) {"], [97, "\t        traceScheduledExecutorService.shutdown();"], [98, "\t      }"], [162, "    private AsteriskChannelImpl addNewChannel(String uniqueId, final String name,"], [166, "        final AsteriskChannelImpl channel = new AsteriskChannelImpl(server, name, uniqueId, dateOfCreation);"], [171, "        addChannel(channel);"], [173, "\t    //todo getChannelImplById -> LinkedHashMap, callbacks order"], [174, "\t    traceScheduledExecutorService.schedule(new Runnable(){"], [175, "\t\t    @Override public void run () {"], [176, "\t\t\t    final String traceId = getTraceId(channel);"], [177, "\t        channel.setTraceId(traceId);"], [179, "\t        if (traceId != null && (!name.toLowerCase(Locale.ENGLISH).startsWith(\"local/\") || name.endsWith(\",1\") || name.endsWith(\";1\"))) {"], [180, "            final OriginateCallbackData callbackData = server.getOriginateCallbackDataByTraceId(traceId);"], [181, ""], [182, "            if (callbackData != null && callbackData.getChannel() == null) {"], [183, "              callbackData.setChannel(channel);"], [184, "              try {"], [185, "                callbackData.getCallback().onDialing(channel);"], [186, "              } catch (Throwable t) {"], [187, "                logger.warn(\"Exception dispatching originate progress. \"+ channel, t);"], [188, "              }//t"], [189, "            }//i"], [190, "          }//i"], [191, "\t\t    }}, SLEEP_TIME_BEFORE_GET_VAR, TimeUnit.MILLISECONDS);"], [196, "    }//addNewChannel"], [197, ""], [448, "            logger.warn(\"handleNewExtenEvent: Ignored NewExtenEvent for unknown channel \" + event.getChannel());"], [574, "            logger.warn(\"handleHangupEvent: Ignored HangupEvent for unknown channel \" + event.getChannel());"], [599, "            logger.warn(\"handleDialEvent: Ignored DialEvent for unknown source channel \" + event.getChannel() + \" with unique id \" + event.getUniqueId());"], [602, "        if (destinationChannel == null) {"], [603, "\t        if (DialEvent.SUBEVENT_END.equalsIgnoreCase(event.getSubEvent())) {"], [604, "\t\t        sourceChannel.updateVariable(AsteriskChannel.VAR_AJ_DIAL_STATUS, event.getDialStatus());"], [605, "\t          logger.info(\"handleDialEvent: Ignored DialEvent for unknown dst channel \"+ event.getDestination() +\" with unique_id \"+ event.getDestUniqueId());"], [606, "\t        } else {"], [607, "\t\t\t\t\t\tlogger.warn(\"handleDialEvent: Ignored DialEvent for unknown dst channel \"+ event.getDestination() +\" with unique_id \"+ event.getDestUniqueId());"], [608, "\t\t\t\t\t}"], [609, "          return;"], [610, "        }//i"], [632, "            logger.warn(\"handleBridgeEvent: Ignored BridgeEvent for unknown channel \" + event.getChannel1());"], [637, "            logger.warn(\"handleBridgeEvent: Ignored BridgeEvent for unknown channel \" + event.getChannel2());"], [676, "            logger.warn(\"handleRenameEvent: Ignored RenameEvent for unknown channel with uniqueId \" + event.getUniqueId());"]], "deleted": [[50, "    private final Set<AsteriskChannelImpl> channels;"], [150, "    private AsteriskChannelImpl addNewChannel(String uniqueId, String name,"], [154, "        final AsteriskChannelImpl channel;"], [155, "        final String traceId;"], [156, ""], [157, "        channel = new AsteriskChannelImpl(server, name, uniqueId, dateOfCreation);"], [163, "        if (SLEEP_TIME_BEFORE_GET_VAR > 0)"], [164, "        {"], [165, "            try"], [166, "            {"], [167, "                Thread.sleep(SLEEP_TIME_BEFORE_GET_VAR);"], [168, "            }"], [169, "            catch (InterruptedException e)"], [170, "            {"], [171, "                Thread.currentThread().interrupt();"], [172, "            }"], [173, "        }"], [175, "        traceId = getTraceId(channel);"], [176, "        channel.setTraceId(traceId);"], [178, "        addChannel(channel);"], [180, "        if (traceId != null && (!name.toLowerCase(Locale.ENGLISH).startsWith(\"local/\") || (name.endsWith(\",1\") || name.endsWith(\";1\"))))"], [181, "        {"], [182, "            final OriginateCallbackData callbackData;"], [183, "            callbackData = server.getOriginateCallbackDataByTraceId(traceId);"], [184, "            if (callbackData != null && callbackData.getChannel() == null)"], [185, "            {"], [186, "                callbackData.setChannel(channel);"], [187, "                try"], [188, "                {"], [189, "                    callbackData.getCallback().onDialing(channel);"], [190, "                }"], [191, "                catch (Throwable t)"], [192, "                {"], [193, "                    logger.warn(\"Exception dispatching originate progress.\", t);"], [194, "                }"], [195, "            }"], [196, "        }"], [199, "    }"], [450, "            logger.error(\"Ignored NewExtenEvent for unknown channel \" + event.getChannel());"], [576, "            logger.error(\"Ignored HangupEvent for unknown channel \" + event.getChannel());"], [601, "            logger.error(\"Ignored DialEvent for unknown source channel \" + event.getChannel() + \" with unique id \" + event.getUniqueId());"], [602, "            return;"], [603, "        }"], [604, "        if (destinationChannel == null)"], [605, "        {"], [606, "            logger.error(\"Ignored DialEvent for unknown destination channel \" + event.getDestination() + \" with unique id \" + event.getDestUniqueId());"], [630, "            logger.error(\"Ignored BridgeEvent for unknown channel \" + event.getChannel1());"], [635, "            logger.error(\"Ignored BridgeEvent for unknown channel \" + event.getChannel2());"], [674, "            logger.error(\"Ignored RenameEvent for unknown channel with uniqueId \" + event.getUniqueId());"]]}, "num_lines_added": 51, "num_lines_removed": 49}