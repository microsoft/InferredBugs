{"hash": "e6f634c4a21148de17413bc4731a0744cd5e66a8", "message": "", "file_num_lines": 873, "diff_parsed": {"added": [[42, "import org.asteriskjava.manager.SendActionCallback;"], [188, "    private final Map<String, SendActionCallback> responseListeners;"], [218, "        this.responseListeners = new HashMap<String, SendActionCallback>();"], [646, "        SendActionCallback callbackHandler;"], [649, "        callbackHandler = new DefaultSendActionCallback(result);"], [681, "            SendActionCallback callback) throws IOException,"], [718, "        if (callback != null)"], [722, "                this.responseListeners.put(internalActionId, callback);"], [767, "        if (state != CONNECTED)"], [769, "            throw new IllegalStateException(\"Actions may only be sent when in state \" +"], [770, "                    \"CONNECTED, but connection is in state \" + state);"], [894, "     * {@link SendActionCallback}."], [903, "        SendActionCallback listener;"], [953, "                listener.onResponse(response);"], [1256, "    private class DefaultSendActionCallback"], [1258, "                SendActionCallback,"], [1272, "        public DefaultSendActionCallback(ResponseHandlerResult result)"], [1277, "        public void onResponse(ManagerResponse response)"], [1295, "                SendActionCallback,"], [1347, "        public void onResponse(ManagerResponse response)"]], "deleted": [[32, "import java.util.Iterator;"], [42, "import org.asteriskjava.manager.ManagerEventHandler;"], [44, "import org.asteriskjava.manager.ManagerResponseHandler;"], [45, "import org.asteriskjava.manager.ManagerResponseListener;"], [191, "    private final Map<String, ManagerResponseListener> responseListeners;"], [221, "        this.responseListeners = new HashMap<String, ManagerResponseListener>();"], [586, "    public synchronized boolean isConnected()"], [587, "    {"], [588, "        return socket != null && !reconnecting && socket.isConnected();"], [589, "    }"], [590, ""], [654, "        ManagerResponseListener callbackHandler;"], [657, "        callbackHandler = new DefaultResponseListener(result);"], [688, "    @SuppressWarnings(\"deprecation\")"], [689, "    public void sendAction(ManagerAction action,"], [690, "            ManagerResponseHandler callbackHandler) throws IOException,"], [691, "            IllegalArgumentException, IllegalStateException"], [692, "    {"], [693, "        sendAction(action, new ManagerResponseListenerAdapter(callbackHandler));"], [694, "    }"], [695, ""], [697, "            ManagerResponseListener callbackHandler) throws IOException,"], [734, "        if (callbackHandler != null)"], [738, "                this.responseListeners.put(internalActionId, callbackHandler);"], [783, "        // TODO"], [784, "        if (socket == null)"], [786, "            throw new IllegalStateException(\"Unable to send \""], [787, "                    + action.getAction() + \" action: not connected.\");"], [896, "    @SuppressWarnings(\"deprecation\")"], [897, "    public void addEventHandler(final ManagerEventHandler eventHandler)"], [898, "    {"], [899, "        addEventListener(new ManagerEventListenerAdapter(eventHandler));"], [900, "    }"], [901, ""], [902, "    @SuppressWarnings(\"deprecation\")"], [903, "    public void removeEventHandler(final ManagerEventHandler eventHandler)"], [904, "    {"], [905, "        synchronized (this.eventListeners)"], [906, "        {"], [907, "            Iterator<ManagerEventListener> i = eventListeners.iterator();"], [908, ""], [909, "            while (i.hasNext())"], [910, "            {"], [911, "                ManagerEventListener listener = i.next();"], [912, "                if (listener instanceof ManagerEventListenerAdapter &&"], [913, "                    ((ManagerEventListenerAdapter) listener).handler == eventHandler)"], [914, "                {"], [915, "                    i.remove();"], [916, "                }"], [917, "            }"], [918, "        }"], [919, "    }"], [920, ""], [936, "     * {@link ManagerResponseListener}."], [945, "        ManagerResponseListener listener;"], [995, "                listener.onManagerResponse(response);"], [1298, "    private class DefaultResponseListener"], [1300, "                ManagerResponseListener,"], [1314, "        public DefaultResponseListener(ResponseHandlerResult result)"], [1319, "        public void onManagerResponse(ManagerResponse response)"], [1337, "                ManagerResponseListener,"], [1389, "        public void onManagerResponse(ManagerResponse response)"], [1413, ""], [1414, "    // to be removed in 0.4"], [1415, ""], [1416, "    @SuppressWarnings(\"deprecation\")"], [1417, "    private class ManagerResponseListenerAdapter implements ManagerResponseListener"], [1418, "    {"], [1419, "        ManagerResponseHandler handler;"], [1420, ""], [1421, "        public ManagerResponseListenerAdapter(ManagerResponseHandler handler)"], [1422, "        {"], [1423, "            this.handler = handler;"], [1424, "        }"], [1425, ""], [1426, "        public void onManagerResponse(ManagerResponse response)"], [1427, "        {"], [1428, "            handler.handleResponse(response);"], [1429, "        }"], [1430, "    }"], [1431, ""], [1432, "    @SuppressWarnings(\"deprecation\")"], [1433, "    private class ManagerEventListenerAdapter implements ManagerEventListener"], [1434, "    {"], [1435, "        ManagerEventHandler handler;"], [1436, ""], [1437, "        public ManagerEventListenerAdapter(ManagerEventHandler handler)"], [1438, "        {"], [1439, "            this.handler = handler;"], [1440, "        }"], [1441, ""], [1442, "        public void onManagerEvent(ManagerEvent event)"], [1443, "        {"], [1444, "            handler.handleEvent(event);"], [1445, "        }"], [1446, "    }"]]}, "num_lines_added": 20, "num_lines_removed": 96}