{"hash": "a92c4be1c323a8ed50c1edbb7353078804cba242", "message": "AsteriskServer now throws a NoSuchChannelException when an invalid channel is given", "file_num_lines": 610, "diff_parsed": {"added": [[39, "import org.asteriskjava.live.NoSuchChannelException;"], [226, "    public AsteriskChannel originateToExtension(String channel, String context, String exten, int priority, long timeout) throws ManagerCommunicationException, NoSuchChannelException"], [231, "    public AsteriskChannel originateToExtension(String channel, String context, String exten, int priority, long timeout, CallerId callerId, Map<String, String> variables) throws ManagerCommunicationException, NoSuchChannelException"], [250, "    public AsteriskChannel originateToApplication(String channel, String application, String data, long timeout) throws ManagerCommunicationException, NoSuchChannelException"], [255, "    public AsteriskChannel originateToApplication(String channel, String application, String data, long timeout, CallerId callerId, Map<String, String> variables) throws ManagerCommunicationException, NoSuchChannelException"], [273, "    private AsteriskChannel originate(OriginateAction originateAction) throws ManagerCommunicationException, NoSuchChannelException"], [278, "        AsteriskChannel channel = null;"], [305, "                channel = getChannelById(((AbstractOriginateEvent) responseEvent).getUniqueId());"], [309, "        if (channel == null)"], [310, "        {"], [311, "            throw new NoSuchChannelException(\"Channel '\" + originateAction.getChannel() + \" is not available\");"], [312, "        }"], [313, ""], [314, "        return channel;"]], "deleted": [[225, "    public AsteriskChannel originateToExtension(String channel, String context, String exten, int priority, long timeout) throws ManagerCommunicationException"], [230, "    public AsteriskChannel originateToExtension(String channel, String context, String exten, int priority, long timeout, CallerId callerId, Map<String, String> variables) throws ManagerCommunicationException"], [249, "    public AsteriskChannel originateToApplication(String channel, String application, String data, long timeout) throws ManagerCommunicationException"], [254, "    public AsteriskChannel originateToApplication(String channel, String application, String data, long timeout, CallerId callerId, Map<String, String> variables) throws ManagerCommunicationException"], [272, "    private AsteriskChannel originate(OriginateAction originateAction) throws ManagerCommunicationException"], [303, "                return getChannelById(((AbstractOriginateEvent) responseEvent).getUniqueId());"], [307, "        return null;"]]}, "num_lines_added": 14, "num_lines_removed": 7}