    @Override
    protected Statement withAfters(final FrameworkMethod method, final Object target, final Statement next) {
        Statement statement = next;
        for (int i = instances.size() - 1; i >= 0; i--) {
            final Object instance = instances.get(i);
            final TestClass tClass = TestClassPool.forClass(instance.getClass());
            final List<FrameworkMethod> afters = tClass.getAnnotatedMethods(After.class);
            statement = afters.isEmpty() ? statement : new RunAfters(statement, afters, instance);
        }
        return statement;
    }