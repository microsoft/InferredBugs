{"hash": "b138db0d58decbab872b9540ee17bde8e42efe9f", "message": "Fix raknet broadcasting and slash command broadcasting, cleanup config copying", "file_num_lines": 122, "diff_parsed": {"added": [[35, "import java.io.*;"], [37, "import java.nio.file.Files;"], [41, "import java.nio.file.StandardCopyOption;"], [124, "        try {"], [125, "            if(!Files.exists(Paths.get(\"config.yml\"))) {"], [126, "                Files.copy(getClass().getResourceAsStream(\"/config.yml\"), Paths.get(\"config.yml\"), StandardCopyOption.REPLACE_EXISTING);"], [128, "        } catch (IOException ex) {"], [129, "            logger.error(\"Failed to copy config file: \" + ex.getMessage());"], [133, "        configuration = mapper.readValue(new FileInputStream(\"config.yml\"), DragonConfiguration.class);"]], "deleted": [[35, "import java.io.File;"], [36, "import java.io.FileInputStream;"], [37, "import java.io.FileOutputStream;"], [38, "import java.io.InputStream;"], [125, "        // TODO: Tidy this up"], [126, "        File fileConfig = new File(\"config.yml\");"], [127, "        if (!fileConfig.exists()) {"], [128, "            // Create default config"], [129, "            FileOutputStream fos = new FileOutputStream(fileConfig);"], [130, "            InputStream ins = DragonProxy.class.getResourceAsStream(\"/config.yml\");"], [131, "            int data;"], [132, "            while ((data = ins.read()) != -1) {"], [133, "                fos.write(data);"], [135, "            ins.close();"], [136, "            fos.close();"], [140, "        configuration = mapper.readValue(new FileInputStream(fileConfig), DragonConfiguration.class);"]]}, "num_lines_added": 9, "num_lines_removed": 16}