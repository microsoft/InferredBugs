{"hash": "043f2ff7433d17ec3646f2067c6117371cadb832", "message": "Fix item NBT translation (still needs some improvements, but it displays properly on Hypixel and Mineplex :))", "file_num_lines": 200, "diff_parsed": {"added": [[6, "import com.github.steveice10.mc.protocol.data.message.Message;"], [143, "            if(item.getNBT() == null) {"], [171, "        if(!tag.contains(\"display\")) {"], [172, "            CompoundTagBuilder display = CompoundTagBuilder.builder();"], [174, "            if (tag.contains(\"name\")) {"], [175, "                display.stringTag(\"Name\", Message.fromString((String) tag.get(\"name\").getValue()).getFullText());"], [176, "                tag.remove(\"name\");"], [177, "            }"], [178, "            if (tag.contains(\"lore\")) {"], [179, "                //com.nukkitx.nbt.tag.ListTag list = (com.nukkitx.nbt.tag.ListTag) translateRawNBT(tag.get(\"lore\"));"], [180, "                //display.listTag(\"Lore\", com.nukkitx.nbt.tag.StringTag.class, list.getValue()); // TODO: fix unchecked assignment"], [181, "                tag.remove(\"lore\");"], [182, "            }"], [183, "            root.tag(display.build(\"display\"));"], [184, "        }"], [199, "        if(tag instanceof ByteArrayTag) {"], [200, "            return new com.nukkitx.nbt.tag.ByteArrayTag(tag.getName(), (byte[]) tag.getValue());"], [201, "        }"], [202, "        if(tag instanceof StringTag) {"], [203, "            return new com.nukkitx.nbt.tag.StringTag(tag.getName(), MessageTranslator.translate(((String) tag.getValue())));"], [219, "            // TODO: unchecked?"], [220, "            // TODO: map element type from Java NBT tag to NukkitX tag"], [221, "            return new com.nukkitx.nbt.tag.ListTag(listTag.getName(), com.nukkitx.nbt.tag.StringTag.class, tags);"], [224, "            CompoundTag compound = (CompoundTag) tag;"], [225, "            CompoundTagBuilder builder = CompoundTagBuilder.builder();"], [226, ""], [227, "            if(compound.getValue() != null && !compound.getValue().isEmpty()) {"], [228, "                for(String tagName : compound.getValue().keySet()) {"], [229, "                    com.nukkitx.nbt.tag.Tag bedrockTag = translateRawNBT(compound.get(tagName));"], [230, "                    if(bedrockTag == null) {"], [231, "                        continue;"], [232, "                    }"], [233, "                    builder.tag(bedrockTag);"], [234, "                }"], [235, "                return builder.build(tag.getName());"], [236, "            }"]], "deleted": [[131, ""], [143, "            if(item.getNBT() == null || !DragonProxy.INSTANCE.isExperimentalItemNBT()) {"], [170, "        CompoundTagBuilder display = CompoundTagBuilder.builder();"], [172, "        if(tag.contains(\"name\")) {"], [173, "            display.stringTag(\"Name\", (String) tag.get(\"name\").getValue());"], [174, "            tag.remove(\"name\");"], [175, "        }"], [176, "        if(tag.contains(\"lore\")) {"], [177, "            com.nukkitx.nbt.tag.ListTag list = (com.nukkitx.nbt.tag.ListTag) translateRawNBT(tag.get(\"lore\"));"], [178, "            display.listTag(\"Lore\", com.nukkitx.nbt.tag.StringTag.class, list.getValue()); // TODO: fix unchecked assignment"], [179, "            tag.remove(\"lore\");"], [180, "        }"], [182, "        root.tag(display.build(\"display\"));"], [197, "        if(tag instanceof StringTag) {"], [198, "            return new com.nukkitx.nbt.tag.StringTag(tag.getName(), (String) tag.getValue());"], [214, "            return new com.nukkitx.nbt.tag.ListTag(listTag.getName(), listTag.getElementType(), tags);"], [217, "            return translateRawNBT(tag);"]]}, "num_lines_added": 36, "num_lines_removed": 17}