{"hash": "8d3c31b5db542ff11e488fba48c792f3eb8f1d4a", "message": "Remove redundant downstream session and merge it all into ProxySession.", "file_num_lines": 72, "diff_parsed": {"added": [[19, "import com.nukkitx.protocol.bedrock.packet.PlayStatusPacket;"], [21, "import com.nukkitx.protocol.bedrock.packet.ResourcePacksInfoPacket;"], [28, "import org.dragonet.proxy.network.session.ProxySession;"], [33, "import java.util.Arrays;"], [41, "    private BedrockSession<ProxySession> upstream;"], [44, "    public UpstreamPacketHandler(BedrockSession<ProxySession> upstream, DragonProxy proxy) {"], [45, "        this.upstream = upstream;"], [51, "        // Check for supported protocol"], [52, "        int index = Arrays.binarySearch(DragonProxy.BEDROCK_SUPPORTED_PROTOCOLS, packet.getProtocolVersion());"], [53, "        if (index < 0) {"], [54, "            upstream.disconnect();"], [55, "            return true;"], [56, "        }"], [57, "        upstream.setPacketCodec(DragonProxy.BEDROCK_SUPPORTED_CODECS[index]);"], [69, "            this.upstream.setAuthData(new AuthDataImpl("], [76, "            this.upstream.disconnect();"], [80, "        // Tell the Bedrock client login was successful."], [81, "        PlayStatusPacket playStatus = new PlayStatusPacket();"], [82, "        playStatus.setStatus(PlayStatusPacket.Status.LOGIN_SUCCESS);"], [83, "        upstream.sendPacketImmediately(playStatus);"], [84, ""], [85, "        // Start Resource pack handshake"], [86, "        ResourcePacksInfoPacket resourcePacksInfo = new ResourcePacksInfoPacket();"], [87, "        upstream.sendPacketImmediately(resourcePacksInfo);"], [93, "        switch (packet.getStatus()) {"], [94, "            case COMPLETED:"], [95, "            case HAVE_ALL_PACKS:"], [96, "                // Start connecting to remote server"], [97, "                RemoteServer remoteServer = new RemoteServer(\"local\", proxy.getConfiguration().getRemoteAddress(), proxy.getConfiguration().getRemotePort());"], [98, "                upstream.setPlayer(new ProxySession(proxy, upstream, remoteServer));"], [99, "                break;"], [100, "            default:"], [101, "                // Anything else shouldn't happen so disconnect"], [102, "                upstream.disconnect(\"disconnectionScreen.resourcePack\");"], [103, "                break;"], [104, "        }"], [105, "        log.info(\"{} connected\", upstream.getAuthData().getDisplayName());"]], "deleted": [[26, "import org.dragonet.proxy.network.session.UpstreamSession;"], [38, "    private BedrockSession<UpstreamSession> session;"], [41, "    public UpstreamPacketHandler(BedrockSession<UpstreamSession> session, DragonProxy proxy) {"], [42, "        this.session = session;"], [48, "        // TODO: move out of here? idk"], [49, "        UpstreamSession session = new UpstreamSession(this.session);"], [50, "        this.session.setPlayer(session);"], [51, ""], [63, "            this.session.setAuthData(new AuthDataImpl("], [70, "            this.session.disconnect();"], [74, "        session.setRemoteServer(new RemoteServer(\"local\", proxy.getConfiguration().getRemoteAddress(), proxy.getConfiguration().getRemotePort()));"], [80, "        session.getPlayer().postLogin();"]]}, "num_lines_added": 37, "num_lines_removed": 12}