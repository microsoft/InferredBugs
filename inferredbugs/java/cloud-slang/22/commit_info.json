{"hash": "28174d5d34f0ce40cacd8c24040a85c3a4d60617", "message": "add test in for and async loop flows for get_sp\n\nSigned-off-by: Bonczidai Levente <levente.bonczidai@hpe.com>", "file_num_lines": 184, "diff_parsed": {"added": [[37, "        Set<SystemProperty> systemProperties = new HashSet<>();"], [38, "        systemProperties.add("], [39, "                SystemProperty.createSystemProperty(\"loop\", \"for.prop1\", \"for_value\")"], [40, "        );"], [41, ""], [42, "        Map<String, StepData> stepsData = triggerWithData(compilationArtifact, userInputs, systemProperties).getTasks();"], [43, ""], [47, ""], [48, "        Map<String, Serializable> expectedInputs = new HashMap<>();"], [49, "        expectedInputs.put(\"text\", 1);"], [50, "        expectedInputs.put(\"sp_arg\", \"for_value\");"], [51, "        Assert.assertEquals(expectedInputs, firstTask.getInputs());"], [52, "        expectedInputs.put(\"text\", 2);"], [53, "        Assert.assertEquals(expectedInputs, secondTask.getInputs());"], [54, "        expectedInputs.put(\"text\", 3);"], [55, "        Assert.assertEquals(expectedInputs, thirdTask.getInputs());"]], "deleted": [[37, "        Map<String, StepData> stepsData = triggerWithData(compilationArtifact, userInputs, EMPTY_SET).getTasks();"], [41, "        Assert.assertTrue(firstTask.getInputs().containsValue(1));"], [42, "        Assert.assertTrue(secondTask.getInputs().containsValue(2));"], [43, "        Assert.assertTrue(thirdTask.getInputs().containsValue(3));"]]}, "num_lines_added": 16, "num_lines_removed": 4}