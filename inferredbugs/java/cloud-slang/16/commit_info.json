{"hash": "b3694bec57e47d4488262a131f6eda3d8cc479b0", "message": "fix loops with maps tests\n\nSigned-off-by: Bonczidai Levente <levente.bonczidai@hp.com>", "file_num_lines": 181, "diff_parsed": {"added": [[149, "        StepData fourthTask = stepsData.get(FOURTH_STEP_KEY);"], [150, "        Assert.assertEquals(\"print_other_values\", fourthTask.getName());"], [164, "        Assert.assertEquals(1, actualTasks.size());"], [193, "        Assert.assertEquals(2, actualTasks.size());"], [194, "        StepData secondTask = stepsData.get(SECOND_STEP_KEY);"], [195, "        Assert.assertEquals(\"print_other_values\", secondTask.getName());"], [206, "        @SuppressWarnings(\"unchecked\")"], [207, "        Set<Map<String, Serializable>> actualContextSet = Sets.newHashSet("], [208, "                firstTask.getInputs(),"], [209, "                secondTask.getInputs(),"], [210, "                thirdTask.getInputs()"], [211, "        );"], [212, ""], [213, "        Map<String, Serializable> context1 = new HashMap<>();"], [214, "        context1.put(\"text\", \"john\");"], [215, "        context1.put(\"text2\", 1);"], [216, "        Map<String, Serializable> context2 = new HashMap<>();"], [217, "        context2.put(\"text\", \"jane\");"], [218, "        context2.put(\"text2\", 2);"], [219, "        Map<String, Serializable> context3 = new HashMap<>();"], [220, "        context3.put(\"text\", \"peter\");"], [221, "        context3.put(\"text2\", \"three\");"], [222, "        @SuppressWarnings(\"unchecked\")"], [223, "        Set<Map<String, Serializable>> expectedContextSet = Sets.newHashSet("], [224, "                context1,"], [225, "                context2,"], [226, "                context3"], [227, "        );"], [228, ""], [229, "        Assert.assertEquals(\"loop task inputs not as expected\", expectedContextSet, actualContextSet);"], [231, ""]], "deleted": [[149, "        StepData thirdTask = stepsData.get(FOURTH_STEP_KEY);"], [150, "        Assert.assertEquals(\"print_other_values\", thirdTask.getName());"], [164, "        Assert.assertEquals(2, actualTasks.size());"], [193, "        Assert.assertEquals(3, actualTasks.size());"], [194, "        StepData thirdTask = stepsData.get(THIRD_STEP_KEY);"], [195, "        Assert.assertEquals(\"print_other_values\", thirdTask.getName());"], [206, "        Assert.assertTrue(firstTask.getInputs().containsValue(\"john\"));"], [207, "        Assert.assertTrue(firstTask.getInputs().containsValue(1));"], [208, "        Assert.assertTrue(secondTask.getInputs().containsValue(\"jane\"));"], [209, "        Assert.assertTrue(secondTask.getInputs().containsValue(2));"], [210, "        Assert.assertTrue(thirdTask.getInputs().containsValue(\"peter\"));"], [211, "        Assert.assertTrue(thirdTask.getInputs().containsValue(\"three\"));"]]}, "num_lines_added": 31, "num_lines_removed": 12}