{"hash": "d3ccc8711693947d72e3eb2d4db3a348f08acbc7", "message": "add one liner test\n\nSigned-off-by: Bonczidai Levente <levente.bonczidai@hpe.com>", "file_num_lines": 142, "diff_parsed": {"added": [[41, "        URI operation1 = getClass().getResource(\"/yaml/formats/values_op.sl\").toURI();"], [42, "        URI operation2 = getClass().getResource(\"/yaml/noop.sl\").toURI();"], [44, "        SlangSource dep1 = SlangSource.fromFile(operation1);"], [45, "        SlangSource dep2 = SlangSource.fromFile(operation2);"], [46, "        Set<SlangSource> path = Sets.newHashSet(dep1, dep2);"], [61, "        StepData oneLinerTaskData = steps.get(SECOND_STEP_KEY);"], [67, "        verifyOneLinerInputs(oneLinerTaskData);"], [186, "    private void verifyOneLinerInputs(StepData taskData) {"], [187, "        Map<String, Serializable> expectedTaskArguments = new HashMap<>();"], [188, ""], [189, "        expectedTaskArguments.put(\"input_no_expression\", \"input_no_expression_value\");"], [190, "        expectedTaskArguments.put(\"input_int\", 22);"], [191, "        expectedTaskArguments.put(\"input_expression\", \"input_no_expression_value_suffix\");"], [192, ""], [193, "        Assert.assertTrue(\"One liner task arguments not bound correctly\", includeAllPairs(taskData.getInputs(), expectedTaskArguments));"], [194, "    }"], [195, ""]], "deleted": [[41, "        URI operation = getClass().getResource(\"/yaml/formats/values_op.sl\").toURI();"], [43, "        SlangSource dep = SlangSource.fromFile(operation);"], [44, "        Set<SlangSource> path = Sets.newHashSet(dep);"]]}, "num_lines_added": 17, "num_lines_removed": 3}