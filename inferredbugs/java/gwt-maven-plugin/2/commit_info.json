{"hash": "9cd2a26efd1206ba4c0a3f04f7e6d79e037d4659", "message": "Revert \"Revert \"[MGWT-326] M2Eclipse integration\" because of MGWT-315\"\n\nThis reverts commit 6d7a2762c12de238fdbe9ff4c97e6ea426536c50.", "file_num_lines": 124, "diff_parsed": {"added": [[24, "import java.io.OutputStreamWriter;"], [25, "import java.nio.charset.Charset;"], [34, "import org.codehaus.plexus.util.IOUtil;"], [36, "import org.sonatype.plexus.build.incremental.BuildContext;"], [65, "    /**"], [66, "     * @parameter expression=\"${project.build.sourceEncoding}\""], [67, "     */"], [68, "    private String encoding;"], [69, ""], [70, "    /** @component */"], [71, "    private BuildContext buildContext;"], [72, ""], [108, "                        if ( buildContext.isUptodate( javaOutput, candidate ) )"], [109, "                        {"], [110, "                            getLog().debug( javaOutput.getAbsolutePath() + \" is up to date. Generation skipped\" );"], [111, "                            // up to date, but still need to report generated-sources directory as sourceRoot"], [112, "                            generated = true;"], [113, "                            break;"], [114, "                        }"], [115, ""], [131, "                            .execute();"], [132, "                            final OutputStreamWriter outputWriter ="], [133, "                                new OutputStreamWriter( buildContext.newFileOutputStream( javaOutput ) , encoding );"], [134, "                            try {"], [135, "                                outputWriter.write( content.toString() );"], [136, "                            } finally {"], [137, "                                IOUtil.close( outputWriter );"], [138, "                            }"], [166, "        if ( encoding == null )"], [167, "        {"], [168, "            getLog().warn( \"Encoding is not set, your build will be platform dependent\" );"], [169, "            encoding = Charset.defaultCharset().name();"], [170, "        }"], [171, ""]], "deleted": [[23, "import java.io.FileWriter;"], [112, "                            .execute();"], [113, "                            final FileWriter outputWriter = new FileWriter( javaOutput );"], [114, "                            outputWriter.write( content.toString() );"], [115, "                            outputWriter.close();"], [142, ""], [143, "        throws MojoExecutionException"], [149, ""]]}, "num_lines_added": 34, "num_lines_removed": 8}