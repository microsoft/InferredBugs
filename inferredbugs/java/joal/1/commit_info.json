{"hash": "5a1c9c4f5e2b4ae8b0d06c3fc61e2cae1937c887", "message": "Improved test coverage", "file_num_lines": 194, "diff_parsed": {"added": [[36, "    private AnnouncerExecutor announcerExecutor;"], [58, "    @VisibleForTesting"], [59, "    void setAnnouncerExecutor(final AnnouncerExecutor announcerExecutor) {"], [60, "        this.announcerExecutor = announcerExecutor;"], [61, "    }"], [62, ""], [119, "            this.lock.writeLock().lock();"], [120, "            this.stop = true;"], [121, "            this.torrentFileProvider.unRegisterListener(this);"], [122, "            this.thread.interrupt();"], [123, "            try {"], [124, "                this.thread.join();"], [125, "            } catch (final InterruptedException ignored) {"], [126, "            }"], [127, "            this.delayQueue.drainAll().stream()"], [128, "                    .filter(req -> req.getEvent() != RequestEvent.STARTED)"], [129, "                    .map(AnnounceRequest::getAnnouncer)"], [130, "                    .map(AnnounceRequest::createStop)"], [131, "                    .forEach(this.announcerExecutor::execute);"], [133, "            this.announcerExecutor.awaitForRunningTasks();"], [134, "        } finally {"], [135, "            this.lock.writeLock().unlock();"], [136, "        }"]], "deleted": [[36, "    private final AnnouncerExecutor announcerExecutor;"], [100, "    // TODO : make it @VisibleForTesting"], [114, "        this.stop = true;"], [115, "        this.torrentFileProvider.unRegisterListener(this);"], [116, "        this.thread.interrupt();"], [118, "            this.thread.join();"], [119, "        } catch (final InterruptedException ignored) {"], [120, "        }"], [121, "        this.delayQueue.drainAll().stream()"], [122, "                .filter(req -> req.getEvent() != RequestEvent.STARTED)"], [123, "                .map(AnnounceRequest::getAnnouncer)"], [124, "                .map(AnnounceRequest::createStop)"], [125, "                .forEach(this.announcerExecutor::execute);"], [127, "        this.announcerExecutor.awaitForRunningTasks();"]]}, "num_lines_added": 23, "num_lines_removed": 14}