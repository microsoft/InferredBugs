{"hash": "58466b3545b6ed6dfead7b2ca593b28fdc494c5c", "message": "Get all URL list by default from GitHub", "file_num_lines": 77, "diff_parsed": {"added": [[61, ""], [62, "\t\tif (driverVersion != null) {"], [63, "\t\t\treleaseArray = new GitHubApi[] {"], [64, "\t\t\t\t\tgetVersion(releaseArray, driverVersion) };"], [68, "\t\tfor (GitHubApi release : releaseArray) {"], [69, "\t\t\tif (release != null) {"], [70, "\t\t\t\tList<LinkedTreeMap<String, Object>> assets = release"], [71, "\t\t\t\t\t\t.getAssets();"], [72, "\t\t\t\tfor (LinkedTreeMap<String, Object> asset : assets) {"], [73, "\t\t\t\t\turls.add(new URL("], [74, "\t\t\t\t\t\t\tasset.get(\"browser_download_url\").toString()));"], [75, "\t\t\t\t}"], [76, "\t\t\t}"], [86, "\t\t\tif (release.getName() != null"], [87, "\t\t\t\t\t&& release.getName().contains(version)) {"]], "deleted": [[61, "\t\tGitHubApi release;"], [62, ""], [63, "\t\tif (driverVersion == null || driverVersion.isEmpty() || driverVersion"], [64, "\t\t\t\t.equalsIgnoreCase(DriverVersion.LATEST.name())) {"], [65, "\t\t\tlog.debug("], [66, "\t\t\t\t\t\"Connecting to {} to check latest MarionetteDriver release\","], [67, "\t\t\t\t\tdriverUrl);"], [68, "\t\t\tdriverVersion = releaseArray[0].getName();"], [69, "\t\t\trelease = releaseArray[0];"], [70, "\t\t} else {"], [71, "\t\t\trelease = getVersion(releaseArray, driverVersion);"], [72, "\t\t}"], [73, "\t\tif (release == null) {"], [74, "\t\t\tthrow new RuntimeException(\"Version \" + driverVersion"], [75, "\t\t\t\t\t+ \" is not available for MarionetteDriver\");"], [78, "\t\tList<LinkedTreeMap<String, Object>> assets = release.getAssets();"], [80, "\t\tfor (LinkedTreeMap<String, Object> asset : assets) {"], [81, "\t\t\turls.add(new URL(asset.get(\"browser_download_url\").toString()));"], [91, "\t\t\tif (release.getName().contains(version)) {"]]}, "num_lines_added": 15, "num_lines_removed": 19}