{"hash": "58466b3545b6ed6dfead7b2ca593b28fdc494c5c", "message": "Get all URL list by default from GitHub", "file_num_lines": 77, "diff_parsed": {"added": [[61, "\t\tif (driverVersion != null) {"], [62, "\t\t\treleaseArray = new GitHubApi[] {"], [63, "\t\t\t\t\tgetVersion(releaseArray, driverVersion) };"], [67, "\t\tfor (GitHubApi release : releaseArray) {"], [68, "\t\t\tif (release != null) {"], [69, "\t\t\t\tList<LinkedTreeMap<String, Object>> assets = release"], [70, "\t\t\t\t\t\t.getAssets();"], [71, "\t\t\t\tfor (LinkedTreeMap<String, Object> asset : assets) {"], [72, "\t\t\t\t\turls.add(new URL("], [73, "\t\t\t\t\t\t\tasset.get(\"browser_download_url\").toString()));"], [74, "\t\t\t\t}"], [75, "\t\t\t}"], [90, "\t\t\tif (release.getName() != null"], [91, "\t\t\t\t\t&& release.getName().equalsIgnoreCase(version)) {"]], "deleted": [[61, "\t\tGitHubApi release;"], [62, "\t\tif (driverVersion == null || driverVersion.isEmpty() || driverVersion"], [63, "\t\t\t\t.equalsIgnoreCase(DriverVersion.LATEST.name())) {"], [64, "\t\t\tlog.debug(\"Connecting to {} to check latest OperaDriver release\","], [65, "\t\t\t\t\tdriverUrl);"], [66, "\t\t\tdriverVersion = releaseArray[0].getName();"], [67, "\t\t\tlog.debug(\"Latest driver version: {}\", driverVersion);"], [68, "\t\t\trelease = releaseArray[0];"], [69, "\t\t} else {"], [70, "\t\t\trelease = getVersion(releaseArray, driverVersion);"], [71, "\t\t}"], [72, "\t\tif (release == null) {"], [73, "\t\t\tthrow new RuntimeException(\"Version \" + driverVersion"], [74, "\t\t\t\t\t+ \" is not available for OperaDriver\");"], [77, "\t\tList<LinkedTreeMap<String, Object>> assets = release.getAssets();"], [79, "\t\tfor (LinkedTreeMap<String, Object> asset : assets) {"], [80, "\t\t\turls.add(new URL(asset.get(\"browser_download_url\").toString()));"], [95, "\t\t\tif (release.getName().equalsIgnoreCase(version)) {"]]}, "num_lines_added": 14, "num_lines_removed": 18}