{"hash": "4943cafc7dfe8028eef63945e50b1e0347a8c541", "message": "Separate filtering processes (by OS, architecture) in different methods", "file_num_lines": 740, "diff_parsed": {"added": [[246, "            candidateUrls = filterByOs(candidateUrls);"], [247, "            candidateUrls = filterByArch(candidateUrls, arch);"], [249, "            // Extra round of filter phantomjs 2.5.0 in Linux"], [355, "    protected List<URL> filterByOs(List<URL> list) {"], [356, "        log.trace(\"{} {} - URLs before filtering by OS: {}\", getDriverName(),"], [375, "        return out;"], [376, "    }"], [377, ""], [378, "    protected List<URL> filterByArch(List<URL> list, Architecture arch) {"], [379, "        log.trace(\"{} {} - URLs before filtering by architecture: {}\","], [380, "                getDriverName(), versionToDownload, list);"], [381, "        List<URL> out = new ArrayList<>();"], [397, ""], [405, "        log.trace(\"{} {} - URLs before filtering by distribution: {}\","], [408, ""], [415, ""]], "deleted": [[246, "            candidateUrls = filter(candidateUrls, arch);"], [248, "            // Exception for phantomjs 2.5.0 in Linux"], [354, "    protected List<URL> filter(List<URL> list, Architecture arch) {"], [355, "        log.trace(\"{} {} - URLs before filtering: {}\", getDriverName(),"], [357, ""], [360, "        // Round #1 : Filter by OS"], [377, "        // Round #2 : Filter by architecture (32/64 bits)"], [394, ""], [400, "        log.trace(\"{} {} - URLs before filtering by distro: {}\","], [402, ""], [404, "        // Round #3 : Filter by distribution (for Linux)"], [413, ""]]}, "num_lines_added": 16, "num_lines_removed": 12}