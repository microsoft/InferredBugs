{"hash": "dc7c59d06e41fe043edd099453b41df292e869e7", "message": "Refactor driver version resolution algorithm logic", "file_num_lines": 1155, "diff_parsed": {"added": [[466, "    protected void manage(String driverVersion) {"], [467, "        httpClient = new HttpClient(config());"], [468, "        try (HttpClient wdmHttpClient = httpClient) {"], [469, "            downloader = new Downloader(getDriverManagerType());"], [470, "            urlFilter = new UrlFilter();"], [471, ""], [472, "            if (isUnknown(driverVersion)) {"], [473, "                driverVersion = resolveDriverVersion(driverVersion);"], [474, "            }"], [475, ""], [476, "            downloadAndExport(driverVersion);"], [477, ""], [478, "        } catch (Exception e) {"], [479, "            handleException(e, driverVersion);"], [480, "        }"], [481, "    }"], [482, ""], [483, "    protected String resolveDriverVersion(String driverVersion) {"], [484, "        preferenceKey = getDriverManagerType().getNameInLowerCase();"], [485, "        Optional<String> browserVersion = empty();"], [486, "        browserVersion = getValueFromPreferences(browserVersion);"], [487, "        if (!browserVersion.isPresent()) {"], [488, "            browserVersion = detectBrowserVersion();"], [489, "        }"], [490, "        if (browserVersion.isPresent()) {"], [491, "            preferenceKey = getDriverManagerType().getNameInLowerCase()"], [492, "                    + browserVersion.get();"], [493, "            driverVersion = preferences.getValueFromPreferences(preferenceKey);"], [494, ""], [495, "            Optional<String> optionalDriverVersion = empty();"], [496, "            if (isUnknown(driverVersion)) {"], [497, "                optionalDriverVersion = getDriverVersionFromRepository("], [498, "                        browserVersion);"], [499, "            }"], [500, "            if (isUnknown(driverVersion)) {"], [501, "                optionalDriverVersion = getDriverVersionFromProperties("], [502, "                        preferenceKey);"], [503, "            }"], [504, "            if (optionalDriverVersion.isPresent()) {"], [505, "                driverVersion = optionalDriverVersion.get();"], [506, "            }"], [507, "            if (isUnknown(driverVersion)) {"], [508, "                log.debug("], [509, "                        \"The driver version for {} {} is unknown ... trying with latest\","], [510, "                        getDriverManagerType(), browserVersion.get());"], [511, "            } else if (!isUnknown(driverVersion)) {"], [512, "                log.info("], [513, "                        \"Using {} {} (since {} {} is installed in your machine)\","], [514, "                        getDriverName(), driverVersion, getDriverManagerType(),"], [515, "                        browserVersion.get());"], [516, "                storeInPreferences(driverVersion, browserVersion);"], [517, "            }"], [518, "        }"], [519, ""], [520, "        // if driverVersion is still unknown, try with latest"], [521, "        if (isUnknown(driverVersion)) {"], [522, "            Optional<String> latestDriverVersionFromRepository = getLatestDriverVersionFromRepository();"], [523, "            if (latestDriverVersionFromRepository.isPresent()) {"], [524, "                driverVersion = latestDriverVersionFromRepository.get();"], [525, "            }"], [526, "        }"], [527, "        return driverVersion;"], [528, "    }"], [529, ""], [530, "    protected void storeInPreferences(String driverVersion,"], [531, "            Optional<String> browserVersion) {"], [532, "        if (usePreferences()) {"], [533, "            preferences.putValueInPreferencesIfEmpty("], [534, "                    getDriverManagerType().getNameInLowerCase(),"], [535, "                    browserVersion.get());"], [536, "            preferences.putValueInPreferencesIfEmpty(preferenceKey,"], [537, "                    driverVersion);"], [538, "        }"], [539, "    }"], [540, ""], [541, "    protected Optional<String> getValueFromPreferences("], [542, "            Optional<String> browserVersion) {"], [543, "        if (usePreferences()"], [544, "                && preferences.checkKeyInPreferences(preferenceKey)) {"], [545, "            browserVersion = Optional"], [546, "                    .of(preferences.getValueFromPreferences(preferenceKey));"], [547, "        }"], [548, "        return browserVersion;"], [549, "    }"], [550, ""]], "deleted": [[270, "    protected void manage(String driverVersion) {"], [271, "        httpClient = new HttpClient(config());"], [272, "        try (HttpClient wdmHttpClient = httpClient) {"], [273, "            downloader = new Downloader(getDriverManagerType());"], [274, "            urlFilter = new UrlFilter();"], [275, ""], [276, "            if (isUnknown(driverVersion)) {"], [277, "                preferenceKey = getDriverManagerType().getNameInLowerCase();"], [278, "                Optional<String> browserVersion = empty();"], [279, "                if (usePreferences()"], [280, "                        && preferences.checkKeyInPreferences(preferenceKey)) {"], [281, "                    browserVersion = Optional.of("], [282, "                            preferences.getValueFromPreferences(preferenceKey));"], [283, "                }"], [284, "                if (!browserVersion.isPresent()) {"], [285, "                    browserVersion = detectBrowserVersion();"], [286, "                }"], [287, ""], [288, "                if (browserVersion.isPresent()) {"], [289, "                    // Calculate driverVersion using browserVersion"], [290, "                    preferenceKey = getDriverManagerType().getNameInLowerCase()"], [291, "                            + browserVersion.get();"], [292, "                    if (usePreferences() && preferences"], [293, "                            .checkKeyInPreferences(preferenceKey)) {"], [294, "                        driverVersion = preferences"], [295, "                                .getValueFromPreferences(preferenceKey);"], [296, "                    }"], [297, "                    if (isUnknown(driverVersion)) {"], [298, "                        Optional<String> driverVersionFromRepository = getDriverVersionFromRepository("], [299, "                                browserVersion);"], [300, "                        if (driverVersionFromRepository.isPresent()) {"], [301, "                            driverVersion = driverVersionFromRepository.get();"], [302, "                        }"], [303, "                    }"], [304, "                    if (isUnknown(driverVersion)) {"], [305, "                        Optional<String> driverVersionFromProperties = getDriverVersionFromProperties("], [306, "                                preferenceKey);"], [307, "                        if (driverVersionFromProperties.isPresent()) {"], [308, "                            driverVersion = driverVersionFromProperties.get();"], [309, "                        }"], [310, "                    } else {"], [311, "                        log.info("], [312, "                                \"Using {} {} (since {} {} is installed in your machine)\","], [313, "                                getDriverName(), driverVersion,"], [314, "                                getDriverManagerType(), browserVersion.get());"], [315, "                    }"], [316, "                    if (usePreferences()) {"], [317, "                        preferences.putValueInPreferencesIfEmpty("], [318, "                                getDriverManagerType().getNameInLowerCase(),"], [319, "                                browserVersion.get());"], [320, "                        preferences.putValueInPreferencesIfEmpty(preferenceKey,"], [321, "                                driverVersion);"], [322, "                    }"], [323, "                    if (isUnknown(driverVersion)) {"], [324, "                        log.debug("], [325, "                                \"The driver version for {} {} is unknown ... trying with latest\","], [326, "                                getDriverManagerType(), browserVersion.get());"], [327, "                    }"], [328, "                }"], [329, ""], [330, "                // if driverVersion is still unknown, try with latest"], [331, "                if (isUnknown(driverVersion)) {"], [332, "                    Optional<String> latestDriverVersionFromRepository = getLatestDriverVersionFromRepository();"], [333, "                    if (latestDriverVersionFromRepository.isPresent()) {"], [334, "                        driverVersion = latestDriverVersionFromRepository.get();"], [335, "                    }"], [336, "                }"], [337, ""], [338, "            }"], [339, ""], [340, "            downloadAndExport(driverVersion);"], [341, ""], [342, "        } catch (Exception e) {"], [343, "            handleException(e, driverVersion);"], [344, "        }"], [345, "    }"], [346, ""]]}, "num_lines_added": 85, "num_lines_removed": 77}