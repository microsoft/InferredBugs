{"hash": "749eb826a125d022d396f715f7ae67f814d05ae6", "message": "JavaScript manifold improvements\n- include @SourcePosition annotations in generated source to enable Manifold IJ plugin functionality for javascript e.g., navigation, find usages, refactoring, etc.\n- bug fixes", "file_num_lines": 183, "diff_parsed": {"added": [[29, "        clazz.addAnnotation("], [30, "          new SrcAnnotationExpression( SourcePosition.class )"], [31, "            .addArgument( \"url\", String.class, programNode.getUrl().toString() )"], [32, "            .addArgument( \"feature\", String.class, ManClassUtil.getShortClassName( fqn ) )"], [33, "            .addArgument( \"offset\", int.class, classNode.getStart().getOffset() )"], [34, "            .addArgument( \"length\", int.class, classNode.getEnd().getOffset() - classNode.getStart().getOffset() ) );"], [72, ""], [73, "            ctor.addAnnotation("], [74, "              new SrcAnnotationExpression( SourcePosition.class )"], [75, "                .addArgument( \"url\", String.class, classNode.getProgramNode().getUrl().toString() )"], [76, "                .addArgument( \"feature\", String.class, \"constructor\" )"], [77, "                .addArgument( \"offset\", int.class, constructor.getStart().getOffset() )"], [78, "                .addArgument( \"length\", int.class, constructor.getEnd().getOffset() - constructor.getStart().getOffset() ) );"], [81, ""], [97, "            srcMethod.addAnnotation("], [98, "              new SrcAnnotationExpression( SourcePosition.class )"], [99, "                .addArgument( \"url\", String.class, classNode.getProgramNode().getUrl().toString() )"], [100, "                .addArgument( \"feature\", String.class, node.getName() )"], [101, "                .addArgument( \"offset\", int.class, node.getStart().getOffset() )"], [102, "                .addArgument( \"length\", int.class, node.getEnd().getOffset() - node.getStart().getOffset() ) );"], [136, "                setter.addAnnotation("], [137, "                  new SrcAnnotationExpression( SourcePosition.class )"], [138, "                    .addArgument( \"url\", String.class, classNode.getProgramNode().getUrl().toString() )"], [139, "                    .addArgument( \"feature\", String.class, node.getName() )"], [140, "                    .addArgument( \"offset\", int.class, node.getStart().getOffset() )"], [141, "                    .addArgument( \"length\", int.class, node.getEnd().getOffset() - node.getStart().getOffset() ) );"], [142, ""], [159, "                getter.addAnnotation("], [160, "                  new SrcAnnotationExpression( SourcePosition.class )"], [161, "                    .addArgument( \"url\", String.class, classNode.getProgramNode().getUrl().toString() )"], [162, "                    .addArgument( \"feature\", String.class, node.getName() )"], [163, "                    .addArgument( \"offset\", int.class, node.getStart().getOffset() )"], [164, "                    .addArgument( \"length\", int.class, node.getEnd().getOffset() - node.getStart().getOffset() ) );"], [165, ""]], "deleted": []}, "num_lines_added": 34, "num_lines_removed": 0}