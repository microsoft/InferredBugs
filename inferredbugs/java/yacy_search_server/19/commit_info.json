{"hash": "d2c4e9a55e2ba59a2cf4e22f83464807b076dab7", "message": "*) Implementing yacy forum wishlist item: \"Pause Crawling\"\n   see: http://www.yacy-forum.de/viewtopic.php?t=48\n\n\n\ngit-svn-id: https://svn.berlios.de/svnroot/repos/yacy/trunk@118 6c8d7289-2bf4-0310-a012-ef5d649a1542", "file_num_lines": 1092, "diff_parsed": {"added": [[151, "public final class plasmaSwitchboard extends serverAbstractSwitch implements serverSwitch {"], [190, "    private Object  crawlingPausedSync = new Object();"], [191, "    private boolean crawlingIsPaused = false;"], [192, ""], [494, "    /**"], [495, "     * With this function the crawling process can be paused"], [496, "     */"], [497, "    public void pauseCrawling() {"], [498, "        synchronized(this.crawlingPausedSync) {"], [499, "            this.crawlingIsPaused = true;"], [500, "        }"], [501, "    }"], [502, ""], [503, "    /**"], [504, "     * Continue the previously paused crawling"], [505, "     */"], [506, "    public void continueCrawling() {"], [507, "        synchronized(this.crawlingPausedSync) {"], [508, "            if (this.crawlingIsPaused) {"], [509, "                this.crawlingIsPaused = false;"], [510, "                this.crawlingPausedSync.notifyAll();"], [511, "            }"], [512, "        }"], [513, "    }"], [514, ""], [515, "    /**"], [516, "     * @return <code>true</code> if crawling was paused or <code>false</code> otherwise"], [517, "     */"], [518, "    public boolean crawlingIsPaused() {"], [519, "        synchronized(this.crawlingPausedSync) {"], [520, "            return this.crawlingIsPaused;"], [521, "        }"], [522, "    }"], [523, ""], [530, "            //log.logDebug(\"LocalCrawl: queue is empty\");"], [531, "            return false;"], [532, "        }"], [534, "            log.logDebug(\"LocalCrawl: too many processes in queue, dismissed (\" +"], [535, "                    \"processStack=\" + processStack.size() + \")\");"], [536, "            return false;"], [537, "        }"], [539, "            log.logDebug(\"LocalCrawl: too many loader in queue, dismissed (\" +"], [540, "                    \"cacheLoader=\" + cacheLoader.size() + \")\");"], [541, "            return false;"], [542, "        }"], [543, ""], [544, "        // if the server is busy, we do crawling more slowly"], [546, ""], [547, "        // if crawling was paused we have to wait until we wer notified to continue"], [548, "        synchronized(this.crawlingPausedSync) {"], [549, "            if (this.crawlingIsPaused) {"], [550, "                try {"], [551, "                    this.crawlingPausedSync.wait();"], [552, "                }"], [553, "                catch (InterruptedException e){ return false;}"], [554, "            }"], [555, "        }"], [556, ""], [557, "        // do a local crawl (may start a global crawl)"], [558, "        plasmaCrawlNURL.entry nex = noticeURL.localPop();"], [559, "        processCrawling(nex, nex.initiator());"], [560, "        return true;"], [568, "        // work off crawl requests that had been placed by other peers to our crawl stack"], [569, ""], [570, "        // do nothing if either there are private processes to be done"], [571, "        // or there is no global crawl on the stack"], [573, "            //log.logDebug(\"GlobalCrawl: queue is empty\");"], [574, "            return false;"], [575, "        }"], [577, "            log.logDebug(\"GlobalCrawl: any processe is in queue, dismissed (\" +"], [578, "                    \"processStack=\" + processStack.size() + \")\");"], [579, "            return false;"], [580, "        }"], [581, "        if (noticeURL.localStackSize() > 0) {"], [582, "            log.logDebug(\"GlobalCrawl: any local crawl is in queue, dismissed (\" +"], [583, "                    \"localStackSize=\" + noticeURL.localStackSize() + \")\");"], [584, "            return false;"], [585, "        }"], [586, ""], [587, "        // if the server is busy, we do this more slowly"], [589, ""], [590, "        // if crawling was paused we have to wait until we wer notified to continue"], [591, "        synchronized(this.crawlingPausedSync) {"], [592, "            if (this.crawlingIsPaused) {"], [593, "                try {"], [594, "                    this.crawlingPausedSync.wait();"], [595, "                }"], [596, "                catch (InterruptedException e){ return false; }"], [597, "            }"], [598, "        }"], [599, ""], [600, "        // we don't want to crawl a global URL globally, since WE are the global part. (from this point of view)"], [601, "        plasmaCrawlNURL.entry nex = noticeURL.remotePop();"], [602, "        processCrawling(nex, nex.initiator());"], [603, "        return true;"], [1155, "                StringBuffer links = new StringBuffer();"], [1163, "                        links.append(resource).append(i).append(\"=\").append(resource).append(serverCore.crlfString);"], [1167, "                prop.put(\"links\", links.toString());"], [1172, "                StringBuffer refstr = new StringBuffer();"], [1173, "                for (int j = 0; j < ws.length; j++) refstr.append(\",\").append((String) ws[j]);"], [1174, "                prop.put(\"references\", (refstr.length() > 0)?refstr.substring(1):refstr.toString());"]], "deleted": [[151, "public class plasmaSwitchboard extends serverAbstractSwitch implements serverSwitch {"], [497, "\t    //log.logDebug(\"LocalCrawl: queue is empty\");"], [498, "\t    return false;"], [499, "\t}"], [501, "\t    log.logDebug(\"LocalCrawl: too many processes in queue, dismissed (\" +"], [502, "\t\t\t \"processStack=\" + processStack.size() + \")\");"], [503, "\t    return false;"], [504, "\t}"], [506, "\t    log.logDebug(\"LocalCrawl: too many loader in queue, dismissed (\" +"], [507, "\t\t\t \"cacheLoader=\" + cacheLoader.size() + \")\");"], [508, "\t    return false;"], [509, "\t}"], [510, ""], [511, "\t// if the server is busy, we do crawling more slowly"], [513, ""], [514, "\t// do a local crawl (may start a global crawl)"], [515, "\tplasmaCrawlNURL.entry nex = noticeURL.localPop();"], [516, "\tprocessCrawling(nex, nex.initiator());"], [517, "\treturn true;"], [525, "\t// work off crawl requests that had been placed by other peers to our crawl stack"], [526, ""], [527, "\t// do nothing if either there are private processes to be done"], [528, "\t// or there is no global crawl on the stack"], [530, "\t    //log.logDebug(\"GlobalCrawl: queue is empty\");"], [531, "\t    return false;"], [532, "\t}"], [534, "\t    log.logDebug(\"GlobalCrawl: any processe is in queue, dismissed (\" +"], [535, "\t\t\t \"processStack=\" + processStack.size() + \")\");"], [536, "\t    return false;"], [537, "\t}"], [538, "\tif (noticeURL.localStackSize() > 0) {"], [539, "\t    log.logDebug(\"GlobalCrawl: any local crawl is in queue, dismissed (\" +"], [540, "\t\t\t \"localStackSize=\" + noticeURL.localStackSize() + \")\");"], [541, "\t    return false;"], [542, "\t}"], [543, ""], [544, "\t// if the server is busy, we do this more slowly"], [546, ""], [547, "\t// we don't want to crawl a global URL globally, since WE are the global part. (from this point of view)"], [548, "\tplasmaCrawlNURL.entry nex = noticeURL.remotePop();"], [549, "\tprocessCrawling(nex, nex.initiator());"], [550, "\treturn true;"], [1102, "                String links = \"\";"], [1110, "                        links += \"resource\" + i + \"=\" + resource + serverCore.crlfString;"], [1114, "                prop.put(\"links\", links);"], [1119, "                String refstr = \"\";"], [1120, "                for (int j = 0; j < ws.length; j++) refstr += \",\" + (String) ws[j];"], [1121, "                if (refstr.length() > 0) refstr = refstr.substring(1);"], [1122, "                prop.put(\"references\", refstr);"]]}, "num_lines_added": 101, "num_lines_removed": 49}