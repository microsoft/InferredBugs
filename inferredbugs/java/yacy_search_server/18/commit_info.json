{"hash": "ea478f397595c9eef24e52eae2776fd96f49bd03", "message": "enhanced indexing-caching\n\ngit-svn-id: https://svn.berlios.de/svnroot/repos/yacy/trunk@107 6c8d7289-2bf4-0310-a012-ef5d649a1542", "file_num_lines": 416, "diff_parsed": {"added": [[85, "    public plasmaWordIndexCache(File databaseRoot, plasmaWordIndexInterface backend, int singletonbufferkb, serverLog log) {"], [89, "        this.singletonBufferSize = singletonbufferkb * 1024;"], [135, "            Iterator i = hashScore.scores(true);"], [321, "    public int singletonsSize() {"], [322, "        return singletons.size();"], [323, "    }"], [324, ""], [348, "    private int flushFromMem(String key, boolean reintegrate) {"], [349, "        // this method flushes indexes out from the ram to the disc."], [350, "        // at first we check the singleton database and act accordingly"], [351, "        // if we we are to flush an index, but see also an entry in the singletons, we"], [352, "        // decide upn the 'reintegrate'-Flag:"], [353, "        // true: do not flush to disc, but re-Integrate the singleton to the RAM"], [354, "        // false: flush the singleton together with container to disc"], [355, ""], [372, "            // not found in singletons"], [374, "                // it is a singleton: store to singleton"], [378, "                // store to back-end; this should be a rare case"], [391, "                    // we flush to the backend, and the entry from the singletons"], [396, "                // now we have more than one entry"], [399, "                // .. and put it to the container"], [401, "                if (reintegrate) {"], [402, "                    // put singleton together with container back to ram"], [403, "                    synchronized (cache) {"], [404, "                        cache.put(key, container);"], [405, "                        hashScore.setScore(key, container.size());"], [406, "                        hashDate.put(key, new Long(time));"], [407, "                    }"], [408, "                    return -1;"], [409, "                } else {"], [410, "                    // add this to the backend"], [411, "                    return backend.addEntries(container, java.lang.Math.max(time, oldTime));"], [412, "                }"], [467, "                total += flushFromMem(key, false);"], [471, "            Iterator i = hashScore.scores(true);"], [472, "            ArrayList al = new ArrayList();"], [473, "            while ((i.hasNext()) && (total < 200)) {"], [474, "                key = (String) i.next();"], [481, "                if ((createTime != null) && ((System.currentTimeMillis() - createTime.longValue()) < 90000)) {"], [482, "                    //log.logDebug(\"singleton-key \" + key + \" is too fresh, interrupting flush (count=\" + count + \", cachesize=\" + cache.size()  + \", singleton-size=\" + singletons.size() + \")\");"], [483, "                    continue;"], [486, "                al.add(key);"], [487, "                total++;"], [489, "            for (int k = 0; k < al.size(); k++) flushFromMem((String) al.get(k), true);"], [495, "        flushFromMem(wordHash, false);"], [516, "    public synchronized int removeEntries(String wordHash, String[] urlHashes, boolean deleteComplete) {"], [517, "        flushFromMem(wordHash, false);"], [522, "    public synchronized int addEntries(plasmaWordIndexEntryContainer container, long creationTime) {"]], "deleted": [[85, "    public plasmaWordIndexCache(File databaseRoot, plasmaWordIndexInterface backend, long singletonBufferSize, serverLog log) {"], [89, "        this.singletonBufferSize = singletonBufferSize;"], [135, "            Iterator i = hashScore.scores(false);"], [344, "    private int flushFromMem(String key) {"], [362, "                // store to singleton"], [366, "                // store to back-end"], [379, "                    // we flush to the backend, but remove the entry from the singletons"], [384, "                // now we have more than one entry,"], [387, "                // add this to the backend"], [389, "                return backend.addEntries(container, java.lang.Math.max(time, oldTime));"], [444, "                total += flushFromMem(key);"], [448, "            while ((total < 200) && (hashScore.size() >= maxWords)) {"], [449, "                key = (String) hashScore.getMinObject();"], [456, "                if ((createTime != null) && ((System.currentTimeMillis() - createTime.longValue()) < 9000)) {"], [457, "                    //log.logDebug(\"singleton-key \" + key + \" is too fresh, interruptiong flush (count=\" + count + \", cachesize=\" + cache.size()  + \", singleton-size=\" + singletons.size() + \")\");"], [458, "                    break;"], [461, "                total += flushFromMem(key);"], [468, "        flushFromMem(wordHash);"], [489, "    public int removeEntries(String wordHash, String[] urlHashes, boolean deleteComplete) {"], [490, "        flushFromMem(wordHash);"], [495, "    public int addEntries(plasmaWordIndexEntryContainer container, long creationTime) {"]]}, "num_lines_added": 48, "num_lines_removed": 21}