{"hash": "b4374dbf6d0ea7e84f35a104cb1a0aecd959c4bf", "message": "Add support for wildcard flag", "file_num_lines": 204, "diff_parsed": {"added": [[113, "        assertThat(auth.isWildcard(), is(false));"], [125, "     * Test that wildcard authorization are correct."], [126, "     */"], [127, "    @Test"], [128, "    public void testWildcard() throws Exception {"], [129, "        TestableConnectionProvider provider = new TestableConnectionProvider() {"], [130, "            @Override"], [131, "            public void sendRequest(URL url, Session session) {"], [132, "                assertThat(url, is(locationUrl));"], [133, "            }"], [134, ""], [135, "            @Override"], [136, "            public JSON readJsonResponse() {"], [137, "                return getJSON(\"updateAuthorizationWildcardResponse\");"], [138, "            }"], [139, ""], [140, "            @Override"], [141, "            public void handleRetryAfter(String message) throws AcmeException {"], [142, "                // Just do nothing"], [143, "            }"], [144, "        };"], [145, ""], [146, "        Login login = provider.createLogin();"], [147, ""], [148, "        provider.putTestChallenge(\"dns-01\", Dns01Challenge::new);"], [149, ""], [150, "        Authorization auth = new Authorization(login, locationUrl);"], [151, "        auth.update();"], [152, ""], [153, "        assertThat(auth.getDomain(), is(\"example.org\"));"], [154, "        assertThat(auth.getStatus(), is(Status.VALID));"], [155, "        assertThat(auth.isWildcard(), is(true));"], [156, "        assertThat(auth.getExpires(), is(parseTimestamp(\"2016-01-02T17:12:40Z\")));"], [157, "        assertThat(auth.getLocation(), is(locationUrl));"], [158, ""], [159, "        assertThat(auth.getChallenges(), containsInAnyOrder("], [160, "                        provider.getChallenge(Dns01Challenge.TYPE)));"], [161, ""], [162, "        provider.close();"], [163, "    }"], [164, ""], [165, "    /**"], [206, "        assertThat(auth.isWildcard(), is(false));"], [253, "        assertThat(auth.isWildcard(), is(false));"]], "deleted": []}, "num_lines_added": 44, "num_lines_removed": 0}