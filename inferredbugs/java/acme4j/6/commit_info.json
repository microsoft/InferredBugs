{"hash": "08eaa61f758732c37a0aaf1df37674817127745a", "message": "No need to lazy-load provider in session", "file_num_lines": 114, "diff_parsed": {"added": [[25, "import java.util.stream.StreamSupport;"], [44, "    private final AcmeProvider provider;"], [72, "     * @throws IllegalArgumentException"], [73, "     *             if no ACME provider was found for the server URI."], [78, ""], [79, "        final URI localServerUri = serverUri;"], [80, ""], [81, "        Iterable<AcmeProvider> providers = ServiceLoader.load(AcmeProvider.class);"], [82, "        provider = StreamSupport.stream(providers.spliterator(), false)"], [83, "            .filter(p -> p.accepts(localServerUri))"], [84, "            .reduce((a, b) -> {"], [85, "                    throw new IllegalArgumentException(\"Both ACME providers \""], [86, "                        + a.getClass().getSimpleName() + \" and \""], [87, "                        + b.getClass().getSimpleName() + \" accept \""], [88, "                        + localServerUri + \". Please check your classpath.\");"], [89, "                })"], [90, "            .orElseThrow(() -> new IllegalArgumentException(\"No ACME provider found for \" + localServerUri));"]], "deleted": [[20, "import java.util.ArrayList;"], [22, "import java.util.List;"], [47, "    private AcmeProvider provider;"], [131, "     * <p>"], [132, "     * The {@link AcmeProvider} instance is lazily created and cached."], [137, "        synchronized (this) {"], [138, "            if (provider == null) {"], [139, "                List<AcmeProvider> candidates = new ArrayList<>();"], [140, "                for (AcmeProvider acp : ServiceLoader.load(AcmeProvider.class)) {"], [141, "                    if (acp.accepts(serverUri)) {"], [142, "                        candidates.add(acp);"], [143, "                    }"], [144, "                }"], [145, ""], [146, "                if (candidates.isEmpty()) {"], [147, "                    throw new IllegalArgumentException(\"No ACME provider found for \" + serverUri);"], [148, "                } else if (candidates.size() > 1) {"], [149, "                    throw new IllegalStateException(\"There are \" + candidates.size() + \" \""], [150, "                        + AcmeProvider.class.getSimpleName() + \" accepting \" + serverUri"], [151, "                        + \". Please check your classpath.\");"], [152, "                } else {"], [153, "                    provider = candidates.get(0);"], [154, "                }"], [155, "            }"], [156, "        }"]]}, "num_lines_added": 17, "num_lines_removed": 25}