{"hash": "898c552f770592ad25ee0ab0350bcf509c2a466a", "message": "Add stream method to JSON.Array", "file_num_lines": 148, "diff_parsed": {"added": [[16, "import static java.util.stream.Collectors.toList;"], [125, "        return (T) findCombination(type).stream().findFirst().orElse(null);"], [256, "        Session session = getSession();"], [257, ""], [258, "        return Collections.unmodifiableList(json.get(\"challenges\").asArray().stream()"], [259, "                .map(JSON.Value::asObject)"], [260, "                .map(session::createChallenge)"], [261, "                .collect(toList()));"], [279, "        return Collections.unmodifiableList(jsonCombinations.stream()"], [280, "                .map(JSON.Value::asArray)"], [281, "                .map(this::findChallenges)"], [282, "                .collect(toList()));"], [283, "    }"], [284, ""], [285, "    /**"], [286, "     * Converts an array of challenge indexes to a list of matching {@link Challenge}."], [287, "     *"], [288, "     * @param combination"], [289, "     *            {@link Array} of the challenge indexes"], [290, "     * @return List of matching {@link Challenge}"], [291, "     */"], [292, "    private List<Challenge> findChallenges(JSON.Array combination) {"], [293, "        return combination.stream()"], [294, "               .mapToInt(JSON.Value::asInt)"], [295, "               .mapToObj(challenges::get)"], [296, "               .collect(toList());"]], "deleted": [[124, "        Collection<Challenge> result = findCombination(type);"], [125, "        return !result.isEmpty() ? (T) result.iterator().next() : null;"], [256, "        JSON.Array jsonChallenges = json.get(\"challenges\").asArray();"], [257, "        List<Challenge> cr = new ArrayList<>();"], [258, "        for (JSON.Value c : jsonChallenges) {"], [259, "            Challenge ch = getSession().createChallenge(c.asObject());"], [260, "            if (ch != null) {"], [261, "                cr.add(ch);"], [262, "            }"], [263, "        }"], [264, "        return cr;"], [282, "        List<List<Challenge>> cmb = new ArrayList<>(jsonCombinations.size());"], [283, "        for (JSON.Value v : jsonCombinations) {"], [284, "            JSON.Array c = v.asArray();"], [285, "            List<Challenge> clist = new ArrayList<>(c.size());"], [286, "            for (JSON.Value n : c) {"], [287, "                clist.add(challenges.get(n.asInt()));"], [288, "            }"], [289, "            cmb.add(clist);"], [290, "        }"], [291, "        return cmb;"]]}, "num_lines_added": 26, "num_lines_removed": 21}