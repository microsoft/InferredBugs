{"hash": "c8c1765426351ea9d9d20aa6bf105b5af2ce7370", "message": "Fix build and improve csv test generation", "file_num_lines": 173, "diff_parsed": {"added": [[23, "import org.apache.commons.lang.StringEscapeUtils;"], [24, ""], [149, "   private void collectCsvTests(File directory, String extension,"], [150, "            Map<String, List<List<String>>> tests) throws IOException {"], [151, "      for (File f : directory.listFiles()) {"], [152, "         if (f.getName().endsWith(extension)) {"], [153, "            tests.put(f.getAbsolutePath(), CsvReader.readCsv(new FileReader(f)));"], [154, "         } else if (f.isDirectory()) {"], [155, "            collectCsvTests(f, extension, tests);"], [156, "         }"], [157, "      }"], [158, "   }"], [160, "   private String getTestName(String csvTestFileAbsolutePath, String csvExtension) {"], [161, "      String fileName = new File(csvTestFileAbsolutePath).getName();"], [162, "      String nameWithoutExtension = fileName.substring(0, fileName.length() - csvExtension.length());"], [163, "      return nameWithoutExtension;"], [173, "      Pattern macroNamePattern = csvMacros.pattern() != null ? Pattern.compile(csvMacros.pattern())"], [174, "               : null;"], [188, "      File testsRoot = getDirectory(csvDirectory.value());"], [189, "      String extension = csvDirectory.extension();"], [194, "      collectCsvTests(testsRoot, extension, tests);"], [205, "         String fileAbsolutePath = entry.getKey();"], [207, "         String methodName = getTestName(fileAbsolutePath, csvDirectory.extension());"], [210, "         m.setBody(\"launchTest(\\\"\" + StringEscapeUtils.escapeJava(fileAbsolutePath) + \"\\\");\");"]], "deleted": [[147, "   private String getTestName(String fileName, CsvDirectory csvDirectory) {"], [148, "      String csvShortName = csvDirectory.value().substring("], [149, "               csvDirectory.value().lastIndexOf('/') + 1);"], [150, ""], [151, "      String nameWithoutExtension = fileName.substring(0, fileName.length()"], [152, "               - csvDirectory.extension().length());"], [154, "      return csvShortName + \"_\" + nameWithoutExtension;"], [164, "      Pattern macroNamePattern = (csvMacros.pattern() != null)"], [165, "               ? Pattern.compile(csvMacros.pattern()) : null;"], [179, "      File directory = getDirectory(csvDirectory.value());"], [184, "      for (File f : directory.listFiles()) {"], [185, "         if (f.getName().endsWith(csvDirectory.extension())) {"], [186, "            tests.put(f.getAbsolutePath(), CsvReader.readCsv(new FileReader(f)));"], [187, "         }"], [188, "      }"], [200, "         String methodName = getTestName(entry.getKey(), csvDirectory);"], [203, "         m.setBody(\"launchTest(\\\"\" + csvDirectory.value() + \"\\\", \\\"\" + entry.getKey() + \"\\\");\");"]]}, "num_lines_added": 24, "num_lines_removed": 17}