{"hash": "dee6c7ba40ee11d042506398696c9f0197535d62", "message": "fix(UtilAll) exclude local link ipv6 address", "file_num_lines": 119, "diff_parsed": {"added": [[20, "import java.net.InetAddress;"], [21, "import java.net.UnknownHostException;"], [104, "    public void testIPv6Check() throws UnknownHostException {"], [105, "        InetAddress nonInternal = InetAddress.getByName(\"2408:4004:0180:8100:3FAA:1DDE:2B3F:898A\");"], [106, "        InetAddress internal = InetAddress.getByName(\"FE80:0000:0000:0000:0000:0000:0000:FFFF\");"], [107, "        assertThat(UtilAll.isInternalV6IP(nonInternal)).isFalse();"], [108, "        assertThat(UtilAll.isInternalV6IP(internal)).isTrue();"], [109, "        assertThat(UtilAll.ipToIPv6Str(nonInternal.getAddress()).toUpperCase()).isEqualTo(\"2408:4004:0180:8100:3FAA:1DDE:2B3F:898A\");"]], "deleted": [[102, "    public void testIPv6Check() {"], [103, "        byte[] nonInternalIp = UtilAll.string2bytes(\"24084004018081003FAA1DDE2B3F898A\");"], [104, "        byte[] internalIp = UtilAll.string2bytes(\"FEC0000000000000000000000000FFFF\");"], [105, "        assertThat(UtilAll.isInternalV6IP(nonInternalIp)).isFalse();"], [106, "        assertThat(UtilAll.isInternalV6IP(internalIp)).isTrue();"], [107, "        assertThat(UtilAll.ipToIPv6Str(nonInternalIp).toUpperCase()).isEqualTo(\"2408:4004:0180:8100:3FAA:1DDE:2B3F:898A\");"]]}, "num_lines_added": 8, "num_lines_removed": 6}