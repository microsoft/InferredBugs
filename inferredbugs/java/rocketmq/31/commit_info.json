{"hash": "a4f62104c8df52523dd760ccb3560fad3fc8d0b2", "message": "[#1568] rocketmq need enhance stability when commitlog broken\n \u589e\u52a0\u975e\u7a7a\u5224\u65ad\uff0c\u9632\u6b62\u7a7a\u6307\u9488\u5f02\u5e38,\u5bfc\u81f4\u5faa\u73af\u4e8b\u52a1 check,\u589e\u52a0test\u8986\u76d6\uff0c\u4fee\u590d\u7f16\u7801\u683c\u5f0f", "file_num_lines": 170, "diff_parsed": {"added": [[65, "            new NettyClientConfig(), new MessageStoreConfig());"], [85, "                (PutMessageStatus.PUT_OK, new AppendMessageResult(AppendMessageStatus.PUT_OK)));"], [99, "                0);"], [107, "                0);"], [113, "        when(messageStore"], [114, "                .getMessage(anyString(), anyString(), anyInt(), anyLong(), anyInt(), ArgumentMatchers.nullable(MessageFilter.class)))"], [115, "                .thenReturn(createGetMessageResult(GetMessageStatus.NO_MESSAGE_IN_QUEUE));"], [122, "        when(messageStore"], [123, "                .getMessage(anyString(), anyString(), anyInt(), anyLong(), anyInt(), ArgumentMatchers.nullable(MessageFilter.class)))"], [124, "                .thenReturn(createGetMessageResult(GetMessageStatus.NO_MESSAGE_IN_QUEUE));"], [132, "                (PutMessageStatus.PUT_OK, new AppendMessageResult(AppendMessageStatus.PUT_OK)));"], [140, "                (PutMessageStatus.PUT_OK, new AppendMessageResult(AppendMessageStatus.PUT_OK)));"], [150, "        MessageAccessor.putProperty(msgInner, MessageConst.PROPERTY_TRANSACTION_PREPARED_QUEUE_OFFSET, offset);"], [152, "        Map<String, String> properties = msgInner.getProperties();"], [164, "        assertThat(messageExtRes.getBornTimestamp()).isEqualTo(bornTimeStamp);"], [168, "    public void testLookMessageByOffset() {"], [189, "        assertThat(result).isNull();"]], "deleted": [[65, "        new NettyClientConfig(), new MessageStoreConfig());"], [85, "            (PutMessageStatus.PUT_OK, new AppendMessageResult(AppendMessageStatus.PUT_OK)));"], [99, "            0);"], [107, "            0);"], [113, "        when(messageStore.getMessage(anyString(), anyString(), anyInt(), anyLong(), anyInt(),  ArgumentMatchers.nullable(MessageFilter.class))).thenReturn(createGetMessageResult(GetMessageStatus.NO_MESSAGE_IN_QUEUE));"], [120, "        when(messageStore.getMessage(anyString(), anyString(), anyInt(), anyLong(), anyInt(),  ArgumentMatchers.nullable(MessageFilter.class))).thenReturn(createGetMessageResult(GetMessageStatus.NO_MESSAGE_IN_QUEUE));"], [128, "            (PutMessageStatus.PUT_OK, new AppendMessageResult(AppendMessageStatus.PUT_OK)));"], [136, "            (PutMessageStatus.PUT_OK, new AppendMessageResult(AppendMessageStatus.PUT_OK)));"], [146, "        MessageAccessor.putProperty(msgInner, MessageConst.PROPERTY_TRANSACTION_PREPARED_QUEUE_OFFSET,offset);"], [148, "        Map<String,String> properties = msgInner.getProperties();"], [160, "        assertThat( messageExtRes.getBornTimestamp()).isEqualTo(bornTimeStamp);"], [164, "    public void testLookMessageByOffset(){"], [185, "        assertThat(result.getPullStatus()).isNull();"]]}, "num_lines_added": 17, "num_lines_removed": 13}