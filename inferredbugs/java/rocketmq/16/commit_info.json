{"hash": "c7fea667b01566c6375b2ecc21118f9786c955dd", "message": "[ROCKETMQ-335] Reload server certificate, private key and root ca when these are changed (#207)", "file_num_lines": 251, "diff_parsed": {"added": [[28, "import org.apache.rocketmq.remoting.netty.NettyRemotingServer;"], [138, "        } else if (\"reloadSslContextForServer\".equals(name.getMethodName())) {"], [139, "            tlsClientAuthServer = false;"], [140, "            tlsServerNeedClientAuth = \"none\";"], [164, "    public void reloadSslContextForServer() throws Exception {"], [165, "        requestThenAssertResponse();"], [166, ""], [167, "        //Use new cert and private key"], [168, "        tlsClientKeyPath = getCertsPath(\"badClient.key\");"], [169, "        tlsClientCertPath = getCertsPath(\"badClient.pem\");"], [170, ""], [171, "        ((NettyRemotingServer) remotingServer).loadSslContext();"], [172, ""], [173, "        //Request Again"], [174, "        requestThenAssertResponse();"], [175, ""], [176, "        //Start another client"], [177, "        NettyClientConfig clientConfig = new NettyClientConfig();"], [178, "        clientConfig.setUseTLS(true);"], [179, "        RemotingClient remotingClient = RemotingServerTest.createRemotingClient(clientConfig);"], [180, "        requestThenAssertResponse(remotingClient);"], [181, "    }"], [182, ""], [183, "    @Test"], [316, "        requestThenAssertResponse(remotingClient);"], [317, "    }"], [318, ""], [319, "    private void requestThenAssertResponse(RemotingClient remotingClient) throws Exception {"]], "deleted": []}, "num_lines_added": 28, "num_lines_removed": 0}