{"hash": "76f13ea0354c6fb826359f3cc817313fb9b60e7e", "message": "Fixing bugs in future implementation (refs #7)", "file_num_lines": 177, "diff_parsed": {"added": [[96, "        this.completeFuture();"], [105, "        this.initializeFutureIfNecessary();"], [106, "        dequeueFuture.set(this);"], [107, "        futureLock.unlock();"], [108, "    }"], [109, ""], [110, "    private void initializeFutureIfNecessary() {"], [111, "        futureLock.lock();"], [112, "        if (dequeueFuture == null) {"], [113, "            dequeueFuture = SettableFuture.create();"], [118, "    private void invalidateFuture() {"], [119, "        futureLock.lock();"], [120, "        dequeueFuture = null;"], [121, "        futureLock.unlock();"], [122, "    }"], [123, ""], [146, ""], [147, "            if (this.isEmpty()) {"], [148, "                this.invalidateFuture();"], [149, "            }"], [150, ""], [160, "        initializeFutureIfNecessary();"]], "deleted": [[96, "        completeFuture();"], [105, "        if (dequeueFuture != null) {"], [106, "            dequeueFuture.set(this);"], [142, "        futureLock.lock();"], [143, "        if (dequeueFuture == null || dequeueFuture.isDone() || dequeueFuture.isCancelled()) {"], [144, "            dequeueFuture = SettableFuture.create();"], [145, "        }"], [146, "        futureLock.unlock();"]]}, "num_lines_added": 22, "num_lines_removed": 8}