{"bug_class": "PROVER", "kind": "ERROR", "bug_type": "RESOURCE_LEAK", "qualifier": "resource of type `com.pivovarit.collectors.ThrottlingParallelCollector` acquired by call to `inParallelToCollection(...)` at line 41 is not released after line 41.", "severity": "HIGH", "visibility": "user", "line": 41, "column": -1, "procedure": "void ToCollectionParallelismThrottlingBDDTest.shouldCollectToCollectionWithThrottledParallelism(int,int)", "procedure_id": "com.pivovarit.collectors.inParallelToCollection.ToCollectionParallelismThrottlingBDDTest.shouldColle.3cbbf83d0681e6379c3c4a49268aec79", "procedure_start_line": 36, "file": "src/test/java/com/pivovarit/collectors/inParallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "bug_trace": [{"level": 0, "filename": "src/test/java/com/pivovarit/collectors/inParallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 36, "column_number": -1, "description": "start of procedure shouldCollectToCollectionWithThrottledParallelism(...)"}, {"level": 0, "filename": "src/test/java/com/pivovarit/collectors/inParallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 38, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/infrastructure/ExecutorAwareTest.java", "line_number": 25, "column_number": -1, "description": "start of procedure threadPoolExecutor(...)"}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/infrastructure/ExecutorAwareTest.java", "line_number": 26, "column_number": -1, "description": "return from a call to ThreadPoolExecutor ExecutorAwareTest.threadPoolExecutor(int)"}, {"level": 0, "filename": "src/test/java/com/pivovarit/collectors/inParallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 38, "column_number": -1, "description": ""}, {"level": 0, "filename": "src/test/java/com/pivovarit/collectors/inParallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 39, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/inParallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 53, "column_number": -1, "description": "start of procedure expectedDuration(...)"}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/inParallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 54, "column_number": -1, "description": "Taking false branch"}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/inParallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 56, "column_number": -1, "description": "Taking true branch"}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/inParallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 57, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/inParallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 59, "column_number": -1, "description": "return from a call to long ToCollectionParallelismThrottlingBDDTest.expectedDuration(long,long)"}, {"level": 0, "filename": "src/test/java/com/pivovarit/collectors/inParallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 41, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 113, "column_number": -1, "description": "start of procedure inParallelToCollection(...)"}, {"level": 1, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 114, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method"}, {"level": 1, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 115, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method"}, {"level": 1, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 116, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 448, "column_number": -1, "description": "start of procedure assertParallelismValid(...)"}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 449, "column_number": -1, "description": "Taking false branch"}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 450, "column_number": -1, "description": "return from a call to int ParallelCollectors.assertParallelismValid(int)"}, {"level": 1, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 117, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 448, "column_number": -1, "description": "start of procedure assertParallelismValid(...)"}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 449, "column_number": -1, "description": "Taking false branch"}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 450, "column_number": -1, "description": "return from a call to int ParallelCollectors.assertParallelismValid(int)"}, {"level": 1, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 117, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ThrottlingParallelCollector.java", "line_number": 31, "column_number": -1, "description": "start of procedure ThrottlingParallelCollector(...)"}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ThrottlingParallelCollector.java", "line_number": 36, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 41, "column_number": -1, "description": "start of procedure AbstractParallelCollector(...)"}, {"level": 3, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 45, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 48, "column_number": -1, "description": "start of procedure AbstractParallelCollector(...)"}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 53, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 31, "column_number": -1, "description": ""}, {"level": 5, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 122, "column_number": -1, "description": "start of procedure AbstractParallelCollector$CustomThreadFactory(...)"}, {"level": 5, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 123, "column_number": -1, "description": "return from a call to AbstractParallelCollector$CustomThreadFactory.<init>(AbstractParallelCollector)"}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 31, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 54, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 55, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 56, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 57, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 58, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 59, "column_number": -1, "description": "return from a call to AbstractParallelCollector.<init>(Function,Supplier,Executor,ConcurrentLinkedQueue,ConcurrentLinkedQueue)"}, {"level": 3, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 46, "column_number": -1, "description": "return from a call to AbstractParallelCollector.<init>(Function,Supplier,Executor)"}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ThrottlingParallelCollector.java", "line_number": 37, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ThrottlingParallelCollector.java", "line_number": 38, "column_number": -1, "description": "return from a call to ThrottlingParallelCollector.<init>(Function,Supplier,Executor,int)"}, {"level": 1, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 117, "column_number": -1, "description": "return from a call to Collector ParallelCollectors.inParallelToCollection(Supplier,ThreadPoolExecutor,int)"}, {"level": 0, "filename": "src/test/java/com/pivovarit/collectors/inParallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 41, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/inParallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 63, "column_number": -1, "description": "start of procedure collectWith(...)"}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/inParallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 64, "column_number": -1, "description": "return from a call to Supplier ToCollectionParallelismThrottlingBDDTest.collectWith(ThrottlingParallelCollector,int)"}], "key": "ToCollectionParallelismThrottlingBDDTest.java|shouldCollectToCollectionWithThrottledParallelism|RESOURCE_LEAK", "node_key": "9140dff8bf7cd03886d368c0c0c52aa5", "hash": "676139b77ff0200019dbfaa9f54b9711", "bug_type_hum": "Resource Leak", "censored_reason": ""}