{"bug_class": "PROVER", "kind": "ERROR", "bug_type": "RESOURCE_LEAK", "qualifier": "resource of type `com.pivovarit.collectors.ThrottlingDispatcher` acquired by call to `parallelToCollection(...)` at line 43 is not released after line 43.", "severity": "HIGH", "visibility": "user", "line": 43, "column": -1, "procedure": "void ToCollectionParallelismThrottlingBDDTest.shouldCollectToCollectionWithThrottledParallelism(int,int)", "procedure_id": "com.pivovarit.collectors.parallelToCollection.ToCollectionParallelismThrottlingBDDTest.shouldCollect.5fb2724f1e6d5df759afff4e8fe755e8", "procedure_start_line": 38, "file": "src/test/java/com/pivovarit/collectors/parallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "bug_trace": [{"level": 0, "filename": "src/test/java/com/pivovarit/collectors/parallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 38, "column_number": -1, "description": "start of procedure shouldCollectToCollectionWithThrottledParallelism(...)"}, {"level": 0, "filename": "src/test/java/com/pivovarit/collectors/parallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 40, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/infrastructure/ExecutorAwareTest.java", "line_number": 25, "column_number": -1, "description": "start of procedure threadPoolExecutor(...)"}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/infrastructure/ExecutorAwareTest.java", "line_number": 26, "column_number": -1, "description": "return from a call to ThreadPoolExecutor ExecutorAwareTest.threadPoolExecutor(int)"}, {"level": 0, "filename": "src/test/java/com/pivovarit/collectors/parallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 40, "column_number": -1, "description": ""}, {"level": 0, "filename": "src/test/java/com/pivovarit/collectors/parallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 41, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/infrastructure/TestUtils.java", "line_number": 40, "column_number": -1, "description": "start of procedure expectedDuration(...)"}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/infrastructure/TestUtils.java", "line_number": 41, "column_number": -1, "description": "Taking false branch"}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/infrastructure/TestUtils.java", "line_number": 43, "column_number": -1, "description": "Taking true branch"}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/infrastructure/TestUtils.java", "line_number": 44, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/infrastructure/TestUtils.java", "line_number": 46, "column_number": -1, "description": "return from a call to long TestUtils.expectedDuration(long,long,long)"}, {"level": 0, "filename": "src/test/java/com/pivovarit/collectors/parallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 43, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 115, "column_number": -1, "description": "start of procedure parallelToCollection(...)"}, {"level": 1, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 116, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method"}, {"level": 1, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 117, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method"}, {"level": 1, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 118, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 454, "column_number": -1, "description": "start of procedure assertParallelismValid(...)"}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 455, "column_number": -1, "description": "Taking false branch"}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 456, "column_number": -1, "description": "return from a call to int ParallelCollectors.assertParallelismValid(int)"}, {"level": 1, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 119, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 454, "column_number": -1, "description": "start of procedure assertParallelismValid(...)"}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 455, "column_number": -1, "description": "Taking false branch"}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 456, "column_number": -1, "description": "return from a call to int ParallelCollectors.assertParallelismValid(int)"}, {"level": 1, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 119, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/AsyncParallelCollector.java", "line_number": 27, "column_number": -1, "description": "start of procedure AsyncParallelCollector(...)"}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/AsyncParallelCollector.java", "line_number": 31, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 15, "column_number": -1, "description": "start of procedure AbstractParallelCollector()"}, {"level": 3, "filename": "src/main/java/com/pivovarit/collectors/AbstractParallelCollector.java", "line_number": 15, "column_number": -1, "description": "return from a call to AbstractParallelCollector.<init>()"}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/AsyncParallelCollector.java", "line_number": 32, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/com/pivovarit/collectors/ThrottlingDispatcher.java", "line_number": 11, "column_number": -1, "description": "start of procedure ThrottlingDispatcher(...)"}, {"level": 3, "filename": "src/main/java/com/pivovarit/collectors/ThrottlingDispatcher.java", "line_number": 12, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/Dispatcher.java", "line_number": 24, "column_number": -1, "description": "start of procedure Dispatcher(...)"}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/Dispatcher.java", "line_number": 17, "column_number": -1, "description": ""}, {"level": 5, "filename": "src/main/java/com/pivovarit/collectors/Dispatcher.java", "line_number": 87, "column_number": -1, "description": "start of procedure Dispatcher$CustomThreadFactory()"}, {"level": 5, "filename": "src/main/java/com/pivovarit/collectors/Dispatcher.java", "line_number": 88, "column_number": -1, "description": "return from a call to Dispatcher$CustomThreadFactory.<init>()"}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/Dispatcher.java", "line_number": 17, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/Dispatcher.java", "line_number": 22, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/Dispatcher.java", "line_number": 25, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/Dispatcher.java", "line_number": 26, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/Dispatcher.java", "line_number": 27, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/com/pivovarit/collectors/Dispatcher.java", "line_number": 28, "column_number": -1, "description": "return from a call to Dispatcher.<init>(Executor)"}, {"level": 3, "filename": "src/main/java/com/pivovarit/collectors/ThrottlingDispatcher.java", "line_number": 13, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/com/pivovarit/collectors/ThrottlingDispatcher.java", "line_number": 14, "column_number": -1, "description": "return from a call to ThrottlingDispatcher.<init>(Executor,int)"}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/AsyncParallelCollector.java", "line_number": 32, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/AsyncParallelCollector.java", "line_number": 33, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/AsyncParallelCollector.java", "line_number": 34, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/com/pivovarit/collectors/AsyncParallelCollector.java", "line_number": 35, "column_number": -1, "description": "return from a call to AsyncParallelCollector.<init>(Function,Supplier,Executor,int)"}, {"level": 1, "filename": "src/main/java/com/pivovarit/collectors/ParallelCollectors.java", "line_number": 119, "column_number": -1, "description": "return from a call to Collector ParallelCollectors.parallelToCollection(Supplier,ThreadPoolExecutor,int)"}, {"level": 0, "filename": "src/test/java/com/pivovarit/collectors/parallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 43, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/parallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 55, "column_number": -1, "description": "start of procedure collectWith(...)"}, {"level": 1, "filename": "src/test/java/com/pivovarit/collectors/parallelToCollection/ToCollectionParallelismThrottlingBDDTest.java", "line_number": 56, "column_number": -1, "description": "return from a call to Supplier ToCollectionParallelismThrottlingBDDTest.collectWith(AsyncParallelCollector,int)"}], "key": "ToCollectionParallelismThrottlingBDDTest.java|shouldCollectToCollectionWithThrottledParallelism|RESOURCE_LEAK", "node_key": "9140dff8bf7cd03886d368c0c0c52aa5", "hash": "e744396706bf8e0a3b93568ac4ce1c11", "bug_type_hum": "Resource Leak", "censored_reason": ""}