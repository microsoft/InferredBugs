 public HueError[] validateWhitelistUser(String aUser, String userDescription, boolean strict) {
		String validUser = null;
		boolean found = false;
		if (aUser != null && !aUser.equalsIgnoreCase("undefined") && !aUser.equalsIgnoreCase("null")
				&& !aUser.equalsIgnoreCase("")) {
			if (securityDescriptor.getWhitelist() != null) {
				Set<String> theUserIds = securityDescriptor.getWhitelist().keySet();
				Iterator<String> userIterator = theUserIds.iterator();
				while (userIterator.hasNext()) {
					validUser = userIterator.next();
					if (validUser.equals(aUser)) {
						found = true;
						log.debug("validateWhitelistUser: found a user <" + aUser + ">");
					}
				}
			}
		}

		if(!found && !strict) {
			log.debug("validateWhitelistUser: a user was not found and it is not strict rules <" + aUser + "> being created");
			newWhitelistUser(aUser, userDescription);
			
			found = true;
		}
		
		if (!found) {
			log.debug("validateWhitelistUser: a user was not found and it is strict rules <" + aUser + ">");
			return HueErrorResponse.createResponse("1", "/api/" + aUser == null ? "" : aUser, "unauthorized user", null, null, null).getTheErrors();
		}

		return null;
	}