{"hash": "39cf4fae1e2f3c7b3da55621da34a19a36159915", "message": "Dump/load to/from stdout/stdin", "file_num_lines": 89, "diff_parsed": {"added": [[11, "import java.io.FileNotFoundException;"], [12, "import java.io.FileOutputStream;"], [13, "import java.io.OutputStream;"], [53, "\t\tfinal String[] files = cmd.getArgs();"], [54, ""], [55, "\t\tif (files.length > 1) {"], [56, "\t\t\tthrow new IllegalArgumentException(\"Only one dump file path may be passed at a time.\");"], [57, "\t\t}"], [58, ""], [60, "\t\tfinal OutputStream output;"], [61, ""], [62, "\t\t// Write to stdout if no path is specified."], [63, "\t\tif (0 == files.length) {"], [64, "\t\t\tlogger.info(\"No path given. Writing to standard output.\");"], [65, "\t\t\toutput = System.out;"], [66, "\t\t} else {"], [67, "\t\t\ttry {"], [68, "\t\t\t\toutput = new FileOutputStream(files[0]);"], [69, "\t\t\t} catch (FileNotFoundException e) {"], [70, "\t\t\t\tthrow new RuntimeException(\"Unable to open dump file for writing.\", e);"], [71, "\t\t\t}"], [72, "\t\t}"], [73, ""], [98, "\t\t\t\t.createGenerator(output, JsonEncoding.UTF8)"], [117, "\t\tsuper.printHelp(Command.DUMP_REPORT, \"Dump the report for debugging. The name option is respected. If no \" +"], [118, "\t\t\t\t\t\t\"destination path is given then the dump is written to standard output.\", \"[destination]\");"]], "deleted": [[75, "\t\t\t\t.createGenerator(System.out, JsonEncoding.UTF8)"], [94, "\t\tsuper.printHelp(Command.DUMP_REPORT, \"Dump the report for debugging. The name option is respected.\");"]]}, "num_lines_added": 26, "num_lines_removed": 2}