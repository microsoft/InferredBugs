{"hash": "c0e2cd5df2e94cf261c47d3a329cccdaf4e38597", "message": "Improved support for the 'DataFrameMapper' transformation type", "file_num_lines": 117, "diff_parsed": {"added": [[33, "import org.jpmml.sklearn.HasArray;"], [45, "\t\tObject _default = getDefault();"], [46, "\t\tList<Object[]> rows = getFeatures();"], [48, "\t\tif(!(Boolean.FALSE).equals(_default)){"], [49, "\t\t\tthrow new IllegalArgumentException();"], [50, "\t\t}"], [52, "\t\tfor(Object[] row : rows){"], [56, "\t\t\tList<String> columns = getColumnList(row);"], [57, "\t\t\tfor(String column : columns){"], [58, "\t\t\t\tFieldName name = FieldName.create(column);"], [59, ""], [60, "\t\t\t\tids.add(name.getValue());"], [62, "\t\t\t\tDataField dataField = encoder.getDataField(name);"], [63, "\t\t\t\tif(dataField == null){"], [64, "\t\t\t\t\tdataField = encoder.createDataField(name);"], [65, "\t\t\t\t}"], [72, "\t\t\tList<Transformer> transformers = getTransformerList(row);"], [73, "\t\t\tfor(Transformer transformer : transformers){"], [86, "\tpublic Object getDefault(){"], [87, "\t\treturn get(\"default\");"], [88, "\t}"], [89, ""], [90, "\tpublic DataFrameMapper setDefault(Object _default){"], [91, "\t\tput(\"default\", _default);"], [92, ""], [93, "\t\treturn this;"], [94, "\t}"], [95, ""], [100, "\tpublic DataFrameMapper setFeatures(List<Object[]> features){"], [101, "\t\tput(\"features\", features);"], [102, ""], [103, "\t\treturn this;"], [104, "\t}"], [105, ""], [107, "\tprivate List<String> getColumnList(Object[] feature){"], [122, "\t\t\tif(feature[0] instanceof HasArray){"], [123, "\t\t\t\tHasArray hasArray = (HasArray)feature[0];"], [124, ""], [125, "\t\t\t\treturn (List)hasArray.getArrayContent();"], [126, "\t\t\t} // End if"], [127, ""], [129, "\t\t\t\treturn Lists.transform(((List)feature[0]), function);"], [163, "\t\t\t\treturn Lists.transform((List)TupleUtil.extractElementList(steps, 1), function);"], [167, "\t\t\t\treturn Lists.transform((List)feature[1], function);"]], "deleted": [[44, "\t\tList<Object[]> steps = getFeatures();"], [46, "\t\tfor(int row = 0; row < steps.size(); row++){"], [47, "\t\t\tObject[] step = steps.get(row);"], [52, "\t\t\tList<String> names = getNameList(step);"], [53, "\t\t\tfor(String name : names){"], [54, "\t\t\t\tids.add(name);"], [56, "\t\t\t\tDataField dataField = encoder.createDataField(FieldName.create(name));"], [63, "\t\t\tList<Transformer> transformers = getTransformerList(step);"], [64, "\t\t\tfor(int column = 0; column < transformers.size(); column++){"], [65, "\t\t\t\tTransformer transformer = transformers.get(column);"], [83, "\tprivate List<String> getNameList(Object[] feature){"], [99, "\t\t\t\treturn new ArrayList<>(Lists.transform(((List)feature[0]), function));"], [133, "\t\t\t\treturn new ArrayList<>(Lists.transform((List)TupleUtil.extractElementList(steps, 1), function));"], [137, "\t\t\t\treturn new ArrayList<>(Lists.transform((List)feature[1], function));"]]}, "num_lines_added": 44, "num_lines_removed": 14}