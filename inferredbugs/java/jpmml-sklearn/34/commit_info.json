{"hash": "ba509717fe3b62711acaac3c22431dec927e8975", "message": "Refactored Pipeline class hierarchy", "file_num_lines": 58, "diff_parsed": {"added": [], "deleted": [[29, "import sklearn.Estimator;"], [30, "import sklearn.EstimatorUtil;"], [37, "\tprivate boolean flexible = false;"], [38, ""], [39, ""], [45, "\t\tthis(module, name, false);"], [46, "\t}"], [47, ""], [48, "\tprotected Pipeline(String module, String name, boolean flexible){"], [50, ""], [51, "\t\tsetFlexible(flexible);"], [101, "\t\tboolean flexible = isFlexible();"], [102, ""], [103, "\t\tif(flexible && steps.size() > 0){"], [104, "\t\t\tEstimator estimator = getEstimator();"], [105, ""], [106, "\t\t\tif(estimator != null){"], [107, "\t\t\t\tsteps = steps.subList(0, steps.size() - 1);"], [108, "\t\t\t}"], [109, "\t\t}"], [114, "\tpublic Estimator getEstimator(){"], [115, "\t\tList<Object[]> steps = getSteps();"], [116, "\t\tboolean flexible = isFlexible();"], [117, ""], [118, "\t\tif(flexible && steps.size() > 0){"], [119, "\t\t\tObject lastStep = TupleUtil.extractElement(steps.get(steps.size() - 1), 1);"], [120, ""], [121, "\t\t\ttry {"], [122, "\t\t\t\treturn EstimatorUtil.asEstimator(lastStep);"], [123, "\t\t\t} catch(IllegalArgumentException iae){"], [124, "\t\t\t\t// Ignored"], [125, "\t\t\t}"], [126, "\t\t}"], [127, ""], [128, "\t\treturn null;"], [129, "\t}"], [130, ""], [134, ""], [135, "\tprivate boolean isFlexible(){"], [136, "\t\treturn this.flexible;"], [137, "\t}"], [138, ""], [139, "\tprivate void setFlexible(boolean flexible){"], [140, "\t\tthis.flexible = flexible;"], [141, "\t}"]]}, "num_lines_added": 0, "num_lines_removed": 45}