{"hash": "a8fe94bb44b8ace51bebbaee9b3856f829f39094", "message": "Ensured compatibility with XGBoost 0.6. Fixes #16", "file_num_lines": 49, "diff_parsed": {"added": [[26, "import org.jpmml.sklearn.ClassDictUtil;"], [28, "import sklearn.preprocessing.LabelEncoder;"], [53, "\t\tLabelEncoder labelEncoder = getLabelEncoder();"], [55, "\t\treturn labelEncoder.getClasses();"], [67, ""], [68, "\tpublic LabelEncoder getLabelEncoder(){"], [69, "\t\tObject object = get(\"_le\");"], [70, ""], [71, "\t\ttry {"], [72, "\t\t\tif(object == null){"], [73, "\t\t\t\tthrow new NullPointerException();"], [74, "\t\t\t}"], [75, ""], [76, "\t\t\treturn (LabelEncoder)object;"], [77, "\t\t} catch(RuntimeException re){"], [78, "\t\t\tthrow new IllegalArgumentException(\"The label encoder object (\" + ClassDictUtil.formatClass(object) + \") is not a LabelEncoder\", re);"], [79, "\t\t}"], [80, "\t}"]], "deleted": [[21, "import java.util.ArrayList;"], [27, "import org.jpmml.sklearn.HasArray;"], [53, "\t\tList<Object> result = new ArrayList<>();"], [55, "\t\tList<?> values = (List<?>)get(\"classes_\");"], [56, "\t\tfor(Object value : values){"], [57, ""], [58, "\t\t\tif(value instanceof HasArray){"], [59, "\t\t\t\tHasArray hasArray = (HasArray)value;"], [60, ""], [61, "\t\t\t\tresult.addAll(hasArray.getArrayContent());"], [62, "\t\t\t} else"], [63, ""], [64, "\t\t\t{"], [65, "\t\t\t\tresult.add(value);"], [66, "\t\t\t}"], [67, "\t\t}"], [68, ""], [69, "\t\treturn result;"]]}, "num_lines_added": 18, "num_lines_removed": 18}