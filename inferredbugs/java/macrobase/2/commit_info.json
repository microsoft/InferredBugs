{"hash": "c77a0b0ce019b21e7a1d486376a45e63720583c0", "message": "Fluent OperatorChain API.", "file_num_lines": 53, "diff_parsed": {"added": [[4, "import macrobase.analysis.pipeline.operator.MBStream;"], [5, "import macrobase.analysis.pipeline.operator.MBOperatorChain;"], [7, "import macrobase.analysis.result.OutlierClassificationResult;"], [24, "    public Pipeline initialize(MacroBaseConf conf) throws Exception {"], [27, "        return this;"], [37, "        MBStream<OutlierClassificationResult> ocrs ="], [38, "                MBOperatorChain.begin(data)"], [39, "                             .then(new EWFeatureTransform(conf))"], [40, "                             .then(new EWAppxPercentileOutlierClassifier(conf)).executeMiniBatchUntilFixpoint(1000);"], [43, "        summarizer.consume(ocrs.drain());"]], "deleted": [[4, "import macrobase.analysis.classify.OutlierClassifier;"], [9, "import macrobase.analysis.transform.FeatureTransform;"], [10, "import macrobase.conf.ConfigurationException;"], [18, "import java.io.IOException;"], [19, "import java.sql.SQLException;"], [26, "    public void initialize(MacroBaseConf conf) throws Exception {"], [38, "        FeatureTransform featureTransform = new EWFeatureTransform(conf);"], [39, "        featureTransform.consume(ingester.getStream().drain());"], [40, ""], [41, "        OutlierClassifier outlierClassifier = new EWAppxPercentileOutlierClassifier(conf);"], [42, "        outlierClassifier.consume(featureTransform.getStream().drain());"], [45, "        summarizer.consume(outlierClassifier.getStream().drain());"]]}, "num_lines_added": 10, "num_lines_removed": 12}