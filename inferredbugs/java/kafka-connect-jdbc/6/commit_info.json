{"hash": "04aceeb4a65eedfaed9970d8de3ab6405eccd339", "message": "small improvement to avoid creating two lists in the extractor for nonPK cols and PK cols.", "file_num_lines": 294, "diff_parsed": {"added": [[24, "import java.util.LinkedList;"], [69, "    List<PreparedStatementBinder> binders = dataExtractor.get(struct,"], [73, "    for (PreparedStatementBinder p : binders)"], [77, "    assertEquals(binders.size(), 10);"], [130, "    List<PreparedStatementBinder> binders = dataExtractor.get(struct,"], [134, "    for (PreparedStatementBinder p : binders)"], [139, "    assertEquals(binders.size(), 4);"], [178, "    List<PreparedStatementBinder> binders = dataExtractor.get(struct,"], [182, "    for (PreparedStatementBinder p : binders)"], [234, "    List<PreparedStatementBinder> binders = dataExtractor.get(struct,"], [238, "    List<PreparedStatementBinder> pkBinders = new LinkedList<>();"], [239, "    for (PreparedStatementBinder p : binders) {"], [240, "      if (p.isPrimaryKey()) {"], [241, "        pkBinders.add(p);"], [242, "      }"], [244, "    }"], [247, "    assertEquals(binders.size(), 10);"], [327, "    List<PreparedStatementBinder> binders = dataExtractor.get(struct,"], [331, "    LinkedList<PreparedStatementBinder> pkBinders = new LinkedList<>();"], [332, "    for (PreparedStatementBinder p : binders) {"], [333, "      if (p.isPrimaryKey()) {"], [334, "        pkBinders.add(p);"], [335, "      }"], [337, "    }"], [342, "    assertTrue(Objects.equals(pkBinders.get(0).getFieldName(), \"long\"));"]], "deleted": [[15, "import com.google.common.collect.Iterables;"], [69, "    StructFieldsDataExtractor.PreparedStatementBinders binders = dataExtractor.get(struct,"], [73, "    for (PreparedStatementBinder p : Iterables.concat(binders.getNonKeyColumns(), binders.getKeyColumns()))"], [77, "    assertEquals(binders.getKeyColumns().size() + binders.getNonKeyColumns().size(), 10);"], [130, "    StructFieldsDataExtractor.PreparedStatementBinders binders = dataExtractor.get(struct,"], [134, "    for (PreparedStatementBinder p : Iterables.concat(binders.getKeyColumns(), binders.getNonKeyColumns()))"], [139, "    assertEquals(binders.getKeyColumns().size() + binders.getNonKeyColumns().size(), 4);"], [178, "    StructFieldsDataExtractor.PreparedStatementBinders binders = dataExtractor.get(struct,"], [182, "    for (PreparedStatementBinder p : Iterables.concat(binders.getNonKeyColumns(), binders.getKeyColumns()))"], [234, "    StructFieldsDataExtractor.PreparedStatementBinders binders = dataExtractor.get(struct,"], [238, "    for (PreparedStatementBinder p : Iterables.concat(binders.getNonKeyColumns(), binders.getKeyColumns()))"], [242, "    assertEquals(binders.getNonKeyColumns().size() + binders.getKeyColumns().size(), 10);"], [244, "    List<PreparedStatementBinder> pkBinders = binders.getKeyColumns();"], [323, "    StructFieldsDataExtractor.PreparedStatementBinders binders = dataExtractor.get(struct,"], [327, "    for (PreparedStatementBinder p : Iterables.concat(binders.getNonKeyColumns(), binders.getKeyColumns()))"], [333, "    assertTrue(Objects.equals(binders.getKeyColumns().get(0).getFieldName(), \"long\"));"]]}, "num_lines_added": 25, "num_lines_removed": 16}