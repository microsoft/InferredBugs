{"hash": "c857e4f84c275888d99beab1e7c315fd95ec0e20", "message": "#392 new email for multi devices", "file_num_lines": 82, "diff_parsed": {"added": [[48, "        DashBoard dash = user.profile.getDashByIdOrThrow(dashId);"], [51, "            int deviceId = ParseUtil.parseInt(split[1]);"], [52, "            Device device = dash.getDeviceById(deviceId);"], [54, "            if (device == null || device.token == null) {"], [55, "                throw new IllegalCommandBodyException(\"Wrong device id.\");"], [56, "            }"], [58, "            makeSingleTokenEmail(ctx, dash, device, user.name, message.id);"], [59, "        } else {"], [60, "            if (dash.devices.length == 1) {"], [61, "                makeSingleTokenEmail(ctx, dash, dash.devices[0], user.name, message.id);"], [62, "            } else {"], [63, "                sendMultiTokenEmail(ctx, dash, user.name, message.id);"], [64, "            }"], [67, "    }"], [69, "    private void makeSingleTokenEmail(ChannelHandlerContext ctx, DashBoard dash, Device device, String to, int msgId) {"], [70, "        String dashName = dash.name == null ? \"New Project\" : dash.name;"], [71, "        String deviceName = device.name == null ? \"New Device\" : device.name;"], [73, "        String body = \"Auth Token : \" + device.token;"], [74, ""], [75, "        log.trace(\"Sending single token mail for user {}, with token : '{}'.\", to, device.token);"], [76, "        mail(ctx.channel(), to, to, subj, body + BODY, msgId);"], [77, "    }"], [78, ""], [79, "    private void sendMultiTokenEmail(ChannelHandlerContext ctx, DashBoard dash, String to, int msgId) {"], [80, "        String dashName = dash.name == null ? \"New Project\" : dash.name;"], [81, "        String subj = \"Auth Tokens for \" + dashName + \" project and \" + dash.devices.length + \" devices\";"], [82, ""], [83, "        StringBuilder body = new StringBuilder();"], [84, "        for (Device device : dash.devices) {"], [85, "            body.append(\"Auth Token for device '\")"], [86, "                .append(device.name == null ? \"New Device\" : device.name)"], [87, "                .append(\"' : \")"], [88, "                .append(device.token)"], [89, "                .append(\"\\n\");"], [90, "        }"], [91, ""], [92, "        body.append(BODY);"], [94, "        log.trace(\"Sending multi tokens mail for user {}, with {} tokens.\", to, dash.devices.length);"], [95, "        mail(ctx.channel(), to, to, subj, body.toString(), msgId);"]], "deleted": [[48, "        int deviceId = 0;"], [50, "        //new value for multi devices"], [52, "            deviceId = ParseUtil.parseInt(split[1]);"], [53, "        }"], [55, "        DashBoard dashBoard = user.profile.getDashByIdOrThrow(dashId);"], [56, "        Device device = dashBoard.getDeviceById(deviceId);"], [58, "        String token = device.token;"], [60, "        if (token == null) {"], [61, "            throw new IllegalCommandBodyException(\"Wrong device id.\");"], [64, "        String to = user.name;"], [65, "        String dashName = dashBoard.name == null ? \"New Project\" : dashBoard.name;"], [66, "        String deviceName = device.name == null ? \"\" : device.name;"], [68, "        String body = String.format(BODY, dashName, token);"], [70, "        log.trace(\"Sending Mail for user {}, with token : '{}'.\", user.name, token);"], [71, "        mail(ctx.channel(), user.name, to, subj, body, message.id);"]]}, "num_lines_added": 39, "num_lines_removed": 15}