{"hash": "de4d614e2e746b7c807a74bce7b61fffa7f927c7", "message": "#672 local servers moved to firebase", "file_num_lines": 51, "diff_parsed": {"added": [[7, "import io.netty.channel.epoll.Epoll;"], [8, "import org.asynchttpclient.AsyncHttpClient;"], [9, "import org.asynchttpclient.DefaultAsyncHttpClient;"], [10, "import org.asynchttpclient.DefaultAsyncHttpClientConfig;"], [13, "import org.junit.runner.RunWith;"], [14, "import org.mockito.Mock;"], [15, "import org.mockito.junit.MockitoJUnitRunner;"], [16, ""], [17, "import java.util.Properties;"], [20, "import static org.mockito.Mockito.when;"], [27, "@RunWith(MockitoJUnitRunner.Silent.class)"], [30, "    private final AsyncHttpClient client = new DefaultAsyncHttpClient(new DefaultAsyncHttpClientConfig.Builder()"], [31, "                .setUserAgent(null)"], [32, "                .setKeepAlive(true)"], [33, "                .setUseNativeTransport(Epoll.isAvailable())"], [34, "            .build()"], [35, "        );"], [36, ""], [37, "    @Mock"], [38, "    private Properties props;"], [39, ""], [43, "        GCMWrapper gcmWrapper = new GCMWrapper(props, client);"], [50, "        when(props.getProperty(\"gcm.api.key\")).thenReturn(\"\");"], [51, "        when(props.getProperty(\"gcm.server\")).thenReturn(\"\");"], [52, "        GCMWrapper gcmWrapper = new GCMWrapper(props, client);"], [54, "        Thread.sleep(5000);"]], "deleted": [[22, "        GCMWrapper gcmWrapper = new GCMWrapper(null, null);"], [29, "        GCMWrapper gcmWrapper = new GCMWrapper(null, null);"]]}, "num_lines_added": 26, "num_lines_removed": 2}