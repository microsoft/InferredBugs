{"hash": "e58e71a0980e8a87d51903006c7a7cba6f317135", "message": "load extensions from classpath; before this commit only plugins can declare extensions", "file_num_lines": 159, "diff_parsed": {"added": [[60, "            if (pluginId != null) {"], [61, "                PluginWrapper pluginWrapper = pluginManager.getPlugin(pluginId);"], [62, "                if (PluginState.STARTED != pluginWrapper.getPluginState()) {"], [63, "                    continue;"], [64, "                }"], [71, "                    Class<?> extensionType;"], [72, "                    if (pluginId != null) {"], [73, "                        extensionType = pluginManager.getPluginClassLoader(pluginId).loadClass(className);"], [74, "                    } else {"], [75, "                        extensionType = getClass().getClassLoader().loadClass(className);"], [76, "                    }"], [77, ""], [151, "        entries = new LinkedHashMap<String, Set<String>>();"], [152, ""], [153, "        readClasspathIndexFiles();"], [154, "        readPluginsIndexFiles();"], [155, ""], [156, "        return entries;"], [157, "    }"], [158, ""], [159, "    private void readClasspathIndexFiles() {"], [160, "        log.debug(\"Reading extensions index files from classpath\");"], [161, ""], [162, "        Set<String> bucket = new HashSet<String>();"], [163, "        try {"], [164, "            Enumeration<URL> urls = getClass().getClassLoader().getResources(ExtensionsIndexer.EXTENSIONS_RESOURCE);"], [165, "            while (urls.hasMoreElements()) {"], [166, "                URL url = urls.nextElement();"], [167, "                log.debug(\"Read '{}'\", url.getFile());"], [168, "                Reader reader = new InputStreamReader(url.openStream(), \"UTF-8\");"], [169, "                ExtensionsIndexer.readIndex(reader, bucket);"], [170, "            }"], [171, ""], [172, "            if (bucket.isEmpty()) {"], [173, "                log.debug(\"No extensions found\");"], [174, "            } else {"], [175, "                log.debug(\"Found possible {} extensions:\", bucket.size());"], [176, "                for (String entry : bucket) {"], [177, "                    log.debug(\"   \" + entry);"], [178, "                }"], [179, "            }"], [180, ""], [181, "            entries.put(null, bucket);"], [182, "        } catch (IOException e) {"], [183, "            log.error(e.getMessage(), e);"], [184, "        }"], [185, "    }"], [186, ""], [187, "    private void readPluginsIndexFiles() {"], [188, "        log.debug(\"Reading extensions index files from plugins\");"], [194, "            Set<String> bucket = new HashSet<String>();"], [200, "                ExtensionsIndexer.readIndex(reader, bucket);"], [202, "                if (bucket.isEmpty()) {"], [205, "                    log.debug(\"Found possible {} extensions:\", bucket.size());"], [206, "                    for (String entry : bucket) {"], [211, "                entries.put(pluginId, bucket);"]], "deleted": [[60, "            PluginWrapper pluginWrapper = pluginManager.getPlugin(pluginId);"], [61, "            if (PluginState.STARTED != pluginWrapper.getPluginState()) {"], [62, "            \tcontinue;"], [69, "                    Class<?> extensionType = pluginManager.getPluginClassLoader(pluginId).loadClass(className);"], [143, "        entries = new HashMap<String, Set<String>>();"], [149, "            Set<String> entriesPerPlugin = new HashSet<String>();"], [155, "                ExtensionsIndexer.readIndex(reader, entriesPerPlugin);"], [157, "                if (entriesPerPlugin.isEmpty()) {"], [160, "                    log.debug(\"Found possible {} extensions:\", entriesPerPlugin.size());"], [161, "                    for (String entry : entriesPerPlugin) {"], [166, "                entries.put(pluginId, entriesPerPlugin);"], [171, ""], [172, "        return entries;"]]}, "num_lines_added": 56, "num_lines_removed": 13}