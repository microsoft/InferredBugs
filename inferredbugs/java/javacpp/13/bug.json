{"bug_class": "PROVER", "kind": "ERROR", "bug_type": "THREAD_SAFETY_VIOLATION", "qualifier": "Read/Write race. Non-private method `org.bytedeco.javacpp.Pointer.init` indirectly reads without synchronization from `this.org.bytedeco.javacpp.Pointer.address`. Potentially races with write in method `Pointer.deallocate(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.", "severity": "HIGH", "visibility": "user", "line": 126, "column": -1, "procedure": "void Pointer.init(long,int,long)", "procedure_id": "org.bytedeco.javacpp.Pointer.init(long,int,long):void.179048eaad761a818a9eb42a658a5057", "procedure_start_line": 121, "file": "src/main/java/org/bytedeco/javacpp/Pointer.java", "bug_trace": [{"level": 0, "filename": "src/main/java/org/bytedeco/javacpp/Pointer.java", "line_number": 126, "column_number": -1, "description": "<Read trace>"}, {"level": 0, "filename": "src/main/java/org/bytedeco/javacpp/Pointer.java", "line_number": 126, "column_number": -1, "description": "call to Pointer$NativeDeallocator.<init>(Pointer,long)"}, {"level": 1, "filename": "src/main/java/org/bytedeco/javacpp/Pointer.java", "line_number": 200, "column_number": -1, "description": "access to `p.org.bytedeco.javacpp.Pointer.address`"}, {"level": 0, "filename": "src/main/java/org/bytedeco/javacpp/Pointer.java", "line_number": 401, "column_number": -1, "description": "<Write trace>"}, {"level": 0, "filename": "src/main/java/org/bytedeco/javacpp/Pointer.java", "line_number": 401, "column_number": -1, "description": "access to `this.org.bytedeco.javacpp.Pointer.address`"}], "key": "Pointer.java|init|THREAD_SAFETY_VIOLATION", "node_key": "9c5d6d9028928346cc4fb44cced5dea1", "hash": "95eb9bbd91b5f260867011383d41f1ad", "bug_type_hum": "Thread Safety Violation", "censored_reason": ""}