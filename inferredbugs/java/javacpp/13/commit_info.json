{"hash": "f61ac32ec07bb0c1e0e96e40480ebac40823c6bd", "message": "Update version in the `pom.xml` file to 1.1-SNAPSHOT\n\n * Introduce the concept of \"owner address\" to integrate `Pointer` transparently with `std::shared_ptr`, etc (Thanks to Cyprien Noel for the idea!)", "file_num_lines": 322, "diff_parsed": {"added": [[2, " * Copyright (C) 2011-2015 Samuel Audet"], [121, "    void init(long allocatedAddress, int allocatedCapacity, long ownerAddress, long deallocatorAddress) {"], [126, "        deallocator(new NativeDeallocator(this, ownerAddress, deallocatorAddress));"], [194, "     * Passes as single argument the {@link #ownerAddress} passed to the constructor."], [197, "        NativeDeallocator(Pointer p, long ownerAddress, long deallocatorAddress) {"], [200, "            this.ownerAddress = ownerAddress;"], [204, "        private long ownerAddress;"], [207, "        @Override public void deallocate() {"], [208, "            if (ownerAddress != 0 && deallocatorAddress != 0) {"], [209, "//                System.out.println(\"deallocating 0x\" + Long.toHexString(ownerAddress) +"], [211, "                deallocate(ownerAddress, deallocatorAddress);"], [212, "                ownerAddress = deallocatorAddress = 0;"], [216, "        private native void deallocate(long ownerAddress, long deallocatorAddress);"]], "deleted": [[2, " * Copyright (C) 2011-2014 Samuel Audet"], [121, "    void init(long allocatedAddress, int allocatedCapacity, long deallocatorAddress) {"], [126, "        deallocator(new NativeDeallocator(this, deallocatorAddress));"], [194, "     * Passes as argument the {@link #address} of the Pointer passed to the constructor."], [197, "        NativeDeallocator(Pointer p, long deallocatorAddress) {"], [200, "            this.allocatedAddress = p.address;"], [204, "        private long allocatedAddress;"], [207, "        public void deallocate() {"], [208, "            if (allocatedAddress != 0 && deallocatorAddress != 0) {"], [209, "//                System.out.println(\"deallocating 0x\" + Long.toHexString(allocatedAddress) +"], [211, "                deallocate(allocatedAddress, deallocatorAddress);"], [212, "                allocatedAddress = deallocatorAddress = 0;"], [216, "        private native void deallocate(long allocatedAddress, long deallocatorAddress);"]]}, "num_lines_added": 13, "num_lines_removed": 13}