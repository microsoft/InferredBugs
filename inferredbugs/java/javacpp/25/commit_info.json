{"hash": "1367b8191c474bc78a647ee38f5c836d55c8410b", "message": "Reference new enum types only when needed to maintain backward compatibility", "file_num_lines": 3572, "diff_parsed": {"added": [[2, " * Copyright (C) 2011-2018 Samuel Audet"], [173, "    boolean mayThrowExceptions, usesAdapters, passesStrings, accessesEnums;"], [202, "            if (classes(true, true, true, true, loadSuffix, baseLoadSuffix, classPath, classes)) {"], [219, "                return classes(mayThrowExceptions, usesAdapters, passesStrings, accessesEnums, loadSuffix, baseLoadSuffix, classPath, classes);"], [233, "    boolean classes(boolean handleExceptions, boolean defineAdapters, boolean convertStrings, boolean declareEnums,"], [443, "        if (declareEnums) {"], [444, "            out.println(\"static jfieldID JavaCPP_byteValueFID = NULL;\");"], [445, "            out.println(\"static jfieldID JavaCPP_shortValueFID = NULL;\");"], [446, "            out.println(\"static jfieldID JavaCPP_intValueFID = NULL;\");"], [447, "            out.println(\"static jfieldID JavaCPP_longValueFID = NULL;\");"], [448, "        }"], [783, "        if (declareEnums) {"], [784, "            out.println(\"static JavaCPP_noinline jfieldID JavaCPP_getFieldID(JNIEnv* env, const char* clsName, const char* name, const char* sig) {\");"], [785, "            out.println(\"    jclass cls = env->FindClass(clsName);\");"], [786, "            out.println(\"    if (cls == NULL || env->ExceptionCheck()) {\");"], [787, "            out.println(\"        JavaCPP_log(\\\"Error loading class %s.\\\", clsName);\");"], [788, "            out.println(\"        return NULL;\");"], [789, "            out.println(\"    }\");"], [790, "            out.println(\"    jfieldID fid = env->GetFieldID(cls, name, sig);\");"], [791, "            out.println(\"    if (fid == NULL || env->ExceptionCheck()) {\");"], [792, "            out.println(\"        JavaCPP_log(\\\"Error getting field ID of %s/%s\\\", clsName, name);\");"], [793, "            out.println(\"        return NULL;\");"], [794, "            out.println(\"    }\");"], [795, "            out.println(\"    return fid;\");"], [796, "            out.println(\"}\");"], [797, "            out.println();"], [798, "        }"], [1419, "        if (declareEnums) {"], [1420, "            out.println(\"    JavaCPP_byteValueFID = JavaCPP_getFieldID(env, \\\"\" +"], [1421, "                    ByteEnum.class.getName().replace('.', '/') + \"\\\", \\\"value\\\", \\\"B\\\");\");"], [1422, "            out.println(\"    if (JavaCPP_byteValueFID == NULL) {\");"], [1423, "            out.println(\"        return JNI_ERR;\");"], [1424, "            out.println(\"    }\");"], [1425, "            out.println(\"    JavaCPP_shortValueFID = JavaCPP_getFieldID(env, \\\"\" +"], [1426, "                    ShortEnum.class.getName().replace('.', '/') + \"\\\", \\\"value\\\", \\\"S\\\");\");"], [1427, "            out.println(\"    if (JavaCPP_shortValueFID == NULL) {\");"], [1428, "            out.println(\"        return JNI_ERR;\");"], [1429, "            out.println(\"    }\");"], [1430, "            out.println(\"    JavaCPP_intValueFID = JavaCPP_getFieldID(env, \\\"\" +"], [1431, "                    IntEnum.class.getName().replace('.', '/') + \"\\\", \\\"value\\\", \\\"I\\\");\");"], [1432, "            out.println(\"    if (JavaCPP_intValueFID == NULL) {\");"], [1433, "            out.println(\"        return JNI_ERR;\");"], [1434, "            out.println(\"    }\");"], [1435, "            out.println(\"    JavaCPP_longValueFID = JavaCPP_getFieldID(env, \\\"\" +"], [1436, "                    LongEnum.class.getName().replace('.', '/') + \"\\\", \\\"value\\\", \\\"J\\\");\");"], [1437, "            out.println(\"    if (JavaCPP_longValueFID == NULL) {\");"], [1438, "            out.println(\"        return JNI_ERR;\");"], [1439, "            out.println(\"    }\");"], [1440, "        }"], [1724, "                    accessesEnums = true;"], [1887, "                accessesEnums = true;"], [2147, "                accessesEnums = true;"], [2270, "                accessesEnums = true;"], [2601, "                    accessesEnums = true;"], [2820, "                accessesEnums = true;"]], "deleted": [[2, " * Copyright (C) 2011-2017 Samuel Audet"], [173, "    boolean mayThrowExceptions, usesAdapters, passesStrings;"], [202, "            if (classes(true, true, true, loadSuffix, baseLoadSuffix, classPath, classes)) {"], [219, "                return classes(mayThrowExceptions, usesAdapters, passesStrings, loadSuffix, baseLoadSuffix, classPath, classes);"], [233, "    boolean classes(boolean handleExceptions, boolean defineAdapters, boolean convertStrings,"], [443, "        out.println(\"static jfieldID JavaCPP_byteValueFID = NULL;\");"], [444, "        out.println(\"static jfieldID JavaCPP_shortValueFID = NULL;\");"], [445, "        out.println(\"static jfieldID JavaCPP_intValueFID = NULL;\");"], [446, "        out.println(\"static jfieldID JavaCPP_longValueFID = NULL;\");"], [1401, "        out.println(\"    JavaCPP_byteValueFID = JavaCPP_getFieldID(env, \" +"], [1402, "                jclasses.index(ByteEnum.class) + \", \\\"value\\\", \\\"B\\\");\");"], [1403, "        out.println(\"    if (JavaCPP_byteValueFID == NULL) {\");"], [1404, "        out.println(\"        return JNI_ERR;\");"], [1405, "        out.println(\"    }\");"], [1406, "        out.println(\"    JavaCPP_shortValueFID = JavaCPP_getFieldID(env, \" +"], [1407, "                jclasses.index(ShortEnum.class) + \", \\\"value\\\", \\\"S\\\");\");"], [1408, "        out.println(\"    if (JavaCPP_shortValueFID == NULL) {\");"], [1409, "        out.println(\"        return JNI_ERR;\");"], [1410, "        out.println(\"    }\");"], [1411, "        out.println(\"    JavaCPP_intValueFID = JavaCPP_getFieldID(env, \" +"], [1412, "                jclasses.index(IntEnum.class) + \", \\\"value\\\", \\\"I\\\");\");"], [1413, "        out.println(\"    if (JavaCPP_intValueFID == NULL) {\");"], [1414, "        out.println(\"        return JNI_ERR;\");"], [1415, "        out.println(\"    }\");"], [1416, "        out.println(\"    JavaCPP_longValueFID = JavaCPP_getFieldID(env, \" +"], [1417, "                jclasses.index(LongEnum.class) + \", \\\"value\\\", \\\"J\\\");\");"], [1418, "        out.println(\"    if (JavaCPP_longValueFID == NULL) {\");"], [1419, "        out.println(\"        return JNI_ERR;\");"], [1420, "        out.println(\"    }\");"]]}, "num_lines_added": 55, "num_lines_removed": 29}