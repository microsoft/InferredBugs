{"hash": "856ecd989f26cc3920de024dcdf3e9bcd9d892bd", "message": "* New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar\n * `Generator` now accepts `@Const` on `FunctionPointer` class declarations\n * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object\n * Upgraded references of the Android NDK to version r8\n * Included new command line option \"-Xcompiler\" to pass options such as \"-Wl,-static\" directly to the compiler\n * Made other various minor changes and enhancements", "file_num_lines": 85, "diff_parsed": {"added": [[42, "        put(array);"], [46, "        if (buffer != null && buffer.hasArray()) {"], [49, "            put(array);"], [53, "    public BytePointer(int size) {"], [54, "        try {"], [55, "            allocateArray(size);"], [56, "        } catch (UnsatisfiedLinkError e) {"], [57, "            throw new RuntimeException(\"No native JavaCPP library in memory. (Has Loader.load() been called?)\", e);"], [58, "        }"], [59, "    }"], [98, "        put(bytes).put(bytes.length, (byte)0);"], [103, "        return put(bytes).put(bytes.length, (byte)0);"]], "deleted": [[42, "        asBuffer().put(array);"], [46, "        if (buffer.hasArray()) {"], [49, "            asBuffer().put(array);"], [53, "    public BytePointer(int size) { allocateArray(size); }"], [92, "        asBuffer().put(bytes).put((byte)0);"], [97, "        //capacity(bytes.length+1);"], [98, "        asBuffer().put(bytes).put((byte)0);"], [99, "        return this;"]]}, "num_lines_added": 12, "num_lines_removed": 8}