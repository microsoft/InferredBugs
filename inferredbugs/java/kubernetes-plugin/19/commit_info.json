{"hash": "1b47346335026f857c5c34e89d2d34d8838df7ed", "message": "Replace active waits with semaphores", "file_num_lines": 264, "diff_parsed": {"added": [[28, "import static org.hamcrest.Matchers.hasEntry;"], [29, "import static org.hamcrest.Matchers.hasSize;"], [38, "import io.fabric8.kubernetes.api.model.Pod;"], [39, "import io.fabric8.kubernetes.api.model.PodList;"], [40, "import org.csanchez.jenkins.plugins.kubernetes.PodAnnotation;"], [80, "        SemaphoreStep.waitForStart(\"podTemplate/1\", b);"], [81, "        List<PodTemplate> templates = podTemplatesWithLabel(name.getMethodName(), cloud.getAllTemplates());"], [82, "        assertThat(templates, hasSize(1));"], [83, "        SemaphoreStep.success(\"podTemplate/1\", null);"], [95, "        SemaphoreStep.waitForStart(\"pod/1\", b);"], [96, "        PodList pods = cloud.connect().pods().withLabels(labels).list();"], [97, "        assertThat("], [98, "                \"Expected one pod with labels \" + labels + \" but got: \""], [99, "                        + pods.getItems().stream().map(pod -> pod.getMetadata()).collect(Collectors.toList()),"], [100, "                pods.getItems(), hasSize(1));"], [101, "        SemaphoreStep.success(\"pod/1\", null);"], [313, "        SemaphoreStep.waitForStart(\"podTemplate/1\", b);"], [316, "        SemaphoreStep.success(\"podTemplate/1\", null);"]], "deleted": [[28, "import static org.hamcrest.Matchers.*;"], [31, "import java.util.Collections;"], [44, "import org.junit.Ignore;"], [51, "import io.fabric8.kubernetes.api.model.Pod;"], [52, "import io.fabric8.kubernetes.api.model.PodList;"], [53, "import io.fabric8.kubernetes.api.model.PodListBuilder;"], [54, "import org.csanchez.jenkins.plugins.kubernetes.PodAnnotation;"], [82, "        List<PodTemplate> templates = null;"], [83, "        while (b.isBuilding() && (templates = podTemplatesWithLabel(name.getMethodName(), cloud.getAllTemplates())).isEmpty()) {"], [84, "            LOGGER.log(Level.INFO, \"Waiting for runInPod template to be created\");"], [85, "            Thread.sleep(1000);"], [86, "        }"], [98, "        PodList pods = new PodListBuilder().withItems(Collections.emptyList()).build();"], [99, "        while (pods.getItems().isEmpty()) {"], [100, "            LOGGER.log(Level.INFO, \"Waiting for pods to be created with labels: {0}\", labels);"], [101, "            pods = cloud.connect().pods().withLabels(labels).list();"], [102, "            Thread.sleep(1000);"], [103, "        }"], [109, "        assertThat(templates, hasSize(1));"], [126, "        assertThat("], [127, "                \"Expected one pod with labels \" + labels + \" but got: \""], [128, "                        + pods.getItems().stream().map(pod -> pod.getMetadata()).collect(Collectors.toList()),"], [129, "                pods.getItems(), hasSize(1));"], [320, "        r.waitForMessage(\"podTemplate\", b);"], [321, ""], [323, ""]]}, "num_lines_added": 18, "num_lines_removed": 26}