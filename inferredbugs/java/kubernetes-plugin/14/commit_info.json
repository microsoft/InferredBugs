{"hash": "330858045ffd873b1e51374bff82ab6921c7af12", "message": "Some suggestions on top of the existing PR\n\n* Merge with master\n* Reuse KubernetesFolderProperty instance on save\n* Some labels re-wording\n* Create taglib for checkbox with disabled attribute support", "file_num_lines": 172, "diff_parsed": {"added": [[9, "import java.util.logging.Level;"], [122, "            Set<String> permittedClouds = new HashSet<>();"], [131, "                        if (isUsageRestrictedKubernetesCloud(Jenkins.get().getCloud(cloud))"], [133, "                            permittedClouds.add(cloud);"], [138, "            this.permittedClouds.clear();"], [139, "            this.permittedClouds.addAll(permittedClouds);"], [140, "        } catch (JSONException e) {"], [141, "            LOGGER.log(Level.SEVERE, e, () -> \"reconfigure failed: \" + e.getMessage());"], [143, "        return this;"], [169, "        List<KubernetesCloud> clouds = Jenkins.get().clouds"], [170, "                .getAll(KubernetesCloud.class)"], [171, "                .stream()"], [172, "                .filter(KubernetesCloud::isUsageRestricted)"], [173, "                .collect(Collectors.toList());"], [174, "        Collections.sort(clouds, Comparator.<Cloud, String>comparing(o -> o.name));"], [190, "        public boolean isInherited() {"], [198, "        @SuppressWarnings(\"unused\") // by stapler/jelly"], [199, "        public boolean isGranted() {"], [213, "            return name + (isInherited() ? \" (inherited)\" : \"\");"], [216, "        @SuppressWarnings(\"unused\") // by stapler/jelly"], [217, "        public String getFormName() {"], [218, "            return PREFIX_USAGE_PERMISSION + getName();"], [221, "        @SuppressWarnings(\"unused\") // by stapler/jelly"], [222, "        public boolean isReadonly() {"], [223, "            return !userHasAdministerPermission() || isInherited();"], [229, "        return Jenkins.get().hasPermission(Jenkins.ADMINISTER);"], [248, "            return Messages.KubernetesFolderProperty_displayName();"], [253, "}"]], "deleted": [[118, "            KubernetesFolderProperty newKubernetesFolderProperty = new KubernetesFolderProperty();"], [119, ""], [131, "                        if (isUsageRestrictedKubernetesCloud(Jenkins.getInstance().getCloud(cloud))"], [133, "                            newKubernetesFolderProperty.getPermittedClouds().add(cloud);"], [138, ""], [139, "            return newKubernetesFolderProperty;"], [140, "        } catch (JSONException jsonException) {"], [141, "            LOGGER.severe(String.format(\"reconfigure failed: %s\", jsonException.getMessage()));"], [142, "            jsonException.printStackTrace();"], [143, ""], [144, "            return this;"], [171, "        List<KubernetesCloud> clouds = new ArrayList<>();"], [172, ""], [173, "        for (Cloud cloud : Jenkins.getInstance().clouds) {"], [174, "            if(cloud instanceof KubernetesCloud) {"], [175, "                if (((KubernetesCloud) cloud).isUsageRestricted()) {"], [176, "                    clouds.add((KubernetesCloud) cloud);"], [177, "                }"], [178, "            }"], [179, "        }"], [180, ""], [181, "        Collections.sort(clouds, CLOUD_BY_NAME);"], [182, ""], [186, "    private final static Comparator<Cloud> CLOUD_BY_NAME = new Comparator<Cloud>() {"], [187, "        @Override"], [188, "        public int compare(Cloud o1, Cloud o2) {"], [189, "            return o1.name.compareTo(o2.name);"], [190, "        }"], [191, "    };"], [192, ""], [205, "        private boolean isInherited() {"], [213, "        private boolean isGranted() {"], [227, "            return name;"], [230, "        private String htmlCheckedAttr() {"], [231, "            return isGranted() ? \"checked=\\\"checked\\\"\" : \"\";"], [234, "        private String htmlReadOnlyAttr() {"], [235, "            return isModifiable() ? \"\" : \"readonly=\\\"readonly\\\"\";"], [236, "        }"], [237, ""], [238, "        private String htmlDisabledAttr() {"], [239, "            return isModifiable() ? \"\" : \"disabled=\\\"disabled\\\"\";"], [240, "        }"], [241, ""], [242, "        private boolean isModifiable() {"], [243, "            return userHasAdministerPermission() && !isInherited();"], [244, "        }"], [245, ""], [246, "        /**"], [247, "         * Called from Jelly."], [248, "         *"], [249, "         * @return"], [250, "         */"], [251, "        public String htmlCheckbox() {"], [252, "            return String.format(\"<input type=\\\"checkbox\\\" name=\\\"%s\\\" %s %s %s value=\\\"%s\\\"/>\","], [253, "                    PREFIX_USAGE_PERMISSION + getName(), htmlDisabledAttr(), htmlReadOnlyAttr(), htmlCheckedAttr(),"], [254, "                    getName());"], [260, "        return Jenkins.getInstance().getACL().hasPermission(Jenkins.ADMINISTER);"], [267, ""], [280, "            return \"Kubernetes Plugin\";"], [285, "}"]]}, "num_lines_added": 28, "num_lines_removed": 60}