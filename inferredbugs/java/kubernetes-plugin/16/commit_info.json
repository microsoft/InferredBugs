{"hash": "0657fd10beb2bafc040a70a72d4a6aa8f717737c", "message": "Clean up", "file_num_lines": 359, "diff_parsed": {"added": [[132, "        this.namespace = determineNamespace(getKubernetesCloud(cloudName), Util.fixEmpty(template.getNamespace()));"], [136, "    private static String determineNamespace(KubernetesCloud cloud, String namespace) throws IOException {"], [137, "        try {"], [138, "            return namespace == null ? cloud.connect().getNamespace() : namespace;"], [139, "        } catch (UnrecoverableKeyException|NoSuchAlgorithmException|KeyStoreException|CertificateEncodingException e) {"], [140, "            throw new IOException(e);"], [141, "        }"], [142, "    }"], [143, ""], [152, "    public String getPodName() {"], [153, "        return PodTemplateUtils.substituteEnv(getNodeName());"], [154, "    }"], [155, ""], [172, "        return getKubernetesCloud(getCloudName());"], [173, "    }"], [174, ""], [175, "    private static KubernetesCloud getKubernetesCloud(String cloudName) {"], [176, "        Cloud cloud = Jenkins.get().getCloud(cloudName);"], [180, "            throw new IllegalStateException(KubernetesSlave.class.getName() + \" can be launched only by instances of \" + KubernetesCloud.class.getName());"], [248, "        Pod pod = client.pods().inNamespace(getNamespace()).withName(name).get();"]], "deleted": [[132, "        this.namespace = Util.fixEmpty(template.getNamespace());"], [160, "        Cloud cloud = Jenkins.getInstance().getCloud(getCloudName());"], [164, "            throw new IllegalStateException(getClass().getName() + \" can be launched only by instances of \" + KubernetesCloud.class.getName());"], [232, "        String actualNamespace = getNamespace() == null ? client.getNamespace() : getNamespace();"], [233, "        Pod pod = client.pods().inNamespace(actualNamespace).withName(name).get();"]]}, "num_lines_added": 20, "num_lines_removed": 5}