{"hash": "9d07eff458e0153bcbffda1f5cf7d9a72a1f8fc6", "message": "use factor8 as (maintained) kubernetes client", "file_num_lines": 208, "diff_parsed": {"added": [[26, "import io.fabric8.kubernetes.api.Kubernetes;"], [27, "import io.fabric8.kubernetes.api.model.Pod;"], [70, "    private transient Kubernetes connection;"], [112, "    public Kubernetes connect() {"], [121, "                connection = new KubernetesFactoryAdapter(serverUrl, serverCertificate, username, password)"], [122, "                        .createKubernetes();"], [140, ""], [141, "        /*"], [187, "        */"], [257, "                /*"], [312, "                                                       */"], [331, "        /*"], [346, "                                                         */"], [404, "                @QueryParameter String password, @QueryParameter String serverCertificate) throws URISyntaxException {"], [406, "            Kubernetes kube = new KubernetesFactoryAdapter(serverUrl.toExternalForm(), serverCertificate, username, password)"], [407, "                    .createKubernetes();"], [408, "            kube.getNodes();"], [416, "        return \"KubernetesCloud '\" + name + \"' serverUrl :\" + serverUrl;"]], "deleted": [[25, "import javax.ws.rs.ext.RuntimeDelegate;"], [30, "import org.apache.commons.lang3.StringUtils;"], [31, "import org.jboss.resteasy.spi.ResteasyProviderFactory;"], [35, "import com.github.kubernetes.java.client.exceptions.KubernetesClientException;"], [36, "import com.github.kubernetes.java.client.interfaces.KubernetesAPIClientInterface;"], [37, "import com.github.kubernetes.java.client.model.Container;"], [38, "import com.github.kubernetes.java.client.model.EnvironmentVariable;"], [39, "import com.github.kubernetes.java.client.model.Manifest;"], [40, "import com.github.kubernetes.java.client.model.Pod;"], [41, "import com.github.kubernetes.java.client.model.PodList;"], [42, "import com.github.kubernetes.java.client.model.State;"], [43, "import com.github.kubernetes.java.client.model.StateInfo;"], [44, "import com.github.kubernetes.java.client.v2.KubernetesApiClient;"], [45, "import com.github.kubernetes.java.client.v2.RestFactory;"], [46, "import com.google.common.base.MoreObjects;"], [83, "    private transient KubernetesAPIClientInterface connection;"], [125, "    public KubernetesAPIClientInterface connect() {"], [134, "                RestFactory factory = new RestFactory().classLoader(getClass().getClassLoader()).connectionPoolSize(10);"], [135, "                // we need the RestEasy implementation, not the Jersey one"], [136, "                // loaded by default from the thread classloader"], [137, "                RuntimeDelegate.setInstance(new ResteasyProviderFactory());"], [138, "                connection = new KubernetesApiClient(serverUrl.toString(), username, password, serverCertificate, factory);"], [324, ""], [357, ""], [415, "                @QueryParameter String password, @QueryParameter String serverCertificate) throws KubernetesClientException, URISyntaxException {"], [417, "            RestFactory factory = new RestFactory(KubernetesCloud.class.getClassLoader());"], [418, "            KubernetesAPIClientInterface client = new KubernetesApiClient(serverUrl.toString(),"], [419, "                    username, password, serverCertificate, factory);"], [420, "            client.getAllPods();"], [428, "        return MoreObjects.toStringHelper(this).add(\"name\", name).add(\"serverUrl\", serverUrl).toString();"]]}, "num_lines_added": 18, "num_lines_removed": 30}