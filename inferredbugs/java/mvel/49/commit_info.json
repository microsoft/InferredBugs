{"hash": "68d8244bcac094d2a1f44f88ebb08499ac694b6f", "message": "all fixed.", "file_num_lines": 448, "diff_parsed": {"added": [[39, " * The MVEL Template Interpreter.    All template expressions"], [432, "                        String[] names;"], [433, "                        String[] aliases;"], [437, "                            // create a clone of the context"], [438, "                            foreachContext = ((ForeachContext) currNode.getRegister()).clone();"], [439, "                            names = foreachContext.getNames();"], [440, "                            aliases = foreachContext.getAliases();"], [441, ""], [443, "                                Iterator[] iters = new Iterator[names.length];"], [444, "                                for (int i = 0; i < names.length; i++) {"], [446, "                                    Object listObject = new MVELInterpretedRuntime(names[i], ctx, tokens).parse();"], [450, ""], [451, ""], [452, "                                    iters[i] = ((Collection) listObject).iterator(); // this throws null pointer exception in thread race"], [455, "                                // set the newly created iterators into the context"], [457, ""], [458, "                                // push the context onto the local stack."], [462, "                                throw new CompileException(\"expression for collections does not return a collections object: \" + new String(getSegment(currNode)), e);"], [465, "                                throw new CompileException(\"null returned for foreach in expression: \" + (getForEachSegment(currNode)), e);"], [468, "                        else {"], [469, "                            foreachContext = (ForeachContext) localStack.peek();"], [470, "                      //      names = foreachContext.getNames();"], [471, "                            aliases = foreachContext.getAliases();"], [472, "                        }"], [475, ""], [484, "                                tokens.put(aliases[i], iters[i].next());"], [486, ""], [487, ""], [488, "                            int c;"], [489, "                            tokens.put(\"i0\", c = foreachContext.getCount());"], [490, ""], [491, "                            if (c != 0) {"], [495, "                            foreachContext.incrementCount();"], [499, "                                tokens.remove(aliases[i]);"], [501, "                     //       foreachContext.setIterators(null);"], [502, "                     //       foreachContext.setCount(0);"]], "deleted": [[39, " * The MVEL Template Interpreter.  Naming this an \"Interpreter\" is not inaccurate.   All template expressions"], [434, "                             foreachContext = ((ForeachContext) currNode.getRegister()).clone();"], [436, "                      //  if (foreachContext.getItererators() == null) {"], [438, "                                String[] lists = getForEachSegment(currNode).split(\",\");"], [439, "                                Iterator[] iters = new Iterator[lists.length];"], [440, "                                for (int i = 0; i < lists.length; i++) {"], [442, "                                    Object listObject = new MVELInterpretedRuntime(lists[i], ctx, tokens).parse();"], [446, "                                    iters[i] = ((Collection) listObject).iterator();"], [453, "                                throw new CompileException(\"expression for collections does not return a collections object: \" + new String(getSegment(currNode)));"], [456, "                                throw new CompileException(\"null returned for foreach in expression: \" + (getForEachSegment(currNode)));"], [459, ""], [460, "                        foreachContext = (ForeachContext) localStack.peek();"], [463, "                        String[] alias = currNode.getAlias().split(\",\");"], [464, "                        // must trim vars"], [465, "                        for (int i = 0; i < alias.length; i++) {"], [466, "                            alias[i] = alias[i].trim();"], [467, "                        }"], [476, "                                tokens.put(alias[i], iters[i].next());"], [478, "                            if (foreachContext.getCount() != 0) {"], [482, "                            tokens.put(\"i0\", foreachContext.getCount());"], [483, "                            foreachContext.setCount(foreachContext.getCount() + 1);"], [487, "                                tokens.remove(alias[i]);"], [489, "                            foreachContext.setIterators(null);"], [490, "                            foreachContext.setCount(0);"]]}, "num_lines_added": 36, "num_lines_removed": 24}