    protected ASTNode verify(ParserContext pCtx, ASTNode tk) {
        if (tk.isDiscard() || (tk.fields & (ASTNode.OPERATOR | ASTNode.LITERAL)) != 0) return tk;

        if (verifying) {
            if (tk.isAssignment()) {
                char[] assign = tk.getNameAsArray();
                int c = 0;
                while (c < assign.length && assign[c] != '=') c++;

                String varName = new String(assign, 0, c++).trim();

                if (isReservedWord(varName)) {
                    addFatalError("invalid assignment - variable name is a reserved keyword: " + varName);
                }

                ExpressionCompiler subCompiler =
                        new ExpressionCompiler(new String(assign, c, assign.length - c).trim());

                subCompiler._compile();

                pCtx.addVariable(varName, returnType = tk.getEgressType());
            }
            else if (tk.isIdentifier()) {
                PropertyVerifier propVerifier = new PropertyVerifier(tk.getNameAsArray(), getParserContext());
                pCtx.addInput(tk.getAbsoluteName(), returnType = propVerifier.analyze());

            }
        }
        return tk;
    }