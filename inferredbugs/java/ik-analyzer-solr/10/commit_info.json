{"hash": "e6817ecba5d540b4eb6f8dea3c269129b58d986f", "message": "Extract method from duplicate code", "file_num_lines": 197, "diff_parsed": {"added": [[2, " * IK \u4e2d\u6587\u5206\u8bcd  \u7248\u672c 8.2.0"], [3, " * IK Analyzer release 8.2.0"], [24, " * 8.2.0\u7248\u672c \u7531 Magese (magese@live.cn) \u66f4\u65b0"], [25, " * release 8.2.0 update by Magese(magese@live.cn)"], [236, "            readDict(is, _MainDict);"], [269, "                    readDict(is, _MainDict);"], [304, "                    readDict(is, _StopWordDict);"], [332, "            readDict(is, _QuantifierDict);"], [346, "    /**"], [347, "     * \u8bfb\u53d6\u8bcd\u5178\u6587\u4ef6\u5230\u8bcd\u5178\u6811\u4e2d"], [348, "     *"], [349, "     * @param is          \u6587\u4ef6\u8f93\u5165\u6d41"], [350, "     * @param dictSegment \u8bcd\u5178\u6811\u5206\u6bb5"], [351, "     * @throws IOException \u8bfb\u53d6\u5f02\u5e38"], [352, "     */"], [353, "    private void readDict(InputStream is, DictSegment dictSegment) throws IOException {"], [354, "        BufferedReader br = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8), 512);"], [355, "        String theWord;"], [356, "        do {"], [357, "            theWord = br.readLine();"], [358, "            if (theWord != null && !\"\".equals(theWord.trim())) {"], [359, "                dictSegment.fillSegment(theWord.trim().toLowerCase().toCharArray());"], [360, "            }"], [361, "        } while (theWord != null);"], [362, "    }"]], "deleted": [[2, " * IK \u4e2d\u6587\u5206\u8bcd  \u7248\u672c 8.1.1"], [3, " * IK Analyzer release 8.1.1"], [24, " * 8.1.1\u7248\u672c \u7531 Magese (magese@live.cn) \u66f4\u65b0"], [25, " * release 8.1.1 update by Magese(magese@live.cn)"], [236, "            BufferedReader br = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8), 512);"], [237, "            String theWord;"], [238, "            do {"], [239, "                theWord = br.readLine();"], [240, "                if (theWord != null && !\"\".equals(theWord.trim())) {"], [241, "                    _MainDict.fillSegment(theWord.trim().toLowerCase().toCharArray());"], [242, "                }"], [243, "            } while (theWord != null);"], [244, ""], [277, "                    BufferedReader br = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8), 512);"], [278, "                    String theWord;"], [279, "                    do {"], [280, "                        theWord = br.readLine();"], [281, "                        if (theWord != null && !\"\".equals(theWord.trim())) {"], [282, "                            // \u52a0\u8f7d\u6269\u5c55\u8bcd\u5178\u6570\u636e\u5230\u4e3b\u5185\u5b58\u8bcd\u5178\u4e2d"], [283, "                            // System.out.println(theWord);"], [284, "                            _MainDict.fillSegment(theWord.trim().toLowerCase().toCharArray());"], [285, "                        }"], [286, "                    } while (theWord != null);"], [287, ""], [322, "                    BufferedReader br = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8), 512);"], [323, "                    String theWord;"], [324, "                    do {"], [325, "                        theWord = br.readLine();"], [326, "                        if (theWord != null && !\"\".equals(theWord.trim())) {"], [327, "                            // System.out.println(theWord);"], [328, "                            // \u52a0\u8f7d\u6269\u5c55\u505c\u6b62\u8bcd\u5178\u6570\u636e\u5230\u5185\u5b58\u4e2d"], [329, "                            _StopWordDict.fillSegment(theWord.trim().toLowerCase().toCharArray());"], [330, "                        }"], [331, "                    } while (theWord != null);"], [332, ""], [360, "            BufferedReader br = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8), 512);"], [361, "            String theWord;"], [362, "            do {"], [363, "                theWord = br.readLine();"], [364, "                if (theWord != null && !\"\".equals(theWord.trim())) {"], [365, "                    _QuantifierDict.fillSegment(theWord.trim().toLowerCase().toCharArray());"], [366, "                }"], [367, "            } while (theWord != null);"], [368, ""]]}, "num_lines_added": 25, "num_lines_removed": 44}