{"hash": "ad88f96ad06b9e2856a91bc9ff316b37df250f78", "message": "Incoming error responses may now contain a CONTENT_TYPE option which is ignored (for compatibility reasons)", "file_num_lines": 191, "diff_parsed": {"added": [[8, "import de.uniluebeck.itm.spitfire.nCoap.message.header.MsgType;"], [96, "        CoapMessage coapMessage = (CoapMessage) me.getMessage();"], [97, "        if(coapMessage.getCode().isError() || coapMessage.getMessageType().equals(MsgType.RST)){"], [98, "            errorMessageReceived(ctx, me);"], [99, "            return;"], [100, "        }"], [101, ""], [105, "            final byte[] token = response.getToken();"], [107, "            BlockwiseTransfer transfer;"], [108, "            //Add latest received payload to already received payload"], [109, "            synchronized (incompleteResponseMonitor){"], [110, "                transfer = incompleteResponsePayload.get(new ByteArrayWrapper(token));"], [111, "                if(transfer != null){"], [117, "                            if (log.isDebugEnabled()){"], [118, "                                //Copy Payload"], [119, "                                ChannelBuffer payloadCopy = ChannelBuffers.copiedBuffer(response.getPayload());"], [120, "                                byte[] bytes = new byte[payloadCopy.readableBytes()];"], [121, "                                payloadCopy.getBytes(0, bytes);"], [122, "                                log.debug(\"Payload Hex: \" + new ByteArrayWrapper(bytes).toHexString());"], [123, "                            }"], [130, "                            log.debug(\"Received unexpected response (Token: \" + (new ByteArrayWrapper(token).toHexString()) +"], [131, "                                   \" , Block: \" + response.getBlockNumber(BLOCK_2) + \"). IGNORE!\");"], [140, "            }"], [142, "            //Check whether payload of the response is complete"], [143, "            if(transfer != null){"], [210, "                catch (ToManyOptionsException e){"], [212, "                }"], [213, "                catch (InvalidHeaderException e) {"], [219, "        ctx.sendUpstream(me);"], [222, "    private void errorMessageReceived(ChannelHandlerContext ctx, MessageEvent me){"], [223, "        CoapMessage coapMessage = (CoapMessage) me.getMessage();"], [224, "        synchronized (incompleteResponseMonitor){"], [225, "            incompleteResponsePayload.remove(coapMessage.getToken());"], [226, "        }"], [227, "        ctx.sendUpstream(me);"], [228, "    }"]], "deleted": [[98, "            if(response.getMaxBlocksizeForResponse() != null){"], [99, "                final byte[] token = response.getToken();"], [100, ""], [101, "                //Add latest received payload to already received payload"], [102, "                BlockwiseTransfer transfer;"], [103, "                synchronized (incompleteResponseMonitor){"], [104, "                    transfer = incompleteResponsePayload.get(new ByteArrayWrapper(token));"], [111, "                            //Copy Payload"], [112, "                            ChannelBuffer payloadCopy = ChannelBuffers.copiedBuffer(response.getPayload());"], [113, "                            byte[] bytes = new byte[payloadCopy.readableBytes()];"], [114, "                            payloadCopy.getBytes(0, bytes);"], [115, "                            log.debug(\"Payload Hex: \" + new ByteArrayWrapper(bytes).toHexString());"], [116, "                            //**********************************************"], [123, "                            log.debug(\"Received duplicate response (Token: \" + (new ByteArrayWrapper(token).toHexString()) +"], [124, "                                    \" , Block: \" + response.getBlockNumber(BLOCK_2) + \"). IGNORE!\");"], [125, ""], [135, "                //Check whether payload of the response is complete"], [160, "                        //End the original ChannelFuture"], [161, "                        me.getFuture().isSuccess();"], [204, "                catch (ToManyOptionsException e) {"], [206, "                } catch (InvalidHeaderException e) {"], [210, "            ctx.sendUpstream(me);"]]}, "num_lines_added": 36, "num_lines_removed": 22}