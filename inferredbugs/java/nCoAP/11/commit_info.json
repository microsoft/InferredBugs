{"hash": "6e2c0a7fcee7658cb610b2ca32040dcd915a2125", "message": "Bugfix for immediate ACK", "file_num_lines": 39, "diff_parsed": {"added": [[31, "//    private boolean receiveEnabled = true;"], [35, "        receivedResponses.put(System.currentTimeMillis(), coapResponse);"], [40, "        if(!emptyAckNotificationTimes.add(System.currentTimeMillis())){"], [47, "        if(!timeoutNotificationTimes.add(System.currentTimeMillis())){"], [64, ""], [65, "//    public synchronized void setReceiveEnabled(boolean receiveEnabled) {"], [66, "//        this.receiveEnabled = receiveEnabled;"]], "deleted": [[24, "    //private static CoapTestClient instance = new CoapTestClient();"], [32, "    private boolean receiveEnabled = true;"], [34, "//    public static CoapTestClient getInstance(){"], [35, "//        return instance;"], [36, "//    }"], [37, "//"], [38, "//    private CoapTestClient(){}"], [39, ""], [42, "        if (receiveEnabled)  {"], [43, "            receivedResponses.put(System.currentTimeMillis(), coapResponse);"], [44, "        }"], [49, "        if(receiveEnabled && !emptyAckNotificationTimes.add(System.currentTimeMillis())){"], [56, "        if(receiveEnabled && !timeoutNotificationTimes.add(System.currentTimeMillis())){"], [73, "//    public void reset() {"], [74, "//        receivedResponses.clear();"], [75, "//        setReceiveEnabled(true);"], [76, "//"], [77, "//        //CoapExecutorService.cancelAll();"], [78, "//"], [79, "//        datagramChannel.close().awaitUninterruptibly();"], [80, "////        datagramChannel.getFactory().releaseExternalResources();"], [81, "//        CoapClientDatagramChannelFactory.resetInstance();"], [82, "//        datagramChannel = CoapClientDatagramChannelFactory.getInstance().getChannel();"], [83, "//"], [85, ""], [86, "    public synchronized void setReceiveEnabled(boolean receiveEnabled) {"], [87, "        this.receiveEnabled = receiveEnabled;"], [88, "    }"]]}, "num_lines_added": 7, "num_lines_removed": 28}