{"hash": "6359a2fc16c60aa104431a499f0b35e1951ce31a", "message": "stage and model packages code clean up", "file_num_lines": 84, "diff_parsed": {"added": [[14, "import com.linkedin.clustermanager.pipeline.StageException;"], [17, " * This stage computes all the resources in a cluster. The resources are computed from"], [18, " * IdealStates -> this gives all the resources currently active CurrentState for"], [19, " * liveInstance-> Helps in finding resources that are inactive and needs to be dropped"], [26, "  private static Logger logger = Logger.getLogger(ResourceComputationStage.class);"], [32, "    if (cache == null)"], [33, "    {"], [34, "      throw new StageException(\"Missing attributes in event:\" + event"], [35, "          + \". Requires DataCache\");"], [36, "    }"], [37, ""], [40, "    Map<String, ResourceGroup> resourceGroupMap ="], [41, "        new LinkedHashMap<String, ResourceGroup>();"], [47, "        Set<String> resourceSet = idealState.getResourceKeySet();"], [48, "        String resourceGroupName = idealState.getResourceGroup();"], [50, "        for (String resourceKey : resourceSet)"], [51, "        {"], [52, "          addResource(resourceKey, resourceGroupName, resourceGroupMap);"], [53, "          ResourceGroup resourceGroup = resourceGroupMap.get(resourceGroupName);"], [54, "          resourceGroup.setStateModelDefRef(idealState.getStateModelDefRef());"], [55, "        }"], [59, ""], [71, "        Map<String, CurrentState> currentStateMap ="], [72, "            cache.getCurrentState(instanceName, clientSessionId);"], [85, "            ResourceGroup resourceGroup = resourceGroupMap.get(resourceGroupName);"], [91, "    event.addAttribute(AttributeName.RESOURCE_GROUPS.toString(), resourceGroupMap);"], [94, "  private void addResource(String resourceKey,"], [95, "                           String resourceGroupName,"], [96, "                           Map<String, ResourceGroup> resourceGroupMap)"], [98, "    if (resourceGroupName == null || resourceKey == null || resourceGroupMap == null)"], [104, "      resourceGroupMap.put(resourceGroupName, new ResourceGroup(resourceGroupName));"]], "deleted": [[16, " * This stage computes all the resources in a cluster. The resources are"], [17, " * computed from IdealStates -> this gives all the resources currently active"], [18, " * CurrentState for liveInstance-> Helps in finding resources that are inactive"], [19, " * and needs to be dropped"], [26, "  private static Logger logger = Logger"], [27, "      .getLogger(ResourceComputationStage.class);"], [35, "    Map<String, ResourceGroup> resourceGroupMap = new LinkedHashMap<String, ResourceGroup>();"], [41, "      \tSet<String> resourceSet = idealState.getResourceKeySet();"], [42, "      \tString resourceGroupName = idealState.getResourceGroup();"], [44, "          for (String resourceKey : resourceSet)"], [45, "          {"], [46, "            addResource(resourceKey, resourceGroupName, resourceGroupMap);"], [47, "            ResourceGroup resourceGroup = resourceGroupMap"], [48, "                .get(resourceGroupName);"], [49, "            resourceGroup.setStateModelDefRef(idealState.getStateModelDefRef());"], [50, "          }"], [65, "        Map<String, CurrentState> currentStateMap = cache.getCurrentState(instanceName, clientSessionId);"], [78, "            ResourceGroup resourceGroup = resourceGroupMap"], [79, "                .get(resourceGroupName);"], [85, "    event.addAttribute(AttributeName.RESOURCE_GROUPS.toString(),"], [86, "        resourceGroupMap);"], [89, "  private void addResource(String resourceKey, String resourceGroupName,"], [90, "      Map<String, ResourceGroup> resourceGroupMap)"], [92, "    if (resourceGroupName == null || resourceKey == null"], [93, "        || resourceGroupMap == null)"], [99, "      resourceGroupMap.put(resourceGroupName, new ResourceGroup("], [100, "          resourceGroupName));"]]}, "num_lines_added": 31, "num_lines_removed": 27}