{"hash": "2b569db89fc6f1da1199fb5e981ad08b379ff787", "message": "Refactor ZkClient methods to simplify monitoring configures when create a client.\n\nAdditional change:\n1. Refine monitor class to reduce unnecessary MBean attributes for ZkClient.\n2. Apply new monitor framework to MessageLatencyMonitor.\n3. Fix a MBeanRegistrar bug, MBean should be registered according to the specified path in order.", "file_num_lines": 240, "diff_parsed": {"added": [[147, "    ZkClient.Builder builder = new ZkClient.Builder();"], [148, "    builder.setZkServer(ZK_ADDR).setMonitorKey(TEST_KEY).setMonitorType(TEST_TAG)"], [149, "        .setMonitorRootPathOnly(false);"], [150, "    ZkClient zkClient = builder.build();"], [180, "    Assert.assertEquals((long) beanServer.getAttribute(rootname, \"ReadLatencyGauge.Max\"), 0);"], [184, "    Assert.assertTrue((long) beanServer.getAttribute(rootname, \"ReadLatencyGauge.Max\") >= 0);"], [192, "    Assert.assertEquals((long) beanServer.getAttribute(rootname, \"WriteLatencyGauge.Max\"), 0);"], [195, "    Assert.assertEquals((long) beanServer.getAttribute(idealStatename, \"WriteLatencyGauge.Max\"), 0);"], [206, "    Assert.assertTrue((long) beanServer.getAttribute(rootname, \"WriteLatencyGauge.Max\") >= 0);"], [210, "    Assert.assertTrue((long) beanServer.getAttribute(idealStatename, \"WriteLatencyGauge.Max\") >= 0);"], [222, "    Assert.assertEquals((long) beanServer.getAttribute(idealStatename, \"ReadLatencyGauge.Max\"), 0);"], [234, "    Assert.assertTrue((long) beanServer.getAttribute(idealStatename, \"ReadLatencyGauge.Max\") >= 0);"]], "deleted": [[147, "    ZkClient zkClient = new ZkClient(ZK_ADDR, TEST_TAG, TEST_KEY);"], [177, "    Assert.assertEquals((long) beanServer.getAttribute(rootname, \"ReadMaxLatencyGauge\"), 0);"], [181, "    Assert.assertTrue((long) beanServer.getAttribute(rootname, \"ReadMaxLatencyGauge\") >= 0);"], [189, "    Assert.assertEquals((long) beanServer.getAttribute(rootname, \"WriteMaxLatencyGauge\"), 0);"], [192, "    Assert.assertEquals((long) beanServer.getAttribute(idealStatename, \"WriteMaxLatencyGauge\"), 0);"], [203, "    Assert.assertTrue((long) beanServer.getAttribute(rootname, \"WriteMaxLatencyGauge\") >= 0);"], [207, "    Assert.assertTrue((long) beanServer.getAttribute(idealStatename, \"WriteMaxLatencyGauge\") >= 0);"], [219, "    Assert.assertEquals((long) beanServer.getAttribute(idealStatename, \"ReadMaxLatencyGauge\"), 0);"], [231, "    Assert.assertTrue((long) beanServer.getAttribute(idealStatename, \"ReadMaxLatencyGauge\") >= 0);"]]}, "num_lines_added": 12, "num_lines_removed": 9}