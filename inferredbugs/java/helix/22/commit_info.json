{"hash": "e690aff80eae7120a7392e430ce3b9e9c83a1a49", "message": "Add flapping detection logic in ZkStateChangeListener. Each\nzkHelixManager will disconnect itself if flapping is detected (become\ndisconnected for X times in previous Y time window)", "file_num_lines": 928, "diff_parsed": {"added": [[120, "  int                                          _flappingTimeWindowMs;"], [121, "  int                                          _maxDisconnectThreshold;"], [122, "  public static final int                     FLAPPING_TIME_WINDIOW   = 300000; // Default to 300 sec"], [123, "  public static final int                     MAX_DISCONNECT_THRESHOLD = 5;"], [133, "    _flappingTimeWindowMs = FLAPPING_TIME_WINDIOW;"], [134, "    try"], [135, "    {"], [136, "      _flappingTimeWindowMs ="], [137, "          Integer.parseInt(System.getProperty(\"helixmanager.flappingTimeWindow\", \"\""], [138, "              + FLAPPING_TIME_WINDIOW));"], [139, "    }"], [140, "    catch (NumberFormatException e)"], [141, "    {"], [142, "      logger.warn(\"Exception while parsing helixmanager.flappingTimeWindow: \""], [143, "          + System.getProperty(\"helixmanager.flappingTimeWindow\", \"\" + FLAPPING_TIME_WINDIOW));"], [144, "    }"], [145, "    _maxDisconnectThreshold = MAX_DISCONNECT_THRESHOLD;"], [146, "    try"], [147, "    {"], [148, "      _maxDisconnectThreshold ="], [149, "          Integer.parseInt(System.getProperty(\"helixmanager.maxDisconnectThreshold\", \"\""], [150, "              + MAX_DISCONNECT_THRESHOLD));"], [151, "    }"], [152, "    catch (NumberFormatException e)"], [153, "    {"], [154, "      logger.warn(\"Exception while parsing helixmanager.flappingTimeWindow: \""], [155, "          + System.getProperty(\"helixmanager.maxDisconnectThreshold\", \"\" + MAX_DISCONNECT_THRESHOLD));"], [156, "    }"], [161, "          Integer.parseInt(System.getProperty(\"helixmanager.flappingTimeWindow\", \"\""], [162, "              + DEFAULT_SESSION_TIMEOUT));"], [163, "    }"], [164, "    catch (NumberFormatException e)"], [165, "    {"], [166, "      logger.warn(\"Exception while parsing session timeout: \""], [167, "          + System.getProperty(\"zk.session.timeout\", \"\" + DEFAULT_SESSION_TIMEOUT));"], [168, "    }"], [169, "    try"], [170, "    {"], [171, "      sessionTimeoutInt ="], [172, "          Integer.parseInt(System.getProperty(\"zk.session.timeout\", \"\""], [173, "              + DEFAULT_SESSION_TIMEOUT));"], [174, "    }"], [175, "    catch (NumberFormatException e)"], [176, "    {"], [177, "      logger.warn(\"Exception while parsing session timeout: \""], [178, "          + System.getProperty(\"zk.session.timeout\", \"\" + DEFAULT_SESSION_TIMEOUT));"], [179, "    }"], [180, "    try"], [181, "    {"], [182, "      sessionTimeoutInt ="], [220, "    _zkStateChangeListener = new ZkStateChangeListener(this, _flappingTimeWindowMs, _maxDisconnectThreshold);"], [458, "      logger.error(\"ClusterManager \" + _instanceName + \" already disconnected\");"], [461, "    disconnectInternal();"], [462, "  }"], [463, ""], [464, "  void disconnectInternal()"], [465, "  {"], [466, "    // This function can be called when the connection are in bad state(e.g. flapping),"], [467, "    // in which isConnected() could be false and we want to disconnect from cluster."], [509, ""]], "deleted": [[170, "    _zkStateChangeListener = new ZkStateChangeListener(this);"], [406, ""], [409, "      logger.warn(\"ClusterManager \" + _instanceName + \" already disconnected\");"], [412, ""]]}, "num_lines_added": 60, "num_lines_removed": 4}