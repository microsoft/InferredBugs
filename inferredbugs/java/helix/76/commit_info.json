{"hash": "5d8f6969bce65916341c5e5610b1ca5d4606619e", "message": "Add new constructors and close() to Helix API (#601)\n\nIn order to allow users to avoid having to create, manage, and close a HelixZkClient instance when using Helix data access APIs, we add new constructors and close() methods. The new constructors will allow for instantiation purely based on a ZkAddress, and internally, either Shared or Dedicated HelixZkClient will be used.\r\n\r\nAlso, the close() method ensures that we only close if we generated a ZkClient internally. External ZkClients, we can't close arbitrarily because they could be used in other active Helix APIs.", "file_num_lines": 633, "diff_parsed": {"added": [[72, "  private HelixZkClient _zkClient = null;"], [118, "    _zkClient = SharedZkClientFactory.getInstance()"], [121, "    _zkClient.waitUntilConnected(HelixZkClient.DEFAULT_CONNECTION_TIMEOUT, TimeUnit.MILLISECONDS);"], [122, "    _baseAccessor = new ZkBaseDataAccessor<>(_zkClient);"], [789, "      if (_zkClient != null) {"], [790, "        _zkClient.close();"], [791, "        _zkClient = null;"], [826, "    if (_zkClient != null) {"], [827, "      _zkClient.close();"]], "deleted": [[72, "  private HelixZkClient _zkclient = null;"], [118, "    _zkclient = SharedZkClientFactory.getInstance()"], [121, "    _zkclient.waitUntilConnected(HelixZkClient.DEFAULT_CONNECTION_TIMEOUT, TimeUnit.MILLISECONDS);"], [122, "    _baseAccessor = new ZkBaseDataAccessor<>(_zkclient);"], [789, "      if (_zkclient != null) {"], [790, "        _zkclient.close();"], [791, "        _zkclient = null;"], [826, "    if (_zkclient != null) {"], [827, "      _zkclient.close();"]]}, "num_lines_added": 9, "num_lines_removed": 9}