{"hash": "1ec3ac65ada7801ceb62900a30dcbd66a8f82037", "message": "HELIX-41: fix intermittent test failures", "file_num_lines": 232, "diff_parsed": {"added": [[249, "\t  Map<String, Set<String>> listenerMap = getListenersByZkPath(zkAddr);"], [250, "\t  if (listenerMap.containsKey(path)) {"], [251, "\t\t  return listenerMap.get(path).size();"], [252, "\t  }"], [253, "\t  return 0;"], [263, "  public static Map<String, Set<String>> getListenersByZkPath(String zkAddr) throws Exception"], [309, "\t  Map<String, Set<String>> listenerMapByInstance = getListenersByZkPath(zkAddr);"]], "deleted": [[249, "    int count = 0;"], [250, "    String splits[] = zkAddr.split(\":\");"], [251, "    Socket sock = new Socket(splits[0], Integer.parseInt(splits[1]));"], [252, "    PrintWriter out = new PrintWriter(sock.getOutputStream(), true);"], [253, "    BufferedReader in = new BufferedReader(new InputStreamReader(sock.getInputStream()));"], [254, ""], [255, "    out.println(\"wchp\");"], [256, ""], [257, "    String line = in.readLine();"], [258, "    while (line != null)"], [259, "    {"], [260, "      // System.out.println(line);"], [261, "      if (line.equals(path))"], [262, "      {"], [263, "        // System.out.println(\"match: \" + line);"], [264, ""], [265, "        String nextLine = in.readLine();"], [266, "        if (nextLine == null)"], [267, "        {"], [268, "          break;"], [269, "        }"], [270, "        // System.out.println(nextLine);"], [271, "        while (nextLine.startsWith(\"\\t0x\"))"], [272, "        {"], [273, "          count++;"], [274, "          nextLine = in.readLine();"], [275, "          if (nextLine == null)"], [276, "          {"], [277, "            break;"], [278, "          }"], [279, "        }"], [280, "      }"], [281, "      line = in.readLine();"], [282, "    }"], [283, "    sock.close();"], [284, "    return count;"], [291, "   * @param path"], [295, "  public static Map<String, Set<String>> getListenersByInstance(String zkAddr) throws Exception"], [341, "\t  Map<String, Set<String>> listenerMapByInstance = getListenersByInstance(zkAddr);"]]}, "num_lines_added": 7, "num_lines_removed": 39}