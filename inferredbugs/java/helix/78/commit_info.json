{"hash": "b63a895e7bea6445a9547355ccf324e9bd6b203b", "message": "Make WagedRebalancer static by creating a ThreadLocal (#540)\n\nZKBucketDataAccessor has a GC logic, but this is only valid if the ZkClient inside it is active and not closed. Currently, WAGED rebalancer generates an instance of AssignmentMetadataStore every time it rebalances, which does not allow the internal ZkBucketDataAccessor to garbage collect the assignment metadata it wrote previously.\r\n\r\nThis diff makes the entire WagedRebalancer object a ThreadLocal, which has the effect of making it essentially static across different runs of the pipeline.", "file_num_lines": 379, "diff_parsed": {"added": [[70, "  // Create a ThreadLocal of MetricCollector. Metrics could only be updated by the controller thread"], [71, "  // only."], [72, "  private static final ThreadLocal<MetricCollector> METRIC_COLLECTOR_THREAD_LOCAL ="], [73, "      new ThreadLocal<>();"], [74, "  private static final ThreadLocal<WagedRebalancer> WAGED_REBALANCER_THREAD_LOCAL ="], [75, "      new ThreadLocal<>();"], [268, "    // Create MetricCollector ThreadLocal if it hasn't been already initialized"], [286, "    // Create MetricCollector ThreadLocal if it hasn't been already initialized"], [287, "    if (WAGED_REBALANCER_THREAD_LOCAL.get() == null) {"], [288, "      WAGED_REBALANCER_THREAD_LOCAL"], [289, "          .set(new WagedRebalancer(helixManager, preferences, METRIC_COLLECTOR_THREAD_LOCAL.get()));"], [290, "    }"], [291, "    WagedRebalancer wagedRebalancer = WAGED_REBALANCER_THREAD_LOCAL.get();"], [292, ""], [306, ""]], "deleted": [[70, "  // Create a ThreadLocal of MetricCollector. Metrics could only be updated by the controller thread only."], [71, "  private static final ThreadLocal<MetricCollector> METRIC_COLLECTOR_THREAD_LOCAL = new ThreadLocal<>();"], [281, "    // TODO avoid creating the rebalancer on every rebalance call for performance enhancement"], [282, "    WagedRebalancer wagedRebalancer ="], [283, "        new WagedRebalancer(helixManager, preferences, METRIC_COLLECTOR_THREAD_LOCAL.get());"], [296, "    } finally {"], [297, "      wagedRebalancer.close();"]]}, "num_lines_added": 15, "num_lines_removed": 7}