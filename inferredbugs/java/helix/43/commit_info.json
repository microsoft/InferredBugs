{"hash": "8c0905166c327d89b3e63d2d15c71dde7f2cfdcb", "message": "Persist assignment map using specific format for MasterSlave resources (This is a short-term solution, we should get rid of this asap).", "file_num_lines": 105, "diff_parsed": {"added": [[22, "import java.util.Collections;"], [23, "import java.util.HashMap;"], [24, "import java.util.List;"], [31, "import org.apache.helix.model.BuiltInStateModelDefinitions;"], [34, "import org.apache.helix.model.MasterSlaveSMD;"], [56, "      BestPossibleStateOutput bestPossibleAssignments ="], [60, "      for (String resourceId : bestPossibleAssignments.resourceSet()) {"], [64, "          Map<Partition, Map<String, String>> bestPossibleAssignment ="], [65, "              bestPossibleAssignments.getResourceMap(resourceId);"], [77, ""], [78, "          //TODO: temporary solution for Espresso/Dbus backcompatible, should remove this."], [79, "          Map<Partition, Map<String, String>> assignmentToPersist ="], [80, "              convertAssignmentPersisted(resource, idealState, bestPossibleAssignment);"], [81, ""], [83, "            Map<String, String> instanceMap = assignmentToPersist.get(partition);"], [96, "            for (Partition partition : assignmentToPersist.keySet()) {"], [97, "              Map<String, String> instanceMap = assignmentToPersist.get(partition);"], [109, ""], [110, "  /**"], [111, "   * TODO: This is a temporary hacky for back-compatible support of Espresso and Databus,"], [112, "   * we should get rid of this conversion as soon as possible."], [113, "   * --- Lei, 2016/9/9."], [114, "   */"], [115, "  private Map<Partition, Map<String, String>> convertAssignmentPersisted(Resource resource,"], [116, "      IdealState idealState, Map<Partition, Map<String, String>> bestPossibleAssignment) {"], [117, "    String stateModelDef = idealState.getStateModelDefRef();"], [118, "    /** Only convert for MasterSlave resources */"], [119, "    if (!stateModelDef.equals(BuiltInStateModelDefinitions.MasterSlave.name())) {"], [120, "      return bestPossibleAssignment;"], [121, "    }"], [122, ""], [123, "    Map<Partition, Map<String, String>> assignmentToPersist ="], [124, "        new HashMap<Partition, Map<String, String>>();"], [125, ""], [126, "    for (Partition partition : resource.getPartitions()) {"], [127, "      Map<String, String> instanceMap = new HashMap<String, String>();"], [128, "      instanceMap.putAll(bestPossibleAssignment.get(partition));"], [129, ""], [130, "      List<String> preferenceList = idealState.getPreferenceList(partition.getPartitionName());"], [131, "      boolean hasMaster = false;"], [132, "      for (String ins : preferenceList) {"], [133, "        String state = instanceMap.get(ins);"], [134, "        if (state == null || (!state.equals(MasterSlaveSMD.States.SLAVE.name()) && !state"], [135, "            .equals(MasterSlaveSMD.States.MASTER.name()))) {"], [136, "          instanceMap.put(ins, MasterSlaveSMD.States.SLAVE.name());"], [137, "        }"], [138, ""], [139, "        if (state != null && state.equals(MasterSlaveSMD.States.MASTER.name())) {"], [140, "          hasMaster = true;"], [141, "        }"], [142, "      }"], [143, ""], [144, "      // if no master, just pick the first node in the preference list as the master."], [145, "      if (!hasMaster) {"], [146, "        instanceMap.put(preferenceList.get(0), MasterSlaveSMD.States.MASTER.name());"], [147, "      }"], [148, ""], [149, "      assignmentToPersist.put(partition, instanceMap);"], [150, "    }"], [151, ""], [152, "    return assignmentToPersist;"], [153, "  }"]], "deleted": [[24, "import org.apache.helix.HelixConstants;"], [27, "import org.apache.helix.HelixProperty;"], [53, "      BestPossibleStateOutput assignments ="], [57, "      for (String resourceId : assignments.resourceSet()) {"], [61, "          Map<Partition, Map<String, String>> assignment = assignments.getResourceMap(resourceId);"], [74, "            Map<String, String> instanceMap = assignment.get(partition);"], [87, "            for (Partition partition : assignment.keySet()) {"], [88, "              Map<String, String> instanceMap = assignment.get(partition);"]]}, "num_lines_added": 62, "num_lines_removed": 8}