{"hash": "e6bb213e6cc0e92a775c946b8dd4b4b5c71b1a6f", "message": "Helix CurrentState change for monitoring\n\nTry to monitor the application availability, Helix shall provide metric to track missing top states for resource level.\nDesign wiki : https://iwww.corp.linkedin.com/wiki/cf/display/ENGS/Helix+Monitoring+Metrics#HelixMonitoringMetrics-MetricsforMissingTopState\n\nFor the latest update of design, it is better to have three new fields to report the state transitions: START_TIME, END_TIME and PREVIOUS STATE.", "file_num_lines": 124, "diff_parsed": {"added": [[46, "    RESOURCE,"], [47, "    START_TIME,"], [48, "    END_TIME,"], [49, "    PREVIOUS_STATE // ,"], [87, "        map.put(partitionName, tempMap.get(CurrentStateProperty.CURRENT_STATE.name()));"], [98, "    return _record.getSimpleField(CurrentStateProperty.SESSION_ID.name());"], [106, "    _record.setSimpleField(CurrentStateProperty.SESSION_ID.name(), sessionId);"], [115, "    return getProperty(partitionName, CurrentStateProperty.CURRENT_STATE);"], [119, "    return getProperty(partitionName, CurrentStateProperty.INFO);"], [123, "    return getProperty(partitionName, CurrentStateProperty.REQUESTED_STATE);"], [124, "  }"], [125, ""], [126, "  public long getStartTime(String partitionName) {"], [127, "    String startTime = getProperty(partitionName, CurrentStateProperty.START_TIME);"], [128, "    return startTime == null ? -1L : Long.parseLong(startTime);"], [129, "  }"], [130, ""], [131, "  public long getEndTime(String partitionName) {"], [132, "    String endTime = getProperty(partitionName, CurrentStateProperty.END_TIME);"], [133, "    return endTime == null ? -1L : Long.parseLong(endTime);"], [134, "  }"], [135, ""], [136, "  public String getPreviousState(String partitionName) {"], [137, "    return getProperty(partitionName, CurrentStateProperty.PREVIOUS_STATE);"], [138, "  }"], [139, ""], [140, "  private String getProperty(String partitionName, CurrentStateProperty property) {"], [141, "    Map<String, String> mapField = _record.getMapField(partitionName);"], [143, "      return mapField.get(property.name());"], [153, "    _record.setSimpleField(CurrentStateProperty.STATE_MODEL_DEF.name(), stateModelName);"], [161, "    return _record.getSimpleField(CurrentStateProperty.STATE_MODEL_DEF.name());"], [170, "    setProperty(partitionName, CurrentStateProperty.CURRENT_STATE, state);"], [174, "    setProperty(partitionName, CurrentStateProperty.INFO, info);"], [178, "    setProperty(partitionName, CurrentStateProperty.REQUESTED_STATE, state);"], [179, "  }"], [180, ""], [181, "  public void setStartTime(String partitionName, long startTime) {"], [182, "    setProperty(partitionName, CurrentStateProperty.START_TIME, String.valueOf(startTime));"], [183, "  }"], [184, ""], [185, "  public void setEndTime(String partitionName, long endTime) {"], [186, "    setProperty(partitionName, CurrentStateProperty.END_TIME, String.valueOf(endTime));"], [187, "  }"], [188, ""], [189, "  public void setPreviousState(String partitionName, String state) {"], [190, "    setProperty(partitionName, CurrentStateProperty.PREVIOUS_STATE, state);"], [191, "  }"], [192, ""], [193, "  private void setProperty(String partitionName, CurrentStateProperty property, String value) {"], [198, "    mapFields.get(partitionName).put(property.name(), value);"], [206, "    _record.setSimpleField(CurrentStateProperty.STATE_MODEL_FACTORY_NAME.name(), factoryName);"], [214, "    return _record.getSimpleField(CurrentStateProperty.STATE_MODEL_FACTORY_NAME.name());"]], "deleted": [[46, "    RESOURCE // ,"], [84, "        map.put(partitionName, tempMap.get(CurrentStateProperty.CURRENT_STATE.toString()));"], [95, "    return _record.getSimpleField(CurrentStateProperty.SESSION_ID.toString());"], [103, "    _record.setSimpleField(CurrentStateProperty.SESSION_ID.toString(), sessionId);"], [112, "    Map<String, Map<String, String>> mapFields = _record.getMapFields();"], [113, "    Map<String, String> mapField = mapFields.get(partitionName);"], [114, "    if (mapField != null) {"], [115, "      return mapField.get(CurrentStateProperty.CURRENT_STATE.toString());"], [116, "    }"], [117, "    return null;"], [121, "    Map<String, Map<String, String>> mapFields = _record.getMapFields();"], [122, "    Map<String, String> mapField = mapFields.get(partitionName);"], [123, "    if (mapField != null) {"], [124, "      return mapField.get(CurrentStateProperty.INFO.name());"], [125, "    }"], [126, "    return null;"], [130, "    Map<String, Map<String, String>> mapFields = _record.getMapFields();"], [131, "    Map<String, String> mapField = mapFields.get(partitionName);"], [133, "      return mapField.get(CurrentStateProperty.REQUESTED_STATE.name());"], [143, "    _record.setSimpleField(CurrentStateProperty.STATE_MODEL_DEF.toString(), stateModelName);"], [151, "    return _record.getSimpleField(CurrentStateProperty.STATE_MODEL_DEF.toString());"], [160, "    Map<String, Map<String, String>> mapFields = _record.getMapFields();"], [161, "    if (mapFields.get(partitionName) == null) {"], [162, "      mapFields.put(partitionName, new TreeMap<String, String>());"], [163, "    }"], [164, "    mapFields.get(partitionName).put(CurrentStateProperty.CURRENT_STATE.toString(), state);"], [168, "    Map<String, Map<String, String>> mapFields = _record.getMapFields();"], [169, "    if (mapFields.get(partitionName) == null) {"], [170, "      mapFields.put(partitionName, new TreeMap<String, String>());"], [171, "    }"], [172, "    mapFields.get(partitionName).put(CurrentStateProperty.INFO.name(), info);"], [180, "    mapFields.get(partitionName).put(CurrentStateProperty.REQUESTED_STATE.name(), state);"], [188, "    _record.setSimpleField(CurrentStateProperty.STATE_MODEL_FACTORY_NAME.toString(), factoryName);"], [196, "    return _record.getSimpleField(CurrentStateProperty.STATE_MODEL_FACTORY_NAME.toString());"]]}, "num_lines_added": 52, "num_lines_removed": 34}