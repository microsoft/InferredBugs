{"hash": "d94886dfbb426a95ac96244eaff91d66eb824ca6", "message": "Can provide a stop word list as a stream\n\nIt can be very handy when the file is in a jar\n(See eg: http://stackoverflow.com/a/3370096/1796345)", "file_num_lines": 786, "diff_parsed": {"added": [[70, "\t\tthis(fileToInputStream(stoplistFile), encoding, includeDefault, caseSensitive, markDeletions);"], [71, "\t}"], [72, ""], [73, "\tprivate static InputStream fileToInputStream(File file)"], [74, "\t{"], [75, "\t\ttry {"], [76, "\t\t\treturn new FileInputStream(file);"], [77, "\t\t} catch (IOException e){"], [78, "\t\t\tthrow new IllegalArgumentException(\"Trouble reading file \"+file);"], [79, "\t\t}"], [80, "\t}"], [81, ""], [82, "\tpublic TokenSequenceRemoveStopwords(InputStream stoplistStream, String encoding, boolean includeDefault,"], [83, "\t\t\t\t\t\t\t\t\t\tboolean caseSensitive, boolean markDeletions) {"], [87, "\t\ttry {"], [88, "\t\t\taddStopWords (streamToStringArray(stoplistStream, encoding));"], [89, "\t\t} catch (IOException e) {"], [90, "\t\t\tthrow new IllegalArgumentException(\"Can't read stopWord stream\");"], [91, "\t\t}"], [94, "\t\tthis.markDeletions = markDeletions;"], [142, "\t\t\treturn streamToStringArray(new FileInputStream(f), encoding);"], [147, ""], [148, "\tprivate String[] streamToStringArray(InputStream stream, String encoding) throws IOException"], [149, "\t{"], [150, "\t\tArrayList<String> wordarray = new ArrayList<String>();"], [151, "\t\tBufferedReader input;"], [152, "\t\tif ( encoding == null ){"], [153, "\t\t\tinput = new BufferedReader( new InputStreamReader( stream ));"], [154, "\t\t} else {"], [155, "\t\t\tinput = new BufferedReader( new InputStreamReader( stream, encoding ));"], [156, "\t\t}"], [157, "\t\tString line;"], [158, ""], [159, "\t\twhile (( line = input.readLine()) != null) {"], [160, "\t\t\tString[] words = line.split (\"\\\\s+\");"], [161, "\t\t\tfor (int i = 0; i < words.length; i++)"], [162, "\t\t\t\twordarray.add (words[i]);"], [163, "\t\t}"], [164, "\t\treturn wordarray.toArray(new String[]{});"], [165, "\t}"], [166, ""], [167, ""]], "deleted": [[73, "\t\taddStopWords (fileToStringArray(stoplistFile, encoding));"], [76, "        this.markDeletions = markDeletions;"], [121, ""], [124, "\t\tArrayList<String> wordarray = new ArrayList<String>();"], [125, ""], [127, ""], [128, "\t\t\tBufferedReader input = null;"], [129, "\t\t\tif (encoding == null) {"], [130, "\t\t\t\tinput = new BufferedReader (new FileReader (f));"], [131, "\t\t\t}"], [132, "\t\t\telse {"], [133, "\t\t\t\tinput = new BufferedReader( new InputStreamReader( new FileInputStream(f), encoding ));"], [134, "\t\t\t}"], [135, "\t\t\tString line;"], [136, ""], [137, "\t\t\twhile (( line = input.readLine()) != null) {"], [138, "\t\t\t\tString[] words = line.split (\"\\\\s+\");"], [139, "\t\t\t\tfor (int i = 0; i < words.length; i++)"], [140, "\t\t\t\t\twordarray.add (words[i]);"], [141, "\t\t\t}"], [142, ""], [146, "\t\treturn (String[]) wordarray.toArray(new String[]{});"], [148, ""]]}, "num_lines_added": 42, "num_lines_removed": 23}