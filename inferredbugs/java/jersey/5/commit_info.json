{"hash": "fb806515e791e12a12f8c724224cbda93f40ac70", "message": "Make Kryo use setRegistrationRequired(true) by default\n\nSigned-off-by: jansupol <jan.supol@oracle.com>", "file_num_lines": 90, "diff_parsed": {"added": [[2, " * Copyright (c) 2015, 2020 Oracle and/or its affiliates. All rights reserved."], [24, "import java.util.Optional;"], [29, "import javax.ws.rs.core.Configuration;"], [30, "import javax.ws.rs.core.Context;"], [33, "import javax.ws.rs.ext.ContextResolver;"], [37, "import javax.ws.rs.ext.Providers;"], [47, " * The KryoMessageBodyProvider expects a {@code ContextResolver<Kryo>} registered."], [55, "    private final ContextResolver<Kryo> contextResolver;"], [56, "    private final Optional<KryoPool> kryoPool;"], [58, "    public KryoMessageBodyProvider(@Context Providers providers) {"], [59, "        final MediaType mediaType = new MediaType(\"application\", \"x-kryo\");"], [60, "        contextResolver = providers.getContextResolver(Kryo.class, mediaType);"], [61, "        kryoPool = getKryoPool();"], [62, "    }"], [63, ""], [64, "    private Kryo getKryo() {"], [65, "        return contextResolver != null ? contextResolver.getContext(null) : null;"], [66, "    }"], [67, ""], [68, "    private Optional<KryoPool> getKryoPool() {"], [69, "        final Kryo kryo = getKryo();"], [75, "        return kryo == null ? Optional.empty() : Optional.of(new KryoPool.Builder(kryoFactory).softReferences().build());"], [91, "        return kryoPool != null;"], [100, "        kryoPool.ifPresent(a -> a.run(new KryoCallback() {"], [105, "        }));"], [116, "        return kryoPool != null;"], [126, "        return kryoPool.map(pool -> pool.run(new KryoCallback() {"], [130, "        })).orElse(null);"]], "deleted": [[2, " * Copyright (c) 2015, 2019 Oracle and/or its affiliates. All rights reserved."], [49, "    private final KryoPool kryoPool;"], [51, "    public KryoMessageBodyProvider() {"], [54, "                final Kryo kryo = new Kryo();"], [55, "                //TODO: configure kryo instance, customize settings"], [56, "                //TODO: e.g. looking for Kryo via ContextResolver (like Jackson)"], [60, "        kryoPool = new KryoPool.Builder(kryoFactory).softReferences().build();"], [76, "        return true;"], [85, "        kryoPool.run(new KryoCallback() {"], [90, "        });"], [101, "        return true;"], [111, "        return kryoPool.run(new KryoCallback() {"], [115, "        });"]]}, "num_lines_added": 28, "num_lines_removed": 13}