{"hash": "c7f41f57ed347655db57e4fadca18db141b73cc0", "message": "DATACOUCH-574 - Support countBy...() query method calls in repository.", "file_num_lines": 124, "diff_parsed": {"added": [[72, "\tString clusterGet(String methodName, String defaultValue) {"], [85, "\t\treturn clusterGet(\"connectionString\", connectionString);"], [90, "\t\treturn clusterGet(\"username\", username);"], [95, "\t\treturn clusterGet(\"password\", password);"], [100, "\t\treturn clusterGet(\"bucketName\", bucketname);"], [116, "\t\t\t// comment out references to 'protected' and 'mybucket' - they are only to show how multi-bucket would work"], [117, "\t\t\t// ReactiveCouchbaseTemplate personTemplate ="], [118, "\t\t\t// myReactiveCouchbaseTemplate(myCouchbaseClientFactory(\"protected\"),new MappingCouchbaseConverter());"], [119, "\t\t\t// baseMapping.mapEntity(Person.class, personTemplate); // Person goes in \"protected\" bucket"], [120, "\t\t\t// ReactiveCouchbaseTemplate userTemplate = myReactiveCouchbaseTemplate(myCouchbaseClientFactory(\"mybucket\"),new"], [121, "\t\t\t// MappingCouchbaseConverter());"], [122, "\t\t\t// baseMapping.mapEntity(User.class, userTemplate); // User goes in \"mybucket\""], [123, "\t\t\t// everything else goes in getBucketName() ( which is travel-sample )"], [128, ""], [132, "\t\t\t// comment out references to 'protected' and 'mybucket' - they are only to show how multi-bucket would work"], [133, "\t\t\t// CouchbaseTemplate personTemplate = myCouchbaseTemplate(myCouchbaseClientFactory(\"protected\"),new"], [134, "\t\t\t// MappingCouchbaseConverter());"], [135, "\t\t\t// baseMapping.mapEntity(Person.class, personTemplate); // Person goes in \"protected\" bucket"], [136, "\t\t\t// CouchbaseTemplate userTemplate = myCouchbaseTemplate(myCouchbaseClientFactory(\"mybucket\"),new"], [137, "\t\t\t// MappingCouchbaseConverter());"], [138, "\t\t\t// baseMapping.mapEntity(User.class, userTemplate); // User goes in \"mybucket\""], [139, "\t\t\t// everything else goes in getBucketName() ( which is travel-sample )"], [162, "\t\treturn new SimpleCouchbaseClientFactory(getConnectionString(), authenticator(), bucketName);"]], "deleted": [[72, "\tString clusterGet( String methodName, String defaultValue){"], [85, "\t\treturn clusterGet( \"connectionString\", connectionString );"], [90, "\t\treturn clusterGet( \"username\", username );"], [95, "\t\treturn clusterGet( \"password\", password );"], [100, "\t\treturn clusterGet( \"bucketName\", bucketname );"], [116, "\t\t\tReactiveCouchbaseTemplate personTemplate = myReactiveCouchbaseTemplate(myCouchbaseClientFactory(\"protected\"),new MappingCouchbaseConverter());"], [117, "\t\t\tbaseMapping.mapEntity(Person.class,\tpersonTemplate); // Person goes in \"protected\" bucket"], [118, "\t\t\tReactiveCouchbaseTemplate userTemplate = myReactiveCouchbaseTemplate(myCouchbaseClientFactory(\"mybucket\"),new MappingCouchbaseConverter());"], [119, "\t\t\tbaseMapping.mapEntity(User.class,\tuserTemplate); // User goes in \"mybucket\""], [120, "\t\t\t// everything else goes in getBucketName() (  which is travel-sample )"], [128, "\t\t\tCouchbaseTemplate personTemplate = myCouchbaseTemplate(myCouchbaseClientFactory(\"protected\"),new MappingCouchbaseConverter());"], [129, "\t\t\tbaseMapping.mapEntity(Person.class,\tpersonTemplate); // Person goes in \"protected\" bucket"], [130, "\t\t\tCouchbaseTemplate userTemplate = myCouchbaseTemplate(myCouchbaseClientFactory(\"mybucket\"),new MappingCouchbaseConverter());"], [131, "\t\t\tbaseMapping.mapEntity(User.class,\tuserTemplate); // User goes in \"mybucket\""], [132, "\t\t\t// everything else goes in getBucketName() (  which is travel-sample )"], [155, "\t\treturn new SimpleCouchbaseClientFactory(getConnectionString(),authenticator(), bucketName );"]]}, "num_lines_added": 23, "num_lines_removed": 16}