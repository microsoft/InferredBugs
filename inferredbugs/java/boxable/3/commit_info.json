{"hash": "ff55ce383dc2518e5ccf9e0e60a9c7a79f2ea4d2", "message": "feat(template)", "file_num_lines": 266, "diff_parsed": {"added": [[12, "import org.apache.pdfbox.pdmodel.font.PDTrueTypeFont;"], [25, "import static com.google.common.base.Preconditions.checkNotNull;"], [26, ""], [27, "public abstract class Table<T extends PDPage> {"], [34, ""], [35, "    private T currentPage;"], [36, "    private PDPageContentStream tableContentStream;"], [40, "    private static final int xSpacing  = 7;"], [44, "    private final float yStartNewPage;"], [46, "    private final float bottomMargin;"], [47, "    private final float topMargin = 10;"], [48, "    private final float width;"], [52, "    public Table(float yStart,float yStartNewPage, float bottomMargin, float width, float margin, PDDocument document, T currentPage, boolean drawLines, boolean drawContent) throws IOException {"], [57, "        this.yStartNewPage = yStartNewPage;"], [58, "        this.margin = margin;"], [59, "        this.width = width;"], [60, "        this.yStart = yStart + topMargin;"], [61, "        this.bottomMargin = bottomMargin;"], [62, "        this.currentPage = currentPage;"], [63, "        loadFonts();"], [64, "        this.yStart = yStart;"], [65, "        this.tableContentStream = createPdPageContentStream();"], [66, "    }"], [68, "    public Table(float yStartNewPage, float bottomMargin, float width, float margin, PDDocument document, boolean drawLines, boolean drawContent) throws IOException {"], [69, "        this.document = document;"], [70, "        this.drawLines = drawLines;"], [71, "        this.drawContent = drawContent;"], [72, "        //Initialize table"], [73, "        this.yStartNewPage = yStartNewPage;"], [76, "        this.bottomMargin = bottomMargin;"], [77, ""], [78, "        // Fonts needs to be loaded before page creation"], [79, "        loadFonts();"], [80, "        this.currentPage = createPage();"], [81, "        this.tableContentStream = createPdPageContentStream();"], [82, "    }"], [83, ""], [84, "    protected abstract void loadFonts() throws IOException ;"], [85, ""], [86, "    protected PDTrueTypeFont loadFont(String fontPath) throws IOException {"], [87, "        return BoxableUtils.loadFont(getDocument(),fontPath);"], [88, "    }"], [89, ""], [90, "    protected PDDocument getDocument() {"], [91, "        return document;"], [99, "        PDPageContentStream articleTitle = createPdPageContentStream();"], [172, "        if (isEndOfPage(row)) {"], [177, "            // Reset yStart to yStartNewPage"], [178, "            this.yStart = yStartNewPage;"], [179, ""], [180, ""], [181, "            //Start new table on new page"], [182, "            this.currentPage = createPage();"], [183, "            this.tableContentStream = createPdPageContentStream();"], [193, ""], [194, "        if (drawLines) {"], [195, "            drawVerticalLines(row);"], [196, "        }"], [197, ""], [198, ""], [199, "        if (drawContent) {"], [200, "            drawCellContent(row);"], [201, "        }"], [202, ""], [205, "    private PDPageContentStream createPdPageContentStream() throws IOException {"], [206, "        LOGGER.info(\"createPdPageContentStream\");"], [207, "        return new PDPageContentStream(getDocument(), getCurrentPage(), true, true);"], [226, "            this.tableContentStream.setFont(cell.getFont(), cell.getFontSize());"], [227, "            this.tableContentStream.setNonStrokingColor(cell.getTextColor());"], [229, "            this.tableContentStream.beginText();"], [230, "            this.tableContentStream.moveTextPositionByAmount(nextX, nextY);"], [233, "            this.tableContentStream.appendRawCommands(cell.getParagraph().getFontHeight() + \" TL\\n\");"], [238, "                this.tableContentStream.drawString(line.trim());"], [239, "                if (numLines > 0) this.tableContentStream.appendRawCommands(\"T*\\n\");"], [243, "            //this.tableContentStream.drawString(cell.getText());"], [244, "            this.tableContentStream.endText();"], [245, "            this.tableContentStream.closeSubPath();"], [255, "        // give an extra margin to the latest cell"], [256, "        float xEnd = row.xEnd() + xSpacing;"], [257, ""], [259, "        drawLine(\"Row Upper Border \", xStart, yStart, xEnd, yStart);"], [278, ""], [279, "        drawLine(\"Last Cell \",xEnd , yStart, xEnd, yEnd);"], [284, "        this.tableContentStream.setNonStrokingColor(Color.BLACK);"], [285, "        this.tableContentStream.setStrokingColor(Color.BLACK);"], [288, "        this.tableContentStream.drawLine(xStart, yStart, xEnd, yEnd);"], [289, "        this.tableContentStream.closeSubPath();"], [295, "            this.tableContentStream.setNonStrokingColor(cell.getFillColor());"], [303, "            this.tableContentStream.fillRect(xStart, yStart, width + xSpacing, height);"], [304, "            this.tableContentStream.closeSubPath();"], [307, "            this.tableContentStream.setNonStrokingColor(Color.BLACK);"], [321, "    protected abstract T createPage();"], [327, "            drawLine(\"Row Bottom Border \", this.margin, this.yStart, this.margin + width + xSpacing, this.yStart);"], [329, "        this.tableContentStream.close();"], [332, "    public T getCurrentPage() {"], [333, "        checkNotNull(this.currentPage, \"No current page defined.\");"], [337, "    public boolean isEndOfPage(Row row) {"], [339, "        float currentY = yStart - row.getHeight();"], [340, "        boolean isEndOfPage = currentY  <= (bottomMargin + 10);"], [372, ""], [373, "    protected void setYStart(float yStart) {"], [374, "        this.yStart = yStart;"], [375, "    }"]], "deleted": [[24, "public class Table {"], [31, "    private PDPage currentPage;"], [32, "    private PDPageContentStream contentStream;"], [39, "    private float tableWidth;"], [40, "    private float top;"], [42, "    private float width;"], [46, "    public Table(float top, float width, float margin, PDDocument document, PDPage currentPage, boolean drawLines, boolean drawContent) throws IOException {"], [48, "        this.currentPage = currentPage;"], [51, "        this.contentStream = getPdPageContentStream();"], [52, ""], [54, "        this.top = top;"], [56, "        initializeTable();"], [66, "        PDPageContentStream articleTitle = new PDPageContentStream(this.document, this.currentPage, true, true);"], [98, "    private void initializeTable() {"], [99, "        this.tableWidth = this.currentPage.findMediaBox().getWidth() - (2 * this.margin);"], [100, "        this.yStart = top - (1 * 20f);"], [101, "    }"], [102, ""], [143, "        if (drawLines) {"], [144, "            drawVerticalLines(row);"], [145, "        }"], [146, ""], [147, ""], [148, "        if (drawContent) {"], [149, "            drawCellContent(row);"], [150, "        }"], [152, "        if (isEndOfPage()) {"], [157, "            //Start new table on new currentPage"], [158, "            this.currentPage = addNewPage();"], [159, "            this.contentStream = getPdPageContentStream();"], [160, "            initializeTable();"], [172, "    private PDPageContentStream getPdPageContentStream() throws IOException {"], [173, "        LOGGER.info(\"getPdPageContentStream\");"], [174, "        return new PDPageContentStream(this.document, this.currentPage, true, true);"], [193, "            this.contentStream.setFont(cell.getFont(), cell.getFontSize());"], [194, "            this.contentStream.setNonStrokingColor(cell.getTextColor());"], [196, "            this.contentStream.beginText();"], [197, "            this.contentStream.moveTextPositionByAmount(nextX, nextY);"], [200, "            this.contentStream.appendRawCommands(cell.getParagraph().getFontHeight() + \" TL\\n\");"], [205, "                this.contentStream.drawString(line.trim());"], [206, "                if (numLines > 0) this.contentStream.appendRawCommands(\"T*\\n\");"], [210, "            //this.contentStream.drawString(cell.getText());"], [211, "            this.contentStream.endText();"], [212, "            this.contentStream.closeSubPath();"], [223, "        drawLine(\"Row Upper Border \", xStart, yStart, row.xEnd(), yStart);"], [242, "        drawLine(\"Last Cell \", row.xEnd(), yStart, row.xEnd(), yEnd);"], [247, "        this.contentStream.setNonStrokingColor(Color.BLACK);"], [248, "        this.contentStream.setStrokingColor(Color.BLACK);"], [251, "        this.contentStream.drawLine(xStart, yStart, xEnd, yEnd);"], [252, "        this.contentStream.closeSubPath();"], [258, "            this.contentStream.setNonStrokingColor(cell.getFillColor());"], [266, "            this.contentStream.fillRect(xStart, yStart, width, height);"], [267, "            this.contentStream.closeSubPath();"], [270, "            this.contentStream.setNonStrokingColor(Color.BLACK);"], [284, "    private PDPage addNewPage() {"], [285, "        PDPage page = new PDPage();"], [286, "        this.document.addPage(page);"], [287, "        return page;"], [288, "    }"], [289, ""], [295, "            drawLine(\"Row Bottom Border \", this.margin, this.yStart, this.margin + width, this.yStart);"], [297, "        this.contentStream.close();"], [300, "    public PDPage getCurrentPage() {"], [304, "    public boolean isEndOfPage() {"], [306, "        boolean isEndOfPage = yStart <= 75;"]]}, "num_lines_added": 103, "num_lines_removed": 65}