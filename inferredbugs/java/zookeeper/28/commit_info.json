{"hash": "e936eceb9e75aee9f2cd245b9cc7709a2e7b4ded", "message": "ZOOKEEPER-407. address all findbugs warnings in org.apache.zookeeper.server.quorum.** packages.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/zookeeper/trunk@776826 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 349, "diff_parsed": {"added": [[164, "        \t    SendWorker vsw = senderWorkerMap.get(sid);"], [165, "        \t    if(vsw != null)"], [166, "        \t        vsw.finish();"], [167, "        \t    else LOG.error(\"No SendWorker for this identifier (\" + sid + \")\");"], [231, "        \t    SendWorker vsw = senderWorkerMap.get(sid);"], [232, "        \t    if(vsw != null)"], [233, "        \t        vsw.finish();"], [234, "        \t    else LOG.error(\"No SendWorker for this identifier (\" + sid + \")\");"], [275, "                    ArrayBlockingQueue<ByteBuffer> bq = new ArrayBlockingQueue<ByteBuffer>("], [276, "                            CAPACITY);"], [277, "                    queueSendMap.put(sid, bq);"], [278, "                    bq.put(b);"], [281, "                    ArrayBlockingQueue<ByteBuffer> bq = queueSendMap.get(sid);"], [282, "                    if(bq != null){"], [283, "                        if (bq.remainingCapacity() == 0) {"], [284, "                            bq.take();"], [285, "                        }"], [286, "                        bq.put(b);"], [287, "                    } else {"], [288, "                        LOG.error(\"No queue for server \" + sid);"], [457, "                    ArrayBlockingQueue<ByteBuffer> bq = queueSendMap.get(sid);"], [458, "                    if(bq != null)"], [459, "                        b = bq.take();"], [460, "                    else {"], [461, "                        LOG.error(\"No queue of incoming messages for server \" + sid);"], [462, "                        this.finish();"], [463, "                    }"], [492, "                        ArrayBlockingQueue<ByteBuffer> bq = queueSendMap.get(sid);"], [493, "                        if(bq != null){"], [494, "                            if (bq.size() == 0)"], [495, "                                bq.offer(b);"], [496, "                        } else LOG.error(\"No queue for server \" + sid);"]], "deleted": [[126, "        listener.start();"], [165, "        \t\tsenderWorkerMap.get(sid).finish();"], [229, "        \t\tsenderWorkerMap.get(sid).finish();"], [270, "                    queueSendMap.put(sid, new ArrayBlockingQueue<ByteBuffer>("], [271, "                            CAPACITY));"], [272, "                    queueSendMap.get(sid).put(b);"], [275, "                    if (queueSendMap.get(sid).remainingCapacity() == 0) {"], [276, "                        queueSendMap.get(sid).take();"], [278, "                    queueSendMap.get(sid).put(b);"], [446, "                    b = queueSendMap.get(sid).take();"], [475, ""], [476, "                        if (queueSendMap.get(sid)"], [477, "                                    .size() == 0)"], [478, "                            queueSendMap.get(sid)"], [479, "                                    .offer(b);"]]}, "num_lines_added": 32, "num_lines_removed": 15}