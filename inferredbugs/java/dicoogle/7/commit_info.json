{"hash": "2a8c21133064c2cafd3270a396754e39d459cf12", "message": "updated logging\nimproved filewriting on UserFileHandle", "file_num_lines": 100, "diff_parsed": {"added": [[21, "import org.slf4j.Logger;"], [22, "import org.slf4j.LoggerFactory;"], [23, "import pt.ua.dicoogle.sdk.Utils.Platform;"], [24, ""], [25, "import javax.crypto.*;"], [26, "import java.io.*;"], [27, "import java.nio.file.Files;"], [28, "import java.nio.file.Paths;"], [29, "import java.nio.file.StandardCopyOption;"], [36, " * This class provides encryption to the file that saves users information"], [37, " * Uses the AES algorithm with 128 bit key"], [43, "    private static Logger logger = LoggerFactory.getLogger(UserFileHandle.class);"], [44, ""], [45, "    private String filenamePath;"], [54, "        filename = \"users.xml\";"], [55, "        filenamePath = Platform.homePath() + filename;"], [59, "            if (encrypt) {"], [82, "            logger.error(ex.getMessage(), ex);"], [89, "     *"], [92, "    public void printFile(byte[] bytes) throws IOException {"], [93, "        if (encrypt) {"], [94, "            byte[] encryptedBytes = new byte[0];"], [95, ""], [96, "            try {"], [97, "                cipher.init(Cipher.ENCRYPT_MODE, key);"], [98, ""], [99, "                encryptedBytes = cipher.doFinal(bytes);"], [100, "            } catch (BadPaddingException e) {"], [101, "                logger.error(\"Invalid Key to decrypt users file.\", e);"], [102, "            } catch (IllegalBlockSizeException e) {"], [103, "                logger.error(\"Users file \\\"{}\\\" is corrupted.\", filename, e);"], [104, "            } catch (InvalidKeyException e) {"], [105, "                logger.error(\"Invalid Key to decrypt users file.\", e);"], [106, "            }"], [108, "            printFileAux(encryptedBytes);"], [109, "        } else {"], [110, "            printFileAux(bytes);"], [114, "    /**"], [115, "     * Retrieve the contents of the users configuration file."], [116, "     *"], [123, "                 ByteArrayOutputStream out = new ByteArrayOutputStream()) {"], [132, "                if (encrypt) {"], [137, ""], [141, "            logger.info(\"No such users file \\\"{}\\\", will create one with default settings.\", filename);"], [143, "            logger.error(\"Users file \\\"{}\\\" is corrupted, will override it with default settings.\", filename, ex);"], [145, "            logger.error(\"Invalid Key to decrypt users file! Please contact your system administator.\");"], [147, "        } catch (BadPaddingException ex) {"], [148, "            logger.error(\"Invalid Key to decrypt users file! Please contact your system administator.\");"], [153, ""], [154, "    private void printFileAux(byte[] bytes) throws IOException {"], [155, "        try (InputStream in = new ByteArrayInputStream(bytes)) {"], [156, "            Files.copy(in, Paths.get(filename), StandardCopyOption.REPLACE_EXISTING);"], [157, "        }"], [158, "    }"]], "deleted": [[21, "import java.io.ByteArrayInputStream;"], [22, "import java.io.ByteArrayOutputStream;"], [23, "import java.io.FileInputStream;"], [24, "import java.io.FileNotFoundException;"], [25, "import java.io.FileOutputStream;"], [26, "import java.io.IOException;"], [27, "import java.io.InputStream;"], [28, "import java.io.ObjectInputStream;"], [29, "import java.io.ObjectOutputStream;"], [35, "import javax.crypto.BadPaddingException;"], [36, "import javax.crypto.Cipher;"], [37, "import javax.crypto.IllegalBlockSizeException;"], [38, "import javax.crypto.KeyGenerator;"], [39, "import javax.crypto.NoSuchPaddingException;"], [40, "import org.slf4j.LoggerFactory;"], [41, ""], [42, "import pt.ua.dicoogle.core.settings.ServerSettingsManager;"], [43, "import pt.ua.dicoogle.sdk.Utils.Platform;"], [44, ""], [46, " * This class provides encryptation to the file that saves users information"], [47, " * Uses the AES algorithim with 128 bit key"], [61, "        filename = Platform.homePath() + \"users.xml\";"], [65, "            if(encrypt){"], [88, "            LoggerFactory.getLogger(UserFileHandle.class).error(ex.getMessage(), ex);"], [97, "    public void printFile(byte[] bytes) throws Exception {"], [98, "        InputStream in;"], [99, ""], [100, "        if(encrypt){"], [101, "            cipher.init(Cipher.ENCRYPT_MODE, key);"], [102, ""], [103, "            byte[] encryptedBytes = cipher.doFinal(bytes);"], [104, "            in = new ByteArrayInputStream(encryptedBytes);"], [105, "        }"], [106, "        else"], [107, "            in = new ByteArrayInputStream(bytes);"], [108, ""], [109, "        FileOutputStream out = new FileOutputStream(filename);"], [110, ""], [112, "        byte[] input = new byte[1024];"], [113, "        int bytesRead;"], [114, "        while ((bytesRead = in.read(input)) != -1) {"], [115, "            out.write(input, 0, bytesRead);"], [116, "            out.flush();"], [118, ""], [119, "        out.close();"], [120, "        in.close();"], [123, "    /** Retrieve the contents of the users configuration file."], [130, "                    ByteArrayOutputStream out = new ByteArrayOutputStream()) {"], [139, "                if(encrypt){"], [144, ""], [148, "            LoggerFactory.getLogger(UserFileHandle.class).info(\"No such users file \\\"{}\\\", will create one with default settings.\", filename);"], [150, "            LoggerFactory.getLogger(UserFileHandle.class).error(\"Users file \\\"{}\\\" is corrupted, will override it with default settings.\", filename, ex);"], [152, "            LoggerFactory.getLogger(UserFileHandle.class).error(\"Invalid Key to decrypt users file! Please contact your system administator.\");"], [154, "        }"], [155, "        catch(BadPaddingException ex){"], [156, "            LoggerFactory.getLogger(UserFileHandle.class).error(\"Invalid Key to decrypt users file! Please contact your system administator.\");"]]}, "num_lines_added": 54, "num_lines_removed": 56}