{"hash": "b635741cf224b806bae462a738bec2328e170e93", "message": "added post/get capabilities for RDF access", "file_num_lines": 329, "diff_parsed": {"added": [[16, "import java.io.*;"], [17, "import java.net.HttpURLConnection;"], [80, ""], [87, "            InputStream inputStream = getInputStream(url, props);"], [103, "    private InputStream getInputStream(@Name(\"url\") String url, @Name(\"props\") Map<String, Object> props) throws IOException {"], [104, "        URLConnection urlConn;"], [105, "        //This should be delegated to APOC to do handle different protocols, deal with redirection, etc."], [106, "        urlConn = new URL(url).openConnection();"], [107, "        if (props.containsKey(\"headerParams\")) {"], [108, "            Map<String, String> headerParams = (Map<String, String>) props.get(\"headerParams\");"], [109, "            Object method = headerParams.get(\"method\");"], [110, "            if (method != null && urlConn instanceof HttpURLConnection) {"], [111, "                HttpURLConnection http = (HttpURLConnection) urlConn;"], [112, "                http.setRequestMethod(method.toString());"], [113, "            }"], [114, "            headerParams.forEach( (k,v) -> urlConn.setRequestProperty(k,v));"], [115, "            if (props.containsKey(\"payload\")){"], [116, "                urlConn.setDoOutput(true);"], [117, "                BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(urlConn.getOutputStream(),\"UTF-8\"));"], [118, "                writer.write(props.get(\"payload\").toString());"], [119, "                writer.close();"], [120, "            }"], [121, "        }"], [122, "        return urlConn.getInputStream();"], [123, "    }"], [124, ""], [169, ""], [170, "            InputStream inputStream = getInputStream(url, props);"], [194, ""], [195, "            InputStream inputStream = getInputStream(url, props);"]], "deleted": [[16, "import java.io.ByteArrayInputStream;"], [17, "import java.io.IOException;"], [18, "import java.io.InputStream;"], [81, "        URLConnection urlConn;"], [88, "            urlConn = new URL(url).openConnection();"], [89, "            if (props.containsKey(\"headerParams\")) {"], [90, "                ((Map<String, String>) props.get(\"headerParams\")).forEach( (k,v) -> urlConn.setRequestProperty(k,v));"], [91, "            }"], [92, "            InputStream inputStream = urlConn.getInputStream();"], [144, "        URLConnection urlConn;"], [153, "            urlConn = new URL(url).openConnection();"], [154, "            if (props.containsKey(\"headerParams\")) {"], [155, "                ((Map<String, String>) props.get(\"headerParams\")).forEach( (k,v) -> urlConn.setRequestProperty(k,v));"], [156, "            }"], [157, "            InputStream inputStream = urlConn.getInputStream();"], [179, "        URLConnection urlConn;"], [180, ""], [183, "            urlConn = new URL(url).openConnection();"], [184, "            if (props.containsKey(\"headerParams\")) {"], [185, "                ((Map<String, String>) props.get(\"headerParams\")).forEach( (k,v) -> urlConn.setRequestProperty(k,v));"], [186, "            }"], [187, "            InputStream inputStream = urlConn.getInputStream();"]]}, "num_lines_added": 30, "num_lines_removed": 22}