{"hash": "d88295d35bfe279a596c4273bfeca33982fc54e8", "message": "refactor and clean RDFImport", "file_num_lines": 479, "diff_parsed": {"added": [[13, "import java.nio.charset.StandardCharsets;"], [19, "import java.util.Map.Entry;"], [51, " * Created by jbarrasa on 21/03/2016. <p> RDF importer based on: 1. Instances of DatatypeProperties"], [76, "  private static RDFFormat[] availableParsers = new RDFFormat[]{RDFFormat.RDFXML, RDFFormat.JSONLD,"], [189, "      headerParams.forEach(urlConn::setRequestProperty);"], [193, "            new OutputStreamWriter(urlConn.getOutputStream(), StandardCharsets.UTF_8));"], [398, "      for (String s : valuesAsArray) {"], [399, "        Matcher m = LANGUAGE_TAGGED_VALUE_PATTERN.matcher(s);"], [421, "        for (Entry<String, Object> kv : namespaces.entrySet()) {"], [439, "        for (Entry<String, Object> kv : namespaces.entrySet()) {"], [481, "    if (missing(indexes.iterator())) {"], [487, "  private boolean missing(Iterator<IndexDefinition> iterator) {"], [490, "      if (indexDef.getLabel().name().equals(\"Resource\") &&"]], "deleted": [[49, " * Created by jbarrasa on 21/03/2016. <p> RDF importer based on: 1. Instancdes of DatatypeProperties"], [74, "  public static RDFFormat[] availableParsers = new RDFFormat[]{RDFFormat.RDFXML, RDFFormat.JSONLD,"], [187, "      headerParams.forEach((k, v) -> urlConn.setRequestProperty(k, v));"], [191, "            new OutputStreamWriter(urlConn.getOutputStream(), \"UTF-8\"));"], [396, "      for (int i = 0; i < valuesAsArray.length; i++) {"], [397, "        Matcher m = LANGUAGE_TAGGED_VALUE_PATTERN.matcher(valuesAsArray[i]);"], [419, "        Iterator<Map.Entry<String, Object>> nsIterator = namespaces.entrySet().iterator();"], [420, "        while (nsIterator.hasNext()) {"], [421, "          Map.Entry<String, Object> kv = nsIterator.next();"], [439, "        Iterator<Map.Entry<String, Object>> nsIterator = namespaces.entrySet().iterator();"], [440, "        while (nsIterator.hasNext()) {"], [441, "          Map.Entry<String, Object> kv = nsIterator.next();"], [483, "    if (missing(indexes.iterator(), \"Resource\")) {"], [489, "  private boolean missing(Iterator<IndexDefinition> iterator, String indexLabel) {"], [492, "      if (indexDef.getLabel().name().equals(indexLabel) &&"]]}, "num_lines_added": 13, "num_lines_removed": 15}