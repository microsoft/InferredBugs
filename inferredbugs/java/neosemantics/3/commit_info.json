{"hash": "a66f655d95540402dd57f8e86cf122a6690bbbcd", "message": "refactored RDFParser creation and run in all SP", "file_num_lines": 474, "diff_parsed": {"added": [[27, "import org.eclipse.rdf4j.rio.RDFHandler;"], [71, "  private static final boolean DEFAULT_TYPES_TO_LABELS = true;"], [72, "  private static final boolean DEFAULT_KEEP_CUSTOM_DATA_TYPES = false;"], [73, "  private static final long DEFAULT_COMMIT_SIZE = 25000;"], [74, "  private static final long DEFAULT_NODE_CACHE_SIZE = 10000;"], [86, "  public static RDFFormat[] availableParsers = new RDFFormat[]{RDFFormat.RDFXML, RDFFormat.JSONLD,"], [87, "      RDFFormat.TURTLE,"], [88, "      RDFFormat.NTRIPLES, RDFFormat.TRIG};"], [138, "      parseRDF(getInputStream(url, props), url, format, verifyUriSyntax, statementLoader);"], [151, "  private void parseRDF(InputStream inputStream, @Name(\"url\") String url, @Name(\"format\") String format,"], [152, "      boolean verifyUriSyntax, RDFHandler statementLoader)"], [153, "      throws IOException, RDFImportPreRequisitesNotMet {"], [154, "    RDFParser rdfParser = Rio.createParser(getFormat(format));"], [155, "    rdfParser.set(BasicParserSettings.VERIFY_URI_SYNTAX, verifyUriSyntax);"], [156, "    rdfParser.setRDFHandler(statementLoader);"], [157, "    rdfParser.parse(inputStream, url);"], [158, "  }"], [159, ""], [245, "      parseRDF(getInputStream(url, props), url, format, verifyUriSyntax, statementViewer);"], [266, "      parseRDF(getInputStream(url, props), url, format, verifyUriSyntax, statementStreamer);"], [317, "      parseRDF(new ByteArrayInputStream("], [318, "          rdfFragment.getBytes(Charset.defaultCharset())), \"http://neo4j.com/base/\", format, verifyUriSyntax, statementViewer);"]], "deleted": [[57, "  private static final boolean DEFAULT_TYPES_TO_LABELS = true;"], [58, ""], [59, "  private static final boolean DEFAULT_KEEP_CUSTOM_DATA_TYPES = false;"], [60, ""], [61, "  private static final long DEFAULT_COMMIT_SIZE = 25000;"], [62, "  private static final long DEFAULT_NODE_CACHE_SIZE = 10000;"], [72, ""], [77, ""], [78, ""], [90, ""], [96, "  public static RDFFormat[] availableParsers = new RDFFormat[]{RDFFormat.RDFXML, RDFFormat.JSONLD,"], [97, "      RDFFormat.TURTLE,"], [98, "      RDFFormat.NTRIPLES, RDFFormat.TRIG};"], [99, ""], [144, ""], [145, "      InputStream inputStream = getInputStream(url, props);"], [146, "      RDFParser rdfParser = Rio.createParser(getFormat(format));"], [147, "      rdfParser.set(BasicParserSettings.VERIFY_URI_SYNTAX, verifyUriSyntax);"], [148, "      rdfParser.setRDFHandler(statementLoader);"], [149, "      rdfParser.parse(inputStream, url);"], [247, ""], [248, "      InputStream inputStream = getInputStream(url, props);"], [249, "      RDFFormat rdfFormat = getFormat(format);"], [250, "      log.info(\"Data set to be parsed as \" + rdfFormat);"], [251, "      RDFParser rdfParser = Rio.createParser(rdfFormat);"], [252, "      rdfParser.set(BasicParserSettings.VERIFY_URI_SYNTAX, verifyUriSyntax);"], [253, "      rdfParser.setRDFHandler(statementViewer);"], [254, "      rdfParser.parse(inputStream, \"http://neo4j.com/base/\");"], [275, ""], [276, "      InputStream inputStream = getInputStream(url, props);"], [277, "      RDFFormat rdfFormat = getFormat(format);"], [278, "      log.info(\"Data set to be parsed as \" + rdfFormat);"], [279, "      RDFParser rdfParser = Rio.createParser(rdfFormat);"], [280, "      rdfParser.set(BasicParserSettings.VERIFY_URI_SYNTAX, verifyUriSyntax);"], [281, "      rdfParser.setRDFHandler(statementStreamer);"], [282, "      rdfParser.parse(inputStream, \"http://neo4j.com/base/\");"], [333, "      InputStream inputStream = new ByteArrayInputStream("], [334, "          rdfFragment.getBytes(Charset.defaultCharset())); //rdfFragment.openStream();"], [335, "      RDFFormat rdfFormat = getFormat(format);"], [336, "      log.info(\"Data set to be parsed as \" + rdfFormat);"], [337, "      RDFParser rdfParser = Rio.createParser(rdfFormat);"], [338, "      rdfParser.set(BasicParserSettings.VERIFY_URI_SYNTAX, verifyUriSyntax);"], [339, "      rdfParser.setRDFHandler(statementViewer);"], [340, "      rdfParser.parse(inputStream, \"http://neo4j.com/base/\");"]]}, "num_lines_added": 22, "num_lines_removed": 44}