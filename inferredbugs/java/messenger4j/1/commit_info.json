{"hash": "83ac764e6126af7ef2b86c3524d0b132d69a1953", "message": "rewrite UserProfile API, rewrite verify webhook", "file_num_lines": 104, "diff_parsed": {"added": [[20, "import com.github.messenger4j.v3.Messenger;"], [30, "            \"last_name,profile_pic,locale,timezone,gender,is_payment_enabled,last_ad_referral&access_token=%s\";"], [33, "    private final MessengerHttpClient mockHttpClient = mock(MessengerHttpClient.class);"], [34, "    private final Messenger messenger = Messenger.create(PAGE_ACCESS_TOKEN, \"test\", \"test\", mockHttpClient);"], [39, "        final String userId = \"USER_ID\";"], [43, "                \"  \\\"profile_pic\\\": \\\"https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xpf1/v/t1.0-1/p200x200/\" +"], [44, "                \"13055603_10105219398495383_8237637584159975445_n.jpg?oh=1d241d4b6d4dac50eaf9bb73288ea192&oe=57AF5C03&\" +"], [45, "                \"__gda__=1470213755_ab17c8c8e3a0a447fed3f272fa2179ce\\\",\\n\" +"], [48, "                \"  \\\"gender\\\": \\\"male\\\",\\n\" +"], [49, "                \"  \\\"is_payment_enabled\\\": true,\\n\" +"], [50, "                \"  \\\"last_ad_referral\\\": {\\n\" +"], [51, "                \"    \\\"source\\\": \\\"ADS\\\",\\n\" +"], [52, "                \"    \\\"type\\\": \\\"OPEN_THREAD\\\",\\n\" +"], [53, "                \"    \\\"ad_id\\\": \\\"6045246247433\\\"\\n\" +"], [54, "                \"  }\\n\" +"], [56, "        when(mockHttpClient.execute(eq(GET), anyString(), isNull())).thenReturn(successfulResponse);"], [59, "        final UserProfile userProfile = messenger.queryUserProfileById(userId);"], [62, "        final String expectedRequestUrl = String.format(FB_GRAPH_API_URL, userId, PAGE_ACCESS_TOKEN);"], [63, "        verify(mockHttpClient).execute(eq(GET), eq(expectedRequestUrl), isNull());"], [66, "        assertThat(userProfile.firstName(), is(equalTo(\"Peter\")));"], [67, "        assertThat(userProfile.lastName(), is(equalTo(\"Chang\")));"], [68, "        assertThat(userProfile.profilePicture(), is(equalTo(\"https://fbcdn-profile-a.akamaihd.net/\" +"], [71, "        assertThat(userProfile.locale(), is(equalTo(\"en_US\")));"], [72, "        assertThat(userProfile.timezoneOffset(), is(equalTo(-7f)));"], [73, "        assertThat(userProfile.gender(), is(equalTo(UserProfile.Gender.MALE)));"], [74, "        assertThat(userProfile.isPaymentEnabled(), is(true));"], [75, "        assertThat(userProfile.lastAdReferral().isPresent(), is(true));"], [76, "        assertThat(userProfile.lastAdReferral().get().source(), is(equalTo(\"ADS\")));"], [77, "        assertThat(userProfile.lastAdReferral().get().type(), is(equalTo(\"OPEN_THREAD\")));"], [78, "        assertThat(userProfile.lastAdReferral().get().adId().isPresent(), is(true));"], [79, "        assertThat(userProfile.lastAdReferral().get().adId().get(), is(equalTo(\"6045246247433\")));"], [86, "        when(mockHttpClient.execute(eq(GET), anyString(), isNull())).thenReturn(emptyResponse);"], [89, "        MessengerApiException messengerApiException = null;"], [90, "        try {"], [91, "            messenger.queryUserProfileById(\"USER_ID\");"], [92, "        } catch (MessengerApiException e) {"], [93, "            messengerApiException = e;"], [94, "        }"], [97, "        assertThat(messengerApiException, is(notNullValue()));"], [98, "        assertThat(messengerApiException.getMessage(), is(equalTo(\"The response JSON does not contain any key/value pair\")));"], [99, "        assertThat(messengerApiException.getType(), is(nullValue()));"], [100, "        assertThat(messengerApiException.getCode(), is(nullValue()));"], [101, "        assertThat(messengerApiException.getFbTraceId(), is(nullValue()));"], [115, "        when(mockHttpClient.execute(eq(GET), anyString(), isNull())).thenReturn(errorResponse);"], [120, "            messenger.queryUserProfileById(\"USER_ID\");"]], "deleted": [[16, "import com.github.messenger4j.MessengerPlatform;"], [21, "import com.github.messenger4j.user.UserProfileClient;"], [22, "import org.junit.Before;"], [32, "            \"last_name,profile_pic,locale,timezone,gender&access_token=%s\";"], [35, "    private UserProfileClient userProfileClient;"], [36, "    private MessengerHttpClient mockHttpClient = mock(MessengerHttpClient.class);"], [37, ""], [38, "    @Before"], [39, "    public void beforeEach() throws Exception {"], [40, "        this.userProfileClient = MessengerPlatform.newUserProfileClientBuilder(PAGE_ACCESS_TOKEN)"], [41, "                .httpClient(mockHttpClient)"], [42, "                .build();"], [43, "    }"], [48, "        final String USER_ID = \"USER_ID\";"], [52, "                \"  \\\"profile_pic\\\": \\\"https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xpf1/v/t1.0-1/\" +"], [53, "                \"p200x200/13055603_10105219398495383_8237637584159975445_n.jpg?oh=1d241d4b6d4dac50eaf9bb73288ea\" +"], [54, "                \"192&oe=57AF5C03&__gda__=1470213755_ab17c8c8e3a0a447fed3f272fa2179ce\\\",\\n\" +"], [57, "                \"  \\\"gender\\\": \\\"male\\\"\\n\" +"], [59, "        when(mockHttpClient.execute(eq(GET), anyString(), (String) isNull())).thenReturn(successfulResponse);"], [62, "        final UserProfile userProfile = this.userProfileClient.queryUserProfile(USER_ID);"], [65, "        final String expectedRequestUrl = String.format(FB_GRAPH_API_URL, USER_ID, PAGE_ACCESS_TOKEN);"], [66, "        verify(mockHttpClient).execute(eq(GET), eq(expectedRequestUrl), (String) isNull());"], [69, "        assertThat(userProfile.getFirstName(), is(equalTo(\"Peter\")));"], [70, "        assertThat(userProfile.getLastName(), is(equalTo(\"Chang\")));"], [71, "        assertThat(userProfile.getProfilePicture(), is(equalTo(\"https://fbcdn-profile-a.akamaihd.net/\" +"], [74, "        assertThat(userProfile.getLocale(), is(equalTo(\"en_US\")));"], [75, "        assertThat(userProfile.getTimezoneOffset(), is(equalTo(-7f)));"], [76, "        assertThat(userProfile.getGender(), is(equalTo(UserProfile.Gender.MALE)));"], [83, "        when(mockHttpClient.execute(eq(GET), anyString(), (String) isNull())).thenReturn(emptyResponse);"], [86, "        final UserProfile userProfile = this.userProfileClient.queryUserProfile(\"USER_ID\");"], [89, "        assertThat(userProfile, is(notNullValue()));"], [90, "        assertThat(userProfile.getFirstName(), is(nullValue()));"], [91, "        assertThat(userProfile.getLastName(), is(nullValue()));"], [92, "        assertThat(userProfile.getProfilePicture(), is(nullValue()));"], [93, "        assertThat(userProfile.getLocale(), is(nullValue()));"], [94, "        assertThat(userProfile.getTimezoneOffset(), is(nullValue()));"], [95, "        assertThat(userProfile.getGender(), is(nullValue()));"], [109, "        when(mockHttpClient.execute(eq(GET), anyString(), (String) isNull())).thenReturn(errorResponse);"], [114, "            this.userProfileClient.queryUserProfile(\"USER_ID\");"]]}, "num_lines_added": 45, "num_lines_removed": 39}