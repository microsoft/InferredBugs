{"hash": "74dd6cb7ef66bbb4c6a1b2a92500fa3fe7ff2545", "message": "update to v1.0.7", "file_num_lines": 350, "diff_parsed": {"added": [[18, "/**"], [19, " *"], [20, " * <h2>\u6587\u4ef6\u670d\u52a1\u529f\u80fd\u5b9e\u73b0\u7c7b</h2>"], [21, " * <p>"], [22, " * \u8be5\u7c7b\u8d1f\u8d23\u5bf9\u6587\u4ef6\u76f8\u5173\u7684\u670d\u52a1\u8fdb\u884c\u5b9e\u73b0\u64cd\u4f5c\uff0c\u4f8b\u5982\u4e0b\u8f7d\u548c\u4e0a\u4f20\u7b49\uff0c\u5404\u65b9\u6cd5\u529f\u80fd\u8be6\u89c1\u63a5\u53e3\u5b9a\u4e49\u3002"], [23, " * </p>"], [24, " *"], [25, " * @author \u9752\u9633\u9f99\u91ce(kohgylw)"], [26, " * @version 1.0"], [27, " * @see kohgylw.kiftd.server.service.FileService"], [28, " */"], [145, "\t\t\t\t\tdownloadRangeFile(request, response, fo, f.getFileName());// \u4f7f\u7528\u65ad\u70b9\u7eed\u4f20\u6267\u884c\u4e0b\u8f7d"], [146, "\t\t\t\t\tthis.lu.writeDownloadFileEvent(request, f);"], [237, "\t\t\tString fname = URLEncoder"], [238, "\t\t\t\t\t.encode(\"kiftd_\" + ServerTimeUtil.accurateToDay() + \"_\\u6253\\u5305\\u4e0b\\u8f7d.zip\", \"UTF-8\");"], [240, "\t\t\t\tdownloadRangeFile(request, response, zip, fname);"], [287, "\t\tfinal String locationpath = request.getParameter(\"locationpath\");"], [301, "\t\t\t\t\tMap<String, String> map = new HashMap<>();"], [316, ""], [317, "\t// \u4f7f\u7528\u65ad\u70b9\u7eed\u4f20\u6280\u672f\u63d0\u4f9b\u6587\u4ef6\u4e0b\u8f7d\u670d\u52a1"], [318, "\tprivate void downloadRangeFile(HttpServletRequest request, HttpServletResponse response, File fo, String fname) {"], [319, "\t\tlong skipLength = 0;// \u4e0b\u8f7d\u65f6\u8df3\u8fc7\u7684\u5b57\u8282\u6570"], [320, "\t\tlong downLength = 0;// \u9700\u8981\u7ee7\u7eed\u4e0b\u8f7d\u7684\u5b57\u8282\u6570"], [321, "\t\tboolean hasEnd = false;// \u662f\u5426\u5177\u5907\u7ed3\u675f\u5b57\u8282\u58f0\u660e"], [322, "\t\ttry {"], [323, "\t\t\tresponse.setHeader(\"Accept-Ranges\", \"bytes\");// \u652f\u6301\u65ad\u70b9\u7eed\u4f20\u58f0\u660e"], [324, "\t\t\t// \u83b7\u53d6\u5df2\u4e0b\u8f7d\u5b57\u8282\u6570\u548c\u9700\u4e0b\u8f7d\u5b57\u8282\u6570"], [325, "\t\t\tString rangeLabel = request.getHeader(\"Range\");// \u83b7\u53d6\u4e0b\u8f7d\u957f\u5ea6\u58f0\u660e"], [326, "\t\t\tif (null != rangeLabel) {"], [327, "\t\t\t\t// \u5f53\u8fdb\u884c\u65ad\u70b9\u7eed\u4f20\u65f6\uff0c\u8fd4\u56de\u54cd\u5e94\u7801206"], [328, "\t\t\t\tresponse.setStatus(HttpServletResponse.SC_PARTIAL_CONTENT);"], [329, "\t\t\t\t// \u89e3\u6790\u4e0b\u8f7d\u8df3\u8fc7\u957f\u5ea6\u548c\u7ee7\u7eed\u957f\u5ea6"], [330, "\t\t\t\trangeLabel = request.getHeader(\"Range\").replaceAll(\"bytes=\", \"\");"], [331, "\t\t\t\tif (rangeLabel.indexOf('-') == rangeLabel.length() - 1) {"], [332, "\t\t\t\t\thasEnd = false;"], [333, "\t\t\t\t\trangeLabel = rangeLabel.substring(0, rangeLabel.indexOf('-'));"], [334, "\t\t\t\t\tskipLength = Long.parseLong(rangeLabel.trim());"], [335, "\t\t\t\t} else {"], [336, "\t\t\t\t\thasEnd = true;"], [337, "\t\t\t\t\tString startBytes = rangeLabel.substring(0, rangeLabel.indexOf('-'));"], [338, "\t\t\t\t\tString endBytes = rangeLabel.substring(rangeLabel.indexOf('-') + 1, rangeLabel.length());"], [339, "\t\t\t\t\tskipLength = Long.parseLong(startBytes.trim());"], [340, "\t\t\t\t\tdownLength = Long.parseLong(endBytes);"], [341, "\t\t\t\t}"], [342, "\t\t\t}"], [343, "\t\t\t// \u8bbe\u7f6e\u54cd\u5e94\u4e2d\u6587\u4ef6\u5757\u58f0\u660e"], [344, "\t\t\tlong fileLength = fo.length();// \u6587\u4ef6\u957f\u5ea6"], [345, "\t\t\tif (0 != skipLength) {"], [346, "\t\t\t\tString contentRange = \"\";"], [347, "\t\t\t\tif (hasEnd) {"], [348, "\t\t\t\t\tcontentRange = new StringBuffer(rangeLabel).append(\"/\").append(new Long(fileLength).toString())"], [349, "\t\t\t\t\t\t\t.toString();"], [350, "\t\t\t\t} else {"], [351, "\t\t\t\t\tcontentRange = new StringBuffer(\"bytes\").append(new Long(skipLength).toString()).append(\"-\")"], [352, "\t\t\t\t\t\t\t.append(new Long(fileLength - 1).toString()).append(\"/\")"], [353, "\t\t\t\t\t\t\t.append(new Long(fileLength).toString()).toString();"], [354, "\t\t\t\t}"], [355, "\t\t\t\tresponse.setHeader(\"Content-Range\", contentRange);"], [356, "\t\t\t}"], [357, "\t\t\t// \u5f00\u59cb\u6267\u884c\u4e0b\u8f7d"], [358, "\t\t\tresponse.setContentType(\"application/force-download\");"], [359, "\t\t\tresponse.setHeader(\"Content-Length\", \"\" + fileLength);"], [360, "\t\t\tresponse.addHeader(\"Content-Disposition\", \"attachment;fileName=\" + URLEncoder.encode(fname, \"UTF-8\"));"], [361, "\t\t\tfinal int buffersize = ConfigureReader.instance().getBuffSize();"], [362, "\t\t\tfinal byte[] buffer = new byte[buffersize];"], [363, "\t\t\tfinal RandomAccessFile raf = new RandomAccessFile(fo, \"r\");"], [364, "\t\t\tfinal OutputStream os = (OutputStream) response.getOutputStream();"], [365, "\t\t\traf.seek(skipLength);// \u8df3\u8fc7\u5df2\u7ecf\u4e0b\u8f7d\u7684\u5b57\u8282\u6570"], [366, "\t\t\tif (hasEnd) {"], [367, "\t\t\t\twhile (raf.getFilePointer() < downLength) {"], [368, "\t\t\t\t\tos.write(raf.read());"], [369, "\t\t\t\t}"], [370, "\t\t\t} else {"], [371, "\t\t\t\tint index = 0;"], [372, "\t\t\t\twhile ((index = raf.read(buffer)) != -1) {"], [373, "\t\t\t\t\tos.write(buffer, 0, index);"], [374, "\t\t\t\t}"], [375, "\t\t\t}"], [376, "\t\t\traf.close();"], [377, "\t\t\tos.close();"], [378, "\t\t} catch (Exception ex) {"], [379, "\t\t}"], [380, "\t}"]], "deleted": [[134, "\t\t\t\t\ttry {"], [135, "\t\t\t\t\t\tfinal FileInputStream fis = new FileInputStream(fo);"], [136, "\t\t\t\t\t\tresponse.setContentType(\"application/force-download\");"], [137, "\t\t\t\t\t\tresponse.setHeader(\"Content-Length\", \"\" + fo.length());"], [138, "\t\t\t\t\t\tresponse.addHeader(\"Content-Disposition\","], [139, "\t\t\t\t\t\t\t\t\"attachment;fileName=\" + URLEncoder.encode(f.getFileName(), \"UTF-8\"));"], [140, "\t\t\t\t\t\tfinal int buffersize = ConfigureReader.instance().getBuffSize();"], [141, "\t\t\t\t\t\tfinal byte[] buffer = new byte[buffersize];"], [142, "\t\t\t\t\t\tfinal BufferedInputStream bis = new BufferedInputStream(fis);"], [143, "\t\t\t\t\t\tfinal OutputStream os = (OutputStream) response.getOutputStream();"], [144, "\t\t\t\t\t\tint index = 0;"], [145, "\t\t\t\t\t\twhile ((index = bis.read(buffer)) != -1) {"], [146, "\t\t\t\t\t\t\tos.write(buffer, 0, index);"], [147, "\t\t\t\t\t\t}"], [148, "\t\t\t\t\t\tbis.close();"], [149, "\t\t\t\t\t\tfis.close();"], [150, "\t\t\t\t\t\tthis.lu.writeDownloadFileEvent(request, f);"], [151, "\t\t\t\t\t} catch (Exception ex) {"], [152, "\t\t\t\t\t}"], [244, "\t\t\t\tresponse.setContentType(\"application/force-download\");"], [245, "\t\t\t\tresponse.setHeader(\"Content-Length\", \"\" + zip.length());"], [246, "\t\t\t\tresponse.addHeader(\"Content-Disposition\", \"attachment;fileName=\" + URLEncoder"], [247, "\t\t\t\t\t\t.encode(\"kiftd_\" + ServerTimeUtil.accurateToDay() + \"_\\u6253\\u5305\\u4e0b\\u8f7d.zip\", \"UTF-8\"));"], [248, "\t\t\t\tfinal FileInputStream fis = new FileInputStream(zip);"], [249, "\t\t\t\tfinal BufferedInputStream bis = new BufferedInputStream(fis);"], [250, "\t\t\t\tfinal OutputStream out = (OutputStream) response.getOutputStream();"], [251, "\t\t\t\tfinal byte[] buffer = new byte[ConfigureReader.instance().getBuffSize()];"], [252, "\t\t\t\tint count = 0;"], [253, "\t\t\t\twhile ((count = bis.read(buffer)) != -1) {"], [254, "\t\t\t\t\tout.write(buffer, 0, count);"], [255, "\t\t\t\t}"], [256, "\t\t\t\tbis.close();"], [257, "\t\t\t\tfis.close();"], [304, "\t\tfinal String locationpath=request.getParameter(\"locationpath\");"], [318, "\t\t\t\t\tMap<String, String> map=new HashMap<>();"]]}, "num_lines_added": 83, "num_lines_removed": 35}