{"hash": "d71cd0e24eb093f51b5e36f3786c82cd5b9b5f1c", "message": "HTTPCORE-42: ThrottlingHttpServiceHandler can now correctly handle expectation failures when the expectation verifier returns a non 1xx response. Minor cleanups in HttpService class\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/httpcomponents/httpcore/trunk@509149 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 407, "diff_parsed": {"added": [[35, "import java.io.InterruptedIOException;"], [375, "    private void waitForOutput("], [376, "            final ServerConnState connState,"], [377, "            int expectedState) throws InterruptedIOException {"], [378, "        synchronized (connState) {"], [379, "            try {"], [380, "                for (;;) {"], [381, "                    int currentState = connState.getOutputState();"], [382, "                    if (currentState == expectedState) {"], [383, "                        break;"], [384, "                    }"], [385, "                    if (currentState == ServerConnState.SHUTDOWN) {"], [386, "                        throw new InterruptedIOException(\"Service interrupted\");"], [387, "                    }"], [388, "                    connState.wait();"], [389, "                }"], [390, "            } catch (InterruptedException ex) {"], [391, "                connState.shutdown();"], [392, "            }"], [393, "        }"], [394, "    }"], [395, ""], [402, "        context.setAttribute(HttpExecutionContext.HTTP_REQUEST, request);"], [404, "        HttpVersion ver;"], [405, "        if (request != null) {"], [406, "            ver = request.getRequestLine().getHttpVersion();"], [407, "        } else {"], [408, "            ver = HttpVersion.HTTP_1_0;"], [409, "        }"], [418, ""], [419, "        HttpResponse response =  this.responseFactory.newHttpResponse("], [420, "                ver,"], [421, "                code,"], [422, "                context);"], [429, "        context.setAttribute(HttpExecutionContext.HTTP_RESPONSE, response);"], [430, ""], [441, "        context.setAttribute(HttpExecutionContext.HTTP_REQUEST, request);"], [442, ""], [450, "        HttpResponse response;"], [451, ""], [452, "        if (request instanceof HttpEntityEnclosingRequest) {"], [453, "            HttpEntityEnclosingRequest entityReq = (HttpEntityEnclosingRequest) request;"], [454, ""], [455, "            if (entityReq.expectContinue()) {"], [456, "                response = this.responseFactory.newHttpResponse("], [457, "                        ver,"], [458, "                        HttpStatus.SC_CONTINUE,"], [459, "                        context);"], [460, "                response.getParams().setDefaults(this.params);"], [461, "                if (this.expectationVerifier != null) {"], [462, "                    try {"], [463, "                        this.expectationVerifier.verify(request, response, context);"], [464, "                    } catch (HttpException ex) {"], [465, "                        handleException(connState, ex ,context);"], [466, "                        return;"], [467, "                    }"], [468, "                }"], [469, ""], [470, "                if (response.getStatusLine().getStatusCode() < 200) {"], [471, "                    // Send 1xx response indicating the server expections"], [472, "                    // have been met"], [473, "                    waitForOutput(connState, ServerConnState.READY);"], [474, "                    connState.setResponse(response);"], [475, "                    synchronized (connState) {"], [476, "                        waitForOutput(connState, ServerConnState.RESPONSE_SENT);"], [477, "                        connState.resetOutput();"], [478, "                    }"], [479, "                } else {"], [480, "                    // The request does not meet the server expections"], [481, "                    context.setAttribute(HttpExecutionContext.HTTP_RESPONSE, response);"], [482, "                    this.httpProcessor.process(response, context);"], [483, "                    connState.setResponse(response);"], [484, "                    return;"], [485, "                }"], [486, "            }"], [487, ""], [488, "            // Create a wrapper entity instead of the original one"], [489, "            if (entityReq.getEntity() != null) {"], [490, "                entityReq.setEntity(new BufferedContent("], [491, "                        entityReq.getEntity(),"], [492, "                        connState.getInbuffer()));"], [493, "            }"], [494, "        }"], [495, ""], [496, "        response = this.responseFactory.newHttpResponse("], [497, "                ver,"], [498, "                HttpStatus.SC_OK,"], [499, "                context);"], [501, ""], [533, "        waitForOutput(connState, ServerConnState.READY);"], [537, ""], [538, "        int terminalState;"], [547, "            terminalState = ServerConnState.RESPONSE_BODY_DONE;"], [550, "            terminalState = ServerConnState.RESPONSE_SENT;"], [553, "            waitForOutput(connState, terminalState);"], [554, "            connState.resetOutput();"]], "deleted": [[242, "        HttpVersion ver = request.getRequestLine().getHttpVersion();"], [243, "        if (!ver.lessEquals(HttpVersion.HTTP_1_1)) {"], [244, "            // Downgrade protocol version if greater than HTTP/1.1"], [245, "            ver = HttpVersion.HTTP_1_1;"], [246, "        }"], [247, ""], [254, "        if (request instanceof HttpEntityEnclosingRequest) {"], [255, "            HttpEntityEnclosingRequest entityReq = (HttpEntityEnclosingRequest) request;"], [256, ""], [257, "            if (entityReq.expectContinue()) {"], [258, "                try {"], [259, "                    HttpResponse ack = this.responseFactory.newHttpResponse("], [260, "                            ver, HttpStatus.SC_CONTINUE, context);"], [261, "                    ack.getParams().setDefaults(this.params);"], [262, "                    if (this.expectationVerifier != null) {"], [263, "                        this.expectationVerifier.verify(request, ack, context);"], [264, "                    }"], [265, "                    conn.submitResponse(ack);"], [266, "                } catch (HttpException ex) {"], [267, "                    shutdownConnection(conn);"], [268, "                    if (this.eventListener != null) {"], [269, "                        this.eventListener.fatalProtocolException(ex);"], [270, "                    }"], [271, "                    return;"], [272, "                }"], [273, "            }"], [274, ""], [275, "            // Create a wrapper entity instead of the original one"], [276, "            if (entityReq.getEntity() != null) {"], [277, "                entityReq.setEntity(new BufferedContent("], [278, "                        entityReq.getEntity(),"], [279, "                        connState.getInbuffer()));"], [280, "            }"], [281, "        }"], [282, ""], [424, ""], [425, "        HttpVersion ver;"], [426, "        if (request != null) {"], [427, "            ver = request.getRequestLine().getHttpVersion();"], [428, "        } else {"], [429, "            ver = HttpVersion.HTTP_1_0;"], [430, "        }"], [431, "        HttpResponse response =  this.responseFactory.newHttpResponse(ver, code, context);"], [455, "        HttpResponse response = this.responseFactory.newHttpResponse(ver, HttpStatus.SC_OK, context);"], [457, ""], [458, "        context.setAttribute(HttpExecutionContext.HTTP_REQUEST, request);"], [490, "        // Make sure the connection is ready for output"], [491, "        // (the previous worker thread terminated)"], [492, "        synchronized (connState) {"], [493, "            try {"], [494, "                for (;;) {"], [495, "                    int currentState = connState.getOutputState();"], [496, "                    if (currentState == ServerConnState.READY) {"], [497, "                        break;"], [498, "                    }"], [499, "                    if (currentState == ServerConnState.SHUTDOWN) {"], [500, "                        break;"], [501, "                    }"], [502, "                    connState.wait();"], [503, "                }"], [504, "            } catch (InterruptedException ex) {"], [505, "                connState.shutdown();"], [506, "            }"], [507, "            if (connState.getOutputState() == ServerConnState.SHUTDOWN) {"], [508, "                return;"], [509, "            }"], [510, "        }"], [514, ""], [515, "        int expectedSate;"], [524, "            expectedSate = ServerConnState.RESPONSE_BODY_DONE;"], [527, "            expectedSate = ServerConnState.RESPONSE_SENT;"], [529, ""], [530, "        // and wait until the I/O thread completes sending the"], [531, "        // response and the connection state transitions to the"], [532, "        // expected state"], [534, "            try {"], [535, "                for (;;) {"], [536, "                    int currentState = connState.getOutputState();"], [537, "                    if (currentState == expectedSate) {"], [538, "                        break;"], [539, "                    }"], [540, "                    if (currentState == ServerConnState.SHUTDOWN) {"], [541, "                        break;"], [542, "                    }"], [543, "                    connState.wait();"], [544, "                }"], [545, "                connState.resetOutput();"], [546, "            } catch (InterruptedException ex) {"], [547, "                connState.shutdown();"], [548, "            }"]]}, "num_lines_added": 96, "num_lines_removed": 90}