{"hash": "1def2a721451b3b528265b3fd8db2ca4a04620f5", "message": "Use String methods and constructors that require Charset instead of String\n\ngit-svn-id: https://svn.apache.org/repos/asf/httpcomponents/httpcore/trunk@1558078 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 398, "diff_parsed": {"added": [[36, "import org.apache.http.Consts;"], [70, "                new SessionInputBufferMock(CHUNKED_INPUT, Consts.ISO_8859_1));"], [82, "        final String result = new String(out.toByteArray(), Consts.ISO_8859_1);"], [98, "                new SessionInputBufferMock(CHUNKED_INPUT, Consts.ISO_8859_1));"], [125, "                new SessionInputBufferMock(s, Consts.ISO_8859_1));"], [142, "                new SessionInputBufferMock(s, Consts.ISO_8859_1));"], [153, "                new SessionInputBufferMock(s, Consts.ISO_8859_1));"], [202, "                new SessionInputBufferMock(s, Consts.ISO_8859_1));"], [214, "                new SessionInputBufferMock(s, Consts.ISO_8859_1));"], [233, "                new SessionInputBufferMock(s, Consts.ISO_8859_1));"], [248, "                new SessionInputBufferMock(s, Consts.ISO_8859_1));"], [266, "                new SessionInputBufferMock(s, Consts.ISO_8859_1));"], [284, "                new SessionInputBufferMock(s, Consts.ISO_8859_1));"], [301, "                new SessionInputBufferMock(s, Consts.ISO_8859_1));"], [316, "                new SessionInputBufferMock(input, Consts.ISO_8859_1));"], [332, "        out.write(input.getBytes(Consts.ISO_8859_1));"], [348, "        final String output = new String(result.toByteArray(), Consts.ISO_8859_1);"], [443, "                new TimeoutByteArrayInputStream(s.getBytes(Consts.ISO_8859_1)), 16);"], [471, "                new TimeoutByteArrayInputStream(s.getBytes(Consts.ISO_8859_1)), 16);"]], "deleted": [[42, "import org.apache.http.util.EncodingUtils;"], [48, "    private static final String CONTENT_CHARSET = \"ISO-8859-1\";"], [49, ""], [72, "                new SessionInputBufferMock("], [73, "                        EncodingUtils.getBytes(CHUNKED_INPUT, CONTENT_CHARSET)));"], [85, "        final String result = EncodingUtils.getString(out.toByteArray(), CONTENT_CHARSET);"], [101, "                new SessionInputBufferMock("], [102, "                            EncodingUtils.getBytes(CHUNKED_INPUT, CONTENT_CHARSET)));"], [115, "        EncodingUtils.getString(out.toByteArray(), CONTENT_CHARSET);"], [130, "                new SessionInputBufferMock("], [131, "                        EncodingUtils.getBytes(s, CONTENT_CHARSET)));"], [148, "                new SessionInputBufferMock("], [149, "                        EncodingUtils.getBytes(s, CONTENT_CHARSET)));"], [160, "                new SessionInputBufferMock("], [161, "                        EncodingUtils.getBytes(s, CONTENT_CHARSET)));"], [210, "                new SessionInputBufferMock("], [211, "                        EncodingUtils.getBytes(s, CONTENT_CHARSET)));"], [223, "                new SessionInputBufferMock("], [224, "                        EncodingUtils.getBytes(s, CONTENT_CHARSET)));"], [243, "                new SessionInputBufferMock("], [244, "                        EncodingUtils.getBytes(s, CONTENT_CHARSET)));"], [259, "                new SessionInputBufferMock("], [260, "                        EncodingUtils.getBytes(s, CONTENT_CHARSET)));"], [278, "                new SessionInputBufferMock("], [279, "                        EncodingUtils.getBytes(s, CONTENT_CHARSET)));"], [297, "                new SessionInputBufferMock("], [298, "                        EncodingUtils.getBytes(s, CONTENT_CHARSET)));"], [315, "                new SessionInputBufferMock("], [316, "                        EncodingUtils.getBytes(s, CONTENT_CHARSET)));"], [331, "                new SessionInputBufferMock("], [332, "                        EncodingUtils.getBytes(input, CONTENT_CHARSET)));"], [348, "        out.write(EncodingUtils.getBytes(input, CONTENT_CHARSET));"], [364, "        final String output = EncodingUtils.getString(result.toByteArray(), CONTENT_CHARSET);"], [459, "                new TimeoutByteArrayInputStream(s.getBytes(\"ISO-8859-1\")), 16);"], [487, "                new TimeoutByteArrayInputStream(s.getBytes(\"ISO-8859-1\")), 16);"]]}, "num_lines_added": 19, "num_lines_removed": 35}