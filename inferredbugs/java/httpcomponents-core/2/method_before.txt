    protected void validate(final Set keys) {
        long currentTime = System.currentTimeMillis();
        if( (currentTime - this.lastTimeoutCheck) >= this.timeoutCheckInterval) {
            this.lastTimeoutCheck = currentTime;
            if (keys != null) {
                for (Iterator it = keys.iterator(); it.hasNext();) {
                    SelectionKey key = (SelectionKey) it.next();
                    timeoutCheck(key, currentTime);
                }
            }
        }
        synchronized (this.bufferingSessions) {
            if (!this.bufferingSessions.isEmpty()) {
                for (Iterator it = this.bufferingSessions.iterator(); it.hasNext(); ) {
                    IOSession session = (IOSession) it.next();
                    SessionBufferStatus bufStatus = session.getBufferStatus();
                    if (bufStatus != null) {
                        if (!bufStatus.hasBufferedInput()) {
                            it.remove();
                            continue;
                        }
                    }
                    try {
                        int ops = session.getEventMask();
                        if ((ops & EventMask.READ) > 0) {
                            this.eventDispatch.inputReady(session);
                            if (bufStatus != null) {
                                if (!bufStatus.hasBufferedInput()) {
                                    it.remove();
                                }
                            }
                        }
                    } catch (CancelledKeyException ex) {
                        it.remove();
                    }
                }
            }
        }
    }