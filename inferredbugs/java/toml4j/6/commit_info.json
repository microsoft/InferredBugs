{"hash": "039b48711571a14b0b3bada3033182a3d6ad62a4", "message": "Set OutputStreamWriter to UTF-8. Document UTF-8 requirements.", "file_num_lines": 87, "diff_parsed": {"added": [[8, "import java.io.FileOutputStream;"], [116, "   * Write an Object in TOML to a {@link File}. Output is encoded as UTF-8."], [123, "    OutputStream outputStream = new FileOutputStream(target);"], [125, "      write(from, outputStream);"], [127, "      outputStream.close();"], [132, "   * Write an Object in TOML to a {@link OutputStream}. Output is encoded as UTF-8."], [133, "   *"], [134, "   * @param from the object to be written"], [135, "   * @param target the OutputStream to which the TOML will be written. The stream is NOT closed after being written to."], [136, "   * @throws IOException if target.write() fails"], [137, "   */"], [138, "  public void write(Object from, OutputStream target) throws IOException {"], [139, "    OutputStreamWriter writer = new OutputStreamWriter(target, \"UTF-8\");"], [140, "    write(from, writer);"], [141, "    writer.flush();"], [142, "  }"], [143, ""], [144, "  /**"], [145, "   * Write an Object in TOML to a {@link Writer}. You MUST ensure that the {@link Writer}s's encoding is set to UTF-8 for the TOML to be valid."], [147, "   * @param from the object to be written. Can be a Map or a custom type. Must not be null."]], "deleted": [[115, "   * Write an Object in TOML to a {@link OutputStream}."], [116, "   *"], [117, "   * @param from the object to be written"], [118, "   * @param target the OutputStream to which the TOML will be written. The stream is not closed after being written to."], [119, "   * @throws IOException if target.write() fails"], [120, "   */"], [121, "  public void write(Object from, OutputStream target) throws IOException {"], [122, "    OutputStreamWriter writer = new OutputStreamWriter(target);"], [123, "    write(from, writer);"], [124, "    writer.flush();"], [125, "  }"], [126, ""], [127, "  /**"], [128, "   * Write an Object in TOML to a {@link File}."], [135, "    FileWriter writer = new FileWriter(target);"], [137, "      write(from, writer);"], [139, "      writer.close();"], [144, "   * Write an Object in TOML to a {@link Writer}."], [146, "   * @param from the object to be written. Can be a Map or a custom type."]]}, "num_lines_added": 20, "num_lines_removed": 19}