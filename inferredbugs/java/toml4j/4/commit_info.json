{"hash": "feb3aec259c9b4a4dc196edcd5a9ab34655d0d97", "message": "TomlWriter#write methods delegate to TomlWriter#write(Object, Writer) to\ntake advantage of streaming when possible.", "file_num_lines": 74, "diff_parsed": {"added": [[3, "import static com.moandjiezana.toml.ValueWriters.WRITERS;"], [4, ""], [5, "import java.io.File;"], [6, "import java.io.FileWriter;"], [7, "import java.io.IOException;"], [8, "import java.io.OutputStream;"], [9, "import java.io.OutputStreamWriter;"], [10, "import java.io.StringWriter;"], [11, "import java.io.Writer;"], [54, "    try {"], [55, "      StringWriter output = new StringWriter();"], [56, "      write(from, output);"], [57, ""], [58, "      return output.toString();"], [59, "    } catch (IOException e) {"], [60, "      throw new RuntimeException(e);"], [61, "    }"], [68, "   * @param target the OutputStream to which the TOML will be written. The stream is not closed after being written to."], [72, "    OutputStreamWriter writer = new OutputStreamWriter(target);"], [73, "    write(from, writer);"], [74, "    writer.flush();"], [86, "    write(from, writer);"], [90, "  /**"], [91, "   * Write an Object in TOML to a {@link Writer}."], [92, "   *"], [93, "   * @param from the object to be written"], [94, "   * @param target the Writer to which TOML will be written. The Writer is not closed."], [95, "   * @throws IOException if target.write() fails"], [96, "   */"], [97, "  public void write(Object from, Writer target) throws IOException {"], [98, "    WRITERS.write(from, this, target);"], [99, "  }"], [100, ""]], "deleted": [[3, "import java.io.*;"], [10, "import static com.moandjiezana.toml.ValueWriters.WRITERS;"], [11, ""], [48, "    return WRITERS.write(from, this);"], [49, "  }"], [50, ""], [51, "  /**"], [52, "   * Write an Object in TOML to a {@link Writer}."], [53, "   *"], [54, "   * @param from the object to be written"], [55, "   * @param target the Writer to which TOML will be written"], [56, "   * @throws IOException if target.write() fails"], [57, "   */"], [58, "  public void write(Object from, Writer target) throws IOException {"], [59, "    target.write(write(from));"], [66, "   * @param target the OutputStream to which the TOML will be written"], [70, "    target.write(write(from).getBytes());"], [82, "    writer.write(write(from));"]]}, "num_lines_added": 33, "num_lines_removed": 18}