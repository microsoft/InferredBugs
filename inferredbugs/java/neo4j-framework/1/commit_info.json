{"hash": "8c6b3cf4cddbfbb63db748f7fbb49a7f29d610c1", "message": "refactoring, RelationshipUtils class, removing warnings and deprecated calls", "file_num_lines": 1418, "diff_parsed": {"added": [[31, "import org.neo4j.graphdb.traversal.Uniqueness;"], [861, "                        assertEquals(\"NewOne\", getSingleOrNull(td.assignedLabels(changed1.getCurrent())).name());"], [862, "                        assertEquals(\"NewOne\", getSingleOrNull(td.assignedLabels(changed1.getPrevious())).name());"], [871, "                        assertEquals(\"NewLabel\", getSingleOrNull(td.assignedLabels(changed5.getCurrent())).name());"], [872, "                        assertEquals(\"NewLabel\", getSingleOrNull(td.assignedLabels(changed5.getPrevious())).name());"], [923, "                        assertFalse(td.hasPropertyBeenChanged(getSingleOrNull(td.getAllDeletedNodes()), NAME));"], [924, "                        assertFalse(td.hasPropertyBeenChanged(getSingleOrNull(td.getAllCreatedNodes()), NAME));"], [944, "                        assertEquals(\"NewLabel\", getSingleOrNull(td.assignedLabels(changed.getPrevious())).name());"], [945, "                        assertEquals(\"NewLabel\", getSingleOrNull(td.assignedLabels(changed.getCurrent())).name());"], [961, "                        assertEquals(\"ToBeRemoved\", getSingleOrNull(td.removedLabels(changed.getPrevious())).name());"], [962, "                        assertEquals(\"ToBeRemoved\", getSingleOrNull(td.removedLabels(changed.getCurrent())).name());"], [1006, "                        assertEquals(\"One\", getSingleOrNull(td.removedLabels(changed.getCurrent())).name());"], [1007, "                        assertEquals(\"One\", getSingleOrNull(td.removedLabels(changed.getPrevious())).name());"], [1019, "                        assertFalse(td.hasPropertyBeenDeleted(getSingleOrNull(td.getAllDeletedNodes()), NAME));"], [1020, "                        assertFalse(td.hasPropertyBeenDeleted(getSingleOrNull(td.getAllCreatedNodes()), NAME));"], [1027, "                        assertEquals(\"ToBeRemoved\", getSingleOrNull(td.removedLabels(changed.getCurrent())).name());"], [1028, "                        assertEquals(\"ToBeRemoved\", getSingleOrNull(td.removedLabels(changed.getPrevious())).name());"], [1118, "                        Relationship r = getSingleOrNull(changed.entrySet()).getValue().getCurrent();"], [1513, "                        Relationship previous = getSingleOrNull(td.getAllChangedRelationships()).getPrevious();"], [1514, "                        Relationship current = getSingleOrNull(td.getAllChangedRelationships()).getCurrent();"], [1774, "        return getSingleOrNull(map.entrySet()).getValue();"]], "deleted": [[31, "import org.neo4j.kernel.Uniqueness;"], [861, "                        assertEquals(\"NewOne\", getSingle(td.assignedLabels(changed1.getCurrent())).name());"], [862, "                        assertEquals(\"NewOne\", getSingle(td.assignedLabels(changed1.getPrevious())).name());"], [871, "                        assertEquals(\"NewLabel\", getSingle(td.assignedLabels(changed5.getCurrent())).name());"], [872, "                        assertEquals(\"NewLabel\", getSingle(td.assignedLabels(changed5.getPrevious())).name());"], [923, "                        assertFalse(td.hasPropertyBeenChanged(getSingle(td.getAllDeletedNodes()), NAME));"], [924, "                        assertFalse(td.hasPropertyBeenChanged(getSingle(td.getAllCreatedNodes()), NAME));"], [944, "                        assertEquals(\"NewLabel\", getSingle(td.assignedLabels(changed.getPrevious())).name());"], [945, "                        assertEquals(\"NewLabel\", getSingle(td.assignedLabels(changed.getCurrent())).name());"], [961, "                        assertEquals(\"ToBeRemoved\", getSingle(td.removedLabels(changed.getPrevious())).name());"], [962, "                        assertEquals(\"ToBeRemoved\", getSingle(td.removedLabels(changed.getCurrent())).name());"], [1006, "                        assertEquals(\"One\", getSingle(td.removedLabels(changed.getCurrent())).name());"], [1007, "                        assertEquals(\"One\", getSingle(td.removedLabels(changed.getPrevious())).name());"], [1019, "                        assertFalse(td.hasPropertyBeenDeleted(getSingle(td.getAllDeletedNodes()), NAME));"], [1020, "                        assertFalse(td.hasPropertyBeenDeleted(getSingle(td.getAllCreatedNodes()), NAME));"], [1027, "                        assertEquals(\"ToBeRemoved\", getSingle(td.removedLabels(changed.getCurrent())).name());"], [1028, "                        assertEquals(\"ToBeRemoved\", getSingle(td.removedLabels(changed.getPrevious())).name());"], [1118, "                        Relationship r = getSingle(changed.entrySet()).getValue().getCurrent();"], [1513, "                        Relationship previous = getSingle(td.getAllChangedRelationships()).getPrevious();"], [1514, "                        Relationship current = getSingle(td.getAllChangedRelationships()).getCurrent();"], [1774, "        return getSingle(map.entrySet()).getValue();"]]}, "num_lines_added": 21, "num_lines_removed": 21}