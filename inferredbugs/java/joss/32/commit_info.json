{"hash": "008708035702d4f0db867e1eb69b9537fbd12ae2", "message": "Issue #30 - when no tenant ID or name is passed, it now returns the first tenant found. Algorithm needs to be made a bit smarter than this and fetch a tenant if there is one (and only one) enabled tenant. In all other cases, it must throw an exception.", "file_num_lines": 68, "diff_parsed": {"added": [[30, "    private boolean tenantSupplied;"], [31, ""], [32, "    private String preferredRegion;"], [33, ""], [35, "        this.preferredRegion = preferredRegion;"], [51, "    public boolean isTenantSupplied() {"], [52, "        return this.tenantSupplied;"], [53, "    }"], [54, ""], [55, "    public AccessImpl setTenantSupplied(boolean tenantSupplied) {"], [56, "        this.tenantSupplied = tenantSupplied;"], [57, "        return this;"], [58, "    }"], [59, ""], [61, "    protected EndPoint getCurrentEndPoint() {"], [62, "        if (!isTenantSupplied()) {"], [63, "            HttpStatusExceptionUtil.throwException(HttpStatus.SC_NOT_FOUND, CommandExceptionError.NO_TENANT_SUPPLIED);"], [64, "        }"], [65, "        if (currentEndPoint != null) {"], [66, "            return currentEndPoint;"], [67, "        }"], [72, "        this.currentEndPoint = objectStoreCatalog.getRegion(preferredRegion);"], [76, "        return this.currentEndPoint;"], [80, "        return getCurrentEndPoint().internalURL;"], [84, "        return getCurrentEndPoint().publicURL;"]], "deleted": [[31, "        this.currentEndPoint = getObjectStoreCatalog().getRegion(preferredRegion);"], [48, "    public AccessImpl initCurrentEndPoint() {"], [53, "        this.currentEndPoint = objectStoreCatalog.getRegion(null);"], [57, "        return this;"], [61, "        return currentEndPoint.internalURL;"], [65, "        return currentEndPoint.publicURL;"]]}, "num_lines_added": 25, "num_lines_removed": 6}