{"hash": "703bd1dd18104965e9b244a4ec52707f7e769d07", "message": "Added input stream downloading as an option (zero copy passthrough)", "file_num_lines": 39, "diff_parsed": {"added": [[5, "import nl.t42.openstack.command.object.InputStreamWrapper;"], [64, "        // DOWNLOAD AN IMAGE TO A BYTE ARRAY AND THEN SAVE IT TO FILE"], [65, "//        byte[] plaatje = client.downloadObject(new Container(\"Tilburg\"), new StoreObject(\"doggie.png\"));"], [66, "//        System.out.println(\"Grootte plaatje: \" + plaatje.length);"], [67, "//        FileOutputStream fos = new FileOutputStream(new File(\"plaatje.png\"));"], [68, "//        fos.write(plaatje);"], [69, "//        fos.close();"], [70, ""], [71, "        // DOWNLOAD AN IMAGE TO FILE"], [72, "//        client.downloadObject(new Container(\"Tilburg\"), new StoreObject(\"doggie.png\"), new File(\"plaatje2.png\"));"], [73, ""], [74, "        // DOWNLOAD AN IMAGE TO AN INPUTSTREAM AND SAVE IT TO FILE"], [75, "//        InputStreamWrapper wrapper = client.downloadObjectAsInputStream(new Container(\"Tilburg\"), new StoreObject(\"doggie.png\"));"], [76, "//        FileOutputStream fos = new FileOutputStream(new File(\"plaatje.png\"));"], [77, "//        IOUtils.copy(wrapper.getInputStream(), fos);"], [78, "//        fos.close();"], [79, "//        wrapper.closeStream(); // Important to clean up the original response object"]], "deleted": [[63, "        byte[] plaatje = client.downloadObject(new Container(\"Tilburg\"), new StoreObject(\"doggie.png\"));"], [64, "        System.out.println(\"Grootte plaatje: \" + plaatje.length);"], [65, "        FileOutputStream fos = new FileOutputStream(new File(\"plaatje.png\"));"], [66, "        fos.write(plaatje);"], [67, "        fos.close();"], [68, ""], [69, "        client.downloadObject(new Container(\"Tilburg\"), new StoreObject(\"doggie.png\"), new File(\"plaatje2.png\"));"]]}, "num_lines_added": 17, "num_lines_removed": 7}