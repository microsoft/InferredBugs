{"hash": "5b86665bad5d8b38b8c438753723b41075ad2261", "message": "Fix bug with optional element in TokenPattern, improve BootstrapParser api, fixes", "file_num_lines": 36, "diff_parsed": {"added": [[14, "    private static final String CONTENT = \"class Foo {\" +"], [15, "            \"    method anotherEcho(String message) {\" +"], [16, "            \"        Console.print(message);\" +"], [17, "            \"    }\" +"], [18, "            \"}\";"], [24, "                .compile(\"class <name> [extends <inherited>] `{ <*body> `}\")"], [40, "        System.out.println(result.getWildcards());"], [41, ""], [42, "        Assertions.assertEquals(2, result.getWildcards().size());"], [43, "        Assertions.assertEquals(\"Foo\", result.getWildcards().get(\"name\").asString());"], [44, "        Assertions.assertEquals(\"methodanotherEcho(Stringmessage){Console.print(message);}\", result.getWildcards().get(\"*body\").asString());"]], "deleted": [[14, "    private static final String CONTENT = \"method void test(15, ()25) { Console.print('test') }\";"], [20, "                .compile(\"(method|hidden|local) [static] <return-type> <name> `(<*parameters>`) `{ <*body> `}[;]\")"], [35, "        Assertions.assertEquals(4, result.getWildcards().size());"], [37, "        Assertions.assertEquals(\"void\", result.getWildcards().get(\"return-type\").asString());"], [38, "        Assertions.assertEquals(\"test\", result.getWildcards().get(\"name\").asString());"], [39, "        Assertions.assertEquals(\"15,()25\", result.getWildcards().get(\"*parameters\").asString());"], [40, "        Assertions.assertEquals(\"Console.print(test)\", result.getWildcards().get(\"*body\").asString());"]]}, "num_lines_added": 11, "num_lines_removed": 7}