{"hash": "9033302b066e7c319ef2d16e4b1dc083688f5ccb", "message": "Added TokenExtractor.", "file_num_lines": 61, "diff_parsed": {"added": [[4, "import org.panda_lang.core.interpreter.lexer.TokenRepresentation;"], [6, "import org.panda_lang.core.interpreter.token.Token;"], [20, "    private final TokenExtractorOpposites extractorOpposites;"], [25, "        this.extractorOpposites = new TokenExtractorOpposites(this);"], [37, "        TokenHollow hollow = new TokenHollow();"], [41, "            tokenReader.synchronize();"], [43, "            for (TokenRepresentation representation : tokenReader) {"], [44, "                Token token = representation.getToken();"], [46, "                if (unit.equals(token)) {"], [47, "                    tokenReader.read();"], [48, "                    break;"], [49, "                }"], [50, ""], [51, "                if (!unit.isHollow()) {"], [52, "                    return false;"], [53, "                }"], [54, ""], [55, "                TokenPatternUnit nextUnit = unitsDistributor.get(unitIndex + 1);"], [56, ""], [57, "                if (!token.equals(nextUnit) || extractorOpposites.isLocked()) {"], [58, "                    extractorOpposites.report(token);"], [60, "                    tokenReader.read();"], [61, "                    hollow.addToken(token);"], [62, ""], [63, "                    continue;"], [64, "                }"], [65, ""], [66, "                hollows.add(hollow);"], [67, "                hollow = new TokenHollow();"], [68, "                break;"], [72, "        return tokenReader.getIndex() + 1 >= tokenizedSource.size();"], [73, "    }"], [74, ""], [75, "    protected TokenPattern getPattern() {"], [76, "        return pattern;"]], "deleted": [[6, "import org.panda_lang.core.interpreter.token.suggestion.Separator;"], [12, "import java.util.Stack;"], [20, "    private TokenHollow hollow;"], [25, "        this.hollow = new TokenHollow();"], [37, "        Stack<Separator> separators = new Stack<>();"], [41, "            TokenPatternUnit nextUnit = unitsDistributor.get(unitIndex + 1);"], [43, "            loop:"], [44, "            if (!unit.isHollow()) {"], [46, "            }"], [47, "            else {"], [52, "        return tokenReader.getIndex() >= tokenizedSource.size();"]]}, "num_lines_added": 35, "num_lines_removed": 11}