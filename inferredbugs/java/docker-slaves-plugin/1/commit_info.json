{"hash": "26eb5e566dfdd1e737ae3eec3d01f25e09e8511f", "message": "simpler design.\nJobBuildsContainersContext is now just a data bag\nDockerJobContainersProvisioner is responsible for provisioning containers", "file_num_lines": 94, "diff_parsed": {"added": [[41, " * Provision {@link ContainerInstance}s based on ${@link JobBuildsContainersDefinition} to provide a queued task"], [42, " * an executor."], [54, "    private final JobBuildsContainersDefinition spec;"], [55, ""], [56, "    private final String remotingImage;"], [57, "    private final String scmImage;"], [58, "    private final String buildImage;"], [59, ""], [60, "    public DockerJobContainersProvisioner(Job job, DockerServerEndpoint dockerHost, TaskListener slaveListener, String remotingImage, String scmImage, String defaultBuildImage) throws IOException, InterruptedException {"], [64, "        spec = (JobBuildsContainersDefinition) job.getProperty(JobBuildsContainersDefinition.class);"], [66, "        this.remotingImage = remotingImage;"], [67, "        this.scmImage = scmImage;"], [68, "        this.buildImage = StringUtils.isBlank(spec.getBuildHostImage()) ?"], [69, "                defaultBuildImage : spec.getBuildHostImage();"], [70, "        context = new JobBuildsContainersContext();"], [81, "                context.setRemotingContainer(previousContext.getRemotingContainer());"], [93, "            if (driver.hasContainer(localLauncher, context.getRemotingContainer().getId())) {"], [97, "        final ContainerInstance remotingContainer = driver.createRemotingContainer(localLauncher, remotingImage);"], [98, "        context.setRemotingContainer(remotingContainer);"], [107, "        final ContainerInstance c = new ContainerInstance(context.isPreScm() ? scmImage : buildImage);"], [108, "        context.getBuildContainers().add(c);"], [109, "        return new BuildContainer(c, procStarter);"]], "deleted": [[41, " * Provision {@link DockerSlave} to provide queued task an executor."], [45, "    protected final Job job;"], [46, ""], [55, "    public DockerJobContainersProvisioner(Job job, DockerServerEndpoint dockerHost, TaskListener slaveListener, String defaultBuildContainerImageName, String remotingContainerImageName) throws IOException, InterruptedException {"], [56, "        this.job = job;"], [61, "        String buildContainerImageName = defaultBuildContainerImageName;"], [62, "        JobBuildsContainersDefinition def = (JobBuildsContainersDefinition) job.getProperty(JobBuildsContainersDefinition.class);"], [63, ""], [64, "        if (StringUtils.isNotEmpty(def.getBuildHostImage())) {"], [65, "            buildContainerImageName = def.getBuildHostImage();"], [66, "        }"], [67, ""], [68, "        context = new JobBuildsContainersContext(remotingContainerImageName, buildContainerImageName, def.getSideContainers());"], [79, "                context.getRemotingContainer().setId(previousContext.getRemotingContainer().getId());"], [91, "            if (driver.hasContainer(localLauncher, context.getRemotingContainer())) {"], [95, "        driver.createRemotingContainer(localLauncher, context.getRemotingContainer());"], [104, "        return new BuildContainer(context.createBuildContainer(), procStarter);"]]}, "num_lines_added": 22, "num_lines_removed": 17}