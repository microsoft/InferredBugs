{"hash": "e42d2eb43fef5e387f65ad50ab0e51c766233db9", "message": "More improvement on RrdBackendFactory, deprecation notices, and improvments on tests.", "file_num_lines": 33, "diff_parsed": {"added": [[18, "        try(RrdRandomAccessFileBackendFactory factory = new RrdRandomAccessFileBackendFactory()) {"], [19, "            super.testBackendFactory(factory,rrdfile.getCanonicalPath());"], [20, "        }"]], "deleted": [[3, "import java.io.DataInputStream;"], [5, "import java.io.FileInputStream;"], [7, "import java.util.concurrent.Executors;"], [8, "import java.util.concurrent.ScheduledExecutorService;"], [10, "import org.junit.Assert;"], [14, "import org.rrd4j.core.RrdBackend;"], [15, "import org.rrd4j.core.RrdBackendFactory;"], [16, "import org.rrd4j.core.RrdRandomAccessFileBackendFactory;"], [24, "    public void testBackendFactoryWithExecutor() throws IOException {"], [25, "        RrdRandomAccessFileBackendFactory factory = (RrdRandomAccessFileBackendFactory) RrdBackendFactory.getFactory(\"FILE\");"], [26, "        ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);"], [27, "        File rrdfile = testFolder.newFile(\"testfile\");"], [28, "        RrdBackend be = factory.open(rrdfile.getCanonicalPath(), false);"], [29, ""], [30, "        be.setLength(10);"], [31, "        be.writeDouble(0, 0);"], [32, "        be.close();"], [33, "        executor.shutdown();"], [34, "        DataInputStream is = new DataInputStream(new FileInputStream(rrdfile));"], [35, "        Double d = is.readDouble();"], [36, "        Assert.assertEquals(\"write to random access file failed\", 0, d, 1e-10);"], [37, "        is.close();"], [38, "    }"], [39, ""], [40, "    @Test"], [42, "        RrdRandomAccessFileBackendFactory factory = (RrdRandomAccessFileBackendFactory) RrdBackendFactory.getFactory(\"FILE\");"], [43, ""], [45, "        RrdBackend be = factory.open(rrdfile.getCanonicalPath(), false);"], [46, ""], [47, "        be.setLength(10);"], [48, "        be.writeDouble(0, 0);"], [49, "        be.close();"], [50, "        DataInputStream is = new DataInputStream(new FileInputStream(rrdfile));"], [51, "        Double d = is.readDouble();"], [52, "        Assert.assertEquals(\"write to random access file failed\", 0, d, 1e-10);"], [53, "        is.close();"]]}, "num_lines_added": 3, "num_lines_removed": 36}