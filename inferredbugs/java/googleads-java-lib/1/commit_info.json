{"hash": "d7cdbac8357a11c09b922cfb2f599b9603715e72", "message": "Preparing release 2.13.2", "file_num_lines": 113, "diff_parsed": {"added": [[66, ""], [125, "    // Pass the download input stream through a Transformer that removes the XML"], [126, "    // declaration. Create a new TransformerFactory and Transformer on each invocation"], [127, "    // since these objects are <em>not</em> thread safe."], [128, "    Transformer omitXmlDeclarationTransformer = TransformerFactory.newInstance().newTransformer();"], [129, "    omitXmlDeclarationTransformer.setOutputProperty(OutputKeys.INDENT, \"yes\");"], [130, "    omitXmlDeclarationTransformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"yes\");"], [131, "    omitXmlDeclarationTransformer.setOutputProperty("], [132, "        \"{http://xml.apache.org/xslt}indent-amount\", INDENT_AMOUNT);"], [133, ""]], "deleted": [[43, "import java.util.concurrent.atomic.AtomicReference;"], [49, "import javax.xml.transform.TransformerConfigurationException;"], [52, "import javax.xml.transform.TransformerFactoryConfigurationError;"], [69, "  private static final AtomicReference<Transformer> transformerRef ="], [70, "      new AtomicReference<Transformer>();"], [71, ""], [72, "  /**"], [73, "   * Returns the static Transformer instance of this class. Lazily constructs (in a thread-safe"], [74, "   * manner) the instance on the first invocation. This is not in a static initializer block because"], [75, "   * any errors need to be reported back to the caller."], [76, "   */"], [77, "  private static Transformer getTransformer()"], [78, "      throws TransformerConfigurationException, TransformerFactoryConfigurationError {"], [79, "    if (transformerRef.get() == null) {"], [80, "      Transformer transformer = TransformerFactory.newInstance().newTransformer();"], [81, "      transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");"], [82, "      transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"yes\");"], [83, "      transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", INDENT_AMOUNT);"], [84, ""], [85, "      // Set the atomic reference, discarding the new instance if another thread set it already."], [86, "      transformerRef.compareAndSet(null, transformer);"], [87, "    }"], [88, "    return transformerRef.get();"], [89, "  }"], [90, ""], [149, "    // Pass the download input stream through a transformer that removes the XML"], [150, "    // declaration."], [151, "    Transformer omitXmlDeclarationTransformer = getTransformer();"]]}, "num_lines_added": 10, "num_lines_removed": 28}