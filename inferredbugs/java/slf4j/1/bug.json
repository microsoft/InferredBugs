{"bug_class": "PROVER", "kind": "ERROR", "bug_type": "THREAD_SAFETY_VIOLATION", "qualifier": "Read/Write race. Non-private method `org.slf4j.impl.BasicMarker.contains` indirectly reads without synchronization from `this.org.slf4j.impl.BasicMarker.children`. Potentially races with write in method `BasicMarker.add(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.", "severity": "HIGH", "visibility": "user", "line": 136, "column": -1, "procedure": "boolean BasicMarker.contains(String)", "procedure_id": "org.slf4j.impl.BasicMarker.contains(java.lang.String):boolean.79ea2e62667ac914414c00dcaae99f74", "procedure_start_line": 130, "file": "slf4j-api/src/main/java/org/slf4j/impl/BasicMarker.java", "bug_trace": [{"level": 0, "filename": "slf4j-api/src/main/java/org/slf4j/impl/BasicMarker.java", "line_number": 136, "column_number": -1, "description": "<Read trace>"}, {"level": 0, "filename": "slf4j-api/src/main/java/org/slf4j/impl/BasicMarker.java", "line_number": 136, "column_number": -1, "description": "call to boolean BasicMarker.contains(Marker)"}, {"level": 1, "filename": "slf4j-api/src/main/java/org/slf4j/impl/BasicMarker.java", "line_number": 119, "column_number": -1, "description": "call to boolean BasicMarker.hasChildren()"}, {"level": 2, "filename": "slf4j-api/src/main/java/org/slf4j/impl/BasicMarker.java", "line_number": 83, "column_number": -1, "description": "access to `this.org.slf4j.impl.BasicMarker.children`"}, {"level": 0, "filename": "slf4j-api/src/main/java/org/slf4j/impl/BasicMarker.java", "line_number": 77, "column_number": -1, "description": "<Write trace>"}, {"level": 0, "filename": "slf4j-api/src/main/java/org/slf4j/impl/BasicMarker.java", "line_number": 77, "column_number": -1, "description": "access to `this.org.slf4j.impl.BasicMarker.children`"}], "key": "BasicMarker.java|contains|THREAD_SAFETY_VIOLATION", "node_key": "9c5d6d9028928346cc4fb44cced5dea1", "hash": "bbbb6b2e6c34e16ab4a06a88f63fd45c", "bug_type_hum": "Thread Safety Violation", "censored_reason": ""}