{"hash": "6940244bbcd508d3bcd596d179fb2028de01ff04", "message": "Markers contains \"references\" to other markers. We no longer mention child markers.\n\nThis fixes bug 100:\n\n  http://bugzilla.slf4j.org/show_bug.cgi?id=100", "file_num_lines": 131, "diff_parsed": {"added": [[35, " * A simple implementation of the {@link Marker} interface."], [45, "  private List refereceList;"], [58, "  public synchronized void add(Marker reference) {"], [59, "    if (reference == null) {"], [61, "          \"A null value cannot be added to a Marker as reference.\");"], [64, "    // no point in adding the reference multiple times"], [65, "    if (this.contains(reference)) {"], [68, "    } else if (reference.contains(this)) { // avoid recursion"], [69, "      // a potential reference should not its future \"parent\" as a reference"], [72, "      // let's add the reference"], [73, "      if (refereceList == null) {"], [74, "        refereceList = new Vector();"], [76, "      refereceList.add(reference);"], [81, "  public synchronized boolean hasReferences() {"], [82, "    return ((refereceList != null) && (refereceList.size() > 0));"], [83, "  }"], [84, ""], [85, "  public boolean hasChildren() {"], [86, "    return hasReferences();"], [90, "    if (refereceList != null) {"], [91, "      return refereceList.iterator();"], [97, "  public synchronized boolean remove(Marker referenceToRemove) {"], [98, "    if (refereceList == null) {"], [102, "    int size = refereceList.size();"], [104, "      Marker m = (Marker) refereceList.get(i);"], [105, "      if (referenceToRemove.equals(m)) {"], [106, "        refereceList.remove(i);"], [122, "    if (hasReferences()) {"], [123, "      for (int i = 0; i < refereceList.size(); i++) {"], [124, "        Marker ref = (Marker) refereceList.get(i);"], [125, "        if (ref.contains(other)) {"], [145, "    if (hasReferences()) {"], [146, "      for (int i = 0; i < refereceList.size(); i++) {"], [147, "        Marker ref = (Marker) refereceList.get(i);"], [148, "        if (ref.contains(name)) {"], [178, "    if (!this.hasReferences()) {"], [182, "    Marker reference;"], [186, "      reference = (Marker) it.next();"], [187, "      sb.append(reference.getName());"]], "deleted": [[35, " * An simple implementation of the {@link Marker} interface."], [45, "  private List children;"], [58, "  public synchronized void add(Marker markerToAddAsChild) {"], [59, "    if (markerToAddAsChild == null) {"], [61, "          \"A null value cannot be added to a Marker as child.\");"], [64, "    // no point in adding the child multiple times"], [65, "    if (this.contains(markerToAddAsChild)) {"], [68, "    } else if (markerToAddAsChild.contains(this)) { // avoid recursion"], [69, "      // a potential child should not its future parent as a child"], [72, "      // let's add the child"], [73, "      if (children == null) {"], [74, "        children = new Vector();"], [76, "      children.add(markerToAddAsChild);"], [81, "  public synchronized boolean hasChildren() {"], [82, "    return ((children != null) && (children.size() > 0));"], [86, "    if (children != null) {"], [87, "      return children.iterator();"], [93, "  public synchronized boolean remove(Marker markerToRemove) {"], [94, "    if (children == null) {"], [98, "    int size = children.size();"], [100, "      Marker m = (Marker) children.get(i);"], [101, "      if (markerToRemove.equals(m)) {"], [102, "        children.remove(i);"], [106, "    // could not find markerToRemove"], [119, "    if (hasChildren()) {"], [120, "      for (int i = 0; i < children.size(); i++) {"], [121, "        Marker child = (Marker) children.get(i);"], [122, "        if (child.contains(other)) {"], [142, "    if (hasChildren()) {"], [143, "      for (int i = 0; i < children.size(); i++) {"], [144, "        Marker child = (Marker) children.get(i);"], [145, "        if (child.contains(name)) {"], [175, "    if (!this.hasChildren()) {"], [179, "    Marker child;"], [183, "      child = (Marker) it.next();"], [184, "      sb.append(child.getName());"]]}, "num_lines_added": 39, "num_lines_removed": 36}