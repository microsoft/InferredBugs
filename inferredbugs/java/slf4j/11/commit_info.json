{"hash": "cfa8f7519b9e47e4f0b5c9e16754166bb09919fd", "message": "avoid syncronization", "file_num_lines": 109, "diff_parsed": {"added": [[44, "    private List<Marker> referenceList = new CopyOnWriteArrayList<Marker>();"], [57, "    public void add(Marker reference) {"], [74, "    public boolean hasReferences() {"], [75, "        return (referenceList.size() > 0);"], [83, "      return referenceList.iterator();"], [86, "    public boolean remove(Marker referenceToRemove) {"], [87, "        return referenceList.remove(referenceToRemove);"]], "deleted": [[27, "import java.util.Collections;"], [45, "    private List<Marker> referenceList;"], [58, "    public synchronized void add(Marker reference) {"], [71, "            // let's add the reference"], [72, "            if (referenceList == null) {"], [73, "                referenceList = new CopyOnWriteArrayList<Marker>();"], [74, "            }"], [79, "    public synchronized boolean hasReferences() {"], [80, "        return ((referenceList != null) && (referenceList.size() > 0));"], [88, "        if (referenceList != null) {"], [89, "            return referenceList.iterator();"], [90, "        } else {"], [91, "            List<Marker> emptyList = Collections.emptyList();"], [92, "            return emptyList.iterator();"], [93, "        }"], [96, "    public synchronized boolean remove(Marker referenceToRemove) {"], [97, "        if (referenceList == null) {"], [98, "            return false;"], [99, "        }"], [100, ""], [101, "        int size = referenceList.size();"], [102, "        for (int i = 0; i < size; i++) {"], [103, "            Marker m = referenceList.get(i);"], [104, "            if (referenceToRemove.equals(m)) {"], [105, "                referenceList.remove(i);"], [106, "                return true;"], [107, "            }"], [108, "        }"], [109, "        return false;"]]}, "num_lines_added": 7, "num_lines_removed": 29}