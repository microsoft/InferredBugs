{"hash": "c90298073209f0bfa837ec0fbf428af2b0690a87", "message": "Revert \"add test\"\n\nThis reverts commit 1ea924978971d35114734a06d16bf6714bbd259a.", "file_num_lines": 20, "diff_parsed": {"added": [[16, "    public void test() {"], [23, "                }, 8192, 16))"], [24, "                .test();"]], "deleted": [[3, "import static org.junit.Assert.assertEquals;"], [4, ""], [5, "import java.io.BufferedReader;"], [6, "import java.io.ByteArrayInputStream;"], [7, "import java.io.ByteArrayOutputStream;"], [8, "import java.io.IOException;"], [9, "import java.io.InputStream;"], [10, "import java.io.InputStreamReader;"], [12, "import java.util.stream.Collectors;"], [13, "import java.util.zip.GZIPInputStream;"], [21, "import io.reactivex.functions.Consumer;"], [27, "    public void test() throws IOException {"], [28, "        final ByteArrayOutputStream bytes = new ByteArrayOutputStream();"], [35, "                }, 8192, 16)).doOnNext(new Consumer<byte[]>() {"], [36, "                    @Override"], [37, "                    public void accept(byte[] b) throws Exception {"], [38, "                        bytes.write(b);"], [39, "                    }"], [40, "                }).test()"], [41, "                .assertComplete();"], [42, "        InputStream is = new GZIPInputStream(new ByteArrayInputStream(bytes.toByteArray()));"], [43, ""], [44, "        assertEquals(\"hi there\",read(is));"], [47, "    public static String read(InputStream input) throws IOException {"], [48, "        BufferedReader buffer = new BufferedReader(new InputStreamReader(input));"], [49, "        return buffer.lines().collect(Collectors.joining(\"\\n\"));"], [50, "    }"]]}, "num_lines_added": 3, "num_lines_removed": 27}