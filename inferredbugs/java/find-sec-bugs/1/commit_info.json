{"hash": "293ce242f5b054d43229b4c6938c860b8c97f065", "message": "Copy all files in metadata folder\n\n - This allows plugins to specify other files such as bugrank.txt\n    and adjustBugrank.txt", "file_num_lines": 86, "diff_parsed": {"added": [[20, "import static org.mockito.Mockito.mock;"], [26, "import java.net.URISyntaxException;"], [27, "import java.net.URL;"], [31, "import javax.annotation.concurrent.NotThreadSafe;"], [32, ""], [33, "import org.apache.commons.io.IOUtils;"], [34, "import org.slf4j.Logger;"], [35, "import org.slf4j.LoggerFactory;"], [36, ""], [37, "import edu.umd.cs.findbugs.BugReporter;"], [38, "import edu.umd.cs.findbugs.DetectorFactoryCollection;"], [39, "import edu.umd.cs.findbugs.FindBugs2;"], [40, "import edu.umd.cs.findbugs.FindBugsProgress;"], [41, "import edu.umd.cs.findbugs.Plugin;"], [42, "import edu.umd.cs.findbugs.PluginException;"], [43, "import edu.umd.cs.findbugs.Project;"], [44, "import edu.umd.cs.findbugs.config.ProjectFilterSettings;"], [45, "import edu.umd.cs.findbugs.config.UserPreferences;"], [63, "     * @throws URISyntaxException"], [67, "            PluginException, NoSuchFieldException, IllegalAccessException, URISyntaxException {"], [86, "            loadedPlugin = Plugin.loadCustomPlugin(f.toURI().toURL(), project);"], [123, "     * @throws URISyntaxException"], [125, "    private byte[] buildFakePluginJar() throws IOException, URISyntaxException {"], [131, "        final URL metadata = cl.getResource(\"metadata\");"], [132, "        if (metadata != null) {"], [133, "            final File dir = new File(metadata.toURI());"], [134, ""], [135, "            //Add files to the jar stream"], [136, "            addFilesToStream(cl, jar, dir, \"\");"], [139, "        jar.close();"], [143, ""], [144, "    private void addFilesToStream(final ClassLoader cl, final JarOutputStream jar, final File dir,"], [145, "            final String path) throws IOException {"], [146, "        for (final File nextFile : dir.listFiles()) {"], [147, "            if (nextFile.isFile()) {"], [148, "                final String resource = path + nextFile.getName();"], [149, "                jar.putNextEntry(new ZipEntry(resource));"], [150, "                jar.write(IOUtils.toByteArray(cl.getResourceAsStream(\"metadata/\" + resource)));"], [151, "            } else {"], [152, "            \taddFilesToStream(cl, jar, nextFile, path + nextFile.getName() + \"/\");"], [153, "            }"], [154, "        }"], [155, "    }"]], "deleted": [[20, "import edu.umd.cs.findbugs.*;"], [21, "import edu.umd.cs.findbugs.config.ProjectFilterSettings;"], [22, "import edu.umd.cs.findbugs.config.UserPreferences;"], [23, "import org.apache.commons.io.IOUtils;"], [24, "import org.slf4j.Logger;"], [25, "import org.slf4j.LoggerFactory;"], [27, "import javax.annotation.concurrent.NotThreadSafe;"], [32, "import java.util.Arrays;"], [33, "import java.util.Random;"], [37, "import static org.mockito.Mockito.mock;"], [58, "            PluginException, NoSuchFieldException, IllegalAccessException {"], [59, ""], [60, "        final ClassLoader cl = getClass().getClassLoader();"], [79, "            loadedPlugin = Plugin.loadCustomPlugin(f.toURL(), project);"], [117, "    private byte[] buildFakePluginJar() throws IOException {"], [123, "        //Add files to the jar stream"], [124, "        for (String resource : Arrays.asList(\"findbugs.xml\", \"messages.xml\", \"META-INF/MANIFEST.MF\")) {"], [125, "            jar.putNextEntry(new ZipEntry(resource));"], [126, "            jar.write(IOUtils.toByteArray(cl.getResourceAsStream(\"metadata/\" + resource)));"]]}, "num_lines_added": 43, "num_lines_removed": 19}