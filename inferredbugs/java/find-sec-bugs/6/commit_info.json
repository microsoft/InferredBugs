{"hash": "a2ae001dd63808ece090a730ed00bd5fa769d67c", "message": "Added config parameters to change taint config", "file_num_lines": 157, "diff_parsed": {"added": [[20, "import com.h3xstream.findsecbugs.FindSecBugsGlobalConfig;"], [31, "import edu.umd.cs.findbugs.io.IO;"], [103, "                    if (isTaintedByAnnotation(i - 1)) {"], [105, "                        // this would add line number for the first instruction in the method"], [107, "                    } else if (inMainMethod) {"], [108, "                        if (FindSecBugsGlobalConfig.getInstance().isTaintedMainArgument()) {"], [109, "                            value = new Taint(Taint.State.TAINTED);"], [110, "                        } else {"], [111, "                            value = new Taint(Taint.State.SAFE);"], [112, "                        }"], [253, "        BufferedReader stream = null;"], [256, "            stream = new BufferedReader(new InputStreamReader(in, \"utf-8\"));"], [263, "        } catch (IOException ex) {"], [264, "            assert false : ex.getMessage();"], [265, "        } finally {"], [266, "            IO.close(stream);"]], "deleted": [[38, "import java.util.logging.Level;"], [39, "import java.util.logging.Logger;"], [51, "    private static final Logger LOG = Logger.getLogger(TaintAnalysis.class.getName());"], [52, ""], [105, "                    if (inMainMethod || isTaintedByAnnotation(i - 1)) {"], [107, "                        // this would add line number for the first instruction in the main method"], [251, "            BufferedReader stream = new BufferedReader(new InputStreamReader(in));"], [257, "            stream.close();"], [259, "        } catch (IOException e) {"], [260, "            LOG.log(Level.SEVERE, \"Unable to load data from {0}\", path);"]]}, "num_lines_added": 16, "num_lines_removed": 10}