{"hash": "cf83195ece01d99845918d4364d377feab77fbf9", "message": "support iterative training by restarting all nodes", "file_num_lines": 108, "diff_parsed": {"added": [[21, "    public static class RegisterRequest implements Serializable {"], [25, "        public RegisterRequest(int parameterServerIndex) {"], [60, "                } else if ((info.type == PartitionInfo.Type.EXCLUSIVE) && (info.exclusiveIndex != parameterServerIndex)) {"], [70, "        this.monitor.tell(new RegisterRequest(this.parameterServerIndex), getSelf());"], [102, "                if (req.initializeOnly) {"], [104, "                    DMatrix m = model.getMatrix(update.matrixName);"], [105, "                    if (m.localCache == null) {"], [106, "                        m.setLocalCache(update.data);"], [107, "                    }"], [108, "                    else {"], [109, "                        m.mergeMatrix(update.data);"], [110, "                    }"]], "deleted": [[21, "    public static class Started implements Serializable {"], [25, "        public Started(int parameterServerIndex) {"], [34, ""], [61, "                }"], [62, "                else if ((info.type == PartitionInfo.Type.EXCLUSIVE) && (info.exclusiveIndex != parameterServerIndex)) {"], [72, "        this.monitor.tell(new Started(this.parameterServerIndex), getSelf());"], [104, "                if (req.replace) {"], [106, "                    model.getMatrix(update.matrixName).setLocalCache(update.data);"]]}, "num_lines_added": 12, "num_lines_removed": 8}