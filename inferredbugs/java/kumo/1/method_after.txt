    private List<WordFrequency> loadFrequencies(final String input) {
        try {
            final FrequencyAnalyzer frequencyAnalyzer = new FrequencyAnalyzer();
            frequencyAnalyzer.setWordFrequenciesToReturn(cliParameters.getWordCount());
            frequencyAnalyzer.setMinWordLength(cliParameters.getMinWordLength());
            frequencyAnalyzer.setStopWords(cliParameters.getStopWords());
            frequencyAnalyzer.setCharacterEncoding(cliParameters.getCharacterEncoding());

            if (cliParameters.getNormalizers().isEmpty()) {
                cliParameters.getNormalizers().addAll(Arrays.asList(NormalizerType.TRIM, NormalizerType.CHARACTER_STRIPPING, NormalizerType.LOWERCASE));
            }
            for (final NormalizerType normalizer : cliParameters.getNormalizers()) {
                frequencyAnalyzer.addNormalizer(buildNormalizer(normalizer));
            }

            frequencyAnalyzer.setWordTokenizer(buildTokenizer());

            return frequencyAnalyzer.load(toInputStream(input));

        } catch (final IOException e) {
            throw new RuntimeException(e.getMessage(), e);
        }
    }