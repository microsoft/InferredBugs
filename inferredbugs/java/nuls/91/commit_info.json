{"hash": "86ea1d605e8c21ae9eb304baf6df8c78943ed133", "message": "add connection time out", "file_num_lines": 68, "diff_parsed": {"added": [[5, "import io.netty.channel.ChannelFutureListener;"], [48, "                .option(ChannelOption.CONNECT_TIMEOUT_MILLIS, 3000)"], [54, "            ChannelFuture future = boot.connect(node.getIp(), node.getSeverPort()).addListener(new ChannelFutureListener() {"], [55, "                @Override"], [56, "                public void operationComplete(ChannelFuture future) throws Exception {"], [57, "                    if (future.isSuccess()) {"], [58, "                        socketChannel = (SocketChannel) future.channel();"], [59, "                    } else {"], [60, "                        Log.info(\"Client connect to host error: \" + future.cause() + \", remove node: \" + node.getId());"], [61, "                        getNetworkService().removeNode(node.getId());"], [62, "                    }"], [63, "                }"], [64, "            });"], [71, "            Log.error(\"Client start exception:\" + e.getMessage() + \", remove node: \" + node.getId());"]], "deleted": [[52, "            ChannelFuture future = boot.connect(node.getIp(), node.getSeverPort()).sync();"], [53, "            if (future.isSuccess()) {"], [54, "                socketChannel = (SocketChannel) future.channel();"], [55, "            } else {"], [56, "                System.out.println(\"---------------client start !success remove node-----------------\" + node.getId());"], [57, "                getNetworkService().removeNode(node.getId());"], [58, "            }"], [61, "            Log.debug(\"-------------NettyClient start error: \" + e.getMessage());"], [66, "            System.out.println(\"---------------client start exception remove node-----------------\" + node.getId());"]]}, "num_lines_added": 14, "num_lines_removed": 9}