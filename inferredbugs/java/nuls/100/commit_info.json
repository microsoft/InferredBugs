{"hash": "db68e55e1ff1bf0d6ffcb6896c050ff5e047af32", "message": "update account", "file_num_lines": 221, "diff_parsed": {"added": [[3, " * <p>"], [5, " * <p>"], [12, " * <p>"], [15, " * <p>"], [32, "import io.nuls.core.utils.crypto.Utils;"], [99, "        if (getEncryptedPriKey() != null && getEncryptedPriKey().length > 0) {"], [107, "        if (!isEncrypted()) {"], [111, "        if (this.getEcKey().getEncryptedPrivateKey() != null) {"], [118, "    public byte[] getHash160() {"], [124, "        if (isLocked()) {"], [130, "    public boolean isLocked() {"], [131, "        return (this.getPriKey() == null) || (this.getPriKey().length == 0);"], [141, "    public void encrypt(String password) throws NulsException {"], [142, "        encrypt(password, false);"], [148, "    public void encrypt(String password, boolean isForce) throws NulsException {"], [149, "        if (this.isEncrypted() && !isForce) {"], [150, "            if (!unlock(password)) {"], [155, "        byte[] privKeyBytes = eckey.getPrivKeyBytes();"], [156, "        EncryptedData encryptedPrivateKey = AESEncrypt.encrypt(privKeyBytes, EncryptedData.DEFAULT_IV, new KeyParameter(Sha256Hash.hash(password.getBytes())));"], [165, "    public boolean decrypt(String password) throws NulsException {"], [167, "            byte[] unencryptedPrivateKey = AESEncrypt.decrypt(this.getEncryptedPriKey(), password);"], [171, "            //todo  pub key compress?"], [178, "        } catch (Exception e) {"], [186, "        int s = Utils.sizeOfBytes(address.getHash());"], [187, "        s += Utils.sizeOfString(alias);"], [188, "        s += Utils.sizeOfBytes(encryptedPriKey);"], [189, "        s += Utils.sizeOfBytes(pubKey);"], [190, "        s += 1;"], [191, "        s += Utils.sizeOfBytes(extend);"], [198, "        stream.writeString(alias);"], [201, "        stream.write(status);"], [207, "        address = Address.fromHashs(byteBuffer.readByLengthByte());"], [211, "        status = (int) (byteBuffer.readByte());"], [321, "    public static void showAccount(Account account) {"], [323, "        System.out.println(\"Address\uff1a \" + account.getAddress().getBase58());"], [324, "        System.out.println(\"Public key\uff1a \" + Hex.encode(account.getPubKey()));"], [325, "        System.out.println(\"Private key\uff1a\" + Hex.encode(account.getPriKey()));"], [326, "        System.out.println(\"Encrypted pri key\uff1a \" + Hex.encode(account.getEncryptedPriKey()));"], [328, "        System.out.println(\"\\tpublic key\uff1a\" + account.getEcKey().getPublicKeyAsHex());"], [331, "        } catch (ECKey.MissingPrivateKeyException e) {"], [332, "            System.out.println(\"\\tprivate key\uff1ais NULL\");"], [334, "        System.out.println(\"\\tencrypted pkey\uff1a \" + account.getEcKey().getEncryptedPrivateKey());"]], "deleted": [[3, " *"], [5, " *"], [12, " *"], [15, " *"], [98, "        if(getEncryptedPriKey()!=null && getEncryptedPriKey().length>0) {"], [106, "        if(!isEncrypted()){"], [110, "        if(this.getEcKey().getEncryptedPrivateKey()!= null) {"], [117, "    public byte[] getHash160(){"], [123, "        if(isLocked()){"], [129, "    public boolean isLocked(){"], [130, "        return (this.getPriKey()== null) || (this.getPriKey().length==0);"], [140, "    public void encrypt(String password) throws NulsException{"], [141, "        encrypt( password, false);"], [147, "    public void encrypt(String password,boolean isForce) throws NulsException{"], [148, "        if(this.isEncrypted() && !isForce){"], [149, "            if(!unlock(password)) {"], [154, "        byte [] privKeyBytes = eckey.getPrivKeyBytes();"], [155, "        EncryptedData encryptedPrivateKey = AESEncrypt.encrypt(privKeyBytes,EncryptedData.DEFAULT_IV,new KeyParameter(Sha256Hash.hash(password.getBytes())));"], [164, "    public boolean decrypt(String password) throws NulsException{"], [166, "            byte[] unencryptedPrivateKey = AESEncrypt.decrypt(this.getEncryptedPriKey(),password);"], [170, "        //todo  pub key compress?"], [177, "        }catch (Exception e){"], [185, "        int s = 0;"], [186, ""], [187, "        if (StringUtils.isNotBlank(alias)) {"], [188, "            try {"], [189, "                s += alias.getBytes(NulsConfig.DEFAULT_ENCODING).length + 1;"], [190, "            } catch (UnsupportedEncodingException e) {"], [191, "                Log.error(e);"], [192, "            }"], [193, "        } else {"], [194, "            s++;"], [195, "        }"], [196, "        try {"], [197, "            s += address.getBase58().getBytes(NulsConfig.DEFAULT_ENCODING).length;"], [198, "        } catch (UnsupportedEncodingException e) {"], [199, "            Log.error(e);"], [200, "        }"], [201, "        if (null != encryptedPriKey) {"], [202, "            s += encryptedPriKey.length + 1;"], [203, "        } else {"], [204, "            s++;"], [205, "        }"], [206, "        s += 1;//status"], [207, ""], [208, "        s += pubKey.length + 1;"], [209, "        if (null != extend) {"], [210, "            s += extend.length + 1;"], [211, "        } else {"], [212, "            s++;"], [213, "        }"], [219, "        stream.writeString(alias);"], [223, "        stream.write(new VarInt(status).encode());"], [230, "        address = new Address(new String(byteBuffer.readByLengthByte()));"], [233, "        status = (int)(byteBuffer.readVarInt());"], [343, "    public static void  showAccount(Account account){"], [345, "        System.out.println(\"Address\uff1a \"+ account.getAddress().getBase58());"], [346, "        System.out.println(\"Public key\uff1a \"+ Hex.encode(account.getPubKey()));"], [347, "        System.out.println(\"Private key\uff1a\"+ Hex.encode(account.getPriKey()));"], [348, "        System.out.println(\"Encrypted pri key\uff1a \"+ Hex.encode(account.getEncryptedPriKey()));"], [350, "        System.out.println(\"\\tpublic key\uff1a\"+ account.getEcKey().getPublicKeyAsHex());"], [353, "        }catch (ECKey.MissingPrivateKeyException e){"], [354, "            System.out.println(\"\\tprivate key\uff1ais NULL\" );"], [356, "        System.out.println(\"\\tencrypted pkey\uff1a \"+ account.getEcKey().getEncryptedPrivateKey());"]]}, "num_lines_added": 42, "num_lines_removed": 64}