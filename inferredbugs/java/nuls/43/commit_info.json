{"hash": "188fd955073906561c894f6b10fe60ba2bc5973d", "message": "update agent&deposit", "file_num_lines": 363, "diff_parsed": {"added": [[137, ""], [175, "        PocMeetingRound round = packingRoundManager.getCurrentRound();"], [176, "        while (TimeService.currentTimeMillis() < round.getStartTime()) {"], [183, "        boolean imIn = consensusManager.isPartakePacking() &&round.getLocalPacker() != null;"], [185, "            startMeeting(round);"], [189, "    private void startMeeting(PocMeetingRound round) throws NulsException, IOException {"], [190, "        PocMeetingMember self = round.getMember(round.getLocalPacker().getAddress().toString());"], [199, "        packing(self,round);"], [203, "    private void packing(PocMeetingMember self,PocMeetingRound round) throws NulsException, IOException {"], [211, "        roundData.setRoundIndex(round.getIndex());"], [212, "        roundData.setConsensusMemberCount(round.getMemberCount());"], [214, "        roundData.setRoundStartTime(round.getStartTime());"], [254, "        addConsensusTx(bestBlock, txList, self,round);"], [257, "        Block newBlock = ConsensusTool.createBlock(bd,round.getLocalPacker());"], [321, "    private void addConsensusTx(Block bestBlock, List<Transaction> txList, PocMeetingMember self,PocMeetingRound round) throws NulsException, IOException {"], [322, "        punishTx(bestBlock, txList, self,round);"], [323, "        CoinBaseTransaction coinBaseTransaction = packingRoundManager.createNewCoinBaseTx(self, txList,round);"], [324, "        coinBaseTransaction.setScriptSig(accountService.createP2PKHScriptSigFromDigest(coinBaseTransaction.getHash(), round.getLocalPacker(), NulsContext.CACHED_PASSWORD_OF_WALLET).serialize());"], [329, "    private void punishTx(Block bestBlock, List<Transaction> txList, PocMeetingMember self,PocMeetingRound round) throws NulsException, IOException {"], [330, "        redPunishTx(bestBlock, txList,round);"], [331, "        yellowPunishTx(bestBlock, txList, self,round);"], [334, "    private void redPunishTx(Block bestBlock, List<Transaction> txList,PocMeetingRound round) throws NulsException, IOException {"], [347, "            tx.setScriptSig(accountService.createP2PKHScriptSigFromDigest(tx.getHash(),round.getLocalPacker(), NulsContext.CACHED_PASSWORD_OF_WALLET).serialize());"], [352, "    private void yellowPunishTx(Block bestBlock, List<Transaction> txList, PocMeetingMember self,PocMeetingRound round) throws NulsException, IOException {"], [425, "        punishTx.setScriptSig(accountService.createP2PKHScriptSigFromDigest(punishTx.getHash(),round.getLocalPacker(), NulsContext.CACHED_PASSWORD_OF_WALLET).serialize());"]], "deleted": [[28, "import io.nuls.consensus.cache.manager.member.ConsensusCacheManager;"], [33, "import io.nuls.consensus.entity.Consensus;"], [40, "import io.nuls.consensus.entity.member.Agent;"], [41, "import io.nuls.consensus.entity.member.Deposit;"], [49, "import io.nuls.consensus.service.impl.PocBlockService;"], [59, "import io.nuls.core.constant.TransactionConstant;"], [143, "                try {"], [144, "                    startMeeting();"], [145, "                } catch (Exception e1) {"], [146, "                    Log.error(e1);"], [147, "                }"], [185, "        while (TimeService.currentTimeMillis() < (packingRoundManager.getCurrentRound().getStartTime())) {"], [192, "        boolean imIn = consensusManager.isPartakePacking() && packingRoundManager.getCurrentRound().getLocalPacker() != null;"], [194, "            startMeeting();"], [198, "    private void startMeeting() throws NulsException, IOException {"], [199, ""], [200, "        PocMeetingMember self = packingRoundManager.getCurrentRound().getMember(packingRoundManager.getCurrentRound().getLocalPacker().getAddress().toString());"], [209, "        packing(self);"], [213, "    private void packing(PocMeetingMember self) throws NulsException, IOException {"], [221, "        roundData.setRoundIndex(packingRoundManager.getCurrentRound().getIndex());"], [222, "        roundData.setConsensusMemberCount(packingRoundManager.getCurrentRound().getMemberCount());"], [224, "        roundData.setRoundStartTime(packingRoundManager.getCurrentRound().getStartTime());"], [264, "        addConsensusTx(bestBlock, txList, self);"], [267, "        Block newBlock = ConsensusTool.createBlock(bd, packingRoundManager.getCurrentRound().getLocalPacker());"], [331, "    private void addConsensusTx(Block bestBlock, List<Transaction> txList, PocMeetingMember self) throws NulsException, IOException {"], [332, "        punishTx(bestBlock, txList, self);"], [333, "        CoinBaseTransaction coinBaseTransaction = packingRoundManager.createNewCoinBaseTx(self, txList, packingRoundManager.getCurrentRound());"], [334, "        coinBaseTransaction.setScriptSig(accountService.createP2PKHScriptSigFromDigest(coinBaseTransaction.getHash(), packingRoundManager.getCurrentRound().getLocalPacker(), NulsContext.CACHED_PASSWORD_OF_WALLET).serialize());"], [339, "    private void punishTx(Block bestBlock, List<Transaction> txList, PocMeetingMember self) throws NulsException, IOException {"], [340, "        redPunishTx(bestBlock, txList);"], [341, "        yellowPunishTx(bestBlock, txList, self);"], [344, "    private void redPunishTx(Block bestBlock, List<Transaction> txList) throws NulsException, IOException {"], [357, "            tx.setScriptSig(accountService.createP2PKHScriptSigFromDigest(tx.getHash(), packingRoundManager.getCurrentRound().getLocalPacker(), NulsContext.CACHED_PASSWORD_OF_WALLET).serialize());"], [362, "    private void yellowPunishTx(Block bestBlock, List<Transaction> txList, PocMeetingMember self) throws NulsException, IOException {"], [383, "        PocMeetingRound round = packingRoundManager.getCurrentRound();"], [436, "        punishTx.setScriptSig(accountService.createP2PKHScriptSigFromDigest(punishTx.getHash(), packingRoundManager.getCurrentRound().getLocalPacker(), NulsContext.CACHED_PASSWORD_OF_WALLET).serialize());"]]}, "num_lines_added": 25, "num_lines_removed": 36}