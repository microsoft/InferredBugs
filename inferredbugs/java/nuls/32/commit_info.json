{"hash": "f97e1cde7b76657de5ad57be78954b00d61a0021", "message": "rpc reactor", "file_num_lines": 653, "diff_parsed": {"added": [[45, "import io.nuls.core.crypto.MD5Util;"], [541, "            if (account.isEncrypted()) {"], [542, "                if (!StringUtils.validPassword(password) || !account.decrypt(password)) {"], [543, "                    return Result.getFailed(ErrorCode.PASSWORD_IS_WRONG);"], [544, "                }"], [545, "            }"], [555, "    @Override"], [556, "    public Result exportAccounts(String password) {"], [557, "        List<Account> accounts = accountCacheService.getAccountList();"], [558, "        if (null == accounts || accounts.isEmpty()) {"], [561, "        List<String> prikeyList = new ArrayList<>();"], [562, "        for (Account account : accounts) {"], [563, "            account.decrypt(password);"], [564, "            if (account.isEncrypted()) {"], [565, "                return Result.getFailed(ErrorCode.PASSWORD_IS_WRONG);"], [566, "            }"], [567, "            prikeyList.add(Hex.encode(account.getPriKey()));"], [568, "            account.encrypt(password);"], [569, "        }"], [570, ""], [571, "        Map<String, Object> map = new HashMap<>();"], [572, "        map.put(\"prikeys\", prikeyList);"], [573, "        map.put(\"password\", MD5Util.md5(password));"], [574, "        return new Result(true, \"OK\", prikeyList);"]], "deleted": [[29, "import io.nuls.account.entity.Alias;"], [541, "        }"], [542, "        if (!account.decrypt(password)) {"], [543, "            return Result.getFailed(ErrorCode.PASSWORD_IS_WRONG);"], [553, "    //    @Override"], [554, "    public Result exportAccounts() {"], [555, ""], [556, "        List<AccountPo> poList = this.accountDao.getList();"], [557, "        if (null == poList || poList.isEmpty()) {"], [560, "        return new Result(true, \"OK\", poList);"]]}, "num_lines_added": 24, "num_lines_removed": 10}