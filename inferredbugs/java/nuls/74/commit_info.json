{"hash": "b65608053571b1a17e8d12a65bf331eb13a83664", "message": "Restructure tx validator", "file_num_lines": 83, "diff_parsed": {"added": [[3, " * <p>"], [5, " * <p>"], [12, " * <p>"], [15, " * <p>"], [72, "            return ValidateResult.getFailedResult(ErrorCode.ADDRESS_ERROR);"], [75, "            return ValidateResult.getFailedResult(ErrorCode.ALIAS_ERROR);"], [84, "        if (aliasValue < AccountConstant.ALIAS_NA.getValue() + tx.getFee().getValue()) {"], [85, "            return ValidateResult.getFailedResult(ErrorCode.INVALID_INPUT);"], [92, "                    if (trx.getHash().equals(tx.getHash())) {"], [97, "                        return ValidateResult.getFailedResult(ErrorCode.ACCOUNT_ALREADY_SET_ALIAS);"], [108, "            return ValidateResult.getFailedResult(ErrorCode.ALIAS_EXIST);"]], "deleted": [[3, " *"], [5, " *"], [12, " *"], [15, " *"], [72, "            return ValidateResult.getFailedResult(\"The address format error\");"], [75, "            return ValidateResult.getFailedResult(\"The alias is between 3 to 20 characters\");"], [81, "            if (input.getFrom() == null) {"], [82, "                return ValidateResult.getFailedResult(ErrorCode.ORPHAN_TX);"], [83, "            }"], [87, "        if (aliasValue < AccountConstant.ALIAS_NA.add(getLedgerService().getTxFee(TransactionConstant.TX_TYPE_SET_ALIAS)).getValue()) {"], [88, "            return ValidateResult.getFailedResult(\"utxo not enough\");"], [95, "                    if(trx.getHash().equals(tx.getHash())) {"], [100, "                        return ValidateResult.getFailedResult(\"Alias has been set up \");"], [111, "            return ValidateResult.getFailedResult(\"The alias has been occupied\");"]]}, "num_lines_added": 11, "num_lines_removed": 14}