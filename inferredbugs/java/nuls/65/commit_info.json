{"hash": "eb0bb9f04c07e960d1d061df1f3f180830855f34", "message": "update consensus code", "file_num_lines": 226, "diff_parsed": {"added": [[44, "import io.nuls.network.entity.Node;"], [45, "import io.nuls.network.service.NetworkService;"], [54, "public class BlockMaintenanceThread implements Runnable {"], [55, ""], [56, "    //todo 3"], [57, "    private static final int MIN_NODE_COUNT = 1;"], [66, "    private NetworkService networkService = NulsContext.getServiceBean(NetworkService.class);"], [67, "    private MaintenanceStatus status = MaintenanceStatus.READY;"], [80, "        while (true) {"], [81, "            BestCorrectBlock bestCorrectBlock = checkLocalBestCorrentBlock();"], [82, "            boolean doit = false;"], [83, "            long startHeight = 1;"], [84, ""], [85, ""], [86, "            do {"], [87, "                if (null == bestCorrectBlock.getLocalBestBlock() && bestCorrectBlock.getNetBestBlockInfo() == null) {"], [88, "                    doit = true;"], [89, "                    BlockInfo blockInfo = BEST_HEIGHT_FROM_NET.request(-1);"], [90, "                    bestCorrectBlock.setNetBestBlockInfo(blockInfo);"], [91, "                    break;"], [92, "                }"], [93, "                startHeight = bestCorrectBlock.getLocalBestBlock().getHeader().getHeight() + 1;"], [94, "                long interval = TimeService.currentTimeMillis() - bestCorrectBlock.getLocalBestBlock().getHeader().getTime();"], [95, "                if (interval < (PocConsensusConstant.BLOCK_TIME_INTERVAL_SECOND * 2000)) {"], [96, "                    doit = false;"], [97, "                    break;"], [98, "                }"], [99, "                if (null == bestCorrectBlock.getNetBestBlockInfo()) {"], [100, "                    bestCorrectBlock.setNetBestBlockInfo(BEST_HEIGHT_FROM_NET.request(0));"], [101, "                }"], [102, "                if (null == bestCorrectBlock.getNetBestBlockInfo()) {"], [103, "                    break;"], [104, "                }"], [105, "                if (bestCorrectBlock.getNetBestBlockInfo().getBestHeight() > bestCorrectBlock.getLocalBestBlock().getHeader().getHeight()) {"], [106, "                    doit = true;"], [107, "                    break;"], [108, "                }"], [109, "            } while (false);"], [110, ""], [111, ""], [113, "                return;"], [115, "            if (doit) {"], [116, "                downloadBlocks(bestCorrectBlock.getNetBestBlockInfo().getNodeIdList(), startHeight, bestCorrectBlock.getNetBestBlockInfo().getBestHeight());"], [117, "            } else {"], [120, "            long start = TimeService.currentTimeMillis();"], [121, "            //todo"], [122, "            long timeout = (bestCorrectBlock.getNetBestBlockInfo().getBestHeight()-startHeight+1)*100;"], [123, "            while (NulsContext.getInstance().getBestHeight()<bestCorrectBlock.getNetBestBlockInfo().getBestHeight()){"], [124, "                if(TimeService.currentTimeMillis()>(timeout+start)){"], [125, "                    break;"], [126, "                }"], [127, "                try {"], [128, "                    Thread.sleep(1000);"], [129, "                } catch (InterruptedException e) {"], [130, "                    Log.error(e);"], [131, "                }"], [256, "            this.status = MaintenanceStatus.SUCCESS;"], [261, "    public void setStatus(MaintenanceStatus status) {"], [262, "        this.status = status;"], [263, "    }"], [264, ""], [265, "    @Override"], [266, "    public void run() {"], [267, "        while (true) {"], [268, "            try {"], [269, "                //todo failed"], [270, "                if (this.status == MaintenanceStatus.READY) {"], [271, "                    List<Node> nodeList = networkService.getAvailableNodes();"], [272, "                    if (nodeList.size() >= MIN_NODE_COUNT) {"], [273, "                        this.syncBlock();"], [274, "                    }"], [275, "                }"], [276, "            } catch (Exception e) {"], [277, "                Log.error(e);"], [278, "            }"], [279, "            try {"], [280, "                Thread.sleep(1000L);"], [281, "            } catch (InterruptedException e) {"], [282, "                Log.error(e);"], [283, "            }"], [284, ""], [285, ""], [286, "        }"], [287, ""], [288, "    }"]], "deleted": [[52, "public class BlockMaintenanceThread {"], [62, "    private MaintenanceStatus status = MaintenanceStatus.FAILED;"], [74, "        BestCorrectBlock bestCorrectBlock = checkLocalBestCorrentBlock();"], [75, "        boolean doit = false;"], [76, "        long startHeight = 1;"], [77, "        do {"], [78, "            if (null == bestCorrectBlock.getLocalBestBlock() && bestCorrectBlock.getNetBestBlockInfo() == null) {"], [79, "                doit = true;"], [80, "                BlockInfo blockInfo = BEST_HEIGHT_FROM_NET.request(-1);"], [81, "                bestCorrectBlock.setNetBestBlockInfo(blockInfo);"], [82, "                break;"], [83, "            }"], [84, "            startHeight = bestCorrectBlock.getLocalBestBlock().getHeader().getHeight() + 1;"], [85, "            long interval = TimeService.currentTimeMillis() - bestCorrectBlock.getLocalBestBlock().getHeader().getTime();"], [86, "            if (interval < (PocConsensusConstant.BLOCK_TIME_INTERVAL_SECOND * 2000)) {"], [87, "                doit = false;"], [88, "                break;"], [89, "            }"], [91, "                bestCorrectBlock.setNetBestBlockInfo(BEST_HEIGHT_FROM_NET.request(0));"], [93, "            if (null == bestCorrectBlock.getNetBestBlockInfo()) {"], [96, "            if (bestCorrectBlock.getNetBestBlockInfo().getBestHeight() > bestCorrectBlock.getLocalBestBlock().getHeader().getHeight()) {"], [97, "                doit = true;"], [98, "                break;"], [100, "        } while (false);"], [101, "        if (null == bestCorrectBlock.getNetBestBlockInfo()) {"], [102, "            return;"], [103, "        }"], [104, "        if (doit) {"], [105, "            downloadBlocks(bestCorrectBlock.getNetBestBlockInfo().getNodeIdList(), startHeight, bestCorrectBlock.getNetBestBlockInfo().getBestHeight());"], [106, "        } else {"], [107, "            this.status = MaintenanceStatus.SUCCESS;"], [231, "            return MaintenanceStatus.SUCCESS;"], [233, ""], [234, ""]]}, "num_lines_added": 85, "num_lines_removed": 34}