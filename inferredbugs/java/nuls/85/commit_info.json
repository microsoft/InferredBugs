{"hash": "4248f7bd16fea0558502320bdcc0480310b7751a", "message": "network restructure", "file_num_lines": 99, "diff_parsed": {"added": [[12, "import io.nuls.network.constant.NetworkConstant;"], [14, "import io.nuls.network.entity.NodeGroup;"], [17, "import java.net.InetAddress;"], [33, "//        Log.info(\"---------------------- server channelRegistered ------------------------- \" + nodeId);"], [35, ""], [36, "        NodeGroup outGroup = networkService.getNodeGroup(NetworkConstant.NETWORK_NODE_OUT_GROUP);"], [37, "        for (Node node : outGroup.getNodes().values()) {"], [38, "            if (node.getIp().equals(remoteIP)) {"], [39, "                String localIP = InetAddress.getLocalHost().getHostAddress();"], [40, "                boolean isLocalServer = IpUtil.judgeIsLocalServer(localIP, remoteIP);"], [41, ""], [42, "                if (!isLocalServer) {"], [43, "                    ctx.channel().close();"], [44, "                    return;"], [45, "                } else {"], [46, "                    getNetworkService().removeNode(node.getId());"], [47, "                }"], [48, "            }"], [49, "        }"], [79, "//        Log.info(\"---------------------- server Active ------------------------- \" + nodeId);"], [95, "//        Log.info(\"---------------------- server remove ------------------------- \" + nodeId);"]], "deleted": [[30, "        Log.debug(\"---------------------- server channelRegistered ------------------------- \" + nodeId);"], [32, "//        String remoteId = IpUtil.getNodeId(channel.remoteAddress());"], [33, "//        Node node = getNetworkService().getNode(remoteId);"], [34, "//        if (node != null) {"], [35, "//            if (node.getStatus() == Node.CONNECT) {"], [36, "//                ctx.channel().close();"], [37, "//                return;"], [38, "//            }"], [39, "//            //When nodes try to connect to each other but not connected, select one of the smaller IP addresses as the server"], [40, "////            if (node.getType() == Node.OUT) {"], [41, "////                String localIP = InetAddress.getLocalHost().getHostAddress();"], [42, "////                boolean isLocalServer = IpUtil.judgeIsLocalServer(localIP, remoteIP);"], [43, "////"], [44, "////                if (!isLocalServer) {"], [45, "////                    ctx.channel().close();"], [46, "////                    return;"], [47, "////                } else {"], [48, "////                    getNetworkService().removeNode(remoteId);"], [49, "////                }"], [50, "////            }"], [51, "//        } else {"], [81, "        Log.debug(\"---------------------- server channelActive ------------------------- \" + nodeId);"], [93, "        Log.debug(\"---------------------- server channelInactive ------------------------- \");"], [102, "            } else {"], [103, "                System.out.println(\"--------------sever channel id different----------------------\" + channelId + \",\" + node.getChannelId());"]]}, "num_lines_added": 21, "num_lines_removed": 25}