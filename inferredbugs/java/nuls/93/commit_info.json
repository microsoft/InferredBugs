{"hash": "2d03dde2d9be494c995fe54c75285f1317c1bcb5", "message": "update consensus code", "file_num_lines": 353, "diff_parsed": {"added": [[29, "import java.util.concurrent.locks.Lock;"], [30, "import java.util.concurrent.locks.ReentrantLock;"], [55, "    private Lock lock = new ReentrantLock();"], [56, ""], [59, "        lock.lock();"], [60, "        try {"], [61, "            realInit();"], [62, "        } finally {"], [63, "            lock.unlock();"], [64, "        }"], [65, "    }"], [66, ""], [67, "    private void realInit() {"], [68, "        consensusCacheManager.clear();"], [69, "        consensusCacheManager.init();"], [70, ""], [93, "        lock.lock();"], [94, "        try {"], [95, "            Block currentBlock = getBestBlock();"], [96, "            return getRoundByBlock(currentBlock);"], [97, "        } finally {"], [98, "            lock.unlock();"], [99, "        }"], [102, "    private PocMeetingRound getRoundByBlock(Block currentBlock) {"], [132, "        if (!this.getBestBlock().getHeader().getHash().equals(currentBlock.getHeader().getHash())) {"], [155, "        ConsensusLog.info(\"\u8ba1\u7b97\uff1a\u6839\u636e\u7684\u9ad8\u5ea6\uff1a\" + calcBlock.getHeader().getHeight() + \",\u8be5\u5757\u8f6e\u6b21\uff1a\" + blockRoundData.getRoundIndex() + \",start:\" + blockRoundData.getRoundStartTime() + \", members:\" + blockRoundData.getConsensusMemberCount() + \",roundCount:\" + round.getMemberCount());"], [181, "            str.append(\" ,creditVal:\" + member.getRealCreditVal());"], [197, "        ConsensusLog.info(\"++++++++calcRound:height:\" + startCalcHeight + \" ,index:\" + roundIndex, \" ,startTime\");"], [237, "            member.setCreditVal(calcCreditVal(member, startCalcHeight - PocConsensusConstant.CONFIRM_BLOCK_COUNT, round.getIndex() - 2));"], [263, "    private double calcCreditVal(PocMeetingMember member, long startHeight, long calcRoundIndex) {"], [271, "        long blockCount = pocBlockService.getBlockCount(member.getPackingAddress(), roundStart, calcRoundIndex, startHeight);"], [272, "        long sumRoundVal = punishLogDataService.getCountByRounds(member.getAgentAddress(), roundStart, calcRoundIndex, startHeight, PunishType.YELLOW.getCode());"], [279, "        return DoubleUtils.sub(ability, penalty);"], [306, "        lock.lock();"], [307, "        try {"], [308, "            return getTheRound(currentBlockHeader, preRoundIndex, roundIndex, needPreRound);"], [309, "        } finally {"], [310, "            lock.unlock();"], [311, "        }"], [312, "    }"], [313, ""], [314, "    private PocMeetingRound getTheRound(BlockHeader currentBlockHeader, long preRoundIndex, long roundIndex, boolean needPreRound) {"], [391, "    public void clearAndInit() {"], [392, "        lock.lock();"], [393, "        try {"], [394, "            ROUND_MAP.clear();"], [395, "            this.realInit();"], [396, "        } finally {"], [397, "            lock.unlock();"], [398, "        }"]], "deleted": [[77, "        Block currentBlock = getBestBlock();"], [78, "        return getRoundByBlock(currentBlock);"], [81, "    public PocMeetingRound getRoundByBlock(Block currentBlock) {"], [111, "        if(!this.getBestBlock().getHeader().getHash().equals(currentBlock.getHeader().getHash())){"], [134, "        ConsensusLog.info(\"\u8ba1\u7b97\uff1a\u6839\u636e\u7684\u9ad8\u5ea6\uff1a\"+calcBlock.getHeader().getHeight()+\",\u8be5\u5757\u8f6e\u6b21\uff1a\"+blockRoundData.getRoundIndex()+\",start:\"+blockRoundData.getRoundStartTime()+\", members:\"+blockRoundData.getConsensusMemberCount()+\",roundCount:\"+round.getMemberCount());"], [160, "            str.append(\" ,creditVal:\"+member.getRealCreditVal());"], [176, "        ConsensusLog.info(\"++++++++calcRound:height:\" + startCalcHeight + \" ,index:\" + roundIndex,\" ,startTime\");"], [216, "            member.setCreditVal(calcCreditVal(member, startCalcHeight-PocConsensusConstant.CONFIRM_BLOCK_COUNT,round.getIndex() - 2));"], [242, "    private double calcCreditVal(PocMeetingMember member,long startHeight, long calcRoundIndex) {"], [250, "        long blockCount = pocBlockService.getBlockCount(member.getPackingAddress(), roundStart, calcRoundIndex,startHeight);"], [251, "        long sumRoundVal = punishLogDataService.getCountByRounds(member.getAgentAddress(), roundStart, calcRoundIndex,startHeight, PunishType.YELLOW.getCode());"], [258, "        return DoubleUtils.sub(ability , penalty);"], [361, "    public void clear() {"], [362, "        ROUND_MAP.clear();"]]}, "num_lines_added": 50, "num_lines_removed": 14}