{"hash": "f8909aa60909e278cc1be90ebe6a637cc275867d", "message": "update consensus", "file_num_lines": 33, "diff_parsed": {"added": [[26, "import io.nuls.consensus.cache.manager.tx.TxCacheManager;"], [41, "    private TxCacheManager txCacheManager = TxCacheManager.TX_CACHE_MANAGER;"], [52, "            Transaction cachedTx = txCacheManager.getTx(tx.getHash());"], [55, "                if (!(tx instanceof AbstractCoinTransaction)) {"]], "deleted": [[26, "import io.nuls.consensus.cache.manager.tx.ConfirmingTxCacheManager;"], [27, "import io.nuls.consensus.cache.manager.tx.OrphanTxCacheManager;"], [28, "import io.nuls.consensus.cache.manager.tx.ReceivedTxCacheManager;"], [31, "import io.nuls.consensus.manager.BlockManager;"], [34, "import io.nuls.core.context.NulsContext;"], [38, "import io.nuls.network.service.NetworkService;"], [46, "    private BlockManager blockCacheManager = BlockManager.getInstance();"], [47, "    private NetworkService networkService = NulsContext.getServiceBean(NetworkService.class);"], [56, "        //BlockLog.debug(\"download(\"+fromId+\") block height:\" + block.getHeader().getHeight() + \", preHash:\" + block.getHeader().getPreHash() + \" , hash:\" + block.getHeader().getHash() + \", address:\" + block.getHeader().getPackingAddress());"], [57, "//        if (BlockBatchDownloadUtils.getInstance().downloadedBlock(fromId, block)) {"], [58, "//            return;"], [59, "//        }"], [61, "        //blockCacheManager.addBlock(block, true, fromId);"], [63, "            Transaction cachedTx = ConfirmingTxCacheManager.getInstance().getTx(tx.getHash());"], [64, "            if (null == cachedTx) {"], [65, "                cachedTx = ReceivedTxCacheManager.getInstance().getTx(tx.getHash());"], [66, "            }"], [67, "            if (null == cachedTx) {"], [68, "                cachedTx = OrphanTxCacheManager.getInstance().getTx(tx.getHash());"], [69, "            }"], [72, "                if(!(tx instanceof AbstractCoinTransaction)){"]]}, "num_lines_added": 4, "num_lines_removed": 21}