{"hash": "a417f01f149a2ed0644e2770b9bcb97657aa3667", "message": "update test case", "file_num_lines": 82, "diff_parsed": {"added": [[113, "        NulsSignData signData = signDigest(blockHeader.getHash().getDigestBytes(), ecKey);"], [123, ""], [124, "    protected NulsSignData signDigest(byte[] digest, ECKey ecKey) {"], [125, "        byte[] signbytes = ecKey.sign(digest);"], [126, "        NulsSignData nulsSignData = new NulsSignData();"], [127, "        nulsSignData.setSignAlgType(NulsSignData.SIGN_ALG_ECC);"], [128, "        nulsSignData.setSignBytes(signbytes);"], [129, ""], [130, "        return nulsSignData;"], [131, "    }"]], "deleted": [[29, "import io.nuls.account.service.AccountService;"], [30, "import io.nuls.account.service.impl.AccountServiceImpl;"], [36, "import io.nuls.kernel.exception.NulsException;"], [55, "    protected static AccountService accountService;"], [73, "                accountService = SpringLiteContext.getBean(AccountService.class);"], [74, "            } catch (Exception e) {"], [75, "                //SpringLiteContext.putBean(AccountServiceImpl.class, false);"], [76, "                //accountService = SpringLiteContext.getBean(AccountService.class);"], [77, "            }"], [78, "            try {"], [123, "        NulsSignData signData = null;"], [124, "        try {"], [125, "            signData = accountService.signData(blockHeader.getHash().getDigestBytes(), ecKey);"], [126, "        } catch (NulsException e) {"], [127, "            e.printStackTrace();"], [128, "        }"]]}, "num_lines_added": 10, "num_lines_removed": 16}