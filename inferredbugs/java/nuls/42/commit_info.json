{"hash": "c7b8f0df757d7171e519ca4b43f85a7edc8878c4", "message": "correct aliastx bug", "file_num_lines": 64, "diff_parsed": {"added": [[3, " * <p>"], [5, " * <p>"], [12, " * <p>"], [15, " * <p>"], [29, "import io.nuls.cache.service.intf.CacheService;"], [30, "import io.nuls.core.chain.entity.Transaction;"], [31, "import io.nuls.core.constant.TransactionConstant;"], [38, "import io.nuls.ledger.service.intf.LedgerService;"], [39, ""], [40, "import java.util.List;"], [52, "    private LedgerService ledgerService;"], [53, ""], [72, "        List<Transaction> txList = getLedgerService().getCacheTxList(TransactionConstant.TX_TYPE_SET_ALIAS);"], [73, "        if (txList != null && tx.size() > 0) {"], [74, "            for (Transaction trx : txList) {"], [75, "                Alias a = ((AliasTransaction) trx).getTxData();"], [76, "                if(alias.getAddress().equals(a.getAlias())) {"], [77, "                    return ValidateResult.getFailedResult(\"The alias has been occupied\");"], [78, "                }"], [79, "                if(alias.getAlias().equals(a.getAlias())){"], [80, "                    return ValidateResult.getFailedResult(\"The alias has been occupied\");"], [81, "                }"], [82, "            }"], [83, "        }"], [84, ""], [98, ""], [99, "    private LedgerService getLedgerService() {"], [100, "        if (ledgerService == null) {"], [101, "            ledgerService = NulsContext.getServiceBean(LedgerService.class);"], [102, "        }"], [103, "        return ledgerService;"], [104, "    }"]], "deleted": [[3, " *"], [5, " *"], [12, " *"], [15, " *"]]}, "num_lines_added": 32, "num_lines_removed": 4}