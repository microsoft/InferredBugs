{"hash": "fd4a0b90c66e977b551e1660a16b5ff9454b565d", "message": "network module restructure", "file_num_lines": 50, "diff_parsed": {"added": [[3, " * <p>"], [5, " * <p>"], [12, " * <p>"], [15, " * <p>"], [37, "import java.util.List;"], [38, "import java.util.Map;"], [39, ""], [50, "    private NetworkCacheService cacheService = NetworkCacheService.getInstance();"], [53, ""], [64, "        Map<String, Node> outNodes = networkService.getNodeGroup(NetworkConstant.NETWORK_NODE_OUT_GROUP).getNodes();"], [65, "        boolean exist = false;"], [67, "            exist = false;"], [68, "            for (Node outNode : outNodes.values()) {"], [69, "                if (outNode.getIp().equals(node.getIp())) {"], [70, "                    exist = true;"], [71, "                    break;"], [72, "                }"], [73, "            }"], [74, "            if (!exist) {"], [75, "                newNode.setType(Node.OUT);"], [76, "                newNode.setStatus(Node.WAIT);"], [77, "                getNetworkService().addNodeToGroup(NetworkConstant.NETWORK_NODE_OUT_GROUP, newNode);"], [78, "            }"]], "deleted": [[3, " *"], [5, " *"], [12, " *"], [15, " *"], [47, "    private NetworkCacheService cacheService;"], [50, "        cacheService = NetworkCacheService.getInstance();"], [61, "//        String key = event.getHeader().getEventType() + \"-\" + node.getIp();"], [62, "//        if (cacheService.existEvent(key)) {"], [63, "//            networkService.removeNode(node.getId());"], [64, "//            return null;"], [65, "//        }"], [66, "//        cacheService.putEvent(key, event, false);"], [67, ""], [69, "            newNode.setType(Node.OUT);"], [70, "            newNode.setStatus(Node.WAIT);"], [71, "            getNetworkService().addNodeToGroup(NetworkConstant.NETWORK_NODE_OUT_GROUP, newNode);"]]}, "num_lines_added": 23, "num_lines_removed": 16}