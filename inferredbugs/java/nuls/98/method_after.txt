    @Override
    public ValidateResult validate(Block block) {
        if (block.getHeader().getTxCount() != block.getTxs().size()) {
            return ValidateResult.getFailedResult("txCount is wrong!");
        }
        int count = 0;
        List<Transaction> txList = new ArrayList<>();
        for (Transaction tx : block.getTxs()) {
            ValidateResult result = tx.verify();
            if(result.isFailed()&&result.getErrorCode()== ErrorCode.ORPHAN_TX){
                AbstractCoinTransaction coinTx = (AbstractCoinTransaction) tx;
                result = coinTx.getCoinDataProvider().verifyCoinData(coinTx,txList);
                if(result.isSuccess()){
                    coinTx.setSkipInputValidator(true);
                    result = coinTx.verify();
                    coinTx.setSkipInputValidator(false);
                }
            }
            if (null==result||result.isFailed()) {
                if(result.getErrorCode()== ErrorCode.ORPHAN_TX){
                    return result;
                }
                return ValidateResult.getFailedResult("there is wrong transaction!msg:"+result.getMessage());
            }
            if (tx.getType() == TransactionConstant.TX_TYPE_COIN_BASE) {
                count++;
            }
            txList.add(tx);
        }
        if (count > 1) {
            return ValidateResult.getFailedResult("coinbase transaction must only one!");
        }
        return ValidateResult.getSuccessResult();
    }