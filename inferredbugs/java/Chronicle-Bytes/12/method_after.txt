    public long appendUtf8(long pos, char[] chars, int offset, int length) {
        if (pos + length > realCapacity())
            throw new BufferOverflowException();

        long address = this.address + translate(0);
        Memory memory = this.memory;
        if (memory == null) throw new NullPointerException();
        Unsafe unsafe = UnsafeMemory.UNSAFE;
        int i;
        ascii:
        {
            for (i = 0; i < length - 3; i += 4) {
                char c0 = chars[offset + i];
                char c1 = chars[offset + i + 1];
                char c2 = chars[offset + i + 2];
                char c3 = chars[offset + i + 3];
                if ((c0 | c1 | c2 | c3) > 0x007F)
                    break ascii;
                unsafe.putInt(address + pos, (c0) | (c1 << 8) | (c2 << 16) | (c3 << 24));
                pos += 4;
            }
            for (; i < length; i++) {
                char c = chars[offset + i];
                if (c > 0x007F)
                    break ascii;
                unsafe.putByte(address + pos++, (byte) c);
            }

            return pos;
        }
        return appendUtf8a(pos, chars, offset, length, i);
    }