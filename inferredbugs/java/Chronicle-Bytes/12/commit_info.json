{"hash": "4ab9757f9914cc08576a4a1109bd59fa2faf51b3", "message": "Performance optimisations for benchmark", "file_num_lines": 584, "diff_parsed": {"added": [[27, "import sun.misc.Unsafe;"], [557, "        if (memory == null) throw new NullPointerException();"], [558, "        Unsafe unsafe = UnsafeMemory.UNSAFE;"], [569, "                unsafe.putInt(address + pos, (c0) | (c1 << 8) | (c2 << 16) | (c3 << 24));"], [576, "                unsafe.putByte(address + pos++, (byte) c);"], [581, "        return appendUtf8a(pos, chars, offset, length, i);"], [584, "    private long appendUtf8a(long pos, char[] chars, int offset, int length, int i) {"], [667, "    public long read(long offsetInRDI, byte[] bytes, int offset, int length) {"], [668, "        int len = (int) Math.min(length, readLimit() - offsetInRDI);"], [669, "        int i;"], [670, "        final long offset2 = UnsafeMemory.UNSAFE.ARRAY_BYTE_BASE_OFFSET + offset;"], [671, "        final long address = this.address + translate(offsetInRDI);"], [672, "        for (i = 0; i < len - 7; i += 8)"], [673, "            UnsafeMemory.UNSAFE.putLong(bytes, offset2 + i, memory.readLong(address + i));"], [674, "        if (i < len - 3) {"], [675, "            UnsafeMemory.UNSAFE.putInt(bytes, offset2 + i, memory.readInt(address + i));"], [676, "            i += 4;"], [677, "        }"], [678, "        for (; i < len; i++)"], [679, "            UnsafeMemory.UNSAFE.putByte(bytes, offset2 + i, memory.readByte(address + i));"], [680, "        return len;"], [681, "    }"], [682, ""]], "deleted": [[566, "                memory.writeInt(address + pos, (c0) | (c1 << 8) | (c2 << 16) | (c3 << 24));"], [573, "                memory.writeByte(address + pos++, (byte) c);"], [578, "        return appendUTF0(pos, chars, offset, length, i);"], [581, "    private long appendUTF0(long pos, char[] chars, int offset, int length, int i) {"]]}, "num_lines_added": 23, "num_lines_removed": 4}