{"hash": "1f9dd07a8699a1f1d96969f6652897fe3cdd50b7", "message": "Simplified support for Marshallable and BytesMarshallable, https://github.com/OpenHFT/Chronicle-Map/issues/196", "file_num_lines": 56, "diff_parsed": {"added": [[82, "        BytesStore bytes = this.bytes;"], [83, "        return bytes != null && bytes.compareAndSwapLong(offset, expected, value);"]], "deleted": [[30, "    @Nullable"], [31, "    private static Set<WeakReference<BinaryLongReference>> binaryLongReferences;"], [32, ""], [33, "    /**"], [34, "     * only used for testing"], [35, "     */"], [36, "    public static void startCollecting() {"], [37, "        binaryLongReferences = new CopyOnWriteArraySet<>();"], [38, "    }"], [39, ""], [40, "    /**"], [41, "     * only used for testing"], [42, "     */"], [43, "    public static void forceAllToNotCompleteState() {"], [44, "        binaryLongReferences.forEach(x -> {"], [45, "            @Nullable BinaryLongReference binaryLongReference = x.get();"], [46, "            if (binaryLongReference != null) {"], [47, "                binaryLongReference.setValue(LONG_NOT_COMPLETE);"], [48, "            }"], [49, "        });"], [50, "        binaryLongReferences = null;"], [51, "    }"], [104, "        if (value == LONG_NOT_COMPLETE && binaryLongReferences != null)"], [105, "            binaryLongReferences.add(new WeakReference<>(this));"], [106, "        return bytes.compareAndSwapLong(offset, expected, value);"]]}, "num_lines_added": 2, "num_lines_removed": 25}