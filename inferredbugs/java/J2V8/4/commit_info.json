{"hash": "398f088e069b560aa8ce731c7d6ef9c8e779bd50", "message": "Remove support for the deprecated debug agent\n\nThe V8 debug agent no longer exists and has been deprecated since 3.0.\nThis change-set removes it.  \n\nChange-Id: I296c0cd3bc1330c3924e16f43c06f6f687397c01", "file_num_lines": 737, "diff_parsed": {"added": [], "deleted": [[40, "    private static Runnable     debugHandler   = null;"], [41, "    private static Thread       debugThread    = null;"], [47, "    private boolean                        debugEnabled            = false;"], [154, "        if (debugThread == null) {"], [155, "            debugThread = Thread.currentThread();"], [156, "        }"], [199, "     * Enables debug support for this runtime."], [200, "     *"], [201, "     * @param port The port to listen for debug connections."], [202, "     * @param waitForConnection True if the runtime should wait on the first"], [203, "     * instruction for the debugger to connect."], [204, "     *"], [205, "     * @return true if debug support was successfully enabled, false otherwise"], [206, "     *"], [207, "     * @deprecated NOTE: This is not API and likely to change"], [208, "     */"], [209, "    @Deprecated"], [210, "    public boolean enableDebugSupport(final int port, final boolean waitForConnection) {"], [211, "        V8.checkDebugThread();"], [212, "        debugEnabled = enableDebugSupport(getV8RuntimePtr(), port, waitForConnection);"], [213, "        return debugEnabled;"], [214, "    }"], [215, ""], [216, "    /**"], [217, "     * Enables debug support for this runtime and does not pause for a connection."], [218, "     *"], [219, "     * @param port The port to listen for debug connections."], [220, "     *"], [221, "     * @return true if debug support was successfully enabled, false otherwise"], [222, "     *"], [223, "     * @deprecated NOTE: This is not API and likely to change"], [224, "     */"], [225, "    @Deprecated"], [226, "    public boolean enableDebugSupport(final int port) {"], [227, "        V8.checkDebugThread();"], [228, "        debugEnabled = enableDebugSupport(getV8RuntimePtr(), port, false);"], [229, "        return debugEnabled;"], [230, "    }"], [231, ""], [232, "    /**"], [233, "     * Processes all outstanding debug messages for this runtime."], [234, "     *"], [235, "     * @deprecated"], [236, "     */"], [237, "    @Deprecated"], [238, "    public static void processDebugMessages(final V8 runtime) {"], [239, "        runtime.checkThread();"], [240, "        runtime._processDebugMessages(runtime.getV8RuntimePtr());"], [241, "    }"], [242, ""], [243, "    /**"], [244, "     * Disables debug support for this runtime."], [245, "     *"], [246, "     * @deprecated"], [247, "     */"], [248, "    @Deprecated"], [249, "    public void disableDebugSupport() {"], [250, "        V8.checkDebugThread();"], [251, "        disableDebugSupport(getV8RuntimePtr());"], [252, "        debugEnabled = false;"], [253, "    }"], [254, ""], [255, "    /**"], [256, "     * Registers a callback that will be invoked whenever a debug message"], [257, "     * is received. This can be used so the main thread can call"], [258, "     * processDebugMessages to handle the messages."], [259, "     *"], [260, "     * @param handler The debug handler to invoke when a debug message"], [261, "     * is received."], [262, "     *"], [263, "     * @deprecated"], [264, "     */"], [265, "    @Deprecated"], [266, "    public static void registerDebugHandler(final Runnable handler) {"], [267, "        debugHandler = handler;"], [268, "    }"], [269, ""], [270, "    /**"], [315, "        if (debugEnabled) {"], [316, "            disableDebugSupport();"], [317, "        }"], [701, "    static void checkDebugThread() {"], [702, "        if ((debugThread != null) && (debugThread != Thread.currentThread())) {"], [703, "            throw new Error(\"Invalid V8 thread access.\");"], [704, "        }"], [705, "    }"], [706, ""], [921, "    protected static void debugMessageReceived() {"], [922, "        if (debugHandler != null) {"], [923, "            debugHandler.run();"], [924, "        }"], [925, "    }"], [926, ""], [1150, "    protected boolean enableDebugSupport(final long v8RuntimePtr, final int port, final boolean waitForConnection) {"], [1151, "        return _enableDebugSupport(v8RuntimePtr, port, waitForConnection);"], [1152, "    }"], [1153, ""], [1154, "    protected void disableDebugSupport(final long v8RuntimePtr) {"], [1155, "        _disableDebugSupport(v8RuntimePtr);"], [1156, "    }"], [1157, ""], [1158, "    protected void processDebugMessages(final long v8RuntimePtr) {"], [1159, "        _processDebugMessages(v8RuntimePtr);"], [1160, "    }"], [1161, ""], [1310, "    private native boolean _enableDebugSupport(long v8RuntimePtr, int port, boolean waitForConnection);"], [1311, ""], [1312, "    private native void _disableDebugSupport(long v8RuntimePtr);"], [1313, ""], [1314, "    private native void _processDebugMessages(long v8RuntimePtr);"], [1315, ""]]}, "num_lines_added": 0, "num_lines_removed": 111}