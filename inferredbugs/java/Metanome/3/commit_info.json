{"hash": "567d22d325d4dfdcd1e6ec045c7586a6bed90c34", "message": "add execution tests and needed algorithm jars", "file_num_lines": 52, "diff_parsed": {"added": [[3, "import static org.mockito.Matchers.isA;"], [4, "import static org.mockito.Mockito.verify;"], [5, "import static org.mockito.Mockito.mock;"], [10, "import org.junit.Before;"], [17, "import de.uni_potsdam.hpi.metanome.algorithm_integration.result_receiver.FunctionalDependencyResultReceiver;"], [18, "import de.uni_potsdam.hpi.metanome.algorithm_integration.result_receiver.InclusionDependencyResultReceiver;"], [19, "import de.uni_potsdam.hpi.metanome.algorithm_integration.result_receiver.UniqueColumnCombinationResultReceiver;"], [20, "import de.uni_potsdam.hpi.metanome.result_receiver.FunctionalDependencyFileWriter;"], [21, "import de.uni_potsdam.hpi.metanome.result_receiver.InclusionDependencyFileWriter;"], [22, "import de.uni_potsdam.hpi.metanome.result_receiver.UniqueColumnCombinationFileWriter;"], [25, ""], [26, "\tprivate AlgorithmExecuter executer;"], [27, ""], [28, "\t@Before"], [29, "\tpublic void setUp(){"], [30, "\t\texecuter = new AlgorithmExecuter();"], [31, "\t}"], [38, "\t\tUniqueColumnCombinationResultReceiver resultReceiver = mock(UniqueColumnCombinationFileWriter.class);"], [42, "\t\t\t\tresultReceiver);"], [45, "\t\tverify(resultReceiver).receiveResult(isA(ColumnCombination.class));"], [52, "\t\tconfigs.add(new ConfigurationValueString(\"pathToOutputFile\", \"blub\"));"], [53, "\t\tFunctionalDependencyResultReceiver resultReceiver = mock(FunctionalDependencyFileWriter.class);"], [56, "\t\texecuter.executeFunctionalDependencyAlgorithm(\"example_fd_algorithm_0.0.1.jar\", configs,"], [57, "\t\t\t\tresultReceiver);"], [60, "\t\tverify(resultReceiver).receiveResult(isA(ColumnCombination.class), isA(ColumnIdentifier.class));"], [67, "\t\tconfigs.add(new ConfigurationValueString(\"tableName\", \"blub\"));"], [68, "\t\tInclusionDependencyResultReceiver resultReceiver = mock(InclusionDependencyFileWriter.class);"], [69, ""], [71, "\t\texecuter.executeInclusionDependencyAlgorithm(\"example_ind_algorithm-0.0.1-SNAPSHOT-jar-with-dependencies.jar\", configs,"], [72, "\t\t\t\tresultReceiver);"], [75, "\t\tverify(resultReceiver).receiveResult(isA(ColumnCombination.class), isA(ColumnCombination.class));"], [76, ""]], "deleted": [[3, "import static org.junit.Assert.assertTrue;"], [5, "import java.io.ByteArrayOutputStream;"], [6, "import java.io.PrintStream;"], [16, "import de.uni_potsdam.hpi.metanome.result_receiver.UniqueColumnCombinationPrinter;"], [23, "\t\tAlgorithmExecuter executer = new AlgorithmExecuter();"], [24, "\t\tByteArrayOutputStream outStream = new ByteArrayOutputStream();"], [27, ""], [28, "\t\t// Expected values"], [29, "\t\tColumnCombination columnCombination = new ColumnCombination("], [30, "\t\t\t\tnew ColumnIdentifier(\"table1\", \"column1\"),"], [31, "\t\t\t\tnew ColumnIdentifier(\"table2\", \"column2\"));"], [35, "\t\t\t\tnew UniqueColumnCombinationPrinter(new PrintStream(outStream)));"], [38, "\t\tassertTrue(outStream.toString().contains(columnCombination.toString()));"], [44, "\t\tAlgorithmExecuter executer = new AlgorithmExecuter();"], [45, "\t\tByteArrayOutputStream outStream = new ByteArrayOutputStream();"], [47, "\t\tconfigs.add(new ConfigurationValueString(\"pathToInputFile\", \"blub\"));"], [48, ""], [49, "\t\t// Expected values"], [50, "\t\tColumnCombination columnCombination = new ColumnCombination("], [51, "\t\t\t\tnew ColumnIdentifier(\"table1\", \"column1\"),"], [52, "\t\t\t\tnew ColumnIdentifier(\"table2\", \"column2\"));"], [55, "//\t\texecuter.executeFunctionalDependencyAlgorithm(\"example_algorithm-0.0.1-SNAPSHOT-jar-with-dependencies.jar\", configs,"], [56, "//\t\t\t\tnull);"], [59, "\t\t//assertTrue(outStream.toString().contains(columnCombination.toString()));"], [65, "\t\tAlgorithmExecuter executer = new AlgorithmExecuter();"], [66, "\t\tByteArrayOutputStream outStream = new ByteArrayOutputStream();"], [68, "\t\tconfigs.add(new ConfigurationValueString(\"pathToInputFile\", \"blub\"));"], [69, ""], [71, "\t\t// TODO executer.executeInclusionDependencyAlgorithm(\"example_algorithm-0.0.1-SNAPSHOT-jar-with-dependencies.jar\", configs,"], [72, "\t\t\t\t//null);"], [75, ""]]}, "num_lines_added": 32, "num_lines_removed": 31}