{"hash": "d2cb1b7eecdbe143e7863d7df239ccddcbcbfcd6", "message": "#134 Added info label if input successfully stored and fixed some minor things when saving inputs.", "file_num_lines": 139, "diff_parsed": {"added": [[20, "import com.google.gwt.user.client.Timer;"], [21, "import com.google.gwt.user.client.rpc.AsyncCallback;"], [34, "import java.util.List;"], [36, ""], [37, "public class GwtTestInputConfigurationPage extends GWTTestCase {"], [43, "    final boolean[] blocked = {true};"], [66, "    final TableInput expectedInput = page.tableInputField.getValue();"], [69, "    TestHelper.getAllTableInputs("], [70, "        new AsyncCallback<List<TableInput>>() {"], [71, "          @Override"], [72, "          public void onFailure(Throwable throwable) {"], [73, "            fail();"], [74, "          }"], [75, ""], [76, "          @Override"], [77, "          public void onSuccess(List<TableInput> con) {"], [78, "            blocked[0] = false;"], [79, "            assertTrue(con.contains(expectedInput));"], [80, "          }"], [81, "        });"], [82, ""], [83, "    Timer rpcCheck = new Timer() {"], [84, "      @Override"], [85, "      public void run() {"], [86, "        if (blocked[0]) {"], [87, "          this.schedule(100);"], [88, "        }"], [89, "      }"], [90, "    };"], [91, "    rpcCheck.schedule(100);"], [101, "    final boolean[] blocked = {true};"], [118, "    final FileInput expectedInput = page.fileInputField.getValue();"], [121, "    TestHelper.getAllFileInputs("], [122, "        new AsyncCallback<List<FileInput>>() {"], [123, "          @Override"], [124, "          public void onFailure(Throwable throwable) {"], [125, "            fail();"], [126, "          }"], [127, ""], [128, "          @Override"], [129, "          public void onSuccess(List<FileInput> con) {"], [130, "            blocked[0] = false;"], [131, "            assertTrue(con.contains(expectedInput));"], [132, "          }"], [133, "        });"], [134, ""], [135, "    Timer rpcCheck = new Timer() {"], [136, "      @Override"], [137, "      public void run() {"], [138, "        if (blocked[0]) {"], [139, "          this.schedule(100);"], [140, "        }"], [141, "      }"], [142, "    };"], [143, "    rpcCheck.schedule(100);"], [153, "    final boolean[] blocked = {true};"], [170, "    final DatabaseConnection expectedInput = page.dbField.getValue();"], [173, "    TestHelper.getAllDatabaseConnections("], [174, "        new AsyncCallback<List<DatabaseConnection>>() {"], [175, "          @Override"], [176, "          public void onFailure(Throwable throwable) {"], [177, "            fail();"], [178, "          }"], [179, ""], [180, "          @Override"], [181, "          public void onSuccess(List<DatabaseConnection> con) {"], [182, "            blocked[0] = false;"], [183, "            assertTrue(con.contains(expectedInput));"], [184, "          }"], [185, "        });"], [186, ""], [187, "    Timer rpcCheck = new Timer() {"], [188, "      @Override"], [189, "      public void run() {"], [190, "        if (blocked[0]) {"], [191, "          this.schedule(100);"], [192, "        }"], [193, "      }"], [194, "    };"], [195, "    rpcCheck.schedule(100);"], [203, "    return \"de.uni_potsdam.hpi.metanome.frontend.client.MetanomeTest\";"]], "deleted": [[33, "public class GwtTestInputConfigurationPage  extends GWTTestCase {"], [45, "    dbConnection.setId(1);"], [62, "    TableInput expectedInput = page.tableInputField.getValue();"], [65, "    assertTrue(TestHelper.getAllTableInputs().contains(expectedInput));"], [91, "    FileInput expectedInput = page.fileInputField.getValue();"], [94, "    assertTrue(TestHelper.getAllFileInputs().contains(expectedInput));"], [120, "    DatabaseConnection expectedInput = page.dbField.getValue();"], [123, "    assertTrue(TestHelper.getAllDatabaseConnections().contains(expectedInput));"], [131, "    return \"de.uni_potsdam.hpi.metanome.frontend.MetanomeTest\";"]]}, "num_lines_added": 81, "num_lines_removed": 9}