{"hash": "a4538388979778617e247f35de213c665f6fd7b1", "message": "fixed creating valid json from xmls", "file_num_lines": 99, "diff_parsed": {"added": [[70, "\t\t\tint i = 1;"], [72, "\t\t\tint dir_1 = new File(System.getProperty(\"user.dir\") + \"/test-output/junitreports\").listFiles().length;"], [74, "\t\t\tList textFiles = new ArrayList();"], [75, "\t\t\tFile dir = new File(System.getProperty(\"user.dir\") + \"/test-output/junitreports\");"], [77, "\t\t\tfor (File file : dir.listFiles()) {"], [78, "\t\t\t\tif (file.getName().contains((\"Test\"))) {"], [79, "\t\t\t\t\tSystem.out.println(file);"], [80, ""], [81, "\t\t\t\t\tfileWriter = new FileWriter(fileName, true);"], [82, "\t\t\t\t\tInputStream inputStream = new FileInputStream(file);"], [83, "\t\t\t\t\tStringBuilder builder = new StringBuilder();"], [84, "\t\t\t\t\tint ptr = 0;"], [85, "\t\t\t\t\twhile ((ptr = inputStream.read()) != -1) {"], [86, "\t\t\t\t\t\tbuilder.append((char) ptr);"], [87, "\t\t\t\t\t}"], [88, ""], [89, "\t\t\t\t\tString xml = builder.toString();"], [90, "\t\t\t\t\tJSONObject jsonObj = XML.toJSONObject(xml);"], [91, ""], [92, "\t\t\t\t\t// Always wrap FileWriter in BufferedWriter."], [93, "\t\t\t\t\tbufferedWriter = new BufferedWriter(fileWriter);"], [94, ""], [95, "\t\t\t\t\t// Always close files."], [96, "\t\t\t\t\tString jsonPrettyPrintString = jsonObj.toString(4);"], [97, "\t\t\t\t\t// bufferedWriter.write(jsonPrettyPrintString);"], [98, "\t\t\t\t\tif (i == 1) {"], [99, "\t\t\t\t\t\tbufferedWriter.append(\"[\");"], [100, "\t\t\t\t\t}"], [101, "\t\t\t\t\tbufferedWriter.append(jsonPrettyPrintString);"], [102, "\t\t\t\t\tif (i != dir_1) {"], [103, "\t\t\t\t\t\tbufferedWriter.append(\",\");"], [104, "\t\t\t\t\t}"], [106, "\t\t\t\t\tif (i == dir_1) {"], [107, "\t\t\t\t\t\tbufferedWriter.append(\"]\");"], [108, "\t\t\t\t\t}"], [110, "\t\t\t\t\tbufferedWriter.newLine();"], [111, "\t\t\t\t\tbufferedWriter.close();"], [112, "\t\t\t\t\ti++;"]], "deleted": [[70, ""], [73, "\t\t\tList textFiles = new ArrayList();"], [74, "\t\t\t  File dir = new File(System.getProperty(\"user.dir\") + \"/test-output/junitreports\");"], [75, "\t\t\t  for (File file : dir.listFiles()) {"], [76, "\t\t\t\t    if (file.getName().contains((\"Test\"))) {"], [77, "\t\t\t\t      System.out.println(file);"], [79, "\t\t\t\tfileWriter = new FileWriter(fileName,true);"], [80, "\t\t\t\tInputStream inputStream = new FileInputStream(file);"], [81, "\t\t\t\tStringBuilder builder = new StringBuilder();"], [82, "\t\t\t\tint ptr = 0;"], [83, "\t\t\t\twhile ((ptr = inputStream.read()) != -1) {"], [84, "\t\t\t\t\tbuilder.append((char) ptr);"], [85, "\t\t\t\t}"], [86, ""], [87, "\t\t\t\tString xml = builder.toString();"], [88, "\t\t\t\tJSONObject jsonObj = XML.toJSONObject(xml);"], [90, "\t\t\t\t// Always wrap FileWriter in BufferedWriter."], [91, "\t\t\t\tbufferedWriter = new BufferedWriter(fileWriter);"], [93, "\t\t\t\t// Always close files."], [94, "\t\t\t\tString jsonPrettyPrintString = jsonObj.toString(4);"], [95, "\t\t\t\t//bufferedWriter.write(jsonPrettyPrintString);"], [96, "\t\t\t\tbufferedWriter.append(jsonPrettyPrintString);"], [97, "\t\t\t\tbufferedWriter.newLine();"], [98, "\t\t\t\tbufferedWriter.close();"]]}, "num_lines_added": 38, "num_lines_removed": 24}