 @SuppressWarnings({ "rawtypes" })
	public void runner(String pack) throws Exception {
		File f = new File(System.getProperty("user.dir") + "/target/appiumlogs/");
		if (!f.exists()) {
			System.out.println("creating directory: " + "Logs");
			boolean result = false;
			try {
				f.mkdir();
				result = true;
			} catch (SecurityException se) {
				// handle it
			}
			if (result) {
				System.out.println("DIR created");
			}
		}

		File adb_logs = new File(System.getProperty("user.dir") + "/target/adblogs/");
		if (!adb_logs.exists()) {
			System.out.println("creating directory: " + "ADBLogs");
			boolean result = false;
			try {
				adb_logs.mkdir();
				result = true;
			} catch (SecurityException se) {
				// handle it
			}
			if (result) {
				System.out.println("DIR created");
			}
		}
		input = new FileInputStream("config.properties");
		prop.load(input);

		if(deviceConf.getDevices() != null){
			devices = deviceConf.getDevices();
			deviceCount = devices.size() / 3;
			createSnapshotFolderAndroid(deviceCount,"android");
		}
		if(iosDevice.getIOSUDID() != null){
			iOSdevices = iosDevice.getIOSUDIDHash();
			deviceCount += iosDevice.getIOSUDID().size();
			createSnapshotFolderiOS(deviceCount,"iPhone");
		}

		if(deviceCount == 0){
			System.exit(0);
		}

		System.out.println("Total Number of devices detected::" + deviceCount);
		System.out.println("starting running tests in threads");

		testcases = new ArrayList<Class>();

		// final String pack = "com.paralle.tests"; // Or any other package
		PackageUtil.getClasses(pack).stream().forEach(s -> {
			if (s.toString().contains("Test")) {
				System.out.println("forEach: " + testcases.add((Class) s));
			}
		});

		if (prop.getProperty("RUNNER").equalsIgnoreCase("distribute")) {
			//myTestExecutor.distributeTests(deviceCount, testcases);
			myTestExecutor.runMethodParallelAppium(pack, deviceCount,"distribute");

		}
		else if (prop.getProperty("RUNNER").equalsIgnoreCase("parallel")) {
			myTestExecutor.runMethodParallelAppium(pack, deviceCount,"parallel");
		}

	}