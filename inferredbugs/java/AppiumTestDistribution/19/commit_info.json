{"hash": "2bfc2fa8bc257e3f32f4dce8aedba447948c1b8b", "message": "added PageName,Author,Description and ElementDescription for better reporting", "file_num_lines": 617, "diff_parsed": {"added": [[3, "import com.annotation.values.Author;"], [4, "import com.annotation.values.Description;"], [34, ""], [35, "import java.awt.Image;"], [36, "import java.awt.Toolkit;"], [37, "import java.io.File;"], [38, "import java.io.FileInputStream;"], [39, "import java.io.FileNotFoundException;"], [40, "import java.io.IOException;"], [41, "import java.io.PrintWriter;"], [42, "import java.io.StringWriter;"], [43, ""], [69, "    public String testDescription = \"\";"], [152, "            if (getClass().getAnnotation(Description.class) != null) {"], [153, "                testDescription = getClass().getAnnotation(Description.class).value();"], [154, "            }"], [155, "            parent = ExtentTestManager.startTest(methodName, testDescription,"], [180, "            setAuthorName(methodName);"], [191, "            setAuthorName(methodName);"], [202, "            setAuthorName(methodName);"], [208, "    public void setAuthorName(String methodName) throws NoSuchMethodException {"], [209, "        String authorName;"], [210, "        if (getClass().getMethod(methodName).getAnnotation(Author.class) != null) {"], [211, "            authorName = getClass().getMethod(methodName).getAnnotation(Author.class).name();"], [212, "            child = ExtentTestManager"], [213, "                .startTest(methodName.toString() + \" ---- AuthorName:: \" + authorName)"], [214, "                .assignCategory(category + \"_\" + device_udid.replaceAll(\"\\\\W\", \"_\"));"], [215, "        } else {"], [216, "            child = ExtentTestManager.startTest(methodName.toString())"], [217, "                .assignCategory(category + \"_\" + device_udid.replaceAll(\"\\\\W\", \"_\"));"], [218, "        }"], [219, "    }"], [220, ""], [547, "        if (getDriver().toString().split(\":\")[0].trim().equals(\"AndroidDriver\") && !context"], [548, "            .equals(\"NATIVE_APP\")) {"], [567, "    public void captureScreenShot(String screenShotName, int status, String className,"], [568, "        String methodName) throws IOException, InterruptedException {"], [571, "        if (getDriver().toString().split(\":\")[0].trim().equals(\"AndroidDriver\") && !context"], [572, "            .equals(\"NATIVE_APP\")) {"], [594, ""], [596, "        throws IOException, InterruptedException {"], [685, ""], [686, "/*    public static String getElementDescription(Class a){"], [687, "        Method[] methods = a.getMethods();"], [688, "        for (Method m : methods)"], [689, "        {"], [690, "            if (m.isAnnotationPresent(ElementDescription.class))"], [691, "            {"], [692, "                ElementDescription ta = m.getAnnotation(ElementDescription.class);"], [693, "                return ta.value();"], [694, "            }"], [695, "        }"], [696, "        return null;*/"], [697, ""]], "deleted": [[32, "import java.awt.*;"], [33, "import java.io.*;"], [141, "            parent = ExtentTestManager.startTest(methodName, \"Mobile Appium Test\","], [166, "            child = ExtentTestManager.startTest(methodName.toString())"], [167, "                .assignCategory(category + \"_\" + device_udid.replaceAll(\"\\\\W\", \"_\"));"], [178, "            child = ExtentTestManager.startTest(methodName.toString())"], [179, "                .assignCategory(category + \"_\" + device_udid.replaceAll(\"\\\\W\", \"_\"));"], [190, "            child = ExtentTestManager.startTest(methodName.toString())"], [191, "                .assignCategory(category + \"_\" + device_udid.replaceAll(\"\\\\W\", \"_\"));"], [523, "        if (getDriver().toString().split(\":\")[0].trim().equals(\"AndroidDriver\")"], [524, "                && !context.equals(\"NATIVE_APP\")) {"], [543, "    public void captureScreenShot(String screenShotName, int status, String className,"], [544, "            String methodName) throws IOException, InterruptedException {"], [547, "        if (getDriver().toString().split(\":\")[0].trim().equals(\"AndroidDriver\")"], [548, "                && !context.equals(\"NATIVE_APP\")) {"], [570, ""], [572, "        throws IOException, InterruptedException {"]]}, "num_lines_added": 54, "num_lines_removed": 17}