{"hash": "d9388a70be2a29609640b8ad16087651a7654ff2", "message": "Disallows writing and reading symbol IDs out of range of the local symbol table.", "file_num_lines": 517, "diff_parsed": {"added": [[546, "        String sharedSymbolTable = \"$ion_symbol_table::{imports:[{name:\\\"foo\\\", version: 1, max_id:90}]}\";"], [547, "        assertIonNotEqImpliesHashNotEq(sharedSymbolTable + \"{$99:123, $98:123}\","], [548, "                                       sharedSymbolTable + \"{$99:456, $98:456}\");"], [549, "        assertIonNotEqImpliesHashNotEq(sharedSymbolTable + \"{$99:annot::123, $98:123}\","], [550, "                                       sharedSymbolTable + \"{$99:456, $98:annot::456}\");"], [568, "        String sharedSymbolTable = \"$ion_symbol_table::{imports:[{name:\\\"foo\\\", version: 1, max_id:9990}]} \";"], [569, "        assertIonNotEqImpliesHashNotEq(sharedSymbolTable + \"{$99:a}\","], [570, "                                       sharedSymbolTable + \"{a:$99}\");"], [571, "        assertIonNotEqImpliesHashNotEq(sharedSymbolTable + \"{$99:a, $999:b}\","], [572, "                                       sharedSymbolTable + \"{a:$99, b:$999}\");"], [573, "        assertIonNotEqImpliesHashNotEq(sharedSymbolTable + \"{$99:a, $999:b, $9999:c}\","], [574, "                                       sharedSymbolTable + \"{a:$99, b:$999, c:$9999}\");"], [579, "        String sharedSymbolTable = \"$ion_symbol_table::{imports:[{name:\\\"foo\\\", version: 1, max_id:90}]}\";"], [581, "        checkType(type, oneValue(sharedSymbolTable + \"$99::\" + text));"], [590, "        assertIonEqImpliesHashEq(oneValue(sharedSymbolTable + \"$99::\" + text),"], [591, "                                 oneValue(sharedSymbolTable + \"$98::\" + text));"], [592, "        assertIonEqImpliesHashEq(oneValue(sharedSymbolTable + \"$99::$98::\" + text),"], [593, "                                 oneValue(sharedSymbolTable + \"$99::$98::\" + text));"], [594, "        assertIonEqImpliesHashEq(oneValue(sharedSymbolTable + \"$99::$98::$97::\" + text),"], [595, "                                 oneValue(sharedSymbolTable + \"$99::$98::$97::\" + text));"], [604, "        assertIonNotEqImpliesHashNotEq(sharedSymbolTable + \"$99::\" + text,"], [605, "                                       sharedSymbolTable + \"$98::\" + text);"], [606, "        assertIonNotEqImpliesHashNotEq(sharedSymbolTable + \"$99::$98::\" + text,"], [607, "                                       sharedSymbolTable + \"$98::$99::\" + text);"], [608, "        assertIonNotEqImpliesHashNotEq(sharedSymbolTable + \"$99::$98::$97::\" + text,"], [609, "                                       sharedSymbolTable + \"$97::$98::$99::\" + text);"]], "deleted": [[546, "        assertIonNotEqImpliesHashNotEq(\"{$99:123, $98:123}\","], [547, "                                       \"{$99:456, $98:456}\");"], [548, "        assertIonNotEqImpliesHashNotEq(\"{$99:annot::123, $98:123}\","], [549, "                                       \"{$99:456, $98:annot::456}\");"], [567, "        assertIonNotEqImpliesHashNotEq(\"{$99:a}\","], [568, "                                       \"{a:$99}\");"], [569, "        assertIonNotEqImpliesHashNotEq(\"{$99:a, $999:b}\","], [570, "                                       \"{a:$99, b:$999}\");"], [571, "        assertIonNotEqImpliesHashNotEq(\"{$99:a, $999:b, $9999:c}\","], [572, "                                       \"{a:$99, b:$999, c:$9999}\");"], [578, "        checkType(type, oneValue(\"$99::\" + text));"], [587, "        assertIonEqImpliesHashEq(oneValue(\"$99::\" + text),"], [588, "                                 oneValue(\"$98::\" + text));"], [589, "        assertIonEqImpliesHashEq(oneValue(\"$99::$98::\" + text),"], [590, "                                 oneValue(\"$99::$98::\" + text));"], [591, "        assertIonEqImpliesHashEq(oneValue(\"$99::$98::$97::\" + text),"], [592, "                                 oneValue(\"$99::$98::$97::\" + text));"], [601, "        assertIonNotEqImpliesHashNotEq(\"$99::\" + text,"], [602, "                                       \"$98::\" + text);"], [603, "        assertIonNotEqImpliesHashNotEq(\"$99::$98::\" + text,"], [604, "                                       \"$98::$99::\" + text);"], [605, "        assertIonNotEqImpliesHashNotEq(\"$99::$98::$97::\" + text,"], [606, "                                       \"$97::$98::$99::\" + text);"]]}, "num_lines_added": 26, "num_lines_removed": 23}