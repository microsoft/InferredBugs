{"hash": "930722ed1bd093340056f22c8e9004b6eaf128d5", "message": "refactor tests", "file_num_lines": 42, "diff_parsed": {"added": [[38, "    @Test"], [39, "    public void testXmlRecordReading() throws Exception {"], [40, "        // given"], [46, "        // when"], [47, "        XmlRecord xmlRecord1 = xmlFileRecordReader.readRecord();"], [48, "        XmlRecord xmlRecord2 = xmlFileRecordReader.readRecord();"], [49, "        XmlRecord xmlRecord3 = xmlFileRecordReader.readRecord();"], [50, "        XmlRecord xmlRecord4 = xmlFileRecordReader.readRecord();"], [52, "        // then"], [53, "        assertThat(xmlRecord1.getHeader().getNumber()).isEqualTo(1L);"], [54, "        assertThat(xmlRecord1.getHeader().getSource()).isEqualTo(expectedDataSourceName);"], [55, "        assertThat(xmlRecord1.getPayload()).isEqualTo(\"<data>1</data>\");"], [57, "        assertThat(xmlRecord2.getHeader().getNumber()).isEqualTo(2L);"], [58, "        assertThat(xmlRecord2.getHeader().getSource()).isEqualTo(expectedDataSourceName);"], [59, "        assertThat(xmlRecord2.getPayload()).isEqualTo(\"<data>2</data>\");"], [61, "        assertThat(xmlRecord3.getHeader().getNumber()).isEqualTo(3L);"], [62, "        assertThat(xmlRecord3.getHeader().getSource()).isEqualTo(expectedDataSourceName);"], [63, "        assertThat(xmlRecord3.getPayload()).isEqualTo(\"<data>3</data>\");"], [64, ""], [65, "        assertThat(xmlRecord4).isNull();"], [66, "    }"], [67, ""], [68, "    @Test"], [69, "    public void testReadingEmptyElement() throws Exception {"], [70, "        // given"], [71, "        dataSource = new File(\"src/test/resources/data-empty.xml\");"], [72, "        xmlFileRecordReader = new XmlFileRecordReader(dataSource, \"data\");"], [73, "        xmlFileRecordReader.open();"], [75, "        // when"], [76, "        XmlRecord xmlRecord1 = xmlFileRecordReader.readRecord();"], [78, "        // then"], [79, "        assertThat(xmlRecord1).isNull();"]], "deleted": [[27, "import org.junit.Before;"], [39, "    @Before"], [40, "    public void setUp() throws Exception {"], [44, "    }"], [45, ""], [46, "    @Test"], [47, "    public void testXmlRecordReading() throws Exception {"], [50, "        XmlRecord xmlRecord = xmlFileRecordReader.readRecord();"], [51, "        assertThat(xmlRecord.getHeader().getNumber()).isEqualTo(1L);"], [52, "        assertThat(xmlRecord.getHeader().getSource()).isEqualTo(expectedDataSourceName);"], [53, "        assertThat(xmlRecord.getPayload()).isEqualTo(\"<data>1</data>\");"], [55, "        xmlRecord = xmlFileRecordReader.readRecord();"], [56, "        assertThat(xmlRecord.getHeader().getNumber()).isEqualTo(2L);"], [57, "        assertThat(xmlRecord.getHeader().getSource()).isEqualTo(expectedDataSourceName);"], [58, "        assertThat(xmlRecord.getPayload()).isEqualTo(\"<data>2</data>\");"], [60, "        xmlRecord = xmlFileRecordReader.readRecord();"], [61, "        assertThat(xmlRecord.getHeader().getNumber()).isEqualTo(3L);"], [62, "        assertThat(xmlRecord.getHeader().getSource()).isEqualTo(expectedDataSourceName);"], [63, "        assertThat(xmlRecord.getPayload()).isEqualTo(\"<data>3</data>\");"], [65, "        xmlRecord = xmlFileRecordReader.readRecord();"], [66, "        assertThat(xmlRecord.getHeader().getNumber()).isEqualTo(4L);"], [67, "        assertThat(xmlRecord.getHeader().getSource()).isEqualTo(expectedDataSourceName);"], [68, "        assertThat(xmlRecord.getPayload()).isEqualTo(\"<data>4</data>\");"], [70, "        xmlRecord = xmlFileRecordReader.readRecord();"], [71, "        assertThat(xmlRecord.getHeader().getNumber()).isEqualTo(5L);"], [72, "        assertThat(xmlRecord.getHeader().getSource()).isEqualTo(expectedDataSourceName);"], [73, "        assertThat(xmlRecord.getPayload()).isEqualTo(\"<data>5</data>\");"], [75, "        xmlRecord = xmlFileRecordReader.readRecord();"], [76, "        assertThat(xmlRecord).isNull();"]]}, "num_lines_added": 32, "num_lines_removed": 29}