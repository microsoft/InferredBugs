{"hash": "945818ddf47b946843b0ce2fb939fa610ce1f7dc", "message": "issue #239 : add constructor with java.nio.file.Path in FileRecordWriter", "file_num_lines": 42, "diff_parsed": {"added": [[28, "import org.easybatch.core.record.Header;"], [30, "import org.easybatch.core.record.StringRecord;"], [38, "import java.nio.file.Files;"], [39, "import java.nio.file.Path;"], [40, "import java.nio.file.Paths;"], [43, "import static org.easybatch.core.util.Utils.LINE_SEPARATOR;"], [53, "    private final Path path = Paths.get(\"target/test.txt\");"], [56, "    private Header header;"], [58, "    private Record record1, record2;"], [64, "        Files.createFile(path);"], [65, "        record1 = new StringRecord(header, \"foo\");"], [66, "        record2 = new StringRecord(header, \"bar\");"], [67, "        writer = new FileRecordWriter(path);"], [68, "        writer.open();"], [73, "        writer.writeRecords(new Batch(record1, record2));"], [75, "        assertThat(path).hasContent(\"foo\" + LINE_SEPARATOR + \"bar\" + LINE_SEPARATOR);"], [80, "        writer.close();"], [81, "        Files.delete(path);"]], "deleted": [[36, "import java.io.File;"], [37, "import java.io.FileWriter;"], [40, "import static org.easybatch.core.util.Utils.*;"], [41, "import static org.mockito.Mockito.when;"], [51, "    public static final String PAYLOAD = \"Foo\";"], [54, "    private Record record;"], [56, "    private File file;"], [62, "        when(record.getPayload()).thenReturn(PAYLOAD);"], [63, "        file = new File(JAVA_IO_TMPDIR + FILE_SEPARATOR + \"test.txt\");"], [64, "        file.createNewFile();"], [65, "        writer = new FileRecordWriter(new FileWriter(file));"], [70, "        writer.writeRecords(new Batch(record));"], [72, "        assertThat(file).hasContent(PAYLOAD + LINE_SEPARATOR);"], [77, "        file.delete();"]]}, "num_lines_added": 18, "num_lines_removed": 14}