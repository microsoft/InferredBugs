  @Override
  public NextAction apply(Packet packet) {
    Collection<StepAndPacket> startDetails = new ArrayList<>();

    for (Map.Entry<String, ServerKubernetesObjects> entry : c) {
      startDetails.add(
          new StepAndPacket(
              new ServerDownStep(entry.getKey(), entry.getValue(), null), packet.clone()));
    }

    if (LOGGER.isFineEnabled()) {
      DomainPresenceInfo info = packet.getSPI(DomainPresenceInfo.class);

      Domain dom = info.getDomain();
      DomainSpec spec = dom.getSpec();

      Collection<String> stopList = new ArrayList<>();
      for (Map.Entry<String, ServerKubernetesObjects> entry : c) {
        stopList.add(entry.getKey());
      }
      LOGGER.fine(
          "Stopping servers for domain with UID: "
              + spec.getDomainUID()
              + ", stop list: "
              + stopList);
    }

    if (startDetails.isEmpty()) {
      return doNext(packet);
    }
    return doForkJoin(getNext(), packet, startDetails);
  }