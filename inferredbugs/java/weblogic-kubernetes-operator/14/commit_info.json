{"hash": "2ac7c604fb82852827d940678ae659ea383531dc", "message": "Resolve some sonar bugs", "file_num_lines": 69, "diff_parsed": {"added": [[1, "// Copyright 2017, 2019, Oracle Corporation and/or its affiliates.  All rights reserved."], [20, "/** RequestDebugLoggingFilter debug logs all the REST Requests. */"], [28, "  /** Construct a RequestDebugLoggingFilter. */"], [75, "    try (BufferedReader ir = new BufferedReader(new InputStreamReader(req.getEntityStream()))) {"], [76, "      StringBuilder sb = new StringBuilder();"], [77, "      String line = null;"], [78, "      Charset cs = MessageUtils.getCharset(req.getMediaType());"], [79, "      // TBD - is all the Charset handling correct?"], [80, "      do {"], [81, "        line = ir.readLine();"], [82, "        if (line != null) {"], [83, "          sb.append(line);"], [84, "        }"], [85, "      } while (line != null);"], [86, "      ir.close();"], [87, "      String entity = sb.toString();"], [89, "      // Set the request input stream to a clone of the original input stream"], [90, "      // so that it can be read again"], [91, "      req.setEntityStream(new ByteArrayInputStream(entity.getBytes(cs)));"], [92, "      LOGGER.exiting(entity);"], [93, "      return entity;"], [94, "    }"]], "deleted": [[1, "// Copyright 2017, Oracle Corporation and/or its affiliates.  All rights reserved."], [20, "/** RequestDebugLoggingFilter debug logs all the REST Requests */"], [28, "  /** Construct a RequestDebugLoggingFilter */"], [33, "  /** {@inheritDoc} */"], [76, "    BufferedReader ir = new BufferedReader(new InputStreamReader(req.getEntityStream()));"], [77, "    StringBuilder sb = new StringBuilder();"], [78, "    String line = null;"], [79, "    Charset cs = MessageUtils.getCharset(req.getMediaType());"], [80, "    // TBD - is all the Charset handling correct?"], [81, "    do {"], [82, "      line = ir.readLine();"], [83, "      if (line != null) {"], [84, "        sb.append(line);"], [85, "      }"], [86, "    } while (line != null);"], [87, "    ir.close();"], [88, "    String entity = sb.toString();"], [90, "    // Set the request input stream to a clone of the original input stream"], [91, "    // so that it can be read again"], [92, "    req.setEntityStream(new ByteArrayInputStream(entity.getBytes(cs)));"], [93, "    LOGGER.exiting(entity);"], [94, "    return entity;"]]}, "num_lines_added": 22, "num_lines_removed": 22}