{"hash": "68ab8d553090c3c009cbb415d00c695c945f7240", "message": "isolate domain details from wlsconfig classes", "file_num_lines": 569, "diff_parsed": {"added": [[10, "import static org.hamcrest.Matchers.equalTo;"], [11, "import static org.junit.Assert.assertEquals;"], [12, "import static org.junit.Assert.assertFalse;"], [13, "import static org.junit.Assert.assertNotNull;"], [14, "import static org.junit.Assert.assertNull;"], [15, "import static org.junit.Assert.assertSame;"], [16, "import static org.junit.Assert.assertThat;"], [17, "import static org.junit.Assert.assertTrue;"], [68, "  public void verifyMaxClusterSizeIsSameAsNumberOfServers() {"], [69, "    WlsClusterConfig wlsClusterConfig = new WlsClusterConfig(\"cluster1\");"], [70, "    wlsClusterConfig.addServerConfig(createWlsServerConfig(\"ms-0\", null, null));"], [71, "    wlsClusterConfig.addServerConfig(createWlsServerConfig(\"ms-1\", 8011, null));"], [72, "    assertEquals(2, wlsClusterConfig.getMaxClusterSize());"], [73, "  }"], [74, ""], [75, "  @Test"], [131, "  public void verifyMaxClusterSizeIsSameAsNumberOfServersPlusDynamicSizeForMixedCluster() {"], [132, "    WlsClusterConfig wlsClusterConfig ="], [133, "        new WlsClusterConfig(\"cluster1\", createDynamicServersConfig(2, 5, \"ms-\", \"clsuter1\"));"], [134, "    wlsClusterConfig.addServerConfig(createWlsServerConfig(\"mss-0\", 8011, null));"], [135, ""], [136, "    assertEquals(6, wlsClusterConfig.getMaxClusterSize());"], [137, "  }"], [138, ""], [139, "  @Test"], [140, "  public void verifyMaxClusterSizeIsSameAsDynamicSizeForDynamicCluster() {"], [141, "    WlsClusterConfig wlsClusterConfig ="], [142, "        new WlsClusterConfig(\"cluster1\", createDynamicServersConfig(2, 5, \"ms-\", \"clsuter1\"));"], [143, ""], [144, "    assertEquals(5, wlsClusterConfig.getMaxClusterSize());"], [145, "  }"], [146, ""], [147, "  @Test"], [205, ""], [206, "    wlsClusterConfig.validateCluster(1, null);"], [207, ""], [212, "  public void verifyMaxClusterSizeForStaticCluster() {"], [215, ""], [216, "    assertThat(wlsClusterConfig.getMaxClusterSize(), equalTo(1));"], [225, ""], [226, "    wlsClusterConfig.validateCluster(2, suggestedConfigUpdates);"], [231, "  public void verifyMaxClusterSizeForDynamicCluster() {"], [235, ""], [236, "    assertThat(wlsClusterConfig.getMaxClusterSize(), equalTo(1));"], [240, "  public void verifyMaxClusterSizeForMixedCluster() {"], [245, ""], [246, "    assertThat(wlsClusterConfig.getMaxClusterSize(), equalTo(2));"], [250, "  public void verifyValidateClusterStartupDoNotWarnIfOfNoServers_mixedCluster() {"], [255, ""], [256, "    wlsClusterConfig.validateCluster(2, null);"], [266, ""], [267, "    wlsClusterConfig.validateCluster(2, suggestedConfigUpdates);"], [268, ""], [279, "        createDynamicServersConfig(1, 2, \"ms-\", \"cluster2\");"], [280, "    WlsClusterConfig wlsClusterConfig = new WlsClusterConfig(\"cluster2\", wlsDynamicServersConfig);"], [282, ""], [283, "    wlsClusterConfig.validateCluster(1, suggestedConfigUpdates);"], [284, ""], [295, ""], [296, "    wlsClusterConfig.validateCluster(1, suggestedConfigUpdates);"], [297, ""], [308, ""], [309, "    wlsClusterConfig.validateCluster(3, suggestedConfigUpdates);"], [320, ""], [321, "    wlsClusterConfig.validateCluster(10, suggestedConfigUpdates);"], [322, ""], [335, "    Map<String, WlsClusterConfig> clusters = new HashMap<>();"], [340, "    Map<String, WlsMachineConfig> machines = new HashMap<>();"], [348, ""], [349, "    wlsClusterConfig.validateCluster(2, suggestedConfigUpdates);"], [350, ""], [364, "    Map<String, WlsClusterConfig> clusters = new HashMap<>();"], [367, "    Map<String, WlsMachineConfig> machines = new HashMap<>();"], [377, "    wlsClusterConfig.validateCluster(1, suggestedConfigUpdates);"], [391, "    Map<String, WlsClusterConfig> clusters = new HashMap<>();"], [396, "    Map<String, WlsMachineConfig> machines = new HashMap<>();"], [404, "    wlsClusterConfig.validateCluster(1, suggestedConfigUpdates);"]], "deleted": [[10, "import static org.junit.Assert.*;"], [24, "import oracle.kubernetes.weblogic.domain.v1.ClusterStartup;"], [174, "    ClusterStartup cs = new ClusterStartup().withClusterName(\"cluster1\").withReplicas(1);"], [175, "    wlsClusterConfig.validateClusterStartup(cs, null);"], [177, "    assertThat(logRecords, containsWarning(REPLICA_MORE_THAN_WLS_SERVERS));"], [181, "  public void verifyValidateClusterStartupWarnsIfReplicasTooHigh() {"], [184, "    ClusterStartup cs = new ClusterStartup().withClusterName(\"cluster1\").withReplicas(2);"], [185, "    wlsClusterConfig.validateClusterStartup(cs, null);"], [186, "    assertThat(logRecords, containsWarning(REPLICA_MORE_THAN_WLS_SERVERS, \"cluster1\"));"], [194, "    ClusterStartup cs = new ClusterStartup().withClusterName(\"cluster1\").withReplicas(2);"], [196, "    wlsClusterConfig.validateClusterStartup(cs, suggestedConfigUpdates);"], [198, "    assertThat(logRecords, containsWarning(REPLICA_MORE_THAN_WLS_SERVERS));"], [202, "  public void verifyValidateClusterStartupWarnsIfReplicasTooHigh_DynamicCluster() {"], [206, "    ClusterStartup cs = new ClusterStartup().withClusterName(\"cluster1\").withReplicas(2);"], [207, "    wlsClusterConfig.validateClusterStartup(cs, null);"], [208, "    assertThat(logRecords, containsWarning(REPLICA_MORE_THAN_WLS_SERVERS, \"cluster1\"));"], [212, "  public void verifyValidateClusterStartupWarnsIfReplicasTooHigh_mixedCluster() {"], [217, "    ClusterStartup cs = new ClusterStartup().withClusterName(\"cluster1\").withReplicas(3);"], [218, "    wlsClusterConfig.validateClusterStartup(cs, null);"], [219, "    assertThat(logRecords, containsWarning(REPLICA_MORE_THAN_WLS_SERVERS, \"cluster1\"));"], [223, "  public void verifyValidateClusterStartupDoNotWarnIfReplicasNotHigh_mixedCluster() {"], [228, "    ClusterStartup cs = new ClusterStartup().withClusterName(\"cluster1\").withReplicas(2);"], [229, "    wlsClusterConfig.validateClusterStartup(cs, null);"], [238, "    ClusterStartup cs = new ClusterStartup().withClusterName(\"cluster1\").withReplicas(2);"], [240, "    wlsClusterConfig.validateClusterStartup(cs, suggestedConfigUpdates);"], [251, "        createDynamicServersConfig(1, 2, \"ms-\", \"cluster1\");"], [252, "    WlsClusterConfig wlsClusterConfig = new WlsClusterConfig(\"cluster1\", wlsDynamicServersConfig);"], [253, "    ClusterStartup cs = new ClusterStartup().withClusterName(\"cluster1\").withReplicas(1);"], [255, "    wlsClusterConfig.validateClusterStartup(cs, suggestedConfigUpdates);"], [265, "    ClusterStartup cs = new ClusterStartup().withClusterName(\"cluster1\").withReplicas(1);"], [267, "    wlsClusterConfig.validateClusterStartup(cs, suggestedConfigUpdates);"], [277, "    ClusterStartup cs = new ClusterStartup().withClusterName(\"cluster1\").withReplicas(3);"], [279, "    wlsClusterConfig.validateClusterStartup(cs, suggestedConfigUpdates);"], [281, "    assertThat(logRecords, containsWarning(REPLICA_MORE_THAN_WLS_SERVERS));"], [290, "    ClusterStartup cs = new ClusterStartup().withClusterName(\"cluster1\").withReplicas(10);"], [292, "    wlsClusterConfig.validateClusterStartup(cs, suggestedConfigUpdates);"], [296, "    assertThat(logRecords, containsWarning(REPLICA_MORE_THAN_WLS_SERVERS));"], [306, "    Map<String, WlsClusterConfig> clusters = new HashMap();"], [311, "    Map<String, WlsMachineConfig> machines = new HashMap();"], [318, "    ClusterStartup cs = new ClusterStartup().withClusterName(\"cluster1\").withReplicas(2);"], [319, ""], [321, "    wlsClusterConfig.validateClusterStartup(cs, suggestedConfigUpdates);"], [335, "    Map<String, WlsClusterConfig> clusters = new HashMap();"], [338, "    Map<String, WlsMachineConfig> machines = new HashMap();"], [344, "    ClusterStartup cs = new ClusterStartup().withClusterName(\"cluster1\").withReplicas(1);"], [345, ""], [350, "    wlsClusterConfig.validateClusterStartup(cs, suggestedConfigUpdates);"], [364, "    Map<String, WlsClusterConfig> clusters = new HashMap();"], [369, "    Map<String, WlsMachineConfig> machines = new HashMap();"], [376, "    ClusterStartup cs = new ClusterStartup().withClusterName(\"cluster1\").withReplicas(1);"], [377, ""], [379, "    wlsClusterConfig.validateClusterStartup(cs, suggestedConfigUpdates);"]]}, "num_lines_added": 77, "num_lines_removed": 52}