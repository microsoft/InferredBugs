{"hash": "26812006f82008a963439d1e27b5ffae153c51e3", "message": "Reflect new understanding of expected functionality", "file_num_lines": 510, "diff_parsed": {"added": [[148, "  public void whenStartupControlUndefined_startServers() {"], [149, "    invokeStepWithConfiguredServer();"], [151, "    assertServersToBeStarted();"], [152, "  }"], [153, ""], [154, "  private void invokeStepWithConfiguredServer() {"], [155, "    configureServer(\"configured\");"], [156, "    addWlsServer(\"configured\");"], [157, "    invokeStep();"], [161, "  public void whenStartupControlAuto_startServers() {"], [164, "    invokeStepWithConfiguredServer();"], [166, "    assertServersToBeStarted();"], [170, "  public void whenStartupControlAll_startServers() {"], [173, "    invokeStepWithConfiguredServer();"], [175, "    assertServersToBeStarted();"], [179, "  public void whenStartupControlSpecified_startServers() {"], [182, "    invokeStepWithConfiguredServer();"], [184, "    assertServersToBeStarted();"], [191, "    invokeStepWithConfiguredServer();"], [193, "    assertServersToBeStarted();"], [196, "  private void assertServersToBeStarted() {"], [201, "  public void whenStartupControlAdmin_dontStartServers() {"], [204, "    invokeStepWithConfiguredServer();"], [206, "    assertServersWillNotBeStarted();"], [210, "  public void whenStartupControlNone_dontStartServers() {"], [213, "    invokeStepWithConfiguredServer();"], [215, "    assertServersWillNotBeStarted();"], [219, "  public void whenStartupControlNotRecognized_dontStartServers() {"], [222, "    invokeStepWithConfiguredServer();"], [224, "    assertServersWillNotBeStarted();"], [229, "    configureServer(\"wls1\");"], [230, "    addWlsServer(\"wls1\");"], [234, "    assertThat(getServers(), contains(\"wls1\"));"], [239, "    addWlsServer(\"wls1\");"], [248, "    configureServer(\"wls1\");"], [257, "    configureServers(\"wls1\", \"wls2\", \"wls3\");"], [258, "    addWlsServers(\"wls1\", \"wls2\", \"wls3\");"], [262, "    assertThat(getServers(), containsInAnyOrder(\"wls1\", \"wls2\", \"wls3\"));"], [267, "    defineAdminServer(\"wls2\");"], [268, "    configureServers(\"wls1\", \"wls2\", \"wls3\");"], [269, "    addWlsServers(\"wls1\", \"wls2\", \"wls3\");"], [273, "    assertThat(getServers(), containsInAnyOrder(\"wls1\", \"wls3\"));"], [279, "    configureServers(\"wls1\", \"wls1\", \"wls2\");"], [280, "    addWlsServers(\"wls1\", \"wls2\", \"wls3\");"], [284, "    assertThat(getServers(), containsInAnyOrder(\"wls1\", \"wls2\"));"], [289, "    configureServer(\"wls1\");"], [290, "    configureServer(\"wls2\");"], [291, "    addWlsServers(\"wls1\", \"wls2\");"], [295, "    assertThat(getServerStartupInfo(\"wls1\"), notNullValue());"], [296, "    assertThat(getServerStartupInfo(\"wls2\"), notNullValue());"], [301, "    configureServer(\"wls1\").withNodePort(17);"], [302, "    addWlsServer(\"wls1\");"], [306, "    assertThat(getServerStartupInfo(\"wls1\").serverConfig, sameInstance(getWlsServer(\"wls1\")));"], [307, "    assertThat(getServerStartupInfo(\"wls1\").getNodePort(), equalTo(17));"], [312, "    configureServer(\"wls1\")"], [315, "    addWlsServer(\"wls1\");"], [320, "        getServerStartupInfo(\"wls1\").getEnvironment(),"], [326, "    configureServer(\"wls1\").withDesiredState(ADMIN_STATE);"], [327, "    addWlsServer(\"wls1\");"], [332, "        getServerStartupInfo(\"wls1\").getEnvironment(),"], [338, "    configureServer(\"wls1\")"], [341, "    addWlsServer(\"wls1\");"], [346, "        getServerStartupInfo(\"wls1\").getEnvironment(),"], [352, "    configureServer(\"wls1\");"], [353, "    addWlsServer(\"wls1\");"], [357, "    assertThat(getServerStartupInfo(\"wls1\").getClusterName(), nullValue());"], [487, "    assertThat(getServerStartupInfo(\"ms4\").serverConfig, equalTo(getWlsServer(\"cluster1\", \"ms4\")));"], [498, "    assertThat(getServerStartupInfo(\"ms1\").serverConfig, equalTo(getWlsServer(\"cluster1\", \"ms1\")));"], [515, "  private void addWlsServer(String serverName) {"], [516, "    wlsServers.put(serverName, createServerConfig(serverName));"], [547, "  private WlsServerConfig getWlsServer(String clusterName, String serverName) {"], [548, "    WlsClusterConfig wlsClusterConfig = wlsClusters.get(clusterName);"], [549, "    if (wlsClusterConfig == null) return null;"], [550, ""], [551, "    for (WlsServerConfig serverConfig : wlsClusterConfig.getServerConfigs()) {"], [552, "      if (serverConfig.getName().equals(serverName)) return serverConfig;"], [553, "    }"], [554, ""], [555, "    return null;"], [556, "  }"], [557, ""], [593, "  private void assertServersWillNotBeStarted() {"], [663, "      serverConfigs.add(createServerConfig(serverName));"]], "deleted": [[148, "  public void whenStartupControlUndefined_startManagedServers() {"], [149, "    invokeStep();"], [151, "    assertManagedServersToBeStarted();"], [155, "  public void whenStartupControlAuto_startManagedServers() {"], [158, "    invokeStep();"], [160, "    assertManagedServersToBeStarted();"], [164, "  public void whenStartupControlAll_startManagedServers() {"], [167, "    invokeStep();"], [169, "    assertManagedServersToBeStarted();"], [173, "  public void whenStartupControlSpecified_startManagedServers() {"], [176, "    invokeStep();"], [178, "    assertManagedServersToBeStarted();"], [185, "    invokeStep();"], [187, "    assertManagedServersToBeStarted();"], [190, "  private void assertManagedServersToBeStarted() {"], [195, "  public void whenStartupControlAdmin_dontStartManagedServers() {"], [198, "    invokeStep();"], [200, "    assertManagedServersWillNotBeStarted();"], [204, "  public void whenStartupControlNone_dontStartManagedServers() {"], [207, "    invokeStep();"], [209, "    assertManagedServersWillNotBeStarted();"], [213, "  public void whenStartupControlNotRecognized_dontStartManagedServers() {"], [216, "    invokeStep();"], [218, "    assertManagedServersWillNotBeStarted();"], [223, "    configureServer(\"ms1\");"], [224, "    addWlsServer(\"ms1\");"], [228, "    assertThat(getServers(), contains(\"ms1\"));"], [233, "    addWlsServer(\"ms1\");"], [242, "    configureServer(\"ms1\");"], [251, "    configureServers(\"ms1\", \"ms2\", \"ms3\");"], [252, "    addWlsServers(\"ms1\", \"ms2\", \"ms3\");"], [256, "    assertThat(getServers(), containsInAnyOrder(\"ms1\", \"ms2\", \"ms3\"));"], [261, "    defineAdminServer(\"ms2\");"], [262, "    configureServers(\"ms1\", \"ms2\", \"ms3\");"], [263, "    addWlsServers(\"ms1\", \"ms2\", \"ms3\");"], [267, "    assertThat(getServers(), containsInAnyOrder(\"ms1\", \"ms3\"));"], [273, "    configureServers(\"ms1\", \"ms1\", \"ms2\");"], [274, "    addWlsServers(\"ms1\", \"ms2\", \"ms3\");"], [278, "    assertThat(getServers(), containsInAnyOrder(\"ms1\", \"ms2\"));"], [283, "    configureServer(\"ms1\");"], [284, "    configureServer(\"ms2\");"], [285, "    addWlsServers(\"ms1\", \"ms2\");"], [289, "    assertThat(getServerStartupInfo(\"ms1\"), notNullValue());"], [290, "    assertThat(getServerStartupInfo(\"ms2\"), notNullValue());"], [295, "    configureServer(\"ms1\").withNodePort(17);"], [296, "    addWlsServer(\"ms1\");"], [300, "    assertThat(getServerStartupInfo(\"ms1\").serverConfig, sameInstance(getWlsServer(\"ms1\")));"], [301, "    assertThat(getServerStartupInfo(\"ms1\").getNodePort(), equalTo(17));"], [306, "    configureServer(\"ms1\")"], [309, "    addWlsServer(\"ms1\");"], [314, "        getServerStartupInfo(\"ms1\").getEnvironment(),"], [320, "    configureServer(\"ms1\").withDesiredState(ADMIN_STATE);"], [321, "    addWlsServer(\"ms1\");"], [326, "        getServerStartupInfo(\"ms1\").getEnvironment(),"], [332, "    configureServer(\"ms1\")"], [335, "    addWlsServer(\"ms1\");"], [340, "        getServerStartupInfo(\"ms1\").getEnvironment(),"], [346, "    configureServer(\"ms1\");"], [347, "    addWlsServer(\"ms1\");"], [351, "    assertThat(getServerStartupInfo(\"ms1\").getClusterName(), nullValue());"], [358, "    addWlsServer(\"ms1\");"], [482, "    assertThat(getServerStartupInfo(\"ms4\").serverConfig, equalTo(getWlsServer(\"ms4\")));"], [493, "    assertThat(getServerStartupInfo(\"ms1\").serverConfig, sameInstance(getWlsServer(\"ms1\")));"], [510, "  private WlsServerConfig addWlsServer(String serverName) {"], [511, "    WlsServerConfig serverConfig = createServerConfig(serverName);"], [512, "    wlsServers.put(serverName, serverConfig);"], [513, "    return serverConfig;"], [579, "  private void assertManagedServersWillNotBeStarted() {"], [649, "      WlsServerConfig serverConfig = wlsServers.get(serverName);"], [650, "      serverConfigs.add(serverConfig != null ? serverConfig : addWlsServer(serverName));"]]}, "num_lines_added": 83, "num_lines_removed": 70}