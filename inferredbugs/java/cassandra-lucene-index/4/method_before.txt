    @Test
    public void testBuild() throws Exception {
        Schema schema = schema().defaultAnalyzer("custom")
                                .analyzer("custom", classpathAnalyzer("org.apache.lucene.analysis.en.EnglishAnalyzer"))
                                .analyzer("snowball", snowballAnalyzer("English", "the,at"))
                                .mapper("big_int", bigIntegerMapper().digits(10))
                                .mapper("big_dec", bigDecimalMapper().indexed(false).sorted(true))
                                .mapper("bitemporal", bitemporalMapper("vt_from", "vt_to", "tt_from", "tt_to"))
                                .mapper("blob", blobMapper())
                                .mapper("bool", booleanMapper())
                                .mapper("date", dateMapper())
                                .mapper("date_range", dateRangeMapper("from", "to"))
                                .mapper("double", doubleMapper())
                                .mapper("float", floatMapper())
                                .mapper("geo", geoPointMapper("lat", "lon"))
                                .mapper("inet", inetMapper())
                                .mapper("int", integerMapper().boost(0.3f))
                                .mapper("long", longMapper())
                                .mapper("string", stringMapper())
                                .mapper("text", textMapper())
                                .mapper("uuid", uuidMapper())
                                .build();
        assertEquals("Failed schema building", EnglishAnalyzer.class, schema.getDefaultAnalyzer().getClass());
        assertEquals("Failed schema building", EnglishAnalyzer.class, schema.getAnalyzer("custom").getClass());
        assertEquals("Failed schema building", SnowballAnalyzer.class, schema.getAnalyzer("snowball").getClass());
        assertEquals("Failed schema building", BigIntegerMapper.class, schema.getMapper("big_int").getClass());
        assertEquals("Failed schema building", BigDecimalMapper.class, schema.getMapper("big_dec").getClass());
        assertEquals("Failed schema building", BitemporalMapper.class, schema.getMapper("bitemporal").getClass());
        assertEquals("Failed schema building", BlobMapper.class, schema.getMapper("blob").getClass());
        assertEquals("Failed schema building", BooleanMapper.class, schema.getMapper("bool").getClass());
        assertEquals("Failed schema building", DateMapper.class, schema.getMapper("date").getClass());
        assertEquals("Failed schema building", DateRangeMapper.class, schema.getMapper("date_range").getClass());
        assertEquals("Failed schema building", DoubleMapper.class, schema.getMapper("double").getClass());
        assertEquals("Failed schema building", FloatMapper.class, schema.getMapper("float").getClass());
        assertEquals("Failed schema building", GeoPointMapper.class, schema.getMapper("geo").getClass());
        assertEquals("Failed schema building", InetMapper.class, schema.getMapper("inet").getClass());
        assertEquals("Failed schema building", IntegerMapper.class, schema.getMapper("int").getClass());
        assertEquals("Failed schema building", LongMapper.class, schema.getMapper("long").getClass());
        assertEquals("Failed schema building", StringMapper.class, schema.getMapper("string").getClass());
        assertEquals("Failed schema building", TextMapper.class, schema.getMapper("text").getClass());
        assertEquals("Failed schema building", UUIDMapper.class, schema.getMapper("uuid").getClass());
    }