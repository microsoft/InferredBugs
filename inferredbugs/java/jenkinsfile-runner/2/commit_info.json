{"hash": "b0faa871e5df11738d515c327d56e3c9f4fdc398", "message": "preventing recursively loading of jars in case of fat jar", "file_num_lines": 191, "diff_parsed": {"added": [[198, "        String appClassName = \"io.jenkins.jenkinsfile.runner.App\";"], [199, "        if (hasClass(appClassName)) {"], [200, "            Class<?> c = Class.forName(appClassName);"], [201, "            return ((IApp) c.newInstance()).run(this);"], [202, "        }"], [203, ""], [210, "            Class<?> c = setup.loadClass(appClassName);"], [214, "                throw new ClassNotFoundException(e.getMessage() + \" not found in \" + getAppRepo() + \",\""], [227, "                .collectJars(new File(getAppRepo(),\"javax/servlet\"))"], [233, "                .collectJars(getAppRepo())"], [253, "    public boolean hasClass(String className) {"], [254, "        try  {"], [255, "            Class.forName(className);"], [256, "            return true;"], [257, "        }  catch (ClassNotFoundException e) {"], [258, "            return false;"], [259, "        }"], [260, "    }"], [261, ""], [262, "    public File getAppRepo() {"], [263, "        return new File(System.getProperty(\"app.repo\"));"], [264, "    }"]], "deleted": [[33, "     * This system property is set by the bootstrap script created by appassembler Maven plugin"], [34, "     * to point to a local Maven repository."], [35, "     */"], [36, "    public final File appRepo = new File(System.getProperty(\"app.repo\"));"], [37, ""], [38, "    /**"], [210, "            Class<?> c = setup.loadClass(\"io.jenkins.jenkinsfile.runner.App\");"], [214, "                throw new ClassNotFoundException(e.getMessage() + \" not found in \" + appRepo + \",\""], [227, "                .collectJars(new File(appRepo,\"javax/servlet\"))"], [233, "                .collectJars(appRepo)"]]}, "num_lines_added": 22, "num_lines_removed": 10}