{"hash": "b0faa871e5df11738d515c327d56e3c9f4fdc398", "message": "preventing recursively loading of jars in case of fat jar", "file_num_lines": 96, "diff_parsed": {"added": [[19, "import java.io.IOException;"], [31, "    private static final String RUNNER_CLASS_NAME = \"io.jenkins.jenkinsfile.runner.Runner\";"], [130, "            Class<?> c = bootstrap.hasClass(RUNNER_CLASS_NAME)? Class.forName(RUNNER_CLASS_NAME) : getRunnerClassFromJar();"], [140, "    private Class<?> getRunnerClassFromJar() throws IOException, ClassNotFoundException {"], [141, "        ClassLoader cl = new ClassLoaderBuilder(jenkins.getPluginManager().uberClassLoader)"], [142, "                .collectJars(new File(bootstrap.getAppRepo(), \"io/jenkins/jenkinsfile-runner/payload\"))"], [143, "                .make();"], [144, ""], [145, "        return cl.loadClass(RUNNER_CLASS_NAME);"], [146, "    }"]], "deleted": [[128, "            ClassLoader cl = new ClassLoaderBuilder(jenkins.getPluginManager().uberClassLoader)"], [129, "                    .collectJars(new File(bootstrap.appRepo, \"io/jenkins/jenkinsfile-runner/payload\"))"], [130, "                    .make();"], [131, ""], [132, "            Class<?> c = cl.loadClass(\"io.jenkins.jenkinsfile.runner.Runner\");"]]}, "num_lines_added": 10, "num_lines_removed": 5}