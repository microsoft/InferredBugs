{"hash": "fa55299328f4b5264d5747d2c9dcaf1ce12076d9", "message": "some tweaks to pipeline for textRank", "file_num_lines": 904, "diff_parsed": {"added": [[98, "    private static final String PIPELINE_WITHOUT_NER = \"CORE.TEXTRANK_PIPELINE\";"], [157, "        if (!NLPManager.getInstance().hasPipeline(PIPELINE_WITHOUT_NER)) {"], [158, "            Map<String, Object> params = new HashMap<>();"], [159, "            params.put(\"tokenize\", true);"], [160, "            params.put(\"ner\", false);"], [161, "            String processor = NLPManager.getInstance().getTextProcessorsManager().getDefaultProcessor().getClass().getName();"], [162, "            PipelineSpecification ps = new PipelineSpecification(PIPELINE_WITHOUT_NER, processor);"], [163, "            ps.setProcessingSteps(params);"], [164, "            NLPManager.getInstance().addPipeline(ps);"], [165, "        }"]], "deleted": [[98, "    private static final String PIPELINE_WITHOUT_NER = \"tokenizerNoNEs\";"], [157, "        //System.out.println(\" >>> default processor: \" + NLPManager.getInstance().getTextProcessorsManager().getDefaultProcessor().getAlias());"], [158, "        Map<String, Object> params = new HashMap<>();"], [159, "        params.put(\"tokenize\", true);"], [160, "        params.put(\"ner\", false);"], [161, "        PipelineSpecification ps = new PipelineSpecification(PIPELINE_WITHOUT_NER, null);"], [162, "        ps.setProcessingSteps(params);"], [163, "        NLPManager.getInstance().getTextProcessorsManager().getDefaultProcessor()"], [164, "            .createPipeline(ps);"]]}, "num_lines_added": 10, "num_lines_removed": 9}