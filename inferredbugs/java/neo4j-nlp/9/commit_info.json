{"hash": "1075f990cc2b28bdf4810700bdc6549b77c1f16b", "message": "refactored parser common codebase and added word parser", "file_num_lines": 38, "diff_parsed": {"added": [[19, "import com.graphaware.nlp.parser.Parser;"], [22, "import com.graphaware.nlp.parser.poi.PowerpointParser;"], [23, "import com.graphaware.nlp.parser.poi.WordParser;"], [37, "        return getPages(parser, filename, filterPatterns).stream();"], [43, ""], [44, "        return getPages(parser, filename, filterPatterns).stream();"], [45, "    }"], [46, ""], [47, "    @Procedure(name = \"ga.nlp.parser.word\")"], [48, "    public Stream<Page> parseWord(@Name(\"file\") String filename, @Name(value = \"filterPatterns\", defaultValue = \"\") List<String> filterPatterns) {"], [49, "        WordParser parser = (WordParser) getNLPManager().getExtension(WordParser.class);"], [50, ""], [51, "        return getPages(parser, filename, filterPatterns).stream();"], [52, "    }"], [53, ""], [54, "    private List<Page> getPages(Parser parser, String filename, List<String> filterPatterns) {"], [59, "            return pages;"]], "deleted": [[21, "import com.graphaware.nlp.parser.powerpoint.PowerpointParser;"], [34, "        List<String> filters = filterPatterns.equals(\"\") ? new ArrayList<>() : filterPatterns;"], [35, "        try {"], [36, "            List<Page> pages = parser.parse(filename, filters);"], [38, "            return pages.stream();"], [39, "        } catch (Exception e) {"], [40, "            throw new RuntimeException(e);"], [41, "        }"], [51, "            return pages.stream();"], [56, ""]]}, "num_lines_added": 17, "num_lines_removed": 10}