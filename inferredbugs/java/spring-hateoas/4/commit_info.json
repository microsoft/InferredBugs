{"hash": "fbeeb1df5c2a3abcdae68508ce7c951381844ea6", "message": "#851 - Polishing.", "file_num_lines": 51, "diff_parsed": {"added": [[18, "import java.time.Duration;"], [25, "import org.springframework.http.HttpHeaders;"], [26, "import org.springframework.web.reactive.function.client.WebClient;"], [32, " *"], [43, "\t\t/*"], [44, "\t\t * If you run into github rate limiting issues, you can always use a Github Personal Token by adding"], [45, "\t\t * {@code .header(HttpHeaders.AUTHORIZATION, \"token your-github-token\")} to the webClient call."], [46, "\t\t */"], [47, ""], [48, "\t\tWebClient webClient = WebClient.create();"], [50, "\t\tHttpEntity<String> response = webClient //"], [51, "\t\t\t\t.get().uri(URI_TEMPLATE, MILESTONE_ID) //"], [52, "\t\t\t\t.exchange() //"], [53, "\t\t\t\t.flatMap(clientResponse -> clientResponse.toEntity(String.class)) //"], [54, "\t\t\t\t.block(Duration.ofSeconds(10));"], [64, "\t\t\tLinks links = Links.parse(response.getHeaders().get(HttpHeaders.LINK).get(0));"], [68, "\t\t\t\tresponse = webClient //"], [69, "\t\t\t\t\t\t.get().uri(links.getRequiredLink(IanaLinkRelations.NEXT).expand().getHref()) //"], [70, "\t\t\t\t\t\t.exchange() //"], [71, "\t\t\t\t\t\t.flatMap(clientResponse -> clientResponse.toEntity(String.class)) //"], [72, "\t\t\t\t\t\t.block(Duration.ofSeconds(10));"]], "deleted": [[18, "import java.util.Arrays;"], [20, "import java.util.stream.Collectors;"], [24, "import org.springframework.hateoas.Link;"], [27, "import org.springframework.web.client.RestTemplate;"], [33, " *"], [44, "\t\tRestTemplate template = new RestTemplate();"], [46, "\t\tHttpEntity<String> response = template.getForEntity(URI_TEMPLATE, String.class, MILESTONE_ID);"], [56, "\t\t\tString linkHeader = response.getHeaders().get(\"Link\").get(0);"], [57, ""], [58, "\t\t\tLinks links = Arrays.stream(linkHeader.split(\", \")) //"], [59, "\t\t\t\t\t.map(Link::valueOf) //"], [60, "\t\t\t\t\t.collect(Collectors.collectingAndThen(Collectors.toList(), Links::of));"], [64, "\t\t\t\tresponse = template.getForEntity(links.getRequiredLink(IanaLinkRelations.NEXT).expand().getHref(),"], [65, "\t\t\t\t\t\tString.class);"]]}, "num_lines_added": 21, "num_lines_removed": 14}