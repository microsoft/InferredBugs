{"hash": "b608bb0175892194f4721dcb721896aaffc5add4", "message": "#728 - Make sure invocation mappings are resolved eagerly.\n\nTweaked WebFluxLinkBuilder to make sure the controller invocations are resolved eagerly as otherwise, the controller proxy created would override the invocations due to the lazy evaluation of the links and for multiple method references, only the last one would have been used.", "file_num_lines": 135, "diff_parsed": {"added": [[85, "\t\tWebFluxEmployeeController controller = methodOn(WebFluxEmployeeController.class);"], [99, "\t\t\t\t}).collectList().flatMap(resources -> {"], [100, "\t\t\t\t\treturn linkTo(controller.all()).withSelfRel() //"], [101, "\t\t\t\t\t\t\t.andAffordance(controller.newEmployee(null)) //"], [102, "\t\t\t\t\t\t\t.andAffordance(controller.search(null, null)) //"], [103, "\t\t\t\t\t\t\t.toMono() //"], [104, "\t\t\t\t\t\t\t.map(selfLink -> new CollectionModel<>(resources, selfLink));"], [105, "\t\t\t\t});"], [123, "\t\t\t\t.map(links -> {"], [124, "\t\t\t\t\treturn new EntityModel<>(EMPLOYEES.get(id), links);"], [125, "\t\t\t\t});"]], "deleted": [[85, "\t\tClass<WebFluxEmployeeController> controller = WebFluxEmployeeController.class;"], [99, "\t\t\t\t}).collectList().flatMap(resources -> linkTo(methodOn(controller).all()).withSelfRel() //"], [100, "\t\t\t\t\t\t.andAffordance(methodOn(controller).newEmployee(null)) //"], [101, "\t\t\t\t\t\t.andAffordance(methodOn(controller).search(null, null)) //"], [102, "\t\t\t\t\t\t.toMono() //"], [103, "\t\t\t\t\t\t.map(selfLink -> new CollectionModel<>(resources, selfLink)));"], [121, "\t\t\t\t.map(links -> new EntityModel<>(EMPLOYEES.get(id), links));"]]}, "num_lines_added": 11, "num_lines_removed": 7}