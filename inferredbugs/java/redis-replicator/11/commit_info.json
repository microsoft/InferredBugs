{"hash": "4e67de2236c973dac3852ffb59240fdc45c0c3f4", "message": "comment testcase", "file_num_lines": 308, "diff_parsed": {"added": [[90, "//        setJvmTrustStore(\"src/test/resources/keystore/truststore.jceks\", \"jceks\");"], [91, "//        Replicator replicator = new RedisReplicator(\"localhost\", 56379,"], [92, "//                Configuration.defaultSetting().setSsl(true)"], [93, "//                        .setReadTimeout(0)"], [94, "//                        .setSslSocketFactory((SSLSocketFactory) SSLSocketFactory.getDefault())"], [95, "//                        .setHostnameVerifier(new BasicHostnameVerifier())"], [96, "//                        .setSslParameters(new SSLParameters()));"], [97, "//        final AtomicInteger acc = new AtomicInteger(0);"], [98, "//        Jedis jedis = null;"], [99, "//        try {"], [100, "//            jedis = new Jedis(\"127.0.0.1\", 6379);"], [101, "//            jedis.set(\"ssl1\", \"true\");"], [102, "//        } finally {"], [103, "//            jedis.close();"], [104, "//        }"], [105, "//        replicator.addRdbFilter(new RdbFilter() {"], [106, "//            @Override"], [107, "//            public boolean accept(KeyValuePair<?> kv) {"], [108, "//                return kv.getKey().equals(\"ssl1\");"], [109, "//            }"], [110, "//        });"], [111, "//        replicator.addRdbListener(new RdbListener() {"], [112, "//            @Override"], [113, "//            public void preFullSync(Replicator replicator) {"], [114, "//            }"], [115, "//"], [116, "//            @Override"], [117, "//            public void handle(Replicator replicator, KeyValuePair<?> kv) {"], [118, "//                acc.incrementAndGet();"], [119, "//            }"], [120, "//"], [121, "//            @Override"], [122, "//            public void postFullSync(Replicator replicator, long checksum) {"], [123, "//                Jedis jedis = null;"], [124, "//                try {"], [125, "//                    jedis = new Jedis(\"127.0.0.1\", 6379);"], [126, "//                    jedis.del(\"ssl1\");"], [127, "//                } finally {"], [128, "//                    jedis.close();"], [129, "//                }"], [130, "//                try {"], [131, "//                    replicator.close();"], [132, "//                } catch (IOException e) {"], [133, "//                    e.printStackTrace();"], [134, "//                }"], [135, "//            }"], [136, "//        });"], [137, "//        replicator.addCloseListener(new CloseListener() {"], [138, "//            @Override"], [139, "//            public void handle(Replicator replicator) {"], [140, "//                System.out.println(\"close testSsl1\");"], [141, "//                assertEquals(1, acc.get());"], [142, "//            }"], [143, "//        });"], [144, "//        replicator.open();"]], "deleted": [[90, "        setJvmTrustStore(\"src/test/resources/keystore/truststore.jceks\", \"jceks\");"], [91, "        Replicator replicator = new RedisReplicator(\"localhost\", 56379,"], [92, "                Configuration.defaultSetting().setSsl(true)"], [93, "                        .setReadTimeout(0)"], [94, "                        .setSslSocketFactory((SSLSocketFactory) SSLSocketFactory.getDefault())"], [95, "                        .setHostnameVerifier(new BasicHostnameVerifier())"], [96, "                        .setSslParameters(new SSLParameters()));"], [97, "        final AtomicInteger acc = new AtomicInteger(0);"], [98, "        Jedis jedis = null;"], [99, "        try {"], [100, "            jedis = new Jedis(\"127.0.0.1\", 6379);"], [101, "            jedis.set(\"ssl1\", \"true\");"], [102, "        } finally {"], [103, "            jedis.close();"], [104, "        }"], [105, "        replicator.addRdbFilter(new RdbFilter() {"], [106, "            @Override"], [107, "            public boolean accept(KeyValuePair<?> kv) {"], [108, "                return kv.getKey().equals(\"ssl1\");"], [109, "            }"], [110, "        });"], [111, "        replicator.addRdbListener(new RdbListener() {"], [112, "            @Override"], [113, "            public void preFullSync(Replicator replicator) {"], [114, "            }"], [115, ""], [116, "            @Override"], [117, "            public void handle(Replicator replicator, KeyValuePair<?> kv) {"], [118, "                acc.incrementAndGet();"], [119, "            }"], [120, ""], [121, "            @Override"], [122, "            public void postFullSync(Replicator replicator, long checksum) {"], [123, "                Jedis jedis = null;"], [124, "                try {"], [125, "                    jedis = new Jedis(\"127.0.0.1\", 6379);"], [126, "                    jedis.del(\"ssl1\");"], [127, "                } finally {"], [128, "                    jedis.close();"], [129, "                }"], [130, "                try {"], [131, "                    replicator.close();"], [132, "                } catch (IOException e) {"], [133, "                    e.printStackTrace();"], [134, "                }"], [135, "            }"], [136, "        });"], [137, "        replicator.addCloseListener(new CloseListener() {"], [138, "            @Override"], [139, "            public void handle(Replicator replicator) {"], [140, "                System.out.println(\"close testSsl1\");"], [141, "                assertEquals(1, acc.get());"], [142, "            }"], [143, "        });"], [144, "        replicator.open();"]]}, "num_lines_added": 55, "num_lines_removed": 55}