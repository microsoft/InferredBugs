{"hash": "d38dd9ea6c9a4d1154d1bb6d8cde6d672de3f87d", "message": "Close LineReader\n\nAdd a try/finally to close the LineNumberReader.\n\nAlso reinvent with 2 spaces.", "file_num_lines": 47, "diff_parsed": {"added": [[1, "/*"], [2, " * Credit goes to the authors of the ant task."], [3, " */"], [13, "  public static final String DEFAULT_NAME = \"Yylex\";"], [15, "  /**"], [16, "   * Guess the package and class name, based on this grammar definition. Does"], [17, "   * not override the Mojo configuration if it exist."], [18, "   *"], [19, "   * @author Rafal Mantiuk (Rafal.Mantiuk@bellstream.pl)"], [20, "   * @author Gerwin Klein (lsf@jflex.de)"], [21, "   *"], [22, "   * @return The name of the java code to generate."], [23, "   * @throws FileNotFoundException"], [24, "   *           if the lex file does not exist"], [25, "   * @throws IOException"], [26, "   *"], [27, "   */"], [28, "  protected static ClassInfo guessPackageAndClass(File lexFile) throws FileNotFoundException,"], [29, "          IOException {"], [30, "    assert lexFile.isAbsolute() : lexFile;"], [32, "    LineNumberReader reader = new LineNumberReader(new FileReader(lexFile));"], [34, "    try {"], [35, "      ClassInfo classInfo = new ClassInfo();"], [36, "      while (classInfo.className == null || classInfo.packageName == null) {"], [37, "        String line = reader.readLine();"], [38, "        if (line == null)"], [39, "          break;"], [41, "        if (classInfo.packageName == null) {"], [42, "          int index = line.indexOf(\"package\");"], [43, "          if (index >= 0) {"], [44, "            index += 7;"], [46, "            int end = line.indexOf(';', index);"], [47, "            if (end >= index) {"], [48, "              classInfo.packageName = line.substring(index, end);"], [49, "              classInfo.packageName = classInfo.packageName.trim();"], [50, "            }"], [51, "          }"], [52, "        }"], [54, "        if (classInfo.className == null) {"], [55, "          int index = line.indexOf(\"%class\");"], [56, "          if (index >= 0) {"], [57, "            index += 6;"], [59, "            classInfo.className = line.substring(index);"], [60, "            classInfo.className = classInfo.className.trim();"], [61, "          }"], [62, "        }"], [63, "      }"], [65, "      if (classInfo.className == null) {"], [66, "        classInfo.className = DEFAULT_NAME;"], [67, "      }"], [68, "      return classInfo;"], [69, "    } finally {"], [70, "      reader.close();"], [71, "    }"], [72, "  }"]], "deleted": [[10, "\tpublic static final String DEFAULT_NAME = \"Yylex\";"], [12, "\t/**"], [13, "\t * Guess the package and class name, based on this grammar definition. Does"], [14, "\t * not overide the Mojo configuration if it exist."], [15, "\t *"], [16, "\t * @return The name of the java code to generate."], [17, "\t *"], [18, "\t * Credit goes to the authors of the maven-jlex-plugin"], [19, "\t *"], [20, "\t * @throws IOException"], [21, "\t * @author Rafal Mantiuk (Rafal.Mantiuk@bellstream.pl)"], [22, "\t * @author Gerwin Klein (lsf@jflex.de)"], [23, "\t * @throws FileNotFoundException"], [24, "\t *             if the lex file does not exist"], [25, "\t *"], [26, "\t */"], [27, "\tprotected static ClassInfo guessPackageAndClass(File lexFile)"], [28, "\t\t\tthrows FileNotFoundException, IOException {"], [29, "\t\tassert lexFile.isAbsolute() : lexFile;"], [31, "\t\tLineNumberReader reader = new LineNumberReader(new FileReader(lexFile));"], [33, "\t\tClassInfo classInfo = new ClassInfo();"], [34, "\t\twhile (classInfo.className == null || classInfo.packageName == null) {"], [35, "\t\t\tString line = reader.readLine();"], [36, "\t\t\tif (line == null)"], [37, "\t\t\t\tbreak;"], [39, "\t\t\tif (classInfo.packageName == null) {"], [40, "\t\t\t\tint index = line.indexOf(\"package\");"], [41, "\t\t\t\tif (index >= 0) {"], [42, "\t\t\t\t\tindex += 7;"], [44, "\t\t\t\t\tint end = line.indexOf(';', index);"], [45, "\t\t\t\t\tif (end >= index) {"], [46, "\t\t\t\t\t\tclassInfo.packageName = line.substring(index, end);"], [47, "\t\t\t\t\t\tclassInfo.packageName = classInfo.packageName.trim();"], [48, "\t\t\t\t\t}"], [49, "\t\t\t\t}"], [50, "\t\t\t}"], [52, "\t\t\tif (classInfo.className == null) {"], [53, "\t\t\t\tint index = line.indexOf(\"%class\");"], [54, "\t\t\t\tif (index >= 0) {"], [55, "\t\t\t\t\tindex += 6;"], [57, "\t\t\t\t\tclassInfo.className = line.substring(index);"], [58, "\t\t\t\t\tclassInfo.className = classInfo.className.trim();"], [59, "\t\t\t\t}"], [60, "\t\t\t}"], [61, "\t\t}"], [63, "\t\tif (classInfo.className == null) {"], [64, "\t\t\tclassInfo.className = DEFAULT_NAME;"], [65, "\t\t}"], [66, "\t\treturn classInfo;"], [67, "\t}"]]}, "num_lines_added": 55, "num_lines_removed": 50}