{"hash": "0d034e192544716d7f48b23b55d2b2b4d9bb1d88", "message": "Adding the ability to pull out the getter & setter from PojoField, closes issue #79", "file_num_lines": 252, "diff_parsed": {"added": [[29, "import com.openpojo.reflection.PojoMethod;"], [75, "  @Test"], [76, "  public void canAccessGetter() {"], [77, "    boolean found = false;"], [78, "    for (PojoField pojoField : pojoClass.getPojoFields()) {"], [79, "      if (pojoField.hasGetter()) {"], [80, "        PojoMethod getter = pojoField.getGetter();"], [81, "        Affirm.affirmNotNull(\"Getter can't be retrieved\", getter);"], [82, "        Object randomInstance = RandomFactory.getRandomValue(pojoField.getType());"], [83, "        pojoField.set(pojoClassInstance, randomInstance);"], [84, "        Affirm.affirmSame(\"Expected same object in and out\", randomInstance, getter.invoke(pojoClassInstance));"], [85, "        found = true;"], [86, "      }"], [87, "    }"], [88, "    Affirm.affirmTrue(\"No getters were found!\", found);"], [89, "  }"], [90, ""], [91, "  @Test"], [92, "  public void canAccessSetter() {"], [93, "    boolean found = false;"], [94, "    for (PojoField pojoField : pojoClass.getPojoFields()) {"], [95, "      if (pojoField.hasSetter()) {"], [96, "        PojoMethod setter = pojoField.getSetter();"], [97, "        Affirm.affirmNotNull(\"Setter can't be retrieved\", setter);"], [98, "        Object randomInstance = RandomFactory.getRandomValue(pojoField.getType());"], [99, "        setter.invoke(pojoClassInstance, randomInstance);"], [100, "        Affirm.affirmSame(\"Expected same object in and out\", randomInstance, pojoField.get(pojoClassInstance));"], [101, "        found = true;"], [102, "      }"], [103, "    }"], [104, "    Affirm.affirmTrue(\"No Setters were found!\", found);"], [105, "  }"], [106, ""], [120, "    assert pojoField != null;"], [127, "    assert pojoField != null;"], [134, "    assert pojoField != null;"], [141, "    assert pojoField != null;"]], "deleted": []}, "num_lines_added": 37, "num_lines_removed": 0}