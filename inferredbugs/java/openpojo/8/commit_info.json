{"hash": "1ef3353553ac8e08cd327fd95873c98c8c32d486", "message": "Adding registration for the generators that were refactored.", "file_num_lines": 124, "diff_parsed": {"added": [[31, "    private String javaVersion = System.getProperty(\"java.version\");"], [39, "            ,\"java.lang.Enum\""], [46, ""], [49, ""], [51, ""], [62, "            ,\"java.util.EnumMap\""], [73, "            ,\"java.util.NavigableMap\" // jdk6 only"], [75, "            ,\"java.util.PriorityQueue\""], [86, "            ,\"java.util.concurrent.ConcurrentMap\""], [126, "//        \"java.util.NavigableSet\"  // only Jdk 6+"], [132, "        if (javaVersion.startsWith(\"1.5\"))"], [133, "            expectedTypes = expectedDefaultTypes.size() - 6;  // NavigableSet never registers in the expected."], [134, "        else if (javaVersion.startsWith(\"1.6\") || javaVersion.startsWith(\"1.7\") || javaVersion.startsWith(\"1.8\"))"], [135, "            expectedTypes = expectedDefaultTypes.size() - 7;"], [136, "        else throw new UnsupportedOperationException(\"Unknown java version found \" + javaVersion + \" please check \" +"], [137, "                    \"the correct number of expected registered classes and register type here - (found \" + randomGeneratorService"], [138, "                    .getRegisteredTypes().size() + \")\");"], [143, "        reportDifferences();"], [144, "        Affirm.affirmEquals(\"Types added / removed?\", expectedTypes, randomGeneratorService.getRegisteredTypes().size());"], [145, "    }"], [146, ""], [147, "    private void reportDifferences() {"], [148, "        System.out.println(\"Found that many types: \" + expectedDefaultTypes.size() + \", expected: \" + expectedTypes);"], [149, "        System.out.println(\"List of Entries in the expected List but not in the registered list:\");"], [150, "        for (Class<?> expectedEntry : expectedDefaultTypes) {"], [151, "            if (!randomGeneratorService.getRegisteredTypes().contains(expectedEntry)) System.out.println(\"\\\"\" + expectedEntry.getName() +"], [152, "                    \"\\\"\");"], [153, "        }"], [154, "        System.out.println(\"List of Registered types but not in the expected list:\");"], [155, "        for (Class<?> foundEntry : randomGeneratorService.getRegisteredTypes()) {"], [156, "            if (!expectedDefaultTypes.contains(foundEntry)) System.out.println(\"\\\"\" + foundEntry.getName() + \"\\\"\");"]], "deleted": [[43, ""], [53, "            ,\"java.lang.Enum\""], [54, ""], [65, ""], [70, "            ,\"java.util.Collection\""], [77, ""], [82, "            ,\"java.util.concurrent.ConcurrentMap\""], [87, "            ,\"java.util.PriorityQueue\""], [125, "//        \"java.util.NavigableSet\""], [131, "//        \"java.util.SortedMap\""], [132, "        expectedTypes = expectedDefaultTypes.size() - 8;"], [133, ""], [138, "        // JDK 5 only supports 42 of the 44 possible types. (java.util.ArrayDeque does not exist in JDK5)."], [139, "        String javaVersion = System.getProperty(\"java.version\");"], [140, "        if (javaVersion.startsWith(\"1.6\") || javaVersion.startsWith(\"1.7\") || javaVersion.startsWith(\"1.8\")) {"], [141, "            System.out.println(\"Found that many types: \" + expectedDefaultTypes.size());"], [142, "            for (Class<?> expectedEntry : expectedDefaultTypes) {"], [143, "                boolean found = false;"], [144, "                for (Class<?> foundEntry : randomGeneratorService.getRegisteredTypes()) {"], [145, "                    if (expectedEntry == foundEntry) found = true;"], [146, "                }"], [147, "                if (!found) System.out.println(\"\\\"\" + expectedEntry.getName() + \"\\\"\");"], [148, "            }"], [149, "            System.out.println(\"Registered and not in the expected list!!\");"], [150, "            for (Class<?> foundEntry : randomGeneratorService.getRegisteredTypes()) {"], [151, "                boolean found = false;"], [152, "                for (Class<?> expectedEntry : expectedDefaultTypes) {"], [153, "                    if (expectedEntry == foundEntry) found = true;"], [154, "                }"], [155, "                if (!found) System.out.println(\"\\\"\" + foundEntry.getName() + \"\\\"\");"], [156, "            }"], [157, "            Affirm.affirmEquals(\"Types added / removed?\", expectedTypes, randomGeneratorService.getRegisteredTypes().size());"], [158, "        } else {"], [159, "            if (javaVersion.startsWith(\"1.5\")) {"], [160, "                Affirm.affirmEquals(\"Types added / removed?\", expectedTypes - 1, // (java.util.ArrayDeque does not exist"], [161, "                        // in JDK5),"], [162, "                        randomGeneratorService.getRegisteredTypes().size());"], [163, "            } else {"], [164, "                Affirm.fail(\"Unknown java version found \" + System.getProperty(\"java.version\") + \" please check the \" +"], [165, "                        \"correct number of expected registered classes and register type here - (found \" + randomGeneratorService"], [166, "                        .getRegisteredTypes().size() + \")\");"], [167, "            }"]]}, "num_lines_added": 31, "num_lines_removed": 42}