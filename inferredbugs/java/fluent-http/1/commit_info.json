{"hash": "ea7b616484d0fc3a38bf35dca92d20b8975b6ef5", "message": "Fix stop", "file_num_lines": 53, "diff_parsed": {"added": [[21, "import org.simpleframework.http.Request;"], [22, "import org.simpleframework.http.Response;"], [30, "public class SimpleServerWrapper implements HttpServerWrapper, Container {"], [31, "  private final Handler handler;"], [32, "  private final int count;"], [33, "  private final int select;"], [35, "  private SocketConnection socketConnection;"], [36, ""], [37, "  public SimpleServerWrapper(Handler handler) {"], [41, "  public SimpleServerWrapper(Handler handler, int count, int select) {"], [42, "    this.handler = handler;"], [43, "    this.count = count;"], [44, "    this.select = select;"], [49, "    ContainerSocketProcessor server = new ContainerSocketProcessor(this, count, select);"], [50, "    socketConnection = new SocketConnection(authReq ? new AuthRequiredServer(server) : server);"], [55, "  public void handle(Request request, Response response) {"], [56, "    handler.handle(new SimpleRequest(request), new SimpleResponse(response));"], [57, "  }"], [58, ""], [59, "  @Override"], [61, "    socketConnection.close();"]], "deleted": [[28, "public class SimpleServerWrapper implements HttpServerWrapper {"], [29, "  private final SocketProcessor server;"], [31, "  public SimpleServerWrapper(Handler handler) throws IOException {"], [35, "  public SimpleServerWrapper(Handler handler, int count, int select) throws IOException {"], [36, "    this.server = new ContainerSocketProcessor((req, resp) -> handler.handle(new SimpleRequest(req), new SimpleResponse(resp)), count, select);"], [41, "    SocketConnection socketConnection = new SocketConnection(authReq ? new AuthRequiredServer(server) : server);"], [47, "    server.stop();"]]}, "num_lines_added": 21, "num_lines_removed": 7}