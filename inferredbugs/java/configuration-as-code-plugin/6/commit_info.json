{"hash": "bc7b54e0bf57b32c5509e2cfc4ce4c695240b64a", "message": "#164 - Annotate API methods in the Configurator extension point (#165)\n\n* #164 - Annotate API methods in the Configurator extension point\r\n\r\n* #164 - Introduce new top-level ElementConfigurator interface\r\n\r\n* #164 - Introduce new ConfiguratorException to propagate configurator issues\r\n\r\n* #164 - Rework Configurator#configure() and ConfigurationAsCode method to throw the new exception type\r\n\r\n* #164 - ElementConfigurator is now a generic interface\r\n\r\n* Implement types in RootElementConfigurator, fix FindBugs issues due to possible NPEs", "file_num_lines": 50, "diff_parsed": {"added": [[9, "import org.jenkinsci.plugins.casc.ConfiguratorException;"], [23, "public class GlobalMatrixAuthorizationStrategyConfigurator extends Configurator<GlobalMatrixAuthorizationStrategy> implements RootElementConfigurator<GlobalMatrixAuthorizationStrategy> {"], [42, "    public GlobalMatrixAuthorizationStrategy configure(Object config) throws ConfiguratorException {"], [45, "        Configurator<GroupPermissionDefinition> permissionConfigurator = Configurator.lookupOrFail(GroupPermissionDefinition.class);"], [48, "            GroupPermissionDefinition gpd = permissionConfigurator.configureNonNull(entry);"], [55, "        try {"], [56, "            Field f = gms.getClass().getDeclaredField(\"grantedPermissions\");"], [57, "            f.setAccessible(true);"], [58, "            f.set(gms, grantedPermissions);"], [59, "        } catch (NoSuchFieldException | IllegalAccessException ex) {"], [60, "            throw new ConfiguratorException(this, \"Cannot set GlobalMatrixAuthorizationStrategy#grantedPermissions via reflection\", ex);"], [61, "        }"]], "deleted": [[22, "public class GlobalMatrixAuthorizationStrategyConfigurator extends Configurator<GlobalMatrixAuthorizationStrategy> implements RootElementConfigurator {"], [41, "    public GlobalMatrixAuthorizationStrategy configure(Object config) throws Exception {"], [44, "        Configurator<GroupPermissionDefinition> permissionConfigurator = Configurator.lookup(GroupPermissionDefinition.class);"], [47, "            GroupPermissionDefinition gpd = permissionConfigurator.configure(entry);"], [54, "        Field f = gms.getClass().getDeclaredField(\"grantedPermissions\");"], [55, "        f.setAccessible(true);"], [56, "        f.set(gms, grantedPermissions);"]]}, "num_lines_added": 12, "num_lines_removed": 7}