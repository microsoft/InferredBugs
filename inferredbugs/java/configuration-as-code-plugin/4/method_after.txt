    @Override
    public Describable configure(Object config) throws Exception {
        String shortname;
        Object subconfig = null;
        if (config instanceof String) {
            shortname = (String) config;
        } else if (config instanceof Map) {
            Map<String, ?> map = (Map) config;
            if (map.size() != 1) {
                throw new IllegalArgumentException("single entry map expected to configure a "+target.getName());
            }
            final Map.Entry<String, ?> next = map.entrySet().iterator().next();
            shortname = next.getKey();
            subconfig = next.getValue();
        } else {
            throw new IllegalArgumentException("Unexpected configuration type "+config);
        }

        final List<Descriptor> candidates = Jenkins.getInstance().getDescriptorList(target);

        Class<? extends Describable> k = findDescribableBySymbol(shortname, candidates);
        final Configurator configurator = Configurator.lookup(k);
        if (configurator == null) throw new IllegalStateException("No configurator implementation to manage "+k);
        return (Describable) configurator.configure(subconfig);
    }