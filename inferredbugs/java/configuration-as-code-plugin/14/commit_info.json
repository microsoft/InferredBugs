{"hash": "96a3470a0fdfab11696bcce74fb6a9c7826b752e", "message": "close yaml reader after use \ud83d\ude30 (#1183)", "file_num_lines": 638, "diff_parsed": {"added": [[214, ""], [215, "        List<YamlSource> yamlSources = Collections.emptyList();"], [217, "            List<String> sources = Collections.singletonList(normalizedSource);"], [218, "            yamlSources = getConfigFromSources(sources);"], [219, "            final Map<Source, String> issues = checkWith(yamlSources);"], [231, "        } finally {"], [232, "            closeSources(yamlSources);"], [593, "        closeSources(sources);"], [604, "        if (sources.isEmpty()) return Collections.emptyMap();"], [608, "    private void closeSources(List<YamlSource> sources) {"], [609, "        for (YamlSource source : sources) {"], [610, "            try {"], [611, "                source.close();"], [612, "            } catch (IOException e) {"], [613, "                LOGGER.log(Level.WARNING, \"Failed to close YAML Source\", e);"], [614, "            }"], [615, "        }"], [616, "    }"]], "deleted": [[215, "            final Map<Source, String> issues = collectIssues(normalizedSource);"], [230, "    private Map<Source, String> collectIssues(String configurationPath) throws ConfiguratorException {"], [231, "        List<String> sources = Collections.singletonList(configurationPath);"], [232, "        List<YamlSource> yamlSource = getConfigFromSources(sources);"], [233, "        return checkWith(yamlSource);"], [234, "    }"], [235, ""], [603, "        if (sources.isEmpty()) return null;"]]}, "num_lines_added": 18, "num_lines_removed": 8}