    @Test
    public void testBlockByAvailabilityOnAllServices() throws Exception {
        ApolloTestClient apolloTestClient = Common.signupAndLogin();
        ApolloTestAdminClient apolloTestAdminClient = Common.getAndLoginApolloTestAdminClient();

        String availability = "BLOCK-ME-2";
        Environment blockedEnvironment = ModelsGenerator.createAndSubmitEnvironment(availability, apolloTestClient);
        Environment environment = ModelsGenerator.createAndSubmitEnvironment(apolloTestClient);
        Service service = ModelsGenerator.createAndSubmitService(apolloTestClient);
        DeployableVersion deployableVersion = ModelsGenerator.createAndSubmitDeployableVersion(apolloTestClient, service);

        ModelsGenerator.createAndSubmitDeployment(apolloTestClient, environment, service, deployableVersion);

        createAndSubmitBlocker(apolloTestAdminClient, "unconditional", "{}", null, null, null, availability);
        assertThatThrownBy(() -> ModelsGenerator.createAndSubmitDeployment(apolloTestClient, blockedEnvironment, service, deployableVersion)).isInstanceOf(Exception.class)
                                                                                                                                         .hasMessageContaining("Deployment is currently blocked");
    }