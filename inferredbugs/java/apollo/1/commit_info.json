{"hash": "1f48947e722559559cb05a1c4f1ad325bbc671d2", "message": "extracting logic to private methods", "file_num_lines": 84, "diff_parsed": {"added": [[25, "    private static final int MAX_DAYS_OF_UNDEPLOYED_SERVICES = 21;"], [62, "            long diffBetweenDatesInDays = getTimeDiffInDays(latestDeploymentDate, latestUpdatedDate);"], [63, "            return diffBetweenDatesInDays > MAX_DAYS_OF_UNDEPLOYED_SERVICES ? true : false;"], [66, "            Date maxDateSinceLatestUpdate = getMaxDateSinceLatestUpdate();"], [67, "            if(latestUpdatedDate.compareTo(maxDateSinceLatestUpdate) < 0) {"], [89, ""], [90, "    private long getTimeDiffInDays(Date date1, Date date2) {"], [91, "        return TimeUnit.DAYS.convert(Math.abs(date1.getTime() - date2.getTime()), TimeUnit.MILLISECONDS);"], [92, "    }"], [93, ""], [94, "    private Date getMaxDateSinceLatestUpdate() {"], [95, "        return Date.from(LocalDate.now().minusDays((long) MAX_DAYS_OF_UNDEPLOYED_SERVICES).atStartOfDay(ZoneId.systemDefault()).toInstant());"], [96, "    }"]], "deleted": [[25, "    private static final int MIN_DAYS_OF_UNDEPLOYED_SERVICES = 21;"], [62, "            long diffBetweenDatesInDays = TimeUnit.DAYS.convert(Math.abs(latestDeploymentDate.getTime() - latestUpdatedDate.getTime()), TimeUnit.MILLISECONDS);"], [63, "            return diffBetweenDatesInDays > MIN_DAYS_OF_UNDEPLOYED_SERVICES ? true : false;"], [66, "            Date durationSinceLatestUpdate = Date.from(LocalDate.now().minusDays((long) MIN_DAYS_OF_UNDEPLOYED_SERVICES).atStartOfDay(ZoneId.systemDefault()).toInstant());"], [67, "            if(latestUpdatedDate.compareTo(durationSinceLatestUpdate) < 0) {"]]}, "num_lines_added": 13, "num_lines_removed": 5}