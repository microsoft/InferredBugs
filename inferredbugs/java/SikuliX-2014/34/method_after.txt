  public static void main(String[] args) throws FindFailed {

    System.out.println("********** Running Sikulix.main");

    int dl = RunTime.checkArgs(args, RunTime.Type.API);
    if (dl > -1 && dl < 999) {
      testNumber = dl;
      Debug.on(3);
    } else {
      testNumber = -1;
    }

    testNumber = rt.getOptionNumber("testing.test", testNumber);

    if (dl == 999) {
      int exitCode = Runner.runScripts(args);
      cleanUp(exitCode);
      System.exit(exitCode);
    } else if (testNumber > -1) {
      if (!rt.testing) {
        rt.show();
        rt.testing = true;
      }
      Tests.runTest(testNumber);
      System.exit(1);
    } else {
      rt = RunTime.get();
      if (rt.fSxBaseJar.getName().contains("setup")) {
        Sikulix.popError("Not useable!\nRun setup first!");
        System.exit(0);
      }
      Debug.on(3);
      Settings.InfoLogs = false;
      Settings.ActionLogs = false;
            
//      Screen s = new Screen();
      
//      File fJarLibsLux = new File(rt.fSikulixDownloadsBuild, "sikulixlibslux-1.1.0.jar");
//      String fpJarLibsLux = fJarLibsLux.getAbsolutePath();
//      boolean shouldBuild = LinuxSupport.processLibs(fpJarLibsLux);
//      boolean buildOK = LinuxSupport.buildVision(fpJarLibsLux);

//			RunnerClient runner = new RunnerClient("192.168.2.114", "50000");

      if (rt.runningWinApp) {
        popup("Hello World\nNot much else to do ( yet ;-)", rt.fSxBaseJar.getName());
        try {
          Screen scr = new Screen();
          scr.find(new Image(scr.userCapture("grab something to find"))).highlight(3);
        } catch (Exception ex) {
          popup("Uuups :-(\n" + ex.getMessage(), rt.fSxBaseJar.getName());
        }
        popup("Hello World\nNothing else to do ( yet ;-)", rt.fSxBaseJar.getName());
        System.exit(1);
      }
      String version = String.format("(%s-%s)", rt.getVersionShort(), rt.sxBuildStamp);
      String runSomeJS = inputText("enter some JavaScript (know what you do - may silently die ;-)"
              + "\nexample: run(\"git*\") will run the JavaScript showcase from GitHub", 
              "API::JavaScriptRunner " + version, 10, 60);
      if (runSomeJS.isEmpty()) {
        popup("Nothing to do!", version);
      } else {
        Runner.runjs(null, null, runSomeJS, null);
      }
    }
  }