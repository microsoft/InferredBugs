{"hash": "2a8abbb95a1a0b1583788b1529b8fab79fc93e6a", "message": "intermediate --- changing machine --- nearly back to life", "file_num_lines": 2201, "diff_parsed": {"added": [[64, ""], [237, "      Sikulix.popError(\"Terminating on FatalError: cannot access IDE lock for/n\" + isRunning);"], [246, "    getInstance();"], [247, ""], [248, "    Settings.setArgs(cmdArgs.getUserArgs(), cmdArgs.getSikuliArgs());"], [249, "    Settings.showJavaInfo();"], [250, "    Settings.printArgs();"], [261, "\t\tsikulixIDE.initNativeSupport();"], [262, "    sikulixIDE.initSikuliIDE(args);"], [353, ""], [354, "    restoreSession(0);"], [355, "    if (tabPane.getTabCount() == 0) {"], [356, "      (new FileAction()).doNew(null);"], [357, "    }"], [358, "    tabPane.setSelectedIndex(0);"], [359, ""], [366, "  private void initNativeSupport() {"], [367, "\t\tif (!Settings.isMac()) {"], [368, "\t\t\treturn;"], [369, "\t\t}"], [370, "\t\tlog(lvl, \"initNativeSupport: starting\");"], [371, "    try {"], [372, "//      com.apple.eawt.QuitResponse"], [373, "      Class sysclass = URLClassLoader.class;"], [374, "      Class comAppleEawtApplication = sysclass.forName(\"com.apple.eawt.Application\");"], [375, "      Method mGetApplication = comAppleEawtApplication.getDeclaredMethod(\"getApplication\", null);"], [376, "      Object instApplication = mGetApplication.invoke(null, null);"], [377, ""], [378, "      Class clAboutHandler = sysclass.forName(\"com.apple.eawt.AboutHandler\");"], [379, "      Class clPreferencesHandler = sysclass.forName(\"com.apple.eawt.PreferencesHandler\");"], [380, "      Class clQuitHandler = sysclass.forName(\"com.apple.eawt.QuitHandler\");"], [381, ""], [382, "      Object appHandler = Proxy.newProxyInstance("], [383, "                                  comAppleEawtApplication.getClassLoader(),"], [384, "                                  new Class[] { clAboutHandler, clPreferencesHandler, clQuitHandler },"], [385, "                                  this);"], [386, "      Method m = comAppleEawtApplication.getMethod(\"setAboutHandler\", new Class[]{clAboutHandler});"], [387, "\t\t\tm.invoke(instApplication, new Object[]{appHandler});"], [388, "      showAbout = false;"], [389, "      m = comAppleEawtApplication.getMethod(\"setPreferencesHandler\", new Class[]{clPreferencesHandler});"], [390, "\t\t\tm.invoke(instApplication, new Object[]{appHandler});"], [391, "      showPrefs = false;"], [392, "      m = comAppleEawtApplication.getMethod(\"setQuitHandler\", new Class[]{clQuitHandler});"], [393, "\t\t\tm.invoke(instApplication, new Object[]{appHandler});"], [394, "      showQuit = false;"], [395, "    } catch (Exception ex) {"], [396, "      String em = String.format(\"initNativeSupport: Mac: error:\\n%s\", ex.getMessage());"], [397, "      log(-1, em);"], [398, "      Sikulix.popError(em, \"IDE has problems ...\");"], [399, "      System.exit(1);"], [401, "\t\tlog(lvl, \"initNativeSupport: success\");"], [402, "  }"], [403, ""], [404, "  @Override"], [405, "  public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {"], [406, "    String mName = method.getName();"], [407, "    if (\"handleAbout\".equals(mName)) {"], [408, "      sikulixIDE.doAbout();"], [409, "    } else if (\"handlePreferences\".equals(mName)) {"], [410, "      sikulixIDE.showPreferencesWindow();"], [411, "    } else if (\"handleQuitRequestWith\".equals(mName)) {"], [412, "      try {"], [413, "        Class sysclass = URLClassLoader.class;"], [414, "        Class comAppleEawtQuitResponse = sysclass.forName(\"com.apple.eawt.QuitResponse\");"], [415, "        Method mCancelQuit = comAppleEawtQuitResponse.getMethod(\"cancelQuit\", null);"], [416, "        Method mPerformQuit = comAppleEawtQuitResponse.getMethod(\"performQuit\", null);"], [417, "        Object resp = args[1];"], [418, "        if (!sikulixIDE.quit()) {"], [419, "          mCancelQuit.invoke(resp, null);"], [420, "        } else {"], [421, "          mPerformQuit.invoke(resp, null);"], [422, "        }"], [423, "      } catch (Exception ex) {"], [424, "        log(lvl, \"NativeSupport: Quit: error: %s\", ex.getMessage());"], [425, "        System.exit(1);"], [426, "      }"], [427, "    }"], [428, "    return new Object();"], [436, "  public static ImageIcon getIconResource(String name) {"], [437, "    URL url = SikuliIDE.class.getResource(name);"], [438, "    if (url == null) {"], [439, "      Debug.error(\"Warning: could not load \\\"\" + name + \"\\\" icon\");"], [440, "      return null;"], [441, "    }"], [442, "    return new ImageIcon(url);"], [443, "  }"], [446, "  private boolean saveSession(int action, boolean quitting) {"], [488, "  private void restoreSession(int tabIndex) {"], [531, "  private boolean restoreScriptFromSession(String file) {"], [532, "    EditorPane ep = (new FileAction()).doNew(null, -1);"], [533, "    ep.loadFile(file);"], [534, "    if (ep.hasEditingFile()) {"], [538, "    log(-1, \"restoreScriptFromSession: Can't load: %s\", file);"], [545, "  public static IIDESupport getIDESupport(String ending) {"], [546, "    return IDESupport.ideSupporter.get(ending);"], [547, "  }"], [548, ""], [570, "\tpublic EditorPane getPaneAtIndex(int index) {"], [571, "\t\tJScrollPane scrPane = (JScrollPane) tabPane.getComponentAt(index);"], [572, "\t\tEditorPane codePane = (EditorPane) scrPane.getViewport().getView();"], [573, "\t\treturn codePane;"], [574, "\t}"], [575, ""], [620, "        EditorPane codePane = getPaneAtIndex(i);"], [952, "      sikulixIDE.doAbout();"], [961, "        EditorPane codePane = sikulixIDE.getCurrentCodePane();"], [965, "        if (!sikulixIDE.closeCurrentTab()) {"], [974, "      sikulixIDE.showPreferencesWindow();"], [984, "      log(lvl, \"doNew: create new tab at: %d\", tabIndex);"], [985, "      EditorPane codePane = new EditorPane(sikulixIDE);"], [1031, "          sikulixIDE.setCurrentFileTabTitle(fname);"], [1088, "        EditorPane codePane = getCurrentCodePane();"], [1092, "          setCurrentFileTabTitle(fname);"], [1105, "      EditorPane codePane = getPaneAtIndex(tabIndex);"], [1110, "          setFileTabTitle(fname, tabIndex);"], [1130, "      EditorPane codePane = getCurrentCodePane();"], [1136, "          setCurrentFileTabTitle(fname);"], [1160, "\t\t\tEditorPane codePane = getCurrentCodePane();"], [1177, "      EditorPane codePane = getCurrentCodePane();"], [1187, "      codePane = getCurrentCodePane();"], [1201, "      pwin.setLocation(getLocation());"], [1217, "    if (getCurrentCodePane() == null) {"], [1227, "        EditorPane codePane = getPaneAtIndex(i);"], [1310, "      EditorPane pane = getCurrentCodePane();"], [1333, "      EditorPane pane = getCurrentCodePane();"], [1338, "      EditorPane pane = getCurrentCodePane();"], [2011, "      EditorPane codePane = getCurrentCodePane();"], [2012, "      File file = new SikuliIDEFileChooser(sikulixIDE).loadImage();"], [2043, "      sikulixIDE.setVisible(false);"], [2057, "      EditorPane codePane = getCurrentCodePane();"], [2066, "        sikulixIDE.setVisible(false);"], [2078, "      sikulixIDE.setVisible(true);"], [2105, "\t\t\tif (ideIsRunningScript || sikulixIDE.getCurrentCodePane().getDocument().getLength() == 0 || !sikulixIDE.doBeforeRun()) {"], [2109, "\t\t\tsikulixIDE.setVisible(false);"], [2110, "\t\t\tif (sikulixIDE.firstRun) {"], [2111, "\t\t\t\tsikulixIDE.firstRun = false;"], [2113, "\t\t\tsikulixIDE.setIsRunningScript(true);"], [2118, "\t\t\t\t\tEditorPane codePane = getCurrentCodePane();"], [2137, "\t\t\t\t\t\tFile path = new File(getCurrentBundlePath());"], [2167, "\t\t\t\t\t\tsetIsRunningScript(false);"], [2168, "\t\t\t\t\t\tsetVisible(true);"], [2182, "\t\t\t\t\tsetIsRunningScript(false);"], [2183, "\t\t\t\t\tsetVisible(true);"], [2314, "                  codePane = getPaneAtIndex(i);"], [2337, "          codePane = getPaneAtIndex(i);"], [2509, "        if (!isRunningScript()) {"], [2585, "    EditorPane pane = getCurrentCodePane();"], [2591, "    EditorPane pane = getCurrentCodePane();"]], "deleted": [[9, "//TODO"], [10, "// dirty pane handling: on individual tab"], [53, "import org.sikuli.basics.SplashFrame;"], [67, "  // RaiMan not used final static boolean ENABLE_RECORDING = false;"], [77, "  private int commandBarHeight = 800;"], [110, "  private static boolean runMe = false;"], [115, "  private static JFrame splash;"], [138, "  public static IIDESupport getIDESupport(String ending) {"], [139, "    return IDESupport.ideSupporter.get(ending);"], [140, "  }"], [141, ""], [151, "  public static ImageIcon getIconResource(String name) {"], [152, "    URL url = SikuliIDE.class.getResource(name);"], [153, "    if (url == null) {"], [154, "      Debug.error(\"Warning: could not load \\\"\" + name + \"\\\" icon\");"], [155, "      return null;"], [156, "    }"], [157, "    return new ImageIcon(url);"], [158, "  }"], [159, ""], [160, "//TODO run only one windowed instance of IDE"], [257, "      Sikulix.popError(\"Terminating on FatalError: cannot access IDE lock\");"], [262, "    Settings.setArgs(cmdArgs.getUserArgs(), cmdArgs.getSikuliArgs());"], [263, "    Settings.showJavaInfo();"], [264, "    Settings.printArgs();"], [265, ""], [280, "\t\tSikuliIDE.getInstance().initNativeSupport();"], [281, ""], [282, "    SikuliIDE.getInstance().initSikuliIDE(args);"], [285, "  private void initNativeSupport() {"], [286, "\t\tif (!Settings.isMac()) {"], [287, "\t\t\treturn;"], [288, "\t\t}"], [289, "\t\tlog(lvl, \"initNativeSupport: starting\");"], [290, "    try {"], [291, "//      com.apple.eawt.QuitResponse"], [292, "      Class sysclass = URLClassLoader.class;"], [293, "      Class comAppleEawtApplication = sysclass.forName(\"com.apple.eawt.Application\");"], [294, "      Method mGetApplication = comAppleEawtApplication.getDeclaredMethod(\"getApplication\", null);"], [295, "      Object instApplication = mGetApplication.invoke(null, null);"], [296, ""], [297, "      Class clAboutHandler = sysclass.forName(\"com.apple.eawt.AboutHandler\");"], [298, "      Class clPreferencesHandler = sysclass.forName(\"com.apple.eawt.PreferencesHandler\");"], [299, "      Class clQuitHandler = sysclass.forName(\"com.apple.eawt.QuitHandler\");"], [300, ""], [301, "      Object appHandler = Proxy.newProxyInstance("], [302, "                                  comAppleEawtApplication.getClassLoader(),"], [303, "                                  new Class[] { clAboutHandler, clPreferencesHandler, clQuitHandler },"], [304, "                                  this);"], [305, "      Method m = comAppleEawtApplication.getMethod(\"setAboutHandler\", new Class[]{clAboutHandler});"], [306, "\t\t\tm.invoke(instApplication, new Object[]{appHandler});"], [307, "      showAbout = false;"], [308, "      m = comAppleEawtApplication.getMethod(\"setPreferencesHandler\", new Class[]{clPreferencesHandler});"], [309, "\t\t\tm.invoke(instApplication, new Object[]{appHandler});"], [310, "      showPrefs = false;"], [311, "      m = comAppleEawtApplication.getMethod(\"setQuitHandler\", new Class[]{clQuitHandler});"], [312, "\t\t\tm.invoke(instApplication, new Object[]{appHandler});"], [313, "      showQuit = false;"], [314, "    } catch (Exception ex) {"], [315, "      String em = String.format(\"initNativeSupport: Mac: error:\\n%s\", ex.getMessage());"], [316, "      log(-1, em);"], [317, "      Sikulix.popError(em, \"IDE has problems ...\");"], [318, "      System.exit(1);"], [319, "    }"], [320, "\t\tlog(lvl, \"initNativeSupport: success\");"], [321, "  }"], [322, ""], [323, "  @Override"], [324, "  public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {"], [325, "    String mName = method.getName();"], [326, "    if (\"handleAbout\".equals(mName)) {"], [327, "      SikuliIDE.getInstance().doAbout();"], [328, "    } else if (\"handlePreferences\".equals(mName)) {"], [329, "      SikuliIDE.getInstance().showPreferencesWindow();"], [330, "    } else if (\"handleQuitRequestWith\".equals(mName)) {"], [331, "      try {"], [332, "        Class sysclass = URLClassLoader.class;"], [333, "        Class comAppleEawtQuitResponse = sysclass.forName(\"com.apple.eawt.QuitResponse\");"], [334, "        Method mCancelQuit = comAppleEawtQuitResponse.getMethod(\"cancelQuit\", null);"], [335, "        Method mPerformQuit = comAppleEawtQuitResponse.getMethod(\"performQuit\", null);"], [336, "        Object resp = args[1];"], [337, "        if (!SikuliIDE.getInstance().quit()) {"], [338, "          mCancelQuit.invoke(resp, null);"], [339, "        } else {"], [340, "          mPerformQuit.invoke(resp, null);"], [341, "        }"], [342, "      } catch (Exception ex) {"], [343, "        log(lvl, \"NativeSupport: Quit: error: %s\", ex.getMessage());"], [344, "        System.exit(1);"], [345, "      }"], [346, "    }"], [347, "    return new Object();"], [348, "  }"], [349, ""], [350, "\t//<editor-fold defaultstate=\"collapsed\" desc=\"IDE setup and general\">"], [439, "//    splash.dispose();"], [440, "//TODO restore selected tab"], [441, "    restoreSession();"], [442, "    makeTabNull();"], [449, "  public void makeTabNull() {"], [450, "    if (tabPane.getTabCount() == 0) {"], [451, "      (new FileAction()).doNew(null);"], [453, "    tabPane.setSelectedIndex(0);"], [461, "  //</editor-fold>"], [464, "\tpublic EditorPane getPaneAtIndex(int index) {"], [465, "\t\tJScrollPane scrPane = (JScrollPane) tabPane.getComponentAt(index);"], [466, "\t\tEditorPane codePane = (EditorPane) scrPane.getViewport().getView();"], [467, "\t\treturn codePane;"], [468, "\t}"], [469, "\tprivate boolean saveSession(int action, boolean quitting) {"], [478, "//            if (codePane.isSourceBundleTemp()) {"], [479, "//              FileManager.deleteTempDir(codePane.getSrcBundle());"], [480, "//            }"], [514, "  private void restoreSession() {"], [557, "  public boolean restoreScriptFromSession(String file) {"], [558, "    (new FileAction()).doNew(null);"], [559, "    getCurrentCodePane().loadFile(file);"], [560, "    if (getCurrentCodePane().hasEditingFile()) {"], [564, "    Debug.error(\"Can't load file \" + file + \" --- check available runners!\");"], [636, "        JScrollPane scrPane = (JScrollPane) tabPane.getComponentAt(i);"], [637, "        EditorPane codePane = (EditorPane) scrPane.getViewport().getView();"], [969, "      SikuliIDE.getInstance().doAbout();"], [974, "      SikuliIDE ide = SikuliIDE.getInstance();"], [979, "        EditorPane codePane = ide.getCurrentCodePane();"], [983, "        if (!ide.closeCurrentTab()) {"], [992, "      SikuliIDE.getInstance().showPreferencesWindow();"], [1002, "      EditorPane codePane = new EditorPane(SikuliIDE.getInstance());"], [1048, "          SikuliIDE.getInstance().setCurrentFileTabTitle(fname);"], [1105, "        EditorPane codePane = SikuliIDE.getInstance().getCurrentCodePane();"], [1109, "          SikuliIDE.getInstance().setCurrentFileTabTitle(fname);"], [1122, "      JScrollPane scrPane = (JScrollPane) tabPane.getComponentAt(tabIndex);"], [1123, "      EditorPane codePane = (EditorPane) scrPane.getViewport().getView();"], [1128, "          SikuliIDE.getInstance().setFileTabTitle(fname, tabIndex);"], [1148, "      EditorPane codePane = SikuliIDE.getInstance().getCurrentCodePane();"], [1154, "          SikuliIDE.getInstance().setCurrentFileTabTitle(fname);"], [1178, "\t\t\tEditorPane codePane = SikuliIDE.getInstance().getCurrentCodePane();"], [1195, "      EditorPane codePane = SikuliIDE.getInstance().getCurrentCodePane();"], [1205, "      codePane = SikuliIDE.getInstance().getCurrentCodePane();"], [1219, "      pwin.setLocation(SikuliIDE.getInstance().getLocation());"], [1234, "    SikuliIDE ide = SikuliIDE.getInstance();"], [1236, "    if (ide.getCurrentCodePane() == null) {"], [1246, "        JScrollPane scrPane = (JScrollPane) tabPane.getComponentAt(i);"], [1247, "        EditorPane codePane = (EditorPane) scrPane.getViewport().getView();"], [1330, "      SikuliIDE ide = SikuliIDE.getInstance();"], [1331, "      EditorPane pane = ide.getCurrentCodePane();"], [1354, "      SikuliIDE ide = SikuliIDE.getInstance();"], [1355, "      EditorPane pane = ide.getCurrentCodePane();"], [1360, "      SikuliIDE ide = SikuliIDE.getInstance();"], [1361, "      EditorPane pane = ide.getCurrentCodePane();"], [2003, "    /* RaiMan not used"], [2004, "     * if( ENABLE_RECORDING ){"], [2005, "     * JToggleButton btnRecord = new ButtonRecord();"], [2006, "     * toolbar.add(btnRecord);"], [2007, "     * }"], [2008, "     * RaiMan not used */"], [2040, "      EditorPane codePane = SikuliIDE.getInstance().getCurrentCodePane();"], [2041, "      File file = new SikuliIDEFileChooser(SikuliIDE.getInstance()).loadImage();"], [2072, "      SikuliIDE ide = SikuliIDE.getInstance();"], [2073, "      EditorPane codePane = ide.getCurrentCodePane();"], [2074, "      ide.setVisible(false);"], [2088, "      SikuliIDE ide = SikuliIDE.getInstance();"], [2089, "      EditorPane codePane = ide.getCurrentCodePane();"], [2098, "        ide.setVisible(false);"], [2110, "      ide.setVisible(true);"], [2137, "\t\t\tSikuliIDE ide = SikuliIDE.getInstance();"], [2138, "\t\t\tif (ideIsRunningScript || ide.getCurrentCodePane().getDocument().getLength() == 0 || !ide.doBeforeRun()) {"], [2142, "\t\t\tide.setVisible(false);"], [2143, "\t\t\tif (ide.firstRun) {"], [2144, "\t\t\t\tide.firstRun = false;"], [2146, "\t\t\tide.setIsRunningScript(true);"], [2151, "\t\t\t\t\tEditorPane codePane = SikuliIDE.getInstance().getCurrentCodePane();"], [2170, "\t\t\t\t\t\tFile path = new File(SikuliIDE.getInstance().getCurrentBundlePath());"], [2200, "\t\t\t\t\t\tSikuliIDE.getInstance().setIsRunningScript(false);"], [2201, "\t\t\t\t\t\tSikuliIDE.getInstance().setVisible(true);"], [2215, "\t\t\t\t\tSikuliIDE.getInstance().setIsRunningScript(false);"], [2216, "\t\t\t\t\tSikuliIDE.getInstance().setVisible(true);"], [2347, "                  JScrollPane scrPane = (JScrollPane) tabPane.getComponentAt(i);"], [2348, "                  codePane = (EditorPane) scrPane.getViewport().getView();"], [2371, "          JScrollPane scrPane = (JScrollPane) tabPane.getComponentAt(i);"], [2372, "          codePane = (EditorPane) scrPane.getViewport().getView();"], [2544, "        if (!SikuliIDE.getInstance().isRunningScript()) {"], [2620, "    EditorPane pane = SikuliIDE.getInstance().getCurrentCodePane();"], [2626, "    EditorPane pane = SikuliIDE.getInstance().getCurrentCodePane();"]]}, "num_lines_added": 148, "num_lines_removed": 183}