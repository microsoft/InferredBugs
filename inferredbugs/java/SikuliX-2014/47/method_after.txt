  private Boolean handleImageMissing(Image img, boolean recap) {
    log(lvl, "handleImageMissing: %s (%s)", img.getName(), (recap?"recapture ":"capture missing "));
    ObserveEvent evt = null;
    FindFailedResponse response = findFailedResponse;
    if (FindFailedResponse.HANDLE.equals(response)) {
      ObserveEvent.Type type = ObserveEvent.Type.MISSING;
      if (imageMissingHandler != null && ((ObserverCallBack) imageMissingHandler).getType().equals(type)) {
        log(lvl, "handleImageMissing: Response.HANDLE: calling handler");
        evt = new ObserveEvent("", type, null, img, this, 0);
        ((ObserverCallBack) imageMissingHandler).missing(evt);
        response = evt.getResponse();
      } else {
        response = FindFailedResponse.PROMPT;
      }
    }
    if (FindFailedResponse.PROMPT.equals(response)) {
      response = handleFindFailedShowDialog(img, true);
    }
    if (findFailedResponse.RETRY.equals(response)) {
      getRobotForRegion().delay(500);
      ScreenImage simg = getScreen().userCapture(
              (recap?"recapture ":"capture missing ") + img.getName());
      if (simg != null) {
        String path = ImagePath.getBundlePath();
        if (path == null) {
          log(-1, "handleImageMissing: no bundle path - aborting");
          return null;
        }
        simg.getFile(path, img.getImageName());
        Image.set(img);
        if (img.isValid()) {
          log(lvl, "handleImageMissing: %scaptured: %s", (recap?"re":""), img);
          Image.setIDEshouldReload();
          return true;
        }
      }
      return null;
    } else if (findFailedResponse.ABORT.equals(response)) {
      return null;
    }
    log(lvl, "handleImageMissing: skip requested on %s", (recap?"recapture ":"capture missing "));
    return false;
  }