  public static void main(String[] args) {

    System.out.println("********** Running Sikulix.main");

    int dl = RunTime.checkArgs(args, RunTime.Type.API);
    if (dl > -1) {
      testNumber = dl;
      Debug.on(3);
    }
    
    rt = RunTime.get();
    testNumber = rt.getOptionNumber("testing.test", -1);

    if (testNumber > -1) {
      rt = RunTime.get();
      if (!rt.testing) {
        rt.show();
        rt.testing = true;
      }            
      Tests.runTest(testNumber);
      System.exit(1);
    } else {
      rt = RunTime.get();
      Debug.on(3);
      
      String jythonJar = rt.SikuliLocalRepo + rt.SikuliJythonMaven; 
      log(0, "%s", rt.fSxBaseJar);
      log(0, jythonJar);
      rt.addToClasspath(jythonJar);
      //addFromProject("API", "sikulixapi-1.1.0.jar");
//      JythonHelper.get().addSysPath("/Users/raimundhocke/SikuliX/SikuliX-2014/API/target/classes/Lib");
      //rt.dumpClassPath();
      //Debug.on(4);
      SikulixForJython.get();
      String stuff = rt.resourceListAsString("Lib/sikuli", null);
      if (rt.runningWinApp) {        
        popup("Hello World\nNot much else to do ( yet ;-)", rt.fSxBaseJar.getName());
        try {
        Screen scr = new Screen();
        scr.find(new Image(scr.userCapture("grab something to find"))).highlight(3);
        } catch (Exception ex) {
          popup("Uuups :-(\n" + ex.getMessage(), rt.fSxBaseJar.getName());
        }
        popup("Hello World\nNothing else to do ( yet ;-)", rt.fSxBaseJar.getName());
        System.exit(1);
      }
      rt.terminate(1,"Sikulix::main: nothing to test");
    }
  }