{"hash": "e8c48cce518690039a57b8104ea4a01899b70ba7", "message": "intermediate: revising FindFailedPrompt and FindFailed handling", "file_num_lines": 2358, "diff_parsed": {"added": [[2133, "   * @param img Handles a failed find action"], [2136, "  private Boolean handleFindFailed(Image img) {"], [2137, "    FindFailedResponse response = handleFindFailedShowDialog(img, false);"], [2142, "      // TODO HACK to allow recapture on FindFailed PROMPT"], [2143, "      if (img.backup()) {"], [2144, "        img.delete();"], [2145, "        state = handleImageMissing(img, true);"], [2146, "        if (state == null || !state) {"], [2147, "          if (!img.restore()) {"], [2148, "            state = null;"], [2149, "          }"], [2150, "        }"], [2151, "      }"], [2160, "  private Boolean handleImageMissing(Image img, boolean recap) {"], [2161, "    log(lvl, \"handleImageMissing: %s (%s)\", img.getName(), (recap?\"recapture \":\"capture missing \"));"], [2165, "      ScreenImage simg = getScreen().userCapture("], [2166, "              (recap?\"recapture \":\"capture missing \") + img.getName());"], [2176, "          log(lvl, \"handleImageMissing: %scaptured: %s\", (recap?\"re\":\"\"), img);"], [2177, "          Image.setIDEshouldReload();"], [2188, "    log(lvl, \"handleImageMissing: skip requested on %s\", (recap?\"recapture \":\"capture missing \"));"], [2222, "      response = handleImageMissing(img, false);"], [2279, "      shouldDoFind = handleImageMissing(img, false);"], [2345, "          if (handleImageMissing(img, false)) {"], [2625, "      if (handleImageMissing(img, false)) {"], [2729, "          if (handleImageMissing(rv._image, false)) {"]], "deleted": [[2133, "   * @param target Handles a failed find action"], [2136, "  private Boolean handleFindFailed(Image target) {"], [2137, "    FindFailedResponse response = handleFindFailedShowDialog(target, false);"], [2142, "      state = false;"], [2151, "  private Boolean handleImageMissing(Image img) {"], [2155, "      ScreenImage simg = getScreen().userCapture(\"capture missing \" + img.getName());"], [2165, "          log(lvl, \"handleImageMissing: captured: %s\", img);"], [2176, "    log(lvl, \"handleImageMissing: skip requested\");"], [2189, "    if (response == FindFailedResponse.SKIP) {"], [2190, "      // TODO HACK to allow recapture on FindFailed PROMPT"], [2191, "      if (img.backup()) {"], [2192, "        Boolean bResponse = handleImageMissing(img);"], [2193, "        if (bResponse == null || !bResponse) {"], [2194, "          if (!img.restore()) {"], [2195, "            bResponse = null;"], [2196, "          }"], [2197, "        }"], [2198, "        if (bResponse == null) {"], [2199, "          response = FindFailedResponse.ABORT;"], [2200, "        } else if (bResponse) {"], [2201, "          response = FindFailedResponse.RETRY;"], [2202, "        } else {"], [2203, "          response = FindFailedResponse.SKIP;"], [2204, "        }"], [2205, "      }"], [2206, "    }"], [2228, "      response = handleImageMissing(img);"], [2285, "      shouldDoFind = handleImageMissing(img);"], [2351, "          if (handleImageMissing(img)) {"], [2631, "      if (handleImageMissing(img)) {"], [2735, "          if (handleImageMissing(rv._image)) {"]]}, "num_lines_added": 25, "num_lines_removed": 31}