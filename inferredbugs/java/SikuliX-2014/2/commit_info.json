{"hash": "ac72eba3a99275f577047d2d1e31f2bf321a0433", "message": "added a Set Type action to the IDE tab context menu: allows to switch the scripting language of the tab (TODO: use popSelect for more languages/content types)", "file_num_lines": 983, "diff_parsed": {"added": [[71, "\tpublic void initBeforeLoad(String scriptType) {"], [72, "\t\tinitBeforeLoad(scriptType, false);"], [75, "\tpublic void reInit(String scriptType) {"], [76, "\t\tinitBeforeLoad(scriptType, true);"], [77, "\t}"], [78, ""], [79, "\tpublic void initBeforeLoad(String scriptType, boolean reInit) {"], [82, ""], [87, ""], [96, ""], [102, ""], [103, "\t\t\tif (_indentationLogic != null) {"], [104, "\t\t\t\tpref.addPreferenceChangeListener(new PreferenceChangeListener() {"], [105, "\t\t\t\t\t@Override"], [106, "\t\t\t\t\tpublic void preferenceChange(PreferenceChangeEvent event) {"], [107, "\t\t\t\t\t\tif (event.getKey().equals(\"TAB_WIDTH\")) {"], [108, "\t\t\t\t\t\t\t_indentationLogic.setTabWidth(Integer.parseInt(event.getNewValue()));"], [109, "\t\t\t\t\t\t}"], [111, "\t\t\t\t});"], [112, "\t\t\t}"], [114, ""], [116, ""], [122, ""], [124, ""], [131, ""], [134, "\t\taddKeyListener(this);"], [135, "\t\taddCaretListener(this);"], [136, "\t\tpopMenuImage = new SikuliIDEPopUpMenu(\"POP_IMAGE\", this);"], [137, "\t\tif (!popMenuImage.isValidMenu()) {"], [138, "\t\t\tpopMenuImage = null;"], [139, "\t\t}"], [140, ""], [141, "\t\tif (paneIsEmpty || reInit) {"], [142, "\t\t\tthis.setText(String.format(Settings.TypeCommentDefault, getSikuliContentType()));"], [143, "\t\t}"], [144, ""], [145, "\t\tDebug.log(3, \"InitTab: %s :--: %s\", getContentType(), getEditorKit());"], [676, "\t\tFile temp = null;"], [681, "\t\tif ((temp = reparseBefore()) != null) {"], [682, "\t\t\tif (reparseAfter(temp)) {"], [683, "\t\t\tupdateDocumentListeners();"], [684, "\t\t\treturn true;"], [685, "\t\t\t}"], [686, "\t\t}"], [687, "\t\treturn false;"], [688, "\t}"], [689, ""], [690, "\tpublic File reparseBefore() {"], [691, "\t\tElement e = this.getDocument().getDefaultRootElement();"], [692, "\t\tif (e.getEndOffset() - e.getStartOffset() == 1) {"], [693, "\t\t\treturn null;"], [694, "\t\t}"], [695, "\t\tFile temp = FileManager.createTempFile(\"reparse\");"], [698, "\t\t\treturn temp;"], [699, "\t\t} catch (IOException ex) {"], [700, "\t\t}"], [701, "\t\treturn null;"], [702, "\t}"], [703, ""], [704, "\tpublic boolean reparseCheckContent() {"], [705, "\t\tElement e = this.getDocument().getDefaultRootElement();"], [706, "\t\tString txt;"], [707, "\t\tif (e.getElementCount() > 2) {"], [708, "\t\t\treturn false;"], [709, "\t\t} else if (e.getElement(1).getEndOffset() - e.getElement(1).getStartOffset() > 1) {"], [710, "\t\t\treturn false;"], [711, "\t\t} else {"], [712, "\t\t\tint is = e.getElement(0).getStartOffset();"], [713, "\t\t\tint ie = e.getElement(0).getEndOffset();"], [714, "\t\t\ttry {"], [715, "\t\t\t\ttxt = e.getElement(0).getDocument().getText(is, ie - 1);"], [716, "\t\t\t\tif (txt.endsWith(Settings.TypeCommentToken)) {"], [717, "\t\t\t\t\treturn true;"], [718, "\t\t\t\t}"], [719, "\t\t\t} catch (BadLocationException ex) {"], [720, "\t\t\t\treturn false;"], [721, "\t\t\t}"], [722, "\t\t}"], [723, "\t\treturn false;"], [724, "\t}"], [725, ""], [726, "\tpublic boolean reparseAfter(File temp) {"], [727, "\t\ttry {"]], "deleted": [[71, "\tprivate void initEditorPane() {"], [72, "\t\taddKeyListener(this);"], [73, "\t\taddCaretListener(this);"], [74, "\t\tpopMenuImage = new SikuliIDEPopUpMenu(\"POP_IMAGE\", this);"], [75, "\t\tif (!popMenuImage.isValidMenu()) {"], [76, "\t\t\tpopMenuImage = null;"], [77, "\t\t}"], [80, "\tpublic void initBeforeLoad(String scriptType) {"], [81, "\t\t//TODO ask for scripttype on new pane"], [101, "\t\t\tif (paneIsEmpty) {"], [102, "\t\t\t\tthis.setText(\"\");"], [103, "\t\t\t}"], [104, "\t\t\tpref.addPreferenceChangeListener(new PreferenceChangeListener() {"], [105, "\t\t\t\t@Override"], [106, "\t\t\t\tpublic void preferenceChange(PreferenceChangeEvent event) {"], [107, "\t\t\t\t\tif (event.getKey().equals(\"TAB_WIDTH\")) {"], [108, "\t\t\t\t\t\t_indentationLogic.setTabWidth(Integer.parseInt(event.getNewValue()));"], [110, "\t\t\t\t}"], [111, "\t\t\t});"], [113, "\t\tDebug.log(3, \"InitTab: %s :--: %s\", getContentType(), getEditorKit());"], [129, "\t\tinitEditorPane();"], [660, "\t\tFile temp = FileManager.createTempFile(\"py\");"], [668, "\t\t\tupdateDocumentListeners();"]]}, "num_lines_added": 83, "num_lines_removed": 23}