{"hash": "cca31a25e0b0a289445aebeb30e286385c1660dc", "message": "Implemented EOF handling by BinaryLogClient", "file_num_lines": 166, "diff_parsed": {"added": [[31, "import java.net.SocketException;"], [32, "import java.util.Arrays;"], [62, "    private volatile boolean connected;"], [95, "        connected = true;"], [103, "            byte[] bytes = Arrays.copyOfRange(authenticationResult, 1, authenticationResult.length);"], [104, "            throw new IOException(new ErrorPacket(bytes).getErrorMessage());"], [142, "        try {"], [143, "            while (true) {"], [144, "                try {"], [145, "                    inputStream.peek();"], [146, "                } catch (SocketException e) {"], [147, "                    if (!connected) {"], [148, "                        break;"], [149, "                    }"], [150, "                    throw e;"], [151, "                }"], [152, "                int packetLength = inputStream.readInteger(3);"], [153, "                inputStream.skip(1); // 1 byte for sequence"], [154, "                int marker = inputStream.read();"], [155, "                byte[] bytes = inputStream.read(packetLength - 1);"], [156, "                if (marker == 0xFF) {"], [157, "                    ErrorPacket errorPacket = new ErrorPacket(bytes);"], [158, "                    throw new IOException(errorPacket.getErrorCode() + \" - \" + errorPacket.getErrorMessage());"], [159, "                }"], [160, "                Event event = eventDeserializer.nextEvent(new ByteArrayInputStream(bytes));"], [161, "                notifyEventListeners(event);"], [162, "            }"], [163, "        } finally {"], [164, "            disconnect();"], [204, "        connected = false;"]], "deleted": [[99, "             throw new IOException(new ErrorPacket(authenticationResult).getErrorMessage());"], [137, "        while (channel.isOpen()) {"], [138, "            int packetLength = inputStream.readInteger(3);"], [139, "            inputStream.skip(2); // 1 byte for sequence and 1 for marker"], [140, "            ByteArrayInputStream eventByteArray = new ByteArrayInputStream(inputStream.read(packetLength - 1));"], [141, "            Event event = eventDeserializer.nextEvent(eventByteArray);"], [142, "            notifyEventListeners(event);"], [182, "        // todo: execute quit command before closing a socket"]]}, "num_lines_added": 30, "num_lines_removed": 8}