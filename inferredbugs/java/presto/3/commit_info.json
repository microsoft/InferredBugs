{"hash": "e514af8064abb39bd77fb496ac0b1a5e68028a74", "message": "Add MaskedValueBlock\n\nBlock filters now simply returns a masked value block\nAdd filter to position block", "file_num_lines": 139, "diff_parsed": {"added": [[44, "    @Override"], [45, "    public PositionBlock toPositionBlock()"], [46, "    {"], [47, "        return new RangePositionBlock(range);"], [48, "    }"], [49, ""], [56, "        return MaskedValueBlock.maskBlock(this, positions);"], [144, "        return true;"]], "deleted": [[10, "import com.google.common.collect.Ranges;"], [12, "import java.util.HashSet;"], [14, "import java.util.Set;"], [53, "        // find selected positions"], [54, "        Set<Integer> indexes = new HashSet<>();"], [55, "        for (long position : positions.getPositions()) {"], [56, "            if (range.contains(position)) {"], [57, "                indexes.add((int) (position - range.lowerEndpoint()));"], [58, "            }"], [59, "        }"], [60, ""], [61, "        // if no positions are selected, we are done"], [62, "        if (indexes.isEmpty()) {"], [63, "            return EmptyValueBlock.INSTANCE;"], [64, "        }"], [65, ""], [66, ""], [67, "        // build a buffer containing only the tuples from the selected positions"], [68, "        DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);"], [69, ""], [70, "        int currentOffset = 0;"], [71, "        for (int index = 0; index < getCount(); ++index) {"], [72, "            Slice currentPositionToEnd = slice.slice(currentOffset, slice.length() - currentOffset);"], [73, "            int size = tupleInfo.size(currentPositionToEnd);"], [74, ""], [75, "            // only write selected tuples"], [76, "            if (indexes.contains(index)) {"], [77, "                sliceOutput.writeBytes(slice, currentOffset, size);"], [78, "            }"], [79, ""], [80, "            currentOffset += size;"], [81, "        }"], [82, ""], [83, "        // todo what is the start position"], [84, "        return new UncompressedValueBlock(Ranges.closed(0L, (long) indexes.size() - 1), tupleInfo, sliceOutput.slice());"], [172, "        return false;"]]}, "num_lines_added": 8, "num_lines_removed": 36}