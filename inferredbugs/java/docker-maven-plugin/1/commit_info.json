{"hash": "60eb31440365af7e1f5844139110a37454f19f5e", "message": "Sonar fixes", "file_num_lines": 459, "diff_parsed": {"added": [[38, "    static private final String DOCKER_API_VERSION = \"v1.10\";"], [39, "    public static final String HEADER_ACCEPT = \"Accept\";"], [40, "    public static final String HEADER_ACCEPT_ALL = \"*/*\";"], [64, "            String base;"], [85, "                                     .header(HEADER_ACCEPT, HEADER_ACCEPT_ALL)"], [102, "                                     .header(HEADER_ACCEPT, HEADER_ACCEPT_ALL)"], [117, "                                     .header(HEADER_ACCEPT, HEADER_ACCEPT_ALL)"], [131, "                                     .header(HEADER_ACCEPT, HEADER_ACCEPT_ALL)"], [181, "                                     .header(HEADER_ACCEPT, HEADER_ACCEPT_ALL);"], [204, "                                     .header(HEADER_ACCEPT, HEADER_ACCEPT_ALL)"], [273, "                                     .header(HEADER_ACCEPT, HEADER_ACCEPT_ALL)"], [360, "            for (Map.Entry<Integer,Integer> entry : ports.entrySet()) {"], [361, "                Integer port = entry.getValue();"], [366, "                c.put(entry.getKey() + \"/tcp\",a);"], [391, "            for (Map.Entry<String,List<String>> h : headers.entrySet()) {"], [392, "                log.debug(\"|||| \" + h.getKey() + \"=\" + h.getValue());"], [406, "            InputStreamReader is = new InputStreamReader(entity.getContent(),\"UTF-8\");"], [408, "            try (BufferedReader br = new BufferedReader(is)) {"], [409, "                String read = br.readLine();"], [411, "                while (read != null) {"], [412, "                    //System.out.println(read);"], [413, "                    sb.append(read);"], [414, "                    read = br.readLine();"], [415, "                }"], [416, "                return sb.toString();"], [493, "            String txt = new String(buf,0,len,\"UTF-8\");"], [547, "        void process(JSONObject json);"]], "deleted": [[38, "    private final static String DOCKER_API_VERSION = \"v1.10\";"], [62, "            String base, tag;"], [65, "                tag = matcher.group(2);"], [84, "                                     .header(\"Accept\", \"*/*\")"], [101, "                                     .header(\"Accept\", \"*/*\")"], [116, "                                     .header(\"Accept\", \"*/*\")"], [130, "                                     .header(\"Accept\", \"*/*\")"], [180, "                                     .header(\"Accept\", \"*/*\");"], [203, "                                     .header(\"Accept\", \"*/*\")"], [272, "                                     .header(\"Accept\", \"*/*\")"], [359, "            for (Integer containerPort : ports.keySet()) {"], [360, "                Integer port = ports.get(containerPort);"], [365, "                c.put(containerPort + \"/tcp\",a);"], [390, "            for (String h : headers.keySet()) {"], [391, "                log.debug(\"|||| \" + h + \"=\" + headers.get(h));"], [405, "            InputStreamReader is = new InputStreamReader(entity.getContent());"], [407, "            BufferedReader br = new BufferedReader(is);"], [408, "            String read = br.readLine();"], [410, "            while (read != null) {"], [411, "                //System.out.println(read);"], [412, "                sb.append(read);"], [413, "                read = br.readLine();"], [415, "            return sb.toString();"], [491, "            String txt = new String(buf,0,len);"], [545, "        public void process(JSONObject json);"]]}, "num_lines_added": 27, "num_lines_removed": 25}