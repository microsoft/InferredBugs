{"bug_class": "PROVER", "kind": "ERROR", "bug_type": "THREAD_SAFETY_VIOLATION", "qualifier": "Read/Write race. Non-private method `org.jolokia.docker.maven.service.ServiceHub.getMojoExecutionService` indirectly reads without synchronization from `this.org.jolokia.docker.maven.service.ServiceHub.initBase`. Potentially races with write in method `ServiceHub.init(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.", "severity": "HIGH", "visibility": "user", "line": 80, "column": -1, "procedure": "MojoExecutionService ServiceHub.getMojoExecutionService()", "procedure_id": "org.jolokia.docker.maven.service.ServiceHub.getMojoExecutionService():org.jolokia.docker.maven.servi.1dc34ea2d252fbe080dd361d81225a3a", "procedure_start_line": 79, "file": "src/main/java/org/jolokia/docker/maven/service/ServiceHub.java", "bug_trace": [{"level": 0, "filename": "src/main/java/org/jolokia/docker/maven/service/ServiceHub.java", "line_number": 80, "column_number": -1, "description": "<Read trace>"}, {"level": 0, "filename": "src/main/java/org/jolokia/docker/maven/service/ServiceHub.java", "line_number": 80, "column_number": -1, "description": "call to void ServiceHub.checkBaseInitialization()"}, {"level": 1, "filename": "src/main/java/org/jolokia/docker/maven/service/ServiceHub.java", "line_number": 140, "column_number": -1, "description": "access to `this.org.jolokia.docker.maven.service.ServiceHub.initBase`"}, {"level": 0, "filename": "src/main/java/org/jolokia/docker/maven/service/ServiceHub.java", "line_number": 60, "column_number": -1, "description": "<Write trace>"}, {"level": 0, "filename": "src/main/java/org/jolokia/docker/maven/service/ServiceHub.java", "line_number": 60, "column_number": -1, "description": "access to `this.org.jolokia.docker.maven.service.ServiceHub.initBase`"}], "key": "ServiceHub.java|getMojoExecutionService|THREAD_SAFETY_VIOLATION", "node_key": "9c5d6d9028928346cc4fb44cced5dea1", "hash": "e89b2ea9744f38b4ed56ddb091bf5e8c", "bug_type_hum": "Thread Safety Violation", "censored_reason": ""}