{"hash": "2ea280b8328b1c8a0b2d0208c61a38634a09a2e3", "message": "Refactor the rest mapper to depend only on NodeModel and RelationshipModel", "file_num_lines": 83, "diff_parsed": {"added": [[21, "import java.util.LinkedHashMap;"], [27, "import org.neo4j.ogm.response.model.NodeModel;"], [57, "            Map<String,Object> rows = restModel.getRow();"], [58, "            assertEquals(3,rows.entrySet().size());"], [59, ""], [60, "            assertEquals(1, rows.get(\"count\"));"], [61, "            NodeModel data = (NodeModel) rows.get(\"director\");"], [62, "            assertEquals(1931,data.property(\"born\"));"], [63, "            data = (NodeModel) rows.get(\"movie\");"], [64, "            assertEquals(\"The Birdcage\", data.property(\"title\"));"], [65, "            assertEquals(395L, data.getId().longValue());"], [68, "            rows = restModel.getRow();"], [69, "            assertEquals(3,rows.entrySet().size());"], [70, "            assertEquals(1, rows.get(\"count\"));"], [71, "            data = (NodeModel) rows.get(\"director\");"], [72, "            assertEquals(1931,data.property(\"born\"));"], [73, "            data = (NodeModel) rows.get(\"movie\");"], [74, "            assertEquals(2007,data.property(\"released\"));"], [99, "        private RestModelAdapter restModelAdapter = new RestModelAdapter();"], [103, "            restModelAdapter.setColumns(columns());"], [104, "            DefaultRestModel defaultRestModel = new DefaultRestModel(buildModel());"], [105, "            defaultRestModel.setStats(statistics());"], [106, "            return defaultRestModel;"], [114, ""], [115, ""], [116, "        private Map<String,Object> buildModel() {"], [117, "            ResultRestModel result = nextDataRecord(\"rest\");"], [118, "            Map<String,Object> row = new LinkedHashMap<>();"], [119, "            if (result != null) {"], [120, "                row = restModelAdapter.adapt(result.queryResults());"], [121, "            }"], [122, ""], [123, "            return row;"], [124, "        }"], [125, ""]], "deleted": [[55, "            Object[] rows = restModel.getValues();"], [56, "            assertEquals(3,rows.length);"], [57, "            assertEquals(1, rows[0]);"], [58, "            Map data = (Map) rows[1];"], [59, "            assertEquals(1931,((Map)data.get(\"data\")).get(\"born\"));"], [60, "            data = (Map) rows[2];"], [61, "            assertEquals(\"The Birdcage\", ((Map)data.get(\"data\")).get(\"title\"));"], [62, "            assertEquals(395, ((Map)data.get(\"metadata\")).get(\"id\"));"], [65, "            rows = restModel.getValues();"], [66, "            assertEquals(3,rows.length);"], [67, "            assertEquals(1, rows[0]);"], [68, "            data = (Map) rows[1];"], [69, "            assertEquals(1931,((Map)data.get(\"data\")).get(\"born\"));"], [70, "            data = (Map) rows[2];"], [71, "            assertEquals(2007, ((Map)data.get(\"data\")).get(\"released\"));"], [99, "            ResultRestModel restModel = nextDataRecord(\"rest\");"], [100, ""], [101, "            if (restModel != null) {"], [102, "                return new DefaultRestModel(restModel.queryResults());"], [103, "            }"], [104, "            return null;"]]}, "num_lines_added": 35, "num_lines_removed": 21}