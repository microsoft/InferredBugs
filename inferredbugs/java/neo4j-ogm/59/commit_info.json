{"hash": "797893c722fc70784dfbb96f20f9267bfdf3937d", "message": "GH-93 - Support polymorph collections containing different subtypes in #loadAll\n\nCloses #93.", "file_num_lines": 76, "diff_parsed": {"added": [[15, "import static java.util.stream.Collectors.*;"], [16, ""], [24, "import org.neo4j.ogm.exception.core.MappingException;"], [27, "import org.neo4j.ogm.metadata.MetaData;"], [45, "        ClassInfo commonClassInfo = findCommonClassInfo(objects);"], [46, ""], [50, "            if (commonClassInfo.hasPrimaryIndexField()) {"], [51, "                idField = commonClassInfo.primaryIndexField();"], [53, "                idField = commonClassInfo.identityField();"], [57, "        return session.loadAll((Class<T>) commonClassInfo.getUnderlyingClass(), ids, sortOrder, pagination, depth);"], [87, ""], [88, "    /**"], [89, "     * @param objects"], [90, "     * @param <T>"], [91, "     * @return A class info that is part of the hierarchy of the distinct object types contained in {@code objects}."], [92, "     */"], [93, "    private <T> ClassInfo findCommonClassInfo(Collection<T> objects) {"], [94, "        MetaData metaData = session.metaData();"], [95, "        Set<ClassInfo> infos = objects.stream()"], [96, "            .map(Object::getClass) //"], [97, "            .distinct() //"], [98, "            .map(metaData::classInfo) //"], [99, "            .map(LoadByInstancesDelegate::getRootClassInfo) //"], [100, "            .collect(toSet());"], [101, ""], [102, "        if (infos.size() != 1) {"], [103, "            throw new MappingException(\"Can't find single supertype for \" + infos);"], [104, "        }"], [105, ""], [106, "        return infos.iterator().next();"], [107, "    }"], [108, ""], [109, "    /**"], [110, "     * @param classInfo"], [111, "     * @return The topmost element of a mapped class hierarchy."], [112, "     */"], [113, "    private static ClassInfo getRootClassInfo(ClassInfo classInfo) {"], [114, ""], [115, "        ClassInfo current = classInfo;"], [116, "        while (current.directSuperclass() != null) {"], [117, "            current = current.directSuperclass();"], [118, "        }"], [119, "        return current;"], [120, "    }"]], "deleted": [[42, "        Class type = objects.iterator().next().getClass();"], [43, "        ClassInfo classInfo = session.metaData().classInfo(type.getName());"], [46, "            if (classInfo.hasPrimaryIndexField()) {"], [47, "                idField = classInfo.primaryIndexField();"], [49, "                idField = classInfo.identityField();"], [53, "        return session.loadAll(type, ids, sortOrder, pagination, depth);"]]}, "num_lines_added": 44, "num_lines_removed": 6}