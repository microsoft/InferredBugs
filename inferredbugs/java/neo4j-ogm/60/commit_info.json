{"hash": "80022bd86c5acd0958d6d9cc9003a7a14b0b13a0", "message": "Fix computation of keys for primaryIdToNativeId mapping.\n\nExtract the reading of the primary index and identity fields into dedicated methods.\nThis effort is to make sure that the key in org.neo4j.ogm.context.MappingContext#primaryIdToNativeId (an instance of LabelPrimaryId) is alway the same.", "file_num_lines": 325, "diff_parsed": {"added": [[121, "            final Object primaryIndexValue = classInfo.readPrimaryIndexValueOf(entity);"], [122, "            if (primaryIndexValue != null) {"], [123, "                LabelPrimaryId key = new LabelPrimaryId(classInfo, primaryIndexValue);"], [124, "                primaryIndexNodeRegister.putIfAbsent(key, entity);"], [125, "                primaryIdToNativeId.put(key, id);"], [149, "        final ClassInfo classInfo = metaData.classInfo(entity);"], [150, "        final Object primaryIndexValue = classInfo.readPrimaryIndexValueOf(entity);"], [151, "        if (primaryIndexValue != null) {"], [152, "            primaryIndexNodeRegister.remove(new LabelPrimaryId(classInfo, primaryIndexValue));"], [165, "            final Object primaryIndexValue = classInfo.readPrimaryIndexValueOf(entity);"], [166, "            LabelPrimaryId key = new LabelPrimaryId(classInfo, primaryIndexValue);"], [177, "        if (classInfo.hasPrimaryIndexField()) {"], [178, "            final Object primaryIndexValue = classInfo.readPrimaryIndexValueOf(entity);"], [179, "            LabelPrimaryId labelPrimaryId = new LabelPrimaryId(classInfo, primaryIndexValue);"], [278, "            if (classInfo.hasPrimaryIndexField()) {"], [279, "                final Object primaryIndexValue = classInfo.readPrimaryIndexValueOf(relationshipEntity);"], [280, "                primaryIdToRelationship.put(new LabelPrimaryId(classInfo, primaryIndexValue), relationshipEntity);"], [281, "                primaryIdToNativeId.put(new LabelPrimaryId(classInfo, primaryIndexValue), id);"], [488, "            final Object primaryIndexValue = classInfo.readPrimaryIndexValueOf(entity);"], [489, "            if (primaryIndexValue == null) {"], [492, ""], [493, "            LabelPrimaryId key = new LabelPrimaryId(classInfo, primaryIndexValue);"], [503, "    private static void generateIdIfNecessary(Object entity, ClassInfo classInfo) {"], [514, "        Object existingUuid = classInfo.readPrimaryIndexValueOf(entity);"]], "deleted": [[121, "            final FieldInfo primaryIndexField = classInfo"], [122, "                .primaryIndexField(); // also need to add the class to key to prevent collisions."], [123, "            if (primaryIndexField != null) {"], [124, "                final Object primaryIndexValue = primaryIndexField.read(entity);"], [125, "                if (primaryIndexValue != null) {"], [126, "                    LabelPrimaryId key = new LabelPrimaryId(classInfo, primaryIndexValue);"], [127, "                    primaryIndexNodeRegister.putIfAbsent(key, entity);"], [128, "                    primaryIdToNativeId.put(key, id);"], [129, "                }"], [153, "        final ClassInfo primaryIndexClassInfo = metaData.classInfo(entity);"], [154, "        final FieldInfo primaryIndexField = primaryIndexClassInfo"], [155, "            .primaryIndexField(); // also need to add the class to key to prevent collisions."], [156, "        if (primaryIndexField != null) {"], [157, "            final Object primaryIndexValue = primaryIndexField.read(entity);"], [158, "            if (primaryIndexValue != null) {"], [159, "                primaryIndexNodeRegister.remove(new LabelPrimaryId(primaryIndexClassInfo, primaryIndexValue));"], [160, "            }"], [173, "            LabelPrimaryId key = new LabelPrimaryId(classInfo, classInfo.primaryIndexField().readProperty(entity));"], [184, "        FieldInfo primaryIndexField = classInfo.primaryIndexField();"], [185, "        if (primaryIndexField != null) {"], [186, "            Object primaryId = primaryIndexField.read(entity);"], [187, "            LabelPrimaryId labelPrimaryId = new LabelPrimaryId(classInfo, primaryId);"], [286, "            FieldInfo primaryIdField = classInfo.primaryIndexField();"], [287, "            if (primaryIdField != null) {"], [288, "                Object primaryId = primaryIdField.read(relationshipEntity);"], [289, "                primaryIdToRelationship.put(new LabelPrimaryId(classInfo, primaryId), relationshipEntity);"], [290, "                primaryIdToNativeId.put(new LabelPrimaryId(classInfo, primaryId), id);"], [497, "            FieldInfo fieldInfo = classInfo.primaryIndexField();"], [498, "            Object primaryId = fieldInfo.readProperty(entity);"], [499, ""], [500, "            if (primaryId == null) {"], [503, "            LabelPrimaryId key = new LabelPrimaryId(classInfo, primaryId);"], [513, "    private void generateIdIfNecessary(Object entity, ClassInfo classInfo) {"], [524, "        Object existingUuid = primaryIndexField.read(entity);"]]}, "num_lines_added": 24, "num_lines_removed": 34}