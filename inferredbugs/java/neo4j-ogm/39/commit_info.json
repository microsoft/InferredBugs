{"hash": "dc59bbf03f19a8f0c2fc368c07db653da41dc326", "message": "Improve exception handling in Http Driver", "file_num_lines": 153, "diff_parsed": {"added": [[34, "import org.neo4j.ogm.drivers.http.request.HttpRequestException;"], [44, "import java.io.IOException;"], [77, "        return new HttpRequest(httpClient(), requestUrl(), driverConfig.getCredentials());"], [82, "        return new HttpTransaction(transactionManager, this, newTransactionUrl());"], [85, "    public CloseableHttpResponse executeHttpRequest(HttpRequestBase request) throws HttpRequestException {"], [86, ""], [87, "        try(CloseableHttpResponse response = HttpRequest.execute(httpClient(), request, driverConfig.getCredentials())) {"], [88, "            HttpEntity responseEntity = response.getEntity();"], [89, "            if (responseEntity != null) {"], [90, "                String responseText = \"\";"], [91, "                responseText = EntityUtils.toString(responseEntity);"], [92, "                LOGGER.debug(\"Thread: {}, text: {}\", Thread.currentThread().getId(), responseText);"], [93, "                EntityUtils.consume(responseEntity);"], [94, "                if (responseText.contains(\"\\\"errors\\\":[{\") || responseText.contains(\"\\\"errors\\\": [{\")) {"], [95, "                    throw new ResultErrorsException(responseText);"], [98, "            return response;"], [100, "        catch (IOException ioe) {"], [101, "            throw new HttpRequestException(request, ioe);"], [105, "            LOGGER.debug( \"Thread: {}, Connection released\", Thread.currentThread().getId() );"], [112, "        LOGGER.debug( \"Thread: {}, POST {}\", Thread.currentThread().getId(), url );"], [114, "        HttpPost request = new HttpPost(url);"], [115, ""], [116, "        try (CloseableHttpResponse response = executeHttpRequest(request)) {"], [119, "        } catch (IOException ioe) {"], [120, "            throw new HttpRequestException(request, ioe);"], [122, ""], [145, "                LOGGER.debug(\"Thread: {}, request url {}\", Thread.currentThread().getId(), ((HttpTransaction) tx).url());"], [148, "                LOGGER.debug( \"Thread: {}, No current transaction, using auto-commit\", Thread.currentThread().getId() );"], [151, "            LOGGER.debug( \"Thread: {}, No transaction manager available, using auto-commit\", Thread.currentThread().getId() );"], [153, "        LOGGER.debug( \"Thread: {}, request url {}\", Thread.currentThread().getId(), autoCommitUrl() );"]], "deleted": [[18, "import org.apache.http.client.HttpResponseException;"], [37, "import org.neo4j.ogm.exception.ResultProcessingException;"], [77, "        String url = requestUrl();"], [78, "        return new HttpRequest(httpClient(), url, driverConfig.getCredentials());"], [83, ""], [84, "        String url = newTransactionUrl();"], [85, "        return new HttpTransaction(transactionManager, this, url);"], [88, "    public CloseableHttpResponse executeHttpRequest(HttpRequestBase request) {"], [89, ""], [90, "        try {"], [91, "            try(CloseableHttpResponse response = HttpRequest.execute(httpClient(), request, driverConfig.getCredentials())) {"], [92, "                HttpEntity responseEntity = response.getEntity();"], [93, "                if (responseEntity != null) {"], [94, "                    String responseText = EntityUtils.toString(responseEntity);"], [95, "                    LOGGER.debug(\"Thread {}: {}\", Thread.currentThread().getId(), responseText );"], [96, "                    EntityUtils.consume(responseEntity);"], [97, "                    if (responseText.contains(\"\\\"errors\\\":[{\") || responseText.contains(\"\\\"errors\\\": [{\")) {"], [98, "                        throw new ResultErrorsException(responseText);"], [99, "                    }"], [101, "                return response;"], [104, ""], [105, "        catch (HttpResponseException hre) {"], [106, "            if (hre.getStatusCode() == 404) {"], [107, "                Transaction tx = transactionManager.getCurrentTransaction();"], [108, "                if (tx != null) {"], [109, "                    transactionManager.rollback(tx);"], [110, "                }"], [111, "            }"], [112, "            throw new ResultProcessingException(\"HttpResponse exception: Not Found\", hre);"], [114, ""], [115, "        catch (Exception e) {"], [116, "            throw new ResultProcessingException(\"Failed to execute request: \", e);"], [117, "        }"], [118, ""], [121, "            LOGGER.debug( \"Thread {}: Connection released\", Thread.currentThread().getId() );"], [128, "        LOGGER.debug( \"Thread {}: POST {}\", Thread.currentThread().getId(), url );"], [130, "        try (CloseableHttpResponse response = executeHttpRequest(new HttpPost(url))) {"], [132, "            response.close();"], [134, "        } catch (Exception e) {"], [135, "            throw new ResultProcessingException(\"Could not obtain new Transaction: \", e);"], [159, "                LOGGER.debug(\"Thread {}: request url {}\", Thread.currentThread().getId(), ((HttpTransaction) tx).url());"], [162, "                LOGGER.debug( \"Thread {}: No current transaction, using auto-commit\", Thread.currentThread().getId() );"], [165, "            LOGGER.debug( \"Thread {}: No transaction manager available, using auto-commit\", Thread.currentThread().getId() );"], [167, "        LOGGER.debug( \"Thread {}: request url {}\", Thread.currentThread().getId(), autoCommitUrl() );"]]}, "num_lines_added": 30, "num_lines_removed": 44}