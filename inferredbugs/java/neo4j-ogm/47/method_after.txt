    public <T, ID extends Serializable> T load(Class<T> type, ID id, int depth) {

        ClassInfo classInfo = session.metaData().classInfo(type.getName());
        if (classInfo == null) {
            throw new IllegalArgumentException(type + " is not a managed entity.");
        }
        final FieldInfo primaryIndexField = classInfo.primaryIndexField();
        if (primaryIndexField != null && !primaryIndexField.isTypeOf(id.getClass())) {
            throw new Neo4jException("Supplied id does not match primary index type on supplied class.");
        }

        QueryStatements queryStatements = session.queryStatementsFor(type);
        PagingAndSortingQuery qry = queryStatements.findOne(id, depth);

        try (Response<GraphModel> response = session.requestHandler().execute((GraphModelRequest) qry)) {
            new GraphEntityMapper(session.metaData(), session.context()).map(type, response);
            return lookup(type, id);
        }
    }