{"hash": "397f709991c60b2e6061418f0b6dce54a431d321", "message": "Upgrade mockito to 2.x (#2130)\n\nThis is needed to avoid diverging with the internal bigtable java client", "file_num_lines": 212, "diff_parsed": {"added": [[125, "    try (BigtableSession session = new BigtableSession(bigtableOptions)) {"], [126, "      session.getDataClient()"], [127, "          .readFlatRows(ReadRowsRequest.getDefaultInstance()).next();"], [128, "      Assert.assertTrue(serverPasses.get());"], [129, "    }"], [160, "    try(BigtableDataClient dataClient = BigtableDataClient.create(dataSettings)){"], [161, "      dataClient.readRow(TABLE_ID, ROWKEY);"], [162, "      Assert.assertTrue(serverPasses.get());"], [163, "    }"], [204, "    try (BigtableDataClient dataClient = BigtableDataClient.create(builder.build())) {"], [205, "      dataClient.readRow(TABLE_ID, ROWKEY);"], [206, "      Assert.assertTrue(serverPasses.get());"], [207, "    }"]], "deleted": [[125, "    new BigtableSession(bigtableOptions).getDataClient()"], [126, "        .readFlatRows(ReadRowsRequest.getDefaultInstance()).next();"], [127, "    Assert.assertTrue(serverPasses.get());"], [158, "    dataClient = BigtableDataClient.create(dataSettings);"], [159, "    dataClient.readRow(TABLE_ID, ROWKEY);"], [160, "    Assert.assertTrue(serverPasses.get());"], [201, "    dataClient = BigtableDataClient.create(builder.build());"], [202, "    dataClient.readRow(TABLE_ID, ROWKEY);"], [203, "    Assert.assertTrue(serverPasses.get());"]]}, "num_lines_added": 13, "num_lines_removed": 9}