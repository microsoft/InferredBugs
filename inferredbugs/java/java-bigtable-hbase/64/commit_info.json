{"hash": "1e93c922b980e88ee06579de07caba3b6ebc0598", "message": "chore: add new getter for allowRetriesWithoutTimestamp (#2433)\n\n* chore: add new getter for allowRetriesWithoutTimestamp\r\n\r\nThis change introduces a new getter in `BigtableHBaseSetting` for `allowRetriesWithoutTimestamp()`. Both classic & veneer supports mutation with server side timestamp.\r\n\r\n* chore: rename method name to isRetriesWithoutTimestampAllowed\r\n\r\n* add more unit test to improve codeCov", "file_num_lines": 163, "diff_parsed": {"added": [[115, "    configuration.setBoolean(BigtableOptionsFactory.ALLOW_NO_TIMESTAMP_RETRIES_KEY, true);"], [118, "    BigtableHBaseSettings settings = BigtableHBaseSettings.create(configuration);"], [119, "    assertTrue(settings.isRetriesWithoutTimestampAllowed());"], [121, "    BigtableOptions options = ((BigtableHBaseClassicSettings) settings).getBigtableOptions();"], [179, ""], [180, "  @Test"], [181, "  public void testClassicSettingsGetters() throws IOException {"], [182, "    configuration.set(BigtableOptionsFactory.BIGTABLE_ADMIN_HOST_KEY, \"localhost\");"], [183, "    configuration.set(BigtableOptionsFactory.BIGTABLE_PORT_KEY, \"8080\");"], [184, "    configuration.set(BigtableOptionsFactory.BIGTABLE_EMULATOR_HOST_KEY, \"localhost:8080\");"], [185, "    configuration.set(BigtableOptionsFactory.APP_PROFILE_ID_KEY, \"test\");"], [186, "    configuration.set(BigtableOptionsFactory.BIGTABLE_BULK_MAX_ROW_KEY_COUNT, \"100\");"], [187, "    configuration.set(BigtableOptionsFactory.BIGTABLE_BUFFERED_MUTATOR_MAX_MEMORY_KEY, \"2000\");"], [188, "    configuration.set(BigtableOptionsFactory.ALLOW_NO_TIMESTAMP_RETRIES_KEY, \"true\");"], [189, "    configuration.set(BigtableOptionsFactory.BIGTABLE_BUFFERED_MUTATOR_ENABLE_THROTTLING, \"true\");"], [190, "    configuration.set("], [191, "        BigtableOptionsFactory.BIGTABLE_BUFFERED_MUTATOR_THROTTLING_THRESHOLD_MILLIS, \"500\");"], [192, "    BigtableHBaseSettings settings = BigtableHBaseSettings.create(configuration);"], [193, ""], [194, "    assertEquals(TEST_HOST, settings.getDataHost());"], [195, "    assertEquals(\"localhost\", settings.getAdminHost());"], [196, "    assertEquals(8080, settings.getPort());"], [197, "    assertEquals(100, settings.getBulkMaxRowCount());"], [198, "    assertEquals(2000, settings.getBatchingMaxRequestSize());"], [199, "    assertTrue(settings.isRetriesWithoutTimestampAllowed());"], [200, ""], [201, "    BigtableOptions options = ((BigtableHBaseClassicSettings) settings).getBigtableOptions();"], [202, "    assertEquals(\"test\", options.getAppProfileId());"], [203, "    assertTrue(options.getBulkOptions().isEnableBulkMutationThrottling());"], [204, "    assertEquals(500, options.getBulkOptions().getBulkMutationRpcTargetMs());"], [205, "  }"]], "deleted": [[117, "    BigtableOptions options ="], [118, "        ((BigtableHBaseClassicSettings) BigtableHBaseSettings.create(configuration))"], [119, "            .getBigtableOptions();"]]}, "num_lines_added": 31, "num_lines_removed": 3}