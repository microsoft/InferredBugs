{"hash": "9174b38136380739eb675d34534544e3b1f22e94", "message": "Create the right data client in BigtableSession (#2141)\n\n* Create the right data client in BigtableSession\r\nWe only need one client open at a time - either the `cloud-bigtable-client` or `google-cloud-bigtable` clients.  Let's make sure that we do that correctly in the constructor.\r\n\r\nNOTE: The throttling data client is used for BulkMutation even if the options say that google-cloud-java ought to be used.\r\n\r\n* Improving the close method.\r\n\r\n* Fixing a typo.\r\n\r\n* Adding a warning in create bulk mutation.", "file_num_lines": 420, "diff_parsed": {"added": [[170, ""], [171, "  /* *****************   traditional cloud-bigtable-client related variables ***************** */"], [172, ""], [173, "  private final BigtableOptions options;"], [174, "  private final List<ManagedChannel> managedChannels = Collections"], [175, "      .synchronizedList(new ArrayList<ManagedChannel>());"], [176, "  private final ClientInterceptor[] clientInterceptors;"], [177, ""], [185, "  private BigtableTableAdminClient tableAdminClient;"], [186, "  private BigtableInstanceGrpcClient instanceAdminClient;"], [187, ""], [188, "  /* *****************   end cloud-bigtable-cliente related variables ***************** */"], [189, ""], [190, "  /* *****************   new google-cloud-bigtable related variables ***************** */"], [191, ""], [192, "  private final BigtableDataGCJClient dataGCJClient;"], [198, "  /* *****************   end google-cloud-bigtable related variables ***************** */"], [227, "    // BEGIN set up interceptors"], [253, "    // END set up interceptors"], [255, "    // BEGIN set up Data Clients"], [256, "    // This is needed for the throttling client / Bulk Mutation which is only cloud-bigtable-client."], [263, ""], [264, "    if (options.useGCJClient()) {"], [265, "      BigtableDataSettings dataSettings ="], [266, "          BigtableVeneerSettingsFactory.createBigtableDataSettings(options);"], [267, "      this.dataGCJClient = new BigtableDataGCJClient("], [268, "          com.google.cloud.bigtable.data.v2.BigtableDataClient.create(dataSettings));"], [269, ""], [270, "      // Defer the creation of both the tableAdminClient until we need them."], [271, "      //TODO(rahulkql): Need to identify which resources to initialized for GCJ's adapter case."], [272, "      this.adminSettings = BigtableVeneerSettingsFactory.createTableAdminSettings(options);"], [273, "      this.baseAdminSettings = BaseBigtableTableAdminSettings.create(adminSettings.getStubSettings());"], [274, ""], [275, "      this.dataClient = null;"], [276, "    } else {"], [277, "      // More often than not, users want the dataClient. Create a new one in the constructor."], [278, "      this.dataClient = new BigtableDataGrpcClient(dataChannel, sharedPools.getRetryExecutor(), options);"], [279, "      this.dataClient.setCallOptionsFactory(callOptionsFactory);"], [280, "      this.dataGCJClient = null;"], [281, "      this.adminSettings = null;"], [282, "      this.baseAdminSettings = null;"], [283, "    }"], [296, "    throttlingDataClient.setCallOptionsFactory(callOptionsFactory);"], [297, "    // END set up Data Clients"], [396, "    if (options.useGCJClient()) {"], [397, "      LOG.warn(\"Using cloud-bigtable-client's implementation of BulkMutation.\");"], [398, "    }"], [669, ""], [670, "    try {"], [671, "      if (dataGCJClient != null) {"], [672, "        dataGCJClient.close();"], [673, "      }"], [674, "    } catch (Exception ex) {"], [675, "      throw new IOException(\"Could not close the data client\", ex);"], [676, "    }"], [677, "    try {"], [678, "      if (adminGCJClient != null) {"], [679, "        adminGCJClient.close();"], [680, "      }"], [681, "    } catch (Exception ex) {"], [682, "      throw new IOException(\"Could not close the admin client\", ex);"], [683, "    }"], [684, ""]], "deleted": [[173, "  private BigtableDataGCJClient dataGCJClient;"], [174, ""], [179, "  // GCJ's Settings to create respective clients."], [183, ""], [184, "  private BigtableTableAdminClient tableAdminClient;"], [186, "  private BigtableInstanceGrpcClient instanceAdminClient;"], [188, "  private final BigtableOptions options;"], [189, "  private final List<ManagedChannel> managedChannels = Collections"], [190, "      .synchronizedList(new ArrayList<ManagedChannel>());"], [191, "  private final ClientInterceptor[] clientInterceptors;"], [250, "    // More often than not, users want the dataClient. Create a new one in the constructor."], [253, "    dataClient ="], [254, "        new BigtableDataGrpcClient(dataChannel, sharedPools.getRetryExecutor(), options);"], [255, "    dataClient.setCallOptionsFactory(callOptionsFactory);"], [270, ""], [271, "    // Defer the creation of both the tableAdminClient until we need them."], [272, "    //TODO(rahulkql): Need to identify which resources to initialized for GCJ's adapter case."], [273, "    this.adminSettings = BigtableVeneerSettingsFactory.createTableAdminSettings(options);"], [274, "    this.baseAdminSettings = BaseBigtableTableAdminSettings.create(adminSettings.getStubSettings());"], [358, "      if (this.dataGCJClient == null) {"], [359, "        synchronized (BigtableSession.this) {"], [360, "          try {"], [361, "            if (dataGCJClient == null) {"], [362, "              BigtableDataSettings dataSettings ="], [363, "                  BigtableVeneerSettingsFactory.createBigtableDataSettings(options);"], [364, "              this.dataGCJClient = new BigtableDataGCJClient("], [365, "                  com.google.cloud.bigtable.data.v2.BigtableDataClient.create(dataSettings));"], [366, "            }"], [367, "          } catch (IOException ioException) {"], [368, "            throw new RuntimeException(ioException);"], [369, "          }"], [370, "        }"], [371, "      }"], [624, "    if (managedChannels.isEmpty()) {"], [625, "      return;"], [626, "    }"], [627, ""], [628, "    try {"], [629, "      if (dataGCJClient != null) {"], [630, "        dataGCJClient.close();"], [631, "      }"], [632, "      if (adminGCJClient != null) {"], [633, "        adminGCJClient.close();"], [634, "      }"], [635, "    } catch (Exception ex) {"], [636, "      throw new IOException(ex);"], [637, "    }"]]}, "num_lines_added": 63, "num_lines_removed": 47}