{"hash": "c84821bde8f96711bf96083344e517a3236bc52d", "message": "\u4fee\u590d\u5173\u4e8eMySQL\u62a5\u6587\u5206\u5272\u8bfb\u53d6\u7684\u82e5\u5e72bug\u5e76\u5b8c\u6210\u5355\u5143\u6d4b\u8bd5", "file_num_lines": 58, "diff_parsed": {"added": [[4, "import java.io.ByteArrayOutputStream;"], [14, "\t/** \u5f85\u6d4b\u8bd5\u62a5\u6587\u6570\u91cf */"], [15, "\tprivate static final int PACKAGES_COUNT = 10;"], [16, ""], [19, "\t\tSharedBufferPool sharedPool = new SharedBufferPool(1024 * 1024 * 100, 10240);"], [29, "\t\t\tif (!curBuf.hasRemaining()) {"], [30, "\t\t\t\tcurBuf = bufArray.addNewBuffer();"], [37, "\t\tAssert.assertEquals(PACKAGES_COUNT, bufArray.getCurPacageIndex());"], [40, "\t/**"], [41, "\t * \u968f\u673a\u6784\u9020\u62a5\u6587\u8fdb\u884c\u6d4b\u8bd5\uff0c\u62a5\u6587\u957f\u5ea6\u6309\u7167\u62a5\u6587\u534f\u8bae\u7279\u70b9\uff0c\u57280xFF-0xFFFF-0xFFFFFF\u4e0a\u5747\u5300\u5206\u5e03"], [42, "\t * @return"], [43, "\t */"], [45, "\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();"], [46, "\t\ttry {"], [47, "\t\t\tfor (int i = 0; i < PACKAGES_COUNT; i++) {"], [48, "\t\t\t\tswitch ((int) (Math.random() * 3)) {"], [49, "\t\t\t\tcase 0:"], [50, "\t\t\t\t\tbaos.write(createPackage((int) (Math.random() * 0xFF)));"], [51, "\t\t\t\t\tbreak;"], [52, "\t\t\t\tcase 1:"], [53, "\t\t\t\t\tbaos.write(createPackage((int) (Math.random() * 0xFFFF)));"], [54, "\t\t\t\t\tbreak;"], [55, "\t\t\t\tcase 2:"], [56, "\t\t\t\t\tbaos.write(createPackage((int) (Math.random() * 0xFFFFFF)));"], [57, "\t\t\t\t\tbreak;"], [58, "\t\t\t\t}"], [59, ""], [60, "\t\t\t}"], [61, "\t\t} catch (IOException e) {"], [62, "\t\t\te.printStackTrace();"], [63, "\t\t}"], [64, "\t\treturn new ByteArrayInputStream(baos.toByteArray());"], [65, "\t}"], [66, ""], [67, "\t/**"], [68, "\t * \u6839\u636eMySQL\u62a5\u6587\u683c\u5f0f\u6784\u9020\u5185\u5bb9\u957f\u5ea6\u4e3alen\u7684\u62a5\u6587\uff08\u603b\u957f\u5ea6\u5e94\u4e3alen+4\uff09"], [69, "\t * @param len \u5185\u5bb9\u957f\u5ea6"], [70, "\t * @return \u62a5\u6587\u5b57\u8282\u6570\u7ec4"], [71, "\t */"], [72, "\tprivate byte[] createPackage(int len) {"], [73, "\t\tbyte[] p = new byte[len + 4];"], [74, "\t\tp[0] = (byte) (len & 0xFF);"], [75, "\t\tp[1] = (byte) ((len >> 8) & 0xFF);"], [76, "\t\tp[2] = (byte) ((len >> 16) & 0xFF);"], [77, "\t\treturn p;"]], "deleted": [[15, "\t\tString testS = \"test data only for \";"], [16, "\t\tSharedBufferPool sharedPool = new SharedBufferPool(1024 * 1024 * 100, testS.length() + 4);"], [26, "\t\t\tif(!curBuf.hasRemaining())"], [27, "\t\t\t{"], [28, "\t\t\t\tcurBuf=bufArray.addNewBuffer();"], [34, ""], [36, "\t\tAssert.assertEquals(10, bufArray.getCurPacageIndex());"], [40, "\t\t// TODO Auto-generated method stub"], [41, "\t\treturn null;"]]}, "num_lines_added": 45, "num_lines_removed": 9}