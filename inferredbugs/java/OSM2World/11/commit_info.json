{"hash": "a773961444fa1f7ee55b02ebd685142cf11beee6", "message": "Add a floor plate option for the WebGL protobuf", "file_num_lines": 394, "diff_parsed": {"added": [[5, "import static org.osm2world.core.map_data.creation.EmptyTerrainBuilder.EMPTY_SURFACE_TAG;"], [7, "import static org.osm2world.core.target.common.material.Materials.TERRAIN_DEFAULT;"], [8, "import static org.osm2world.core.target.common.material.NamedTexCoordFunction.GLOBAL_X_Z;"], [9, "import static org.osm2world.core.target.common.material.TexCoordUtil.triangleTexCoordLists;"], [28, "import org.osm2world.core.math.PolygonWithHolesXZ;"], [29, "import org.osm2world.core.math.SimplePolygonXZ;"], [32, "import org.osm2world.core.math.TriangleXZ;"], [36, "import org.osm2world.core.math.algorithms.CAGUtil;"], [37, "import org.osm2world.core.math.algorithms.TriangulationUtil;"], [52, "import org.osm2world.core.world.data.TerrainBoundaryWorldObject;"], [54, "import org.osm2world.core.world.modules.PoolModule.Pool;"], [55, "import org.osm2world.core.world.modules.WaterModule.AreaFountain;"], [56, "import org.osm2world.core.world.modules.WaterModule.RiverJunction;"], [57, "import org.osm2world.core.world.modules.WaterModule.Water;"], [58, "import org.osm2world.core.world.modules.WaterModule.Waterway;"], [65, "\t * whether empty terrain should be faked as a big rectangle slightly below"], [66, "\t * other ground-level geometries. This reduces the number of triangles used"], [67, "\t * for empty terrain. Waterbodies are still subtracted from this rectangle."], [68, "\t */"], [69, "\tprivate final boolean USE_FLOOR_PLATE = true;"], [70, ""], [71, "\tprivate final double FLOOR_PLATE_Y = -0.03;"], [72, ""], [73, "\t/**"], [239, "\tprivate final List<SimplePolygonXZ> waterAreas = new ArrayList<SimplePolygonXZ>();"], [240, ""], [275, "\t\tfinishCurrentObject();"], [404, "\t * completes the {@link FrontendPbf.WorldObject} for which information is currently"], [405, "\t * being collected in {@link #currentObject} and {@link #currentTriangles}."], [407, "\tprivate void finishCurrentObject() {"], [408, ""], [409, "\t\t/* special handling for water areas */"], [410, ""], [411, "\t\tif (USE_FLOOR_PLATE) {"], [412, "\t\t\tif (isWater(currentObject)) {"], [413, ""], [414, "\t\t\t\tSimplePolygonXZ outline = ((TerrainBoundaryWorldObject) currentObject).getOutlinePolygonXZ();"], [415, ""], [416, "\t\t\t\tif (outline != null) {"], [417, "\t\t\t\t\twaterAreas.add(outline);"], [418, "\t\t\t\t}"], [419, ""], [420, "\t\t\t\treturn;"], [421, ""], [422, "\t\t\t}"], [423, "\t\t}"], [424, ""], [425, "\t\t/* check for reasons not to build the object */"], [426, ""], [427, "\t\tboolean ignoreCurrentObject = currentTriangles.isEmpty();"], [428, ""], [429, "\t\tif (currentObject != null && currentObject.getPrimaryMapElement() != null) {"], [430, ""], [431, "\t\t\tMapElement mapElement = currentObject.getPrimaryMapElement();"], [432, ""], [433, "\t\t\tVectorXZ center = null;"], [434, ""], [435, "\t\t\tif (mapElement instanceof MapNode) {"], [436, "\t\t\t\tcenter = ((MapNode) mapElement).getPos();"], [437, "\t\t\t} else if (mapElement instanceof MapWaySegment) {"], [438, "\t\t\t\tcenter = ((MapWaySegment) mapElement).getCenter();"], [439, "\t\t\t} else if (mapElement instanceof MapArea) {"], [440, "\t\t\t\tcenter = ((MapArea) mapElement).getOuterPolygon().getCenter();"], [441, "\t\t\t}"], [442, ""], [443, "\t\t\tignoreCurrentObject |= !bbox.contains(center);"], [444, ""], [445, "\t\t\tignoreCurrentObject |= USE_FLOOR_PLATE"], [446, "\t\t\t\t\t&& mapElement.getTags().contains(EMPTY_SURFACE_TAG);"], [447, ""], [448, "\t\t\tignoreCurrentObject |= USE_FLOOR_PLATE && isWater(currentObject);"], [449, ""], [450, "\t\t}"], [451, ""], [452, "\t\t/* build the current object */"], [453, ""], [454, "\t\tif (!ignoreCurrentObject) {"], [455, "\t\t\tobjects.add(buildObject(currentObject, currentTriangles));"], [456, "\t\t}"], [457, ""], [458, "\t}"], [459, ""], [460, "\t/**"], [461, "\t *"], [462, "\t * @param object  can be null if this geometry doesn't belong to a specific object"], [463, "\t */"], [464, "\tprivate FrontendPbf.WorldObject buildObject(WorldObject object,"], [465, "\t\t\tMap<? extends Material, ? extends TriangleData> triangles) {"], [471, "\t\tfor (Material material : triangles.keySet()) {"], [477, "\t\t\tTriangleData triangleData = triangles.get(material);"], [507, "\t\tif (object != null) {"], [509, "\t\t\tMapElement element = object.getPrimaryMapElement();"], [536, "\t/**"], [537, "\t * implements the #USE_FLOOR_PLATE option"], [538, "\t */"], [539, "\tprivate FrontendPbf.WorldObject buildFloorPlate() {"], [540, ""], [541, "\t\tTriangleData triangleData = new TriangleData(TERRAIN_DEFAULT.getNumTextureLayers());"], [542, ""], [543, "\t\tfor (PolygonWithHolesXZ poly : CAGUtil.subtractPolygons(bbox.polygonXZ(), waterAreas)) {"], [544, ""], [545, "\t\t\tList<TriangleXZ> triangles = TriangulationUtil.triangulate(poly);"], [546, ""], [547, "\t\t\tList<TriangleXYZ> trianglesXYZ = new ArrayList<TriangleXYZ>(triangles.size());"], [548, "\t\t\tList<VectorXYZ> vertices = new ArrayList<VectorXYZ>(triangles.size() * 3);"], [549, ""], [550, "\t\t\tfor (TriangleXZ triangle : triangles) {"], [551, ""], [552, "\t\t\t\tTriangleXYZ triangleXYZ = triangle.xyz(FLOOR_PLATE_Y);"], [553, ""], [554, "\t\t\t\ttrianglesXYZ.add(triangleXYZ);"], [555, "\t\t\t\tvertices.addAll(triangleXYZ.getVertices());"], [556, ""], [557, "\t\t\t}"], [558, ""], [559, "\t\t\ttriangleData.add(vertices,"], [560, "\t\t\t\t\tnCopies(vertices.size(), Y_UNIT),"], [561, "\t\t\t\t\ttriangleTexCoordLists(trianglesXYZ, TERRAIN_DEFAULT, GLOBAL_X_Z));"], [562, ""], [563, "\t\t}"], [564, ""], [565, "\t\treturn buildObject(null, singletonMap(TERRAIN_DEFAULT, triangleData));"], [566, ""], [567, "\t}"], [568, ""], [569, "\tprivate static final boolean isWater(WorldObject object) {"], [570, ""], [571, "\t\treturn object instanceof Water"], [572, "\t\t\t|| object instanceof AreaFountain"], [573, "\t\t\t|| object instanceof RiverJunction"], [574, "\t\t\t|| object instanceof Waterway"], [575, "\t\t\t|| object instanceof Pool;"], [576, ""], [577, "\t}"], [578, ""], [584, "\t\tfinishCurrentObject();"], [585, ""], [586, "\t\t/* create a floor plate (if that option is active */"], [587, ""], [588, "\t\tif (USE_FLOOR_PLATE) {"], [589, "\t\t\tobjects.add(buildFloorPlate());"], [590, "\t\t}"]], "deleted": [[249, "\t\t/* build the previous object (if it's inside the bounding box) */"], [250, ""], [251, "\t\tboolean isInsideBbox = true;"], [252, ""], [253, "\t\tif (currentObject != null && currentObject.getPrimaryMapElement() != null) {"], [254, ""], [255, "\t\t\tMapElement mapElement = currentObject.getPrimaryMapElement();"], [256, ""], [257, "\t\t\tVectorXZ center = null;"], [258, ""], [259, "\t\t\tif (mapElement instanceof MapNode) {"], [260, "\t\t\t\tcenter = ((MapNode) mapElement).getPos();"], [261, "\t\t\t} else if (mapElement instanceof MapWaySegment) {"], [262, "\t\t\t\tcenter = ((MapWaySegment) mapElement).getCenter();"], [263, "\t\t\t} else if (mapElement instanceof MapArea) {"], [264, "\t\t\t\tcenter = ((MapArea) mapElement).getOuterPolygon().getCenter();"], [265, "\t\t\t}"], [266, ""], [267, "\t\t\tisInsideBbox = bbox.contains(center);"], [268, ""], [269, "\t\t}"], [270, ""], [271, "\t\tif (!currentTriangles.isEmpty() && isInsideBbox) {"], [272, "\t\t\tobjects.add(buildCurrentObject());"], [273, "\t\t}"], [402, "\t * builds the current {@link FrontendPbf.WorldObject},"], [403, "\t * based e.g. on {@link #currentTriangles}."], [405, "\tprivate FrontendPbf.WorldObject buildCurrentObject() {"], [411, "\t\tfor (Material material : currentTriangles.keySet()) {"], [417, "\t\t\tTriangleData triangleData = currentTriangles.get(material);"], [447, "\t\tif (currentObject != null) {"], [449, "\t\t\tMapElement element = currentObject.getPrimaryMapElement();"], [481, "\t\tobjects.add(buildCurrentObject());"]]}, "num_lines_added": 142, "num_lines_removed": 33}