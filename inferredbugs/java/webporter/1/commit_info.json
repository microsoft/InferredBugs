{"hash": "b3beb6e73bfda1b45cd05d454b717911154a77be", "message": "[add] add bulkProcessor in class  ElasticsearchUploader", "file_num_lines": 68, "diff_parsed": {"added": [[3, "import org.elasticsearch.action.bulk.BackoffPolicy;"], [4, "import org.elasticsearch.action.bulk.BulkProcessor;"], [5, "import org.elasticsearch.action.bulk.BulkRequest;"], [6, "import org.elasticsearch.action.bulk.BulkResponse;"], [7, "import org.elasticsearch.action.index.IndexRequest;"], [11, "import org.elasticsearch.common.unit.ByteSizeUnit;"], [12, "import org.elasticsearch.common.unit.ByteSizeValue;"], [13, "import org.elasticsearch.common.unit.TimeValue;"], [15, "import org.slf4j.Logger;"], [16, "import org.slf4j.LoggerFactory;"], [25, "    protected static Logger logger = LoggerFactory.getLogger(ElasticsearchUploader.class);"], [26, ""], [27, "    protected TransportClient client;"], [28, "    protected BulkProcessor bulkProcessor;"], [29, "    protected BulkProcessor.Listener listener;"], [30, ""], [31, "    public ElasticsearchUploader() {"], [32, "        init();"], [33, "    }"], [34, ""], [35, "    protected void init() {"], [36, "        // on startup"], [39, "                    .addTransportAddress(new InetSocketTransportAddress("], [40, "                            InetAddress.getByName(\"localhost\"), 9300));"], [44, ""], [45, "        listener = new BulkProcessor.Listener() {"], [46, "            @Override"], [47, "            public void beforeBulk(long l, BulkRequest bulkRequest) {"], [48, "                logger.info(\"bulk request numberOfActions:\" + bulkRequest.numberOfActions());"], [49, "            }"], [50, ""], [51, "            @Override"], [52, "            public void afterBulk(long l, BulkRequest bulkRequest,"], [53, "                                  BulkResponse bulkResponse) {"], [54, "                logger.info(\"bulk response has failures: \" + bulkResponse.hasFailures());"], [55, "            }"], [56, ""], [57, "            @Override"], [58, "            public void afterBulk(long l, BulkRequest bulkRequest,"], [59, "                                  Throwable throwable) {"], [60, "                logger.warn(\"bulk failed: \" + throwable);"], [61, "            }"], [62, "        };"], [63, ""], [64, "        bulkProcessor = BulkProcessor.builder(client, listener)"], [65, "                .setBulkActions(10000)"], [66, "                .setBulkSize(new ByteSizeValue(5, ByteSizeUnit.MB))"], [67, "                .setFlushInterval(TimeValue.timeValueSeconds(5))"], [68, "                .setConcurrentRequests(10)"], [69, "                .setBackoffPolicy("], [70, "                        BackoffPolicy.exponentialBackoff("], [71, "                                TimeValue.timeValueMillis(100), 3))"], [72, "                .build();"], [73, "    }"], [74, ""], [75, "    public void upload(String index, String type, Document doc) {"], [76, "        bulkProcessor.add(new IndexRequest(index, type, doc.getId())"], [77, "                .source(doc.getContent()));"], [78, "    }"], [79, ""], [80, "    public static void main(String[] args) {"], [81, "        ElasticsearchUploader esUploader = new ElasticsearchUploader();"], [82, "        ElasticsearchUploader.logger.info(\"aaa\");"]], "deleted": [[15, "    public static void main(String[] args) {"], [16, "        TransportClient client = null;"], [18, "            // on startup"], [20, "                    .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(\"host1\"), 9300))"], [21, "                    .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(\"host2\"), 9300));"], [22, "            // on shutdown"], [23, "            client.close();"]]}, "num_lines_added": 63, "num_lines_removed": 7}