  public void execute() {
    try {
      // Gets the tool command line
      List<String> commandLine = getCommandLine();
      ProcessBuilder builder = new ProcessBuilder(commandLine);
      LOG.info("Executing " + getExecutedTool() + " with command '{}'", prettyPrint(commandLine));
      // Starts the process
      Process p = builder.start();
      // And handles it's normal and error stream in separated threads.

      ByteArrayOutputStream output = new ByteArrayOutputStream(DEFAUT_BUFFER_INITIAL_SIZE);
      AsyncPipe outputStreamThread = new AsyncPipe(p.getInputStream(), output);
      outputStreamThread.start();

      ByteArrayOutputStream error = new ByteArrayOutputStream(DEFAUT_BUFFER_INITIAL_SIZE);
      AsyncPipe errorStreamThread = new AsyncPipe(p.getErrorStream(), error);
      errorStreamThread.start();

      LOG.info(getExecutedTool() + " ended with returned code '{}'.", p.waitFor());
    } catch (IOException e) {
      LOG.error("Can't execute the external tool", e);
      throw new PhpPluginExecutionException(e);
    } catch (InterruptedException e) {
      LOG.error("Async pipe interrupted: ", e);
      throw new PhpPluginExecutionException(e);
    }
  }