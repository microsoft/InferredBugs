{"hash": "c7a42968cc6c069a391d5649c11e5e296229115f", "message": "[QUALITY_FLAWS] Add test for tree implementation", "file_num_lines": 56, "diff_parsed": {"added": [[35, "    IfStatementTree tree = parse(\"if ($a) {}\", PHPLexicalGrammar.IF_STATEMENT);"], [36, ""], [37, "    assertThat(tree.ifToken().text()).isEqualTo(\"if\");"], [38, "    assertThat(expressionToString(tree.condition())).isEqualTo(\"($a)\");"], [39, "    assertThat(tree.statements()).hasSize(1);"], [40, ""], [41, "    assertThat(tree.elseClause()).isNull();"], [42, "    assertThat(tree.elseifClauses()).hasSize(0);"], [43, "    assertThat(tree.endifToken()).isNull();"], [44, "    assertThat(tree.eosToken()).isNull();"], [45, "  }"], [46, ""], [47, "  @Test"], [48, "  public void standard_syntax_with_else() throws Exception {"], [55, ""], [62, ""], [68, "  public void alternative_syntax_with_else() throws Exception {"], [75, "    assertThat(tree.elseClause()).isNotNull();"], [81, "    assertThat(tree.eosToken().text()).isEqualTo(\";\");"]], "deleted": [[27, "import org.sonar.plugins.php.api.tree.statement.ElseifClauseTree;"], [53, "  public void alternative_syntax() throws Exception {"], [60, "    ElseClauseTree elseClause = tree.elseClause();"], [61, "    assertThat(elseClause).isNotNull();"], [62, "    assertThat(elseClause.is(Kind.ALTERNATIVE_ELSE_CLAUSE)).isTrue();"], [63, "    assertThat(elseClause.statements()).hasSize(2);"], [69, "    assertThat(tree.eosToken()).isNotNull();"], [70, "  }"], [71, ""], [72, "  @Test"], [73, "  public void standard_syntax_without_else() throws Exception {"], [74, "    IfStatementTree tree = parse(\"if ($a) {}\", PHPLexicalGrammar.IF_STATEMENT);"], [75, ""], [76, "    assertThat(tree.statements()).hasSize(1);"], [77, "    assertThat(tree.elseClause()).isNull();"], [78, "    assertThat(tree.elseifClauses()).hasSize(0);"], [88, ""], [89, "    ElseifClauseTree elseifClause = tree.elseifClauses().get(0);"], [90, "    assertThat(elseifClause.is(Kind.ELSEIF_CLAUSE)).isTrue();"], [91, "    assertThat(elseifClause.statements()).hasSize(1);"], [92, "    assertThat(elseifClause.condition()).isNotNull();"], [93, "    assertThat(elseifClause.colonToken()).isNull();"], [94, ""], [95, "    assertThat(tree.elseifClauses().get(1).statements()).hasSize(1);"]]}, "num_lines_added": 19, "num_lines_removed": 24}