{"hash": "655dbd59841bbf2eb8144ed8310db5038d8ebf67", "message": "added handling redirect from http to https", "file_num_lines": 141, "diff_parsed": {"added": [[20, "import com.turn.ttorrent.common.protocol.TrackerMessage.AnnounceRequestMessage;"], [21, "import com.turn.ttorrent.common.protocol.TrackerMessage.MessageValidationException;"], [22, "import com.turn.ttorrent.common.protocol.http.HTTPAnnounceRequestMessage;"], [23, "import com.turn.ttorrent.common.protocol.http.HTTPTrackerMessage;"], [24, "import org.slf4j.Logger;"], [25, "import org.slf4j.LoggerFactory;"], [30, "import java.net.*;"], [105, "      conn = (HttpURLConnection)openConnectionCheckRedirects(url);"], [151, "  private URLConnection openConnectionCheckRedirects(URL url) throws IOException {"], [152, "    boolean needRedirect;"], [153, "    int redirects = 0;"], [154, "    URLConnection connection = url.openConnection();"], [155, "    do {"], [156, "      needRedirect = false;"], [157, "      connection.setConnectTimeout(10000);"], [158, "      connection.setReadTimeout(10000);"], [159, "      HttpURLConnection http = null;"], [160, "      if (connection instanceof HttpURLConnection) {"], [161, "        http = (HttpURLConnection) connection;"], [162, "        http.setInstanceFollowRedirects(false);"], [163, "      }"], [164, "      if (http != null) {"], [165, "        int stat = http.getResponseCode();"], [166, "        if (stat >= 300 && stat <= 307 && stat != 306 &&"], [167, "                stat != HttpURLConnection.HTTP_NOT_MODIFIED) {"], [168, "          URL base = http.getURL();"], [169, "          String newLocation = http.getHeaderField(\"Location\");"], [170, "          URL target = newLocation == null ? null : new URL(base, newLocation);"], [171, "          http.disconnect();"], [172, "          // Redirection should be allowed only for HTTP and HTTPS"], [173, "          // and should be limited to 5 redirections at most."], [174, "          if (redirects >= 5) {"], [175, "            throw new IOException(\"too many redirects\");"], [176, "          }"], [177, "          if (target == null || !(target.getProtocol().equals(\"http\")"], [178, "                  || target.getProtocol().equals(\"https\"))) {"], [179, "            throw new IOException(\"illegal URL redirect or protocol\");"], [180, "          }"], [181, "          needRedirect = true;"], [182, "          connection = target.openConnection();"], [183, "          redirects++;"], [184, "        }"], [185, "      }"], [186, "    }"], [187, "    while (needRedirect);"], [188, "    return connection;"], [189, "  }"], [190, ""]], "deleted": [[20, "import com.turn.ttorrent.common.protocol.TrackerMessage.*;"], [21, "import com.turn.ttorrent.common.protocol.http.*;"], [26, "import java.net.HttpURLConnection;"], [27, "import java.net.MalformedURLException;"], [28, "import java.net.URI;"], [29, "import java.net.URL;"], [30, "import java.nio.ByteBuffer;"], [34, "import org.apache.commons.io.FileUtils;"], [35, "import org.apache.commons.io.output.ByteArrayOutputStream;"], [36, ""], [37, "import org.slf4j.Logger;"], [38, "import org.slf4j.LoggerFactory;"], [39, ""], [111, "      conn = (HttpURLConnection)url.openConnection();"], [112, "      conn.setConnectTimeout(10000);"], [113, "      conn.setReadTimeout(10000);"]]}, "num_lines_added": 48, "num_lines_removed": 16}