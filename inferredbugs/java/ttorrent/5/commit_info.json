{"hash": "ac714f0a3512e14a59b085841f12023c53416f97", "message": "Use buffered input while hashing torrent files\n\nAdd timing information and use a BufferedInputStream to speed up the\nhashing of a torrent's data.\n\nSigned-off-by: David Giffin <david@etsy.com>\nAcked-by: Maxime Petazzoni <mpetazzoni@turn.com>", "file_num_lines": 146, "diff_parsed": {"added": [[22, "import java.io.BufferedInputStream;"], [28, "import java.io.InputStream;"], [252, "\t\tlong start = System.nanoTime();"], [253, "\t\tlong hashTime = 0L;"], [254, ""], [256, "\t\tInputStream is = new BufferedInputStream(new FileInputStream(source));"], [261, "\t\twhile ((read = is.read(data)) > 0) {"], [264, ""], [265, "\t\t\tlong hashStart = System.nanoTime();"], [267, "\t\t\thashTime += (System.nanoTime() - hashStart);"], [269, "\t\tis.close();"], [272, "\t\t\tTorrent.PIECE_LENGTH)).intValue();"], [273, "\t\tlogger.info(\"Hashed {} ({} bytes) in {} pieces (total: {}ms, \" +"], [274, "\t\t\t\"{}ms hashing).\","], [278, "\t\t\t\tn_pieces,"], [279, "\t\t\t\tString.format(\"%.1f\", (System.nanoTime() - start) / 1024),"], [280, "\t\t\t\tString.format(\"%.1f\", hashTime / 1024),"]], "deleted": [[251, "\t\tFileInputStream fis = new FileInputStream(source);"], [256, "\t\twhile ((read = fis.read(data)) > 0) {"], [261, "\t\tfis.close();"], [264, "\t\t\t\t\tTorrent.PIECE_LENGTH)).intValue();"], [265, "\t\tlogger.debug(\"Hashed {} ({} bytes) in {} pieces.\","], [269, "\t\t\t\tn_pieces"]]}, "num_lines_added": 17, "num_lines_removed": 6}