{"hash": "b7ce580beb38df2fa1afde154d2fb75527e97bf0", "message": "Don't attempt to stop the full client on peers' IOExceptions\n\nRecoverable IOExceptions from single peers actually can happen if a\nmessage is being sent to a peer at the same time it disconnects. The\nprevious way of handling this was to kill the client in the belief that\nthe IOException resulted from a local, unrecoverable error, and could\nactually result in a dead lock trying to stop the client.\n\nSigned-off-by: Maxime Petazzoni <mpetazzoni@turn.com>", "file_num_lines": 581, "diff_parsed": {"added": [[856, "\t\tlogger.warn(\"I/O error while exchanging data with {}, \" +"], [858, "\t\tpeer.unbind(true);"]], "deleted": [[856, "\t\tlogger.error(\"I/O error while exchanging data with {}, \" +"], [858, "\t\tthis.stop();"], [859, "\t\tthis.setState(ClientState.ERROR);"]]}, "num_lines_added": 2, "num_lines_removed": 3}