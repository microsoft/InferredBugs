{"hash": "baed59289632443158a12134ae51caea0edc118e", "message": "fix #144", "file_num_lines": 151, "diff_parsed": {"added": [[53, "                routeDTO.setService(service);"], [54, "                routeDTO.setVersion(version);"], [57, "            Route route = convertRouteDTOtoRoute(routeDTO, null);"], [72, "        routeDTO.setVersion(route.getVersion());"], [73, "        routeDTO.setService(route.getService());"], [74, "        Route newRoute = convertRouteDTOtoRoute(routeDTO, id);"], [93, "            RouteDTO routeDTO = convertRoutetoRouteDTO(route, route.getHash());"], [105, "        RouteDTO routeDTO = convertRoutetoRouteDTO(route, id);"], [134, "            if (condition.contains(\"=>\")) {"], [135, "                String[] array = condition.split(\"=>\", 2);"], [136, "                String consumer = array[0].trim();"], [137, "                String provider = array[1].trim();"], [138, "                if (consumer != \"\") {"], [139, "                    if (when.length() != 0) {"], [140, "                        when.append(\" & \").append(consumer);"], [141, "                    } else {"], [142, "                        when.append(consumer);"], [143, "                    }"], [145, "                if (provider != \"\") {"], [146, "                    if (then.length() != 0) {"], [147, "                        then.append(\" & \").append(provider);"], [148, "                    } else {"], [149, "                        then.append(provider);"], [150, "                    }"], [157, "    private Route convertRouteDTOtoRoute(RouteDTO routeDTO, String id) {"], [158, "        Route route = new Route();"], [159, "        String[] conditions = routeDTO.getConditions();"], [160, "        String rule = parseCondition(conditions);"], [161, "        route.setService(routeDTO.getService());"], [162, "        route.setVersion(routeDTO.getVersion());"], [163, "        route.setEnabled(routeDTO.isEnabled());"], [164, "        route.setForce(routeDTO.isForce());"], [165, "        route.setGroup(routeDTO.getGroup());"], [166, "        route.setDynamic(routeDTO.isDynamic());"], [167, "        route.setRuntime(routeDTO.isRuntime());"], [168, "        route.setPriority(routeDTO.getPriority());"], [169, "        route.setRule(rule);"], [170, "        if(id != null) {"], [171, "            route.setHash(id);"], [172, "        }"], [173, "        return route;"], [176, "    private RouteDTO convertRoutetoRouteDTO(Route route, String id) {"], [177, "        RouteDTO routeDTO = new RouteDTO();"], [178, "        routeDTO.setDynamic(route.isDynamic());"], [179, "        routeDTO.setConditions(new String[]{route.getRule()});"], [180, "        routeDTO.setEnabled(route.isEnabled());"], [181, "        routeDTO.setForce(route.isForce());"], [182, "        routeDTO.setGroup(route.getGroup());"], [183, "        routeDTO.setPriority(route.getPriority());"], [184, "        routeDTO.setRuntime(route.isRuntime());"], [185, "        routeDTO.setService(route.getService());"], [186, "        routeDTO.setVersion(route.getVersion());"], [187, "        if (id != null) {"], [188, "            routeDTO.setId(route.getHash());"], [189, "        }"], [190, "        return routeDTO;"], [191, "    }"]], "deleted": [[20, "import org.apache.dubbo.admin.dto.BaseDTO;"], [25, "import org.apache.dubbo.admin.util.MD5Util;"], [57, "            String[] conditions = routeDTO.getConditions();"], [58, "            String rule = parseCondition(conditions);"], [59, "            Route route = new Route();"], [60, "            route.setService(service);"], [61, "            route.setVersion(version);"], [62, "            route.setEnabled(routeDTO.isEnabled()); route.setForce(routeDTO.isForce());"], [63, "            route.setGroup(routeDTO.getGroup());"], [64, "            route.setDynamic(routeDTO.isDynamic());"], [65, "            route.setRuntime(routeDTO.isRuntime());"], [66, "            route.setPriority(routeDTO.getPriority());"], [67, "            route.setRule(rule);"], [82, "        String[] conditions = routeDTO.getConditions();"], [83, "        String rule = parseCondition(conditions);"], [84, "        Route newRoute = new Route();"], [85, "        newRoute.setService(route.getService());"], [86, "        newRoute.setVersion(route.getVersion());"], [87, "        newRoute.setEnabled(routeDTO.isEnabled());"], [88, "        newRoute.setForce(routeDTO.isForce());"], [89, "        newRoute.setGroup(routeDTO.getGroup());"], [90, "        newRoute.setDynamic(routeDTO.isDynamic());"], [91, "        newRoute.setRuntime(routeDTO.isRuntime());"], [92, "        newRoute.setPriority(routeDTO.getPriority());"], [93, "        newRoute.setRule(rule);"], [112, "            RouteDTO routeDTO = new RouteDTO();"], [113, "            routeDTO.setDynamic(route.isDynamic());"], [114, "            routeDTO.setConditions(new String[]{route.getRule()});"], [115, "            routeDTO.setEnabled(route.isEnabled());"], [116, "            routeDTO.setForce(route.isForce());"], [117, "            routeDTO.setGroup(route.getGroup());"], [118, "            routeDTO.setPriority(route.getPriority());"], [119, "            routeDTO.setRuntime(route.isRuntime());"], [120, "            routeDTO.setService(route.getService());"], [121, "            routeDTO.setId(route.getHash());"], [133, "        RouteDTO routeDTO = new RouteDTO();"], [134, "        routeDTO.setDynamic(route.isDynamic());"], [135, "        routeDTO.setConditions(new String[]{route.getRule()});"], [136, "        routeDTO.setEnabled(route.isEnabled());"], [137, "        routeDTO.setForce(route.isForce());"], [138, "        routeDTO.setGroup(route.getGroup());"], [139, "        routeDTO.setPriority(route.getPriority());"], [140, "        routeDTO.setRuntime(route.isRuntime());"], [141, "        routeDTO.setService(route.getService());"], [142, "        routeDTO.setId(route.getHash());"], [171, "            if (condition.contains(\"=>\") && !condition.endsWith(\"=>\")) {"], [172, "                String consumer = condition.split(\"=>\")[0].trim();"], [173, "                String provider = condition.split(\"=>\")[1].trim();"], [174, "                if (when.length() != 0) {"], [175, "                    when.append(\" & \").append(consumer);"], [176, "                } else {"], [177, "                    when.append(consumer);"], [179, ""], [180, "                if (then.length() != 0) {"], [181, "                    then.append(\" & \").append(provider);"], [182, "                } else {"], [183, "                    then.append(provider);"], [190, "    public static void main(String[] args) {"], [191, "        String a = \"fwjiojie =>\";"], [192, "        a.split(\"=>\", 2);"]]}, "num_lines_added": 57, "num_lines_removed": 60}