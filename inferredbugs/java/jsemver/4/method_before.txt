    private Expression parseTildeExpression() {
        tokens.consume(TILDE);
        int major = intOf(tokens.consume(NUMERIC).lexeme);
        if (!tokens.positiveLookahead(DOT)) {
            return new GreaterOrEqual(versionOf(major, 0, 0));
        }
        tokens.consume(DOT);
        int minor = intOf(tokens.consume(NUMERIC).lexeme);
        if (!tokens.positiveLookahead(DOT)) {
            return new And(
                new GreaterOrEqual(versionOf(major, minor, 0)),
                new Less(versionOf(major + 1, 0, 0))
            );
        }
        tokens.consume(DOT);
        int patch = intOf(tokens.consume(NUMERIC).lexeme);
        return new And(
            new GreaterOrEqual(versionOf(major, minor, patch)),
            new Less(versionOf(major, minor + 1, 0))
        );
    }