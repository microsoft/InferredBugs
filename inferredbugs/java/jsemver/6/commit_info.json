{"hash": "f3b43eee9c2d50681d57996a66f666eedac11582", "message": "Refactor ExpressionParser to improve error handling", "file_num_lines": 186, "diff_parsed": {"added": [[81, "     * @throws UnexpectedTokenException when consumes a token of an unexpected type"], [86, "        Expression expr = parseSemVerExpression();"], [87, "        consumeNextToken(EOL);"], [88, "        return expr;"], [109, "            consumeNextToken(LEFT_PAREN);"], [111, "            consumeNextToken(RIGHT_PAREN);"], [113, "            consumeNextToken(LEFT_PAREN);"], [115, "            consumeNextToken(RIGHT_PAREN);"], [229, "        consumeNextToken(TILDE);"], [230, "        int major = intOf(consumeNextToken(NUMERIC).lexeme);"], [234, "        consumeNextToken(DOT);"], [235, "        int minor = intOf(consumeNextToken(NUMERIC).lexeme);"], [242, "        consumeNextToken(DOT);"], [243, "        int patch = intOf(consumeNextToken(NUMERIC).lexeme);"], [275, "        int major = intOf(consumeNextToken(NUMERIC).lexeme);"], [276, "        consumeNextToken(DOT);"], [284, "        int minor = intOf(consumeNextToken(NUMERIC).lexeme);"], [285, "        consumeNextToken(DOT);"], [286, "        consumeNextToken(STAR);"], [318, "        consumeNextToken(HYPHEN);"], [337, "        int major = intOf(consumeNextToken(NUMERIC).lexeme);"], [341, "            minor = intOf(consumeNextToken(NUMERIC).lexeme);"], [346, "            patch = intOf(consumeNextToken(NUMERIC).lexeme);"], [396, ""], [397, "    /**"], [398, "     * Tries to consume the next token in the stream."], [399, "     *"], [400, "     * @param expected the expected types of the next token"], [401, "     * @return the next token in the stream"], [402, "     * @throws UnexpectedTokenException when encounters an unexpected token type"], [403, "     */"], [404, "    private Token consumeNextToken(Token.Type... expected) {"], [405, "        try {"], [406, "            return tokens.consume(expected);"], [407, "        } catch (UnexpectedElementException e) {"], [408, "            throw new UnexpectedTokenException(e);"], [409, "        }"], [410, "    }"]], "deleted": [[81, "     * @throws UnexpectedElementException when consumes a token of an unexpected type"], [86, "        return parseSemVerExpression();"], [107, "            tokens.consume(LEFT_PAREN);"], [109, "            tokens.consume(RIGHT_PAREN);"], [111, "            tokens.consume(LEFT_PAREN);"], [113, "            tokens.consume(RIGHT_PAREN);"], [227, "        tokens.consume(TILDE);"], [228, "        int major = intOf(tokens.consume(NUMERIC).lexeme);"], [232, "        tokens.consume(DOT);"], [233, "        int minor = intOf(tokens.consume(NUMERIC).lexeme);"], [240, "        tokens.consume(DOT);"], [241, "        int patch = intOf(tokens.consume(NUMERIC).lexeme);"], [273, "        int major = intOf(tokens.consume(NUMERIC).lexeme);"], [274, "        tokens.consume(DOT);"], [282, "        int minor = intOf(tokens.consume(NUMERIC).lexeme);"], [283, "        tokens.consume(DOT);"], [284, "        tokens.consume(STAR);"], [316, "        tokens.consume(HYPHEN);"], [335, "        int major = intOf(tokens.consume(NUMERIC).lexeme);"], [339, "            minor = intOf(tokens.consume(NUMERIC).lexeme);"], [344, "            patch = intOf(tokens.consume(NUMERIC).lexeme);"]]}, "num_lines_added": 38, "num_lines_removed": 21}