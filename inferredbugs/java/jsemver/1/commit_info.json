{"hash": "d36d96155500af4d42dcf2fdbbbfdcd01cf9180e", "message": "Refactor VersionParser to improve error handling", "file_num_lines": 241, "diff_parsed": {"added": [[261, ""], [262, "        Character next = consumeNextCharacter(HYPHEN, PLUS, EOL);"], [263, "        if (HYPHEN.isMatchedBy(next)) {"], [264, "            preRelease = parsePreRelease();"], [265, "            next = consumeNextCharacter(PLUS, EOL);"], [266, "            if (PLUS.isMatchedBy(next)) {"], [267, "                build = parseBuild();"], [268, "            }"], [269, "        } else if (PLUS.isMatchedBy(next)) {"], [272, "        consumeNextCharacter(EOL);"], [289, "        consumeNextCharacter(DOT);"], [291, "        consumeNextCharacter(DOT);"], [312, "        ensureValidLookahead(DIGIT, LETTER, HYPHEN);"], [317, "                consumeNextCharacter(DOT);"], [318, "                continue;"], [320, "            break;"], [321, "        } while (true);"], [338, "        checkForEmptyIdentifier();"], [363, "        ensureValidLookahead(DIGIT, LETTER, HYPHEN);"], [368, "                consumeNextCharacter(DOT);"], [369, "                continue;"], [371, "            break;"], [372, "        } while (true);"], [389, "        checkForEmptyIdentifier();"], [434, "            sb.append(consumeNextCharacter(DIGIT, LETTER, HYPHEN));"], [454, "            sb.append(consumeNextCharacter(DIGIT));"], [484, "        if (la1 != null && la1 == '0' && DIGIT.isMatchedBy(la2)) {"], [498, "        Character la = chars.lookahead(1);"], [499, "        if (DOT.isMatchedBy(la) || PLUS.isMatchedBy(la) || EOL.isMatchedBy(la)) {"], [500, "            throw new ParseException("], [501, "                \"Identifiers MUST NOT be empty\","], [502, "                new UnexpectedCharacterException(la, DIGIT, LETTER, HYPHEN)"], [503, "            );"], [504, "        }"], [505, "    }"], [506, ""], [507, "    /**"], [508, "     * Tries to consume the next character in the stream."], [509, "     *"], [510, "     * @param expected the expected types of the next character"], [511, "     * @return the next character in the stream"], [512, "     * @throws UnexpectedCharacterException if the next element is of an unexpected type"], [513, "     */"], [514, "    private Character consumeNextCharacter(CharType... expected) {"], [515, "        try {"], [516, "            return chars.consume(expected);"], [517, "        } catch (UnexpectedElementException e) {"], [518, "            throw new UnexpectedCharacterException(e);"], [519, "        }"], [520, "    }"], [521, ""], [522, "    /**"], [523, "     * Checks if the next character in the stream is valid."], [524, "     *"], [525, "     * @param expected the expected types of the next character"], [526, "     * @throws UnexpectedCharacterException if the next element is not valid"], [527, "     */"], [528, "    private void ensureValidLookahead(CharType... expected) {"], [529, "        if (!chars.positiveLookahead(expected)) {"], [530, "            throw new UnexpectedCharacterException(chars.lookahead(1), expected);"]], "deleted": [[260, "        if (chars.positiveLookahead(HYPHEN)) {"], [261, "            chars.consume();"], [262, "            preRelease = parsePreRelease();"], [263, "        }"], [265, "        if (chars.positiveLookahead(PLUS)) {"], [266, "            chars.consume();"], [285, "        chars.consume(DOT);"], [287, "        chars.consume(DOT);"], [310, "            checkForEmptyIdentifier();"], [313, "                chars.consume(DOT);"], [315, "        } while (!chars.positiveLookahead(PLUS, EOL));"], [358, "            checkForEmptyIdentifier();"], [361, "                chars.consume(DOT);"], [363, "        } while (!chars.positiveLookahead(EOL));"], [424, "            sb.append(chars.consume(DIGIT, LETTER, HYPHEN));"], [444, "            sb.append(chars.consume(DIGIT));"], [474, "        if (la1 == '0' && DIGIT.isMatchedBy(la2)) {"], [488, "        if (DOT.isMatchedBy(chars.lookahead(1))) {"], [489, "            throw new ParseException(\"Identifiers MUST NOT be empty\");"]]}, "num_lines_added": 60, "num_lines_removed": 19}