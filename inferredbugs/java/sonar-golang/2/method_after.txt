 @Override
	public RulesProfile createProfile(ValidationMessages validation) {


		LOGGER.info("Golint Quality profile");  
		RulesProfile profile = RulesProfile.create("Golint Rules", GoLanguage.KEY);
		profile.setDefaultProfile(Boolean.TRUE);


		Properties prop=new Properties();
		
		try {
			prop.load(GoQualityProfile.class.getResourceAsStream(GoQualityProfile.PROFILE_PATH));

			for (Entry<Object, Object> e : prop.entrySet()) {
				if(Boolean.TRUE.equals(Boolean.parseBoolean((String) e.getValue()))){
					profile.activateRule(Rule.create(REPO_KEY,(String) e.getKey(),REPO_NAME), null);
				}
			}

		}catch (IOException e) {
			LOGGER.error((new StringBuilder()).append("Unable to load ").append(PROFILE_PATH).toString(), e);
		}

		LOGGER.info((new StringBuilder()).append("Profil generate: ").append(profile.getActiveRules()).toString());

		return profile;
	}