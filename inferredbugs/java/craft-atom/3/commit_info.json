{"hash": "3ea08cc81a2cfc84bbc7e2aa7e6be1be7be2addb", "message": "add- http protocol entity content type definition", "file_num_lines": 476, "diff_parsed": {"added": [[26, "import org.craft.atom.protocol.http.model.HttpContentType;"], [29, "import org.craft.atom.protocol.http.model.HttpHeaderType;"], [32, "import org.craft.atom.protocol.http.model.MimeType;"], [71, "\tprotected int trailerSize;"], [75, "\tprotected HttpContentType contentType;"], [92, "\t\tHttpHeader ceh = httpMessage.getFirstHeader(HttpHeaderType.CONTENT_ENCODING.getName());"], [281, "\t\t\tHttpHeader trailerHeader = httpMessage.getFirstHeader(HttpHeaderType.TRAILER.getName());"], [297, "\t\tint clen = Integer.parseInt(httpMessage.getFirstHeader(HttpHeaderType.CONTENT_LENGTH.getName()).getValue());"], [323, "\t\tif (httpMessage.getFirstHeader(HttpHeaderType.CONTENT_LENGTH.getName()) != null) {"], [325, "\t\t\tentity.setContentType(getContentType(httpMessage));"], [329, "\t\telse if (TRANSFER_ENCODING_CHUNKED.equals(httpMessage.getFirstHeader(HttpHeaderType.TRANSFER_ENCODING.getName()).getValue())) {"], [331, "\t\t\tentity.setContentType(getContentType(httpMessage));"], [437, "\tprotected HttpContentType getContentType(HttpMessage httpMessage) {"], [438, "\t\tif (contentType != null) {"], [439, "\t\t\treturn contentType;"], [442, "\t\t// No Content-Type header"], [443, "\t\tHttpHeader contentTypeHeader = httpMessage.getFirstHeader(HttpHeaderType.CONTENT_TYPE.getName());"], [445, "\t\t\tcontentType = new HttpContentType(charset);"], [446, "\t\t\treturn contentType;"], [449, "\t\t// value element is null, e.g. Content-Type:"], [452, "\t\t\tcontentType = new HttpContentType(charset);"], [453, "\t\t\treturn contentType;"], [456, "\t\t// e.g. Content-Type: text/plain; charset=utf-8"], [457, "\t\tHttpHeaderValueElement element = elements.get(0);"], [458, "\t\tCharset contentCharset = charset;"], [459, "\t\tString mimeType = element.getName();"], [460, "\t\tString charsetName = element.getParamValue(HttpConstants.CHARSET);"], [461, "\t\tif (charsetName != null) {"], [462, "\t\t\tcontentCharset = Charset.forName(charsetName);"], [464, "\t\tcontentType = new HttpContentType(MimeType.from(mimeType), contentCharset);"], [465, "\t\treturn contentType;"], [639, "\t\t\t\t.format(\"HttpDecoder [stateIndex=%s, state=%s, maxLineLength=%s, trailerSize=%s, header=%s, entity=%s, chunk=%s, contentType=%s, chunkExtName=%s, httpMessage=%s, defaultBufferSize=%s, buf=%s, splitIndex=%s, searchIndex=%s, maxSize=%s, charset=%s]\","], [640, "\t\t\t\t\t\tstateIndex, state, maxLineLength, trailerSize, header,"], [641, "\t\t\t\t\t\tentity, chunk, contentType, chunkExtName, httpMessage,"], [642, "\t\t\t\t\t\tdefaultBufferSize, buf, splitIndex, searchIndex,"], [643, "\t\t\t\t\t\tmaxSize, charset);"]], "deleted": [[29, "import org.craft.atom.protocol.http.model.HttpHeaders;"], [69, ""], [70, "\tprotected Charset contentCharset;"], [75, "\tprotected int trailerSize;"], [91, "\t\tHttpHeader ceh = httpMessage.getFirstHeader(HttpHeaders.CONTENT_ENCODING.getName());"], [280, "\t\t\tHttpHeader trailerHeader = httpMessage.getFirstHeader(HttpHeaders.TRAILER.getName());"], [296, "\t\tint clen = Integer.parseInt(httpMessage.getFirstHeader(HttpHeaders.CONTENT_LENGTH.getName()).getValue());"], [322, "\t\tif (httpMessage.getFirstHeader(HttpHeaders.CONTENT_LENGTH.getName()) != null) {"], [324, "\t\t\tentity.setCharset(getContentCharset(httpMessage));"], [328, "\t\telse if (TRANSFER_ENCODING_CHUNKED.equals(httpMessage.getFirstHeader(HttpHeaders.TRANSFER_ENCODING.getName()).getValue())) {"], [330, "\t\t\tentity.setCharset(getContentCharset(httpMessage));"], [436, "\tprotected Charset getContentCharset(HttpMessage httpMessage) {"], [437, "\t\tif (contentCharset != null) {"], [438, "\t\t\treturn contentCharset;"], [441, "\t\tHttpHeader contentTypeHeader = httpMessage.getFirstHeader(HttpHeaders.CONTENT_TYPE.getName());"], [443, "\t\t\tcontentCharset =  charset;"], [444, "\t\t\treturn contentCharset;"], [449, "\t\t\tcontentCharset = charset;"], [450, "\t\t\treturn contentCharset;"], [453, "\t\tString charsetName = elements.get(0).getParamValue(HttpConstants.CONTENT_TYPE_CHARSET);"], [454, "\t\tif (charsetName == null) {"], [455, "\t\t\tcontentCharset = charset;"], [456, "\t\t\treturn contentCharset;"], [458, ""], [459, "\t\tcontentCharset = Charset.forName(charsetName);"], [460, "\t\treturn contentCharset;"], [567, "\t\tcontentCharset = null;"], [635, "\t\t\t\t.format(\"HttpDecoder [stateIndex=%s, state=%s, maxLineLength=%s, contentCharset=%s, header=%s, entity=%s, chunk=%s, chunkExtName=%s, trailerSize=%s, httpMessage=%s, defaultBufferSize=%s, buf=%s, splitIndex=%s, searchIndex=%s, maxSize=%s, charset=%s]\","], [636, "\t\t\t\t\t\tstateIndex, state, maxLineLength, contentCharset,"], [637, "\t\t\t\t\t\theader, entity, chunk, chunkExtName, trailerSize,"], [638, "\t\t\t\t\t\thttpMessage, defaultBufferSize, buf, splitIndex,"], [639, "\t\t\t\t\t\tsearchIndex, maxSize, charset);"]]}, "num_lines_added": 36, "num_lines_removed": 32}