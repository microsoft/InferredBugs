{"hash": "6034bdbdb99ae28cece9d1aee07166126cce090f", "message": "#502 Compatible with 0.8.0", "file_num_lines": 433, "diff_parsed": {"added": [[27, "import com.alibaba.nacos.api.naming.utils.NamingUtils;"], [287, "        beatInfo.setServiceName(NamingUtils.getGroupedName(serviceName, groupName));"], [295, "        beatReactor.addBeatInfo(NamingUtils.getGroupedName(serviceName, groupName), beatInfo);"], [297, "        serverProxy.registerService(NamingUtils.getGroupedName(serviceName, groupName), groupName, instance);"], [317, "        beatReactor.removeBeatInfo(NamingUtils.getGroupedName(serviceName, groupName), ip, port);"], [318, "        serverProxy.deregisterService(NamingUtils.getGroupedName(serviceName, groupName), ip, port, clusterName);"], [362, "            serviceInfo = hostReactor.getServiceInfo(NamingUtils.getGroupedName(serviceName, groupName), StringUtils.join(clusters, \",\"));"], [364, "            serviceInfo = hostReactor.getServiceInfoDirectlyFromServer(NamingUtils.getGroupedName(serviceName, groupName), StringUtils.join(clusters, \",\"));"], [416, "            serviceInfo = hostReactor.getServiceInfo(NamingUtils.getGroupedName(serviceName, groupName), StringUtils.join(clusters, \",\"));"], [418, "            serviceInfo = hostReactor.getServiceInfoDirectlyFromServer(NamingUtils.getGroupedName(serviceName, groupName), StringUtils.join(clusters, \",\"));"], [464, "                hostReactor.getServiceInfo(NamingUtils.getGroupedName(serviceName, groupName), StringUtils.join(clusters, \",\")));"], [467, "                hostReactor.getServiceInfoDirectlyFromServer(NamingUtils.getGroupedName(serviceName, groupName), StringUtils.join(clusters, \",\")));"], [488, "        eventDispatcher.addListener(hostReactor.getServiceInfo(NamingUtils.getGroupedName(serviceName, groupName),"], [509, "        eventDispatcher.removeListener(NamingUtils.getGroupedName(serviceName, groupName), StringUtils.join(clusters, \",\"), listener);"]], "deleted": [[286, "        beatInfo.setServiceName(groupName + Constants.SERVICE_INFO_SPLITER + serviceName);"], [294, "        beatReactor.addBeatInfo(groupName + Constants.SERVICE_INFO_SPLITER + serviceName, beatInfo);"], [296, "        serverProxy.registerService(groupName + Constants.SERVICE_INFO_SPLITER + serviceName, groupName, instance);"], [316, "        beatReactor.removeBeatInfo(groupName + Constants.SERVICE_INFO_SPLITER + serviceName, ip, port);"], [317, "        serverProxy.deregisterService(groupName + Constants.SERVICE_INFO_SPLITER + serviceName, ip, port, clusterName);"], [361, "            serviceInfo = hostReactor.getServiceInfo(groupName + Constants.SERVICE_INFO_SPLITER + serviceName, StringUtils.join(clusters, \",\"));"], [363, "            serviceInfo = hostReactor.getServiceInfoDirectlyFromServer(groupName + Constants.SERVICE_INFO_SPLITER + serviceName, StringUtils.join(clusters, \",\"));"], [415, "            serviceInfo = hostReactor.getServiceInfo(groupName + Constants.SERVICE_INFO_SPLITER + serviceName, StringUtils.join(clusters, \",\"));"], [417, "            serviceInfo = hostReactor.getServiceInfoDirectlyFromServer(groupName + Constants.SERVICE_INFO_SPLITER + serviceName, StringUtils.join(clusters, \",\"));"], [463, "                hostReactor.getServiceInfo(groupName + Constants.SERVICE_INFO_SPLITER + serviceName, StringUtils.join(clusters, \",\")));"], [466, "                hostReactor.getServiceInfoDirectlyFromServer(groupName + Constants.SERVICE_INFO_SPLITER + serviceName, StringUtils.join(clusters, \",\")));"], [487, "        eventDispatcher.addListener(hostReactor.getServiceInfo(groupName + Constants.SERVICE_INFO_SPLITER + serviceName,"], [508, "        eventDispatcher.removeListener(groupName + Constants.SERVICE_INFO_SPLITER + serviceName, StringUtils.join(clusters, \",\"), listener);"]]}, "num_lines_added": 14, "num_lines_removed": 13}