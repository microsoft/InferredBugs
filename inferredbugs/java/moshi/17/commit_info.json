{"hash": "75b549f1ff8d5d5b8138c7568b406af72b9883f6", "message": "Implement promoteValueToName() for ObjectJsonWriter.\n\nThis was renamed from promoteNameToValue(). Also run the test on both types of\ncodecs and fix some implementation issues that uncovered.", "file_num_lines": 296, "diff_parsed": {"added": [[18, "import java.util.List;"], [20, "import org.junit.runner.RunWith;"], [21, "import org.junit.runners.Parameterized;"], [22, "import org.junit.runners.Parameterized.Parameter;"], [23, "import org.junit.runners.Parameterized.Parameters;"], [28, "@RunWith(Parameterized.class)"], [30, "  @Parameter public JsonCodecFactory factory;"], [31, ""], [32, "  @Parameters(name = \"{0}\")"], [33, "  public static List<Object[]> parameters() {"], [34, "    return JsonCodecFactory.factories();"], [35, "  }"], [36, ""], [38, "    JsonReader reader = factory.newReader(\"{\\\"a\\\":1}\");"], [52, "    JsonReader reader = factory.newReader(\"{\\\"5\\\":1}\");"], [66, "    JsonReader reader = factory.newReader(\"{\\\"5.5\\\":1}\");"], [80, "    JsonReader reader = factory.newReader(\"{\\\"true\\\":1}\");"], [89, "      assertThat(e.getMessage()).isIn("], [90, "          \"Expected BOOLEAN but was true, a java.lang.String, at path $.true\","], [91, "          \"Expected a boolean but was STRING at path $.true\");"], [102, "    JsonReader reader = factory.newReader(\"{\\\"5\\\":1}\");"], [116, "    JsonReader reader = factory.newReader(\"{\\\"null\\\":1}\");"], [125, "      assertThat(e.getMessage()).isIn("], [126, "          \"Expected NULL but was null, a java.lang.String, at path $.null\","], [127, "          \"Expected null but was STRING at path $.null\");"], [138, "    JsonReader reader = factory.newReader(\"{\\\"a\\\":1,\\\"b\\\":2}\");"], [154, "    JsonReader reader = factory.newReader(\"{}\");"], [164, "    JsonReader reader = factory.newReader(\"[{},{\\\"a\\\":5}]\");"], [179, "    JsonReader reader = factory.newReader(\"{5:1}\");"], [189, "    JsonReader reader = factory.newReader(\"{5:1}\");"], [199, "    JsonReader reader = factory.newReader(\"{5:1}\");"], [209, "    JsonWriter writer = factory.newWriter();"], [211, "    writer.promoteValueToName();"], [218, "    assertThat(factory.json()).isEqualTo(\"{\\\"a\\\":1}\");"], [222, "    JsonWriter writer = factory.newWriter();"], [224, "    writer.promoteValueToName();"], [231, "    assertThat(factory.json()).isEqualTo(\"{\\\"5\\\":1}\");"], [235, "    JsonWriter writer = factory.newWriter();"], [237, "    writer.promoteValueToName();"], [244, "    assertThat(factory.json()).isEqualTo(\"{\\\"5.5\\\":1}\");"], [248, "    JsonWriter writer = factory.newWriter();"], [250, "    writer.promoteValueToName();"], [262, "    assertThat(factory.json()).isEqualTo(\"{\\\"true\\\":1}\");"], [266, "    JsonWriter writer = factory.newWriter();"], [268, "    writer.promoteValueToName();"], [275, "    assertThat(factory.json()).isEqualTo(\"{\\\"5\\\":1}\");"], [279, "    JsonWriter writer = factory.newWriter();"], [281, "    writer.promoteValueToName();"], [294, "    assertThat(factory.json()).isEqualTo(\"{\\\"null\\\":1}\");"], [298, "    JsonWriter writer = factory.newWriter();"], [302, "    writer.promoteValueToName();"], [309, "    assertThat(factory.json()).isEqualTo(\"{\\\"a\\\":1,\\\"b\\\":2}\");"], [313, "    JsonWriter writer = factory.newWriter();"], [315, "    writer.promoteValueToName();"], [319, "    assertThat(factory.json()).isEqualTo(\"{}\");"], [323, "    JsonWriter writer = factory.newWriter();"], [326, "    writer.promoteValueToName();"]], "deleted": [[18, "import okio.Buffer;"], [26, "    JsonReader reader = newReader(\"{\\\"a\\\":1}\");"], [40, "    JsonReader reader = newReader(\"{\\\"5\\\":1}\");"], [54, "    JsonReader reader = newReader(\"{\\\"5.5\\\":1}\");"], [68, "    JsonReader reader = newReader(\"{\\\"true\\\":1}\");"], [77, "      assertThat(e).hasMessage(\"Expected a boolean but was STRING at path $.true\");"], [88, "    JsonReader reader = newReader(\"{\\\"5\\\":1}\");"], [102, "    JsonReader reader = newReader(\"{\\\"null\\\":1}\");"], [111, "      assertThat(e).hasMessage(\"Expected null but was STRING at path $.null\");"], [122, "    JsonReader reader = newReader(\"{\\\"a\\\":1,\\\"b\\\":2}\");"], [138, "    JsonReader reader = newReader(\"{}\");"], [148, "    JsonReader reader = newReader(\"[{},{\\\"a\\\":5}]\");"], [163, "    JsonReader reader = newReader(\"{5:1}\");"], [173, "    JsonReader reader = newReader(\"{5:1}\");"], [183, "    JsonReader reader = newReader(\"{5:1}\");"], [192, "  private JsonReader newReader(String s) {"], [193, "    return JsonReader.of(new Buffer().writeUtf8(s));"], [194, "  }"], [195, ""], [197, "    Buffer buffer = new Buffer();"], [198, "    JsonWriter writer = JsonWriter.of(buffer);"], [200, "    writer.promoteNameToValue();"], [207, "    assertThat(buffer.readUtf8()).isEqualTo(\"{\\\"a\\\":1}\");"], [211, "    Buffer buffer = new Buffer();"], [212, "    JsonWriter writer = JsonWriter.of(buffer);"], [214, "    writer.promoteNameToValue();"], [221, "    assertThat(buffer.readUtf8()).isEqualTo(\"{\\\"5\\\":1}\");"], [225, "    Buffer buffer = new Buffer();"], [226, "    JsonWriter writer = JsonWriter.of(buffer);"], [228, "    writer.promoteNameToValue();"], [235, "    assertThat(buffer.readUtf8()).isEqualTo(\"{\\\"5.5\\\":1}\");"], [239, "    Buffer buffer = new Buffer();"], [240, "    JsonWriter writer = JsonWriter.of(buffer);"], [242, "    writer.promoteNameToValue();"], [254, "    assertThat(buffer.readUtf8()).isEqualTo(\"{\\\"true\\\":1}\");"], [258, "    Buffer buffer = new Buffer();"], [259, "    JsonWriter writer = JsonWriter.of(buffer);"], [261, "    writer.promoteNameToValue();"], [268, "    assertThat(buffer.readUtf8()).isEqualTo(\"{\\\"5\\\":1}\");"], [272, "    Buffer buffer = new Buffer();"], [273, "    JsonWriter writer = JsonWriter.of(buffer);"], [275, "    writer.promoteNameToValue();"], [288, "    assertThat(buffer.readUtf8()).isEqualTo(\"{\\\"null\\\":1}\");"], [292, "    Buffer buffer = new Buffer();"], [293, "    JsonWriter writer = JsonWriter.of(buffer);"], [297, "    writer.promoteNameToValue();"], [304, "    assertThat(buffer.readUtf8()).isEqualTo(\"{\\\"a\\\":1,\\\"b\\\":2}\");"], [308, "    Buffer buffer = new Buffer();"], [309, "    JsonWriter writer = JsonWriter.of(buffer);"], [311, "    writer.promoteNameToValue();"], [315, "    assertThat(buffer.readUtf8()).isEqualTo(\"{}\");"], [319, "    Buffer buffer = new Buffer();"], [320, "    JsonWriter writer = JsonWriter.of(buffer);"], [323, "    writer.promoteNameToValue();"]]}, "num_lines_added": 57, "num_lines_removed": 54}