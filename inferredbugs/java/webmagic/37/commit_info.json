{"hash": "03d26c169b63e8462940d1d181862f1eeed640fb", "message": "Enhance auto charset detect #126\n1. Only read from content once to fix stream closed exception\n2. invite moco as server test", "file_num_lines": 99, "diff_parsed": {"added": [[3, "import com.github.dreamhead.moco.*;"], [4, "import com.github.dreamhead.moco.Runnable;"], [5, "import org.apache.commons.io.IOUtils;"], [19, "import static com.github.dreamhead.moco.Moco.*;"], [64, "    public void testGetHtmlCharset() throws Exception {"], [65, "        HttpServer server = httpserver(12306);"], [66, "        server.get(by(uri(\"/header\"))).response(header(\"Content-Type\", \"text/html; charset=gbk\"));"], [67, "        server.get(by(uri(\"/meta4\"))).response(with(text(\"<html>\\n\" +"], [68, "                \"  <head>\\n\" +"], [69, "                \"    <meta charset='gbk'/>\\n\" +"], [70, "                \"  </head>\\n\" +"], [71, "                \"  <body></body>\\n\" +"], [72, "                \"</html>\")),header(\"Content-Type\",\"\"));"], [73, "        server.get(by(uri(\"/meta5\"))).response(with(text(\"<html>\\n\" +"], [74, "                \"  <head>\\n\" +"], [75, "                \"    <meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=gbk\\\" />\\n\" +"], [76, "                \"  </head>\\n\" +"], [77, "                \"  <body></body>\\n\" +"], [78, "                \"</html>\")),header(\"Content-Type\",\"\"));"], [79, "        Runner.running(server, new Runnable() {"], [80, "            @Override"], [81, "            public void run() {"], [82, "                String charset = getCharsetByUrl(\"http://127.0.0.1:12306/header\");"], [83, "                assertEquals(charset, \"gbk\");"], [84, "                charset = getCharsetByUrl(\"http://127.0.0.1:12306/meta4\");"], [85, "                assertEquals(charset, \"gbk\");"], [86, "                charset = getCharsetByUrl(\"http://127.0.0.1:12306/meta5\");"], [87, "                assertEquals(charset, \"gbk\");"], [88, "            }"], [90, "            private String getCharsetByUrl(String url) {"], [91, "                HttpClientDownloader downloader = new HttpClientDownloader();"], [92, "                Site site = Site.me();"], [93, "                CloseableHttpClient httpClient = new HttpClientGenerator().getClient(site);"], [94, "                // encoding in http header Content-Type"], [95, "                Request requestGBK = new Request(url);"], [96, "                CloseableHttpResponse httpResponse = null;"], [97, "                try {"], [98, "                    httpResponse = httpClient.execute(downloader.getHttpUriRequest(requestGBK, site, null));"], [99, "                } catch (IOException e) {"], [100, "                    e.printStackTrace();"], [101, "                }"], [102, "                String charset = null;"], [103, "                try {"], [104, "                    byte[] contentBytes = IOUtils.toByteArray(httpResponse.getEntity().getContent());"], [105, "                    charset = downloader.getHtmlCharset(httpResponse,contentBytes);"], [106, "                } catch (IOException e) {"], [107, "                    e.printStackTrace();"], [108, "                }"], [109, "                return charset;"], [110, "            }"], [111, "        });"]], "deleted": [[60, "    public void testGetHtmlCharset() throws IOException {"], [61, "        HttpClientDownloader downloader = new HttpClientDownloader();"], [62, "        Site site = Site.me();"], [63, "        CloseableHttpClient httpClient = new HttpClientGenerator().getClient(site);"], [64, "        // encoding in http header Content-Type"], [65, "        Request requestGBK = new Request(\"http://sports.163.com/14/0514/13/9S7986F300051CA1.html#p=9RGQDGGH0AI90005\");"], [66, "        CloseableHttpResponse httpResponse = httpClient.execute(downloader.getHttpUriRequest(requestGBK, site, null));"], [67, "        String charset = downloader.getHtmlCharset(httpResponse);"], [68, "        assertEquals(charset, \"GBK\");"], [70, "        // encoding in meta"], [71, "        Request requestUTF_8 = new Request(\"http://preshing.com/\");"], [72, "        httpResponse = httpClient.execute(downloader.getHttpUriRequest(requestUTF_8, site, null));"], [73, "        charset = downloader.getHtmlCharset(httpResponse);"], [74, "        assertEquals(charset, \"utf-8\");"]]}, "num_lines_added": 51, "num_lines_removed": 14}