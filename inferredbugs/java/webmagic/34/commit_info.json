{"hash": "ec446277b139411112dc065281c5bb0417e06c32", "message": "some refactor in httpclientdownloader", "file_num_lines": 129, "diff_parsed": {"added": [[10, "import org.apache.http.client.methods.HttpUriRequest;"], [81, "            HttpUriRequest httpUriRequest = getHttpUriRequest(request, site, headers);"], [82, "            httpResponse = getHttpClient(site).execute(httpUriRequest);"], [84, "            if (statusAccept(acceptStatCode, statusCode)) {"], [113, "    @Override"], [114, "    public void setThread(int thread) {"], [115, "        httpClientGenerator.setPoolSize(thread);"], [116, "    }"], [117, ""], [118, "    protected boolean statusAccept(Set<Integer> acceptStatCode, int statusCode) {"], [119, "        return acceptStatCode.contains(statusCode);"], [120, "    }"], [121, ""], [122, "    protected HttpUriRequest getHttpUriRequest(Request request, Site site, Map<String, String> headers) {"], [123, "        RequestBuilder requestBuilder = RequestBuilder.get().setUri(request.getUrl());"], [124, "        if (headers != null) {"], [125, "            for (Map.Entry<String, String> headerEntry : headers.entrySet()) {"], [126, "                requestBuilder.addHeader(headerEntry.getKey(), headerEntry.getValue());"], [127, "            }"], [128, "        }"], [129, "        RequestConfig.Builder requestConfigBuilder = RequestConfig.custom()"], [130, "                .setConnectionRequestTimeout(site.getTimeOut())"], [131, "                .setSocketTimeout(site.getTimeOut())"], [132, "                .setConnectTimeout(site.getTimeOut())"], [133, "                .setCookieSpec(CookieSpecs.BEST_MATCH);"], [134, "        if (site != null && site.getHttpProxy() != null) {"], [135, "            requestConfigBuilder.setProxy(site.getHttpProxy());"], [136, "        }"], [137, "        requestBuilder.setConfig(requestConfigBuilder.build());"], [138, "        return requestBuilder.build();"], [139, "    }"], [140, ""]], "deleted": [[78, "        RequestBuilder requestBuilder = RequestBuilder.get().setUri(request.getUrl());"], [79, "        if (headers != null) {"], [80, "            for (Map.Entry<String, String> headerEntry : headers.entrySet()) {"], [81, "                requestBuilder.addHeader(headerEntry.getKey(), headerEntry.getValue());"], [82, "            }"], [83, "        }"], [84, "        RequestConfig.Builder requestConfigBuilder = RequestConfig.custom()"], [85, "                .setConnectionRequestTimeout(site.getTimeOut())"], [86, "                .setSocketTimeout(site.getTimeOut())"], [87, "                .setConnectTimeout(site.getTimeOut())"], [88, "                .setCookieSpec(CookieSpecs.BEST_MATCH);"], [89, "        if (site != null && site.getHttpProxy() != null) {"], [90, "            requestConfigBuilder.setProxy(site.getHttpProxy());"], [91, "        }"], [92, "        requestBuilder.setConfig(requestConfigBuilder.build());"], [95, "            httpResponse = getHttpClient(site).execute(requestBuilder.build());"], [97, "            if (acceptStatCode.contains(statusCode)) {"], [135, ""], [136, "    @Override"], [137, "    public void setThread(int thread) {"], [138, "        httpClientGenerator.setPoolSize(thread);"], [139, "    }"]]}, "num_lines_added": 32, "num_lines_removed": 22}