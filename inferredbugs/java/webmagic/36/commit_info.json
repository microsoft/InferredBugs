{"hash": "018061d2cdf26db11c3bb6804f39a84cf26a47b6", "message": "fix error in thread pool", "file_num_lines": 70, "diff_parsed": {"added": [[5, "import java.util.concurrent.atomic.AtomicInteger;"], [17, "    private AtomicInteger threadAlive = new AtomicInteger();"], [38, "        return threadAlive.get();"], [47, "    public void execute(final Runnable runnable) {"], [49, ""], [50, "            if (threadAlive.get() >= threadNum) {"], [51, "                reentrantLock.lock();"], [52, "                while (threadAlive.get() >= threadNum) {"], [53, "                    try {"], [54, "                        condition.await();"], [55, "                    } catch (InterruptedException e) {"], [56, "                    }"], [59, "            threadAlive.incrementAndGet();"], [60, "            executorService.execute(new Runnable() {"], [61, "                @Override"], [62, "                public void run() {"], [63, "                    try {"], [64, "                        runnable.run();"], [65, "                    } finally {"], [66, "                        try {"], [67, "                            reentrantLock.lock();"], [68, "                            threadAlive.decrementAndGet();"], [69, "                            condition.signal();"], [70, "                        } finally {"], [71, "                            reentrantLock.unlock();"], [72, "                        }"], [73, "                    }"], [74, "                }"], [75, "            });"], [77, "            if (reentrantLock.isLocked()) {"], [78, "                reentrantLock.unlock();"], [79, "            }"]], "deleted": [[16, "    private int threadAlive;"], [37, "        return threadAlive;"], [46, "    public void execute(Runnable runnable) {"], [48, "            reentrantLock.lock();"], [49, "            while (threadAlive >= threadNum) {"], [50, "                try {"], [51, "                    condition.await();"], [52, "                } catch (InterruptedException e) {"], [55, "            threadAlive++;"], [56, "            System.out.println(threadAlive);"], [57, "            executorService.execute(runnable);"], [59, "            threadAlive--;"], [60, "            condition.signal();"], [61, "            reentrantLock.unlock();"]]}, "num_lines_added": 32, "num_lines_removed": 14}