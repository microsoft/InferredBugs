{"hash": "76a6d296d0e15093829dc3709501de04eda49f34", "message": "extend placeholder to apply to attributes as well", "file_num_lines": 110, "diff_parsed": {"added": [[16, "import java.util.Map;"], [19, "import javax.xml.namespace.QName;"], [25, "import org.xmlunit.util.Nodes;"], [83, "        // two versions of \"test document has no text-like node but control document has\""], [102, "        // comparing textual content of attributes"], [103, "        } else if (comparison.getType() == ComparisonType.ATTR_VALUE) {"], [104, "            return evaluateConsideringPlaceholders((String) controlDetails.getValue(),"], [105, "                (String) testDetails.getValue(), outcome);"], [106, ""], [107, "        // two versions of \"test document has no attribute but control document has\""], [108, "        } else if (comparison.getType() == ComparisonType.ELEMENT_NUM_ATTRIBUTES) {"], [109, "            Map<QName, String> controlAttrs = Nodes.getAttributes(controlTarget);"], [110, "            Map<QName, String> testAttrs = Nodes.getAttributes(testTarget);"], [111, ""], [112, "            int cAttrsMatched = 0;"], [113, "            for (Map.Entry<QName, String> cAttr : controlAttrs.entrySet()) {"], [114, "                String testValue = testAttrs.get(cAttr.getKey());"], [115, "                if (testValue == null) {"], [116, "                    ComparisonResult o = evaluateConsideringPlaceholders(cAttr.getValue(), null, outcome);"], [117, "                    if (o != ComparisonResult.EQUAL) {"], [118, "                        return outcome;"], [119, "                    }"], [120, "                } else {"], [121, "                    cAttrsMatched++;"], [122, "                }"], [123, "            }"], [124, "            if (cAttrsMatched != testAttrs.size()) {"], [125, "                // there are unmatched test attributes"], [126, "                return outcome;"], [127, "            }"], [128, "            return ComparisonResult.EQUAL;"], [129, ""], [130, "        } else if (comparison.getType() == ComparisonType.ATTR_NAME_LOOKUP && controlTarget != null"], [131, "            && controlDetails.getValue() != null) {"], [132, "            String controlAttrValue = Nodes.getAttributes(controlTarget).get((QName) controlDetails.getValue());"], [133, "            return evaluateConsideringPlaceholders(controlAttrValue, null, outcome);"], [134, ""]], "deleted": [[18, ""], [81, "        // two possible cases of \"test document has no text-like node but control document has\""]]}, "num_lines_added": 37, "num_lines_removed": 2}