{"hash": "c5f7381121e205714d6271291f7dad7ad2d3c3b7", "message": "Remove upsert methods", "file_num_lines": 63, "diff_parsed": {"added": [[46, "    @Deprecated"], [47, "    public void canUpdateMultiDeprecated() throws Exception {"], [58, "    }"], [59, ""], [60, "    @Test"], [61, "    public void canUpdateMulti() throws Exception {"], [62, "        /* given */"], [63, "        collection.save(new People(\"John\"));"], [64, "        collection.save(new People(\"John\"));"], [65, ""], [66, "        /* when */"], [67, "        WriteResult writeResult = collection.update(\"{name:'John'}\").multi().with(\"{$unset:{name:1}}\");"], [68, ""], [69, "        /* then */"], [70, "        Iterator<People> peoples = collection.find(\"{name:{$exists:true}}\").as(People.class).iterator();"], [71, "        assertThat(peoples).hasSize(0);"], [82, "        WriteResult writeResult = collection.update(\"{name:'John'}\").multi().concern(WriteConcern.SAFE).with(\"{$unset:{name:1}}\");"], [95, "        WriteResult writeResult = collection.update(\"{}\").upsert().with(\"{$set:{name:'John'}}\");"], [107, "        WriteResult writeResult = collection.update(\"{}\").upsert().concern(WriteConcern.SAFE).with(\"{$set:{name:'John'}}\");"], [113, "        assertThat(writeResult.getLastConcern()).isEqualTo(WriteConcern.SAFE);"]], "deleted": [[30, "import static org.mockito.Mockito.spy;"], [31, "import static org.mockito.Mockito.verify;"], [48, "    public void canUpdateMulti() throws Exception {"], [69, "        WriteResult writeResult = collection.update(\"{name:'John'}\", \"{$unset:{name:1}}\", WriteConcern.SAFE);"], [82, "        WriteResult writeResult = collection.upsert(\"{}\", \"{$set:{name:'John'}}\");"], [93, "        WriteConcern writeConcern = spy(WriteConcern.SAFE);"], [94, ""], [96, "        WriteResult writeResult = collection.upsert(\"{}\", \"{$set:{name:'John'}}\", writeConcern);"], [102, "        verify(writeConcern).callGetLastError();"]]}, "num_lines_added": 20, "num_lines_removed": 9}