{"hash": "4f6155c45ac7fa36a34d5ee3aa477f1a0e4f7d67", "message": "add NioUtil", "file_num_lines": 507, "diff_parsed": {"added": [[46, "public class IoUtil extends NioUtil{"], [192, "\t\t\treturn copy(inChannel, outChannel);"], [354, "\t\treturn StrUtil.str(readBytes(in), charset);"], [384, "\t * @param reader  {@link Reader}"], [398, "\t\t} finally {"], [399, "\t\t\tif (isClose) {"], [427, "\t\tfinal InputStream availableStream = toAvailableStream(in);"], [428, "\t\ttry{"], [429, "\t\t\tfinal int available = availableStream.available();"], [430, "\t\t\tif(available > 0){"], [431, "\t\t\t\tbyte[] result = new byte[available];"], [432, "\t\t\t\t//noinspection ResultOfMethodCallIgnored"], [433, "\t\t\t\tavailableStream.read(result);"], [434, "\t\t\t\treturn result;"], [435, "\t\t\t}"], [436, "\t\t} catch (IOException e){"], [437, "\t\t\tthrow new IORuntimeException(e);"], [439, "\t\treturn new byte[0];"], [804, "\t * \u5c06\u6307\u5b9a{@link InputStream} \u8f6c\u6362\u4e3a{@link InputStream#available()}\u65b9\u6cd5\u53ef\u7528\u7684\u6d41\u3002<br>"], [805, "\t * \u5728Socket\u901a\u4fe1\u6d41\u4e2d\uff0c\u670d\u52a1\u7aef\u672a\u8fd4\u56de\u6570\u636e\u60c5\u51b5\u4e0b{@link InputStream#available()}\u65b9\u6cd5\u59cb\u7ec8\u4e3a{@code 0}<br>"], [806, "\t * \u56e0\u6b64\uff0c\u5728\u8bfb\u53d6\u524d\u9700\u8981\u8c03\u7528{@link InputStream#read()}\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\uff08\u672a\u8fd4\u56de\u4f1a\u963b\u585e\uff09\uff0c\u4e00\u65e6\u8bfb\u53d6\u5230\u4e86\uff0c{@link InputStream#available()}\u65b9\u6cd5\u5c31\u6b63\u5e38\u4e86\u3002<br>"], [807, "\t * \u6b64\u65b9\u6cd5\u8fd4\u56de\u5bf9\u8c61\u7684\u89c4\u5219\u4e3a\uff1a"], [808, "\t *"], [809, "\t * <ul>"], [810, "\t *     <li>FileInputStream \u8fd4\u56de\u539f\u5bf9\u8c61\uff0c\u56e0\u4e3a\u6587\u4ef6\u6d41\u7684available\u65b9\u6cd5\u672c\u8eab\u53ef\u7528</li>"], [811, "\t *     <li>\u5176\u5b83InputStream \u8fd4\u56dePushbackInputStream</li>"], [812, "\t * </ul>"], [813, "\t *"], [814, "\t * @param in \u88ab\u8f6c\u6362\u7684\u6d41"], [815, "\t * @return \u8f6c\u6362\u540e\u7684\u6d41\uff0c\u53ef\u80fd\u4e3a{@link PushbackInputStream}"], [816, "\t * @since 5.5.3"], [817, "\t */"], [818, "\tpublic static InputStream toAvailableStream(InputStream in) {"], [819, "\t\tif(in instanceof FileInputStream){"], [820, "\t\t\t// FileInputStream\u672c\u8eab\u652f\u6301available\u65b9\u6cd5\u3002"], [821, "\t\t\treturn in;"], [822, "\t\t}"], [823, ""], [824, "\t\tfinal PushbackInputStream pushbackInputStream = toPushbackStream(in, 1);"], [825, "\t\ttry {"], [826, "\t\t\tfinal int available = pushbackInputStream.available();"], [827, "\t\t\tif (available <= 0) {"], [828, "\t\t\t\t//\u6b64\u64cd\u4f5c\u4f1a\u963b\u585e\uff0c\u76f4\u5230\u6709\u6570\u636e\u88ab\u8bfb\u5230"], [829, "\t\t\t\tint b = pushbackInputStream.read();"], [830, "\t\t\t\tpushbackInputStream.unread(b);"], [831, "\t\t\t}"], [832, "\t\t} catch (IOException e) {"], [833, "\t\t\tthrow new IORuntimeException(e);"], [834, "\t\t}"], [835, ""], [836, "\t\treturn pushbackInputStream;"], [837, "\t}"], [838, ""], [839, "\t/**"]], "deleted": [[31, "import java.nio.ByteBuffer;"], [33, "import java.nio.MappedByteBuffer;"], [34, "import java.nio.channels.Channels;"], [36, "import java.nio.channels.ReadableByteChannel;"], [37, "import java.nio.channels.WritableByteChannel;"], [51, "public class IoUtil {"], [52, ""], [53, "\t/**"], [54, "\t * \u9ed8\u8ba4\u7f13\u5b58\u5927\u5c0f 8192"], [55, "\t */"], [56, "\tpublic static final int DEFAULT_BUFFER_SIZE = 2 << 12;"], [57, "\t/**"], [58, "\t * \u9ed8\u8ba4\u4e2d\u7b49\u7f13\u5b58\u5927\u5c0f 16384"], [59, "\t */"], [60, "\tpublic static final int DEFAULT_MIDDLE_BUFFER_SIZE = 2 << 13;"], [61, "\t/**"], [62, "\t * \u9ed8\u8ba4\u5927\u7f13\u5b58\u5927\u5c0f 32768"], [63, "\t */"], [64, "\tpublic static final int DEFAULT_LARGE_BUFFER_SIZE = 2 << 14;"], [65, ""], [66, "\t/**"], [67, "\t * \u6570\u636e\u6d41\u672b\u5c3e"], [68, "\t */"], [69, "\tpublic static final int EOF = -1;"], [199, "\t * \u62f7\u8d1d\u6d41 thanks to: https://github.com/venusdrogon/feilong-io/blob/master/src/main/java/com/feilong/io/IOWriteUtil.java<br>"], [200, "\t * \u672c\u65b9\u6cd5\u4e0d\u4f1a\u5173\u95ed\u6d41"], [201, "\t *"], [202, "\t * @param in             \u8f93\u5165\u6d41"], [203, "\t * @param out            \u8f93\u51fa\u6d41"], [204, "\t * @param bufferSize     \u7f13\u5b58\u5927\u5c0f"], [205, "\t * @param streamProgress \u8fdb\u5ea6\u6761"], [206, "\t * @return \u4f20\u8f93\u7684byte\u6570"], [207, "\t * @throws IORuntimeException IO\u5f02\u5e38"], [208, "\t */"], [209, "\tpublic static long copyByNIO(InputStream in, OutputStream out, int bufferSize, StreamProgress streamProgress) throws IORuntimeException {"], [210, "\t\treturn copy(Channels.newChannel(in), Channels.newChannel(out), bufferSize, streamProgress);"], [211, "\t}"], [212, ""], [213, "\t/**"], [230, "\t\t\treturn inChannel.transferTo(0, inChannel.size(), outChannel);"], [231, "\t\t} catch (IOException e) {"], [232, "\t\t\tthrow new IORuntimeException(e);"], [239, "\t/**"], [240, "\t * \u62f7\u8d1d\u6d41\uff0c\u4f7f\u7528NIO\uff0c\u4e0d\u4f1a\u5173\u95ed\u6d41"], [241, "\t *"], [242, "\t * @param in  {@link ReadableByteChannel}"], [243, "\t * @param out {@link WritableByteChannel}"], [244, "\t * @return \u62f7\u8d1d\u7684\u5b57\u8282\u6570"], [245, "\t * @throws IORuntimeException IO\u5f02\u5e38"], [246, "\t * @since 4.5.0"], [247, "\t */"], [248, "\tpublic static long copy(ReadableByteChannel in, WritableByteChannel out) throws IORuntimeException {"], [249, "\t\treturn copy(in, out, DEFAULT_BUFFER_SIZE);"], [250, "\t}"], [251, ""], [252, "\t/**"], [253, "\t * \u62f7\u8d1d\u6d41\uff0c\u4f7f\u7528NIO\uff0c\u4e0d\u4f1a\u5173\u95ed\u6d41"], [254, "\t *"], [255, "\t * @param in         {@link ReadableByteChannel}"], [256, "\t * @param out        {@link WritableByteChannel}"], [257, "\t * @param bufferSize \u7f13\u51b2\u5927\u5c0f\uff0c\u5982\u679c\u5c0f\u4e8e\u7b49\u4e8e0\uff0c\u4f7f\u7528\u9ed8\u8ba4"], [258, "\t * @return \u62f7\u8d1d\u7684\u5b57\u8282\u6570"], [259, "\t * @throws IORuntimeException IO\u5f02\u5e38"], [260, "\t * @since 4.5.0"], [261, "\t */"], [262, "\tpublic static long copy(ReadableByteChannel in, WritableByteChannel out, int bufferSize) throws IORuntimeException {"], [263, "\t\treturn copy(in, out, bufferSize, null);"], [264, "\t}"], [265, ""], [266, "\t/**"], [267, "\t * \u62f7\u8d1d\u6d41\uff0c\u4f7f\u7528NIO\uff0c\u4e0d\u4f1a\u5173\u95ed\u6d41"], [268, "\t *"], [269, "\t * @param in             {@link ReadableByteChannel}"], [270, "\t * @param out            {@link WritableByteChannel}"], [271, "\t * @param bufferSize     \u7f13\u51b2\u5927\u5c0f\uff0c\u5982\u679c\u5c0f\u4e8e\u7b49\u4e8e0\uff0c\u4f7f\u7528\u9ed8\u8ba4"], [272, "\t * @param streamProgress {@link StreamProgress}\u8fdb\u5ea6\u5904\u7406\u5668"], [273, "\t * @return \u62f7\u8d1d\u7684\u5b57\u8282\u6570"], [274, "\t * @throws IORuntimeException IO\u5f02\u5e38"], [275, "\t */"], [276, "\tpublic static long copy(ReadableByteChannel in, WritableByteChannel out, int bufferSize, StreamProgress streamProgress) throws IORuntimeException {"], [277, "\t\tAssert.notNull(in, \"InputStream is null !\");"], [278, "\t\tAssert.notNull(out, \"OutputStream is null !\");"], [279, ""], [280, "\t\tByteBuffer byteBuffer = ByteBuffer.allocate(bufferSize <= 0 ? DEFAULT_BUFFER_SIZE : bufferSize);"], [281, "\t\tlong size = 0;"], [282, "\t\tif (null != streamProgress) {"], [283, "\t\t\tstreamProgress.start();"], [284, "\t\t}"], [285, "\t\ttry {"], [286, "\t\t\twhile (in.read(byteBuffer) != EOF) {"], [287, "\t\t\t\tbyteBuffer.flip();// \u5199\u8f6c\u8bfb"], [288, "\t\t\t\tsize += out.write(byteBuffer);"], [289, "\t\t\t\tbyteBuffer.clear();"], [290, "\t\t\t\tif (null != streamProgress) {"], [291, "\t\t\t\t\tstreamProgress.progress(size);"], [292, "\t\t\t\t}"], [293, "\t\t\t}"], [294, "\t\t} catch (IOException e) {"], [295, "\t\t\tthrow new IORuntimeException(e);"], [296, "\t\t}"], [297, "\t\tif (null != streamProgress) {"], [298, "\t\t\tstreamProgress.finish();"], [299, "\t\t}"], [300, ""], [301, "\t\treturn size;"], [302, "\t}"], [458, "\t\tFastByteArrayOutputStream out = read(in);"], [459, "\t\treturn null == charset ? out.toString() : out.toString(charset);"], [460, "\t}"], [461, ""], [462, "\t/**"], [463, "\t * \u4ece\u6d41\u4e2d\u8bfb\u53d6\u5185\u5bb9\uff0c\u8bfb\u53d6\u5b8c\u6bd5\u540e\u5e76\u4e0d\u5173\u95ed\u6d41"], [464, "\t *"], [465, "\t * @param channel \u53ef\u8bfb\u901a\u9053\uff0c\u8bfb\u53d6\u5b8c\u6bd5\u540e\u5e76\u4e0d\u5173\u95ed\u901a\u9053"], [466, "\t * @param charset \u5b57\u7b26\u96c6"], [467, "\t * @return \u5185\u5bb9"], [468, "\t * @throws IORuntimeException IO\u5f02\u5e38"], [469, "\t * @since 4.5.0"], [470, "\t */"], [471, "\tpublic static String read(ReadableByteChannel channel, Charset charset) throws IORuntimeException {"], [472, "\t\tFastByteArrayOutputStream out = read(channel);"], [473, "\t\treturn null == charset ? out.toString() : out.toString(charset);"], [490, "\t * \u4ece\u6d41\u4e2d\u8bfb\u53d6\u5185\u5bb9\uff0c\u8bfb\u5230\u8f93\u51fa\u6d41\u4e2d"], [491, "\t *"], [492, "\t * @param channel \u53ef\u8bfb\u901a\u9053\uff0c\u8bfb\u53d6\u5b8c\u6bd5\u540e\u5e76\u4e0d\u5173\u95ed\u901a\u9053"], [493, "\t * @return \u8f93\u51fa\u6d41"], [494, "\t * @throws IORuntimeException IO\u5f02\u5e38"], [495, "\t */"], [496, "\tpublic static FastByteArrayOutputStream read(ReadableByteChannel channel) throws IORuntimeException {"], [497, "\t\tfinal FastByteArrayOutputStream out = new FastByteArrayOutputStream();"], [498, "\t\tcopy(channel, Channels.newChannel(out));"], [499, "\t\treturn out;"], [500, "\t}"], [501, ""], [502, "\t/**"], [516, "\t * @param reader {@link Reader}"], [530, "\t\t} finally{"], [531, "\t\t\tif(isClose){"], [539, "\t * \u4eceFileChannel\u4e2d\u8bfb\u53d6UTF-8\u7f16\u7801\u5185\u5bb9"], [540, "\t *"], [541, "\t * @param fileChannel \u6587\u4ef6\u7ba1\u9053"], [542, "\t * @return \u5185\u5bb9"], [543, "\t * @throws IORuntimeException IO\u5f02\u5e38"], [544, "\t */"], [545, "\tpublic static String readUtf8(FileChannel fileChannel) throws IORuntimeException {"], [546, "\t\treturn read(fileChannel, CharsetUtil.CHARSET_UTF_8);"], [547, "\t}"], [548, ""], [549, "\t/**"], [550, "\t * \u4eceFileChannel\u4e2d\u8bfb\u53d6\u5185\u5bb9\uff0c\u8bfb\u53d6\u5b8c\u6bd5\u540e\u5e76\u4e0d\u5173\u95edChannel"], [551, "\t *"], [552, "\t * @param fileChannel \u6587\u4ef6\u7ba1\u9053"], [553, "\t * @param charsetName \u5b57\u7b26\u96c6"], [554, "\t * @return \u5185\u5bb9"], [555, "\t * @throws IORuntimeException IO\u5f02\u5e38"], [556, "\t */"], [557, "\tpublic static String read(FileChannel fileChannel, String charsetName) throws IORuntimeException {"], [558, "\t\treturn read(fileChannel, CharsetUtil.charset(charsetName));"], [559, "\t}"], [560, ""], [561, "\t/**"], [562, "\t * \u4eceFileChannel\u4e2d\u8bfb\u53d6\u5185\u5bb9"], [563, "\t *"], [564, "\t * @param fileChannel \u6587\u4ef6\u7ba1\u9053"], [565, "\t * @param charset     \u5b57\u7b26\u96c6"], [566, "\t * @return \u5185\u5bb9"], [567, "\t * @throws IORuntimeException IO\u5f02\u5e38"], [568, "\t */"], [569, "\tpublic static String read(FileChannel fileChannel, Charset charset) throws IORuntimeException {"], [570, "\t\tMappedByteBuffer buffer;"], [571, "\t\ttry {"], [572, "\t\t\tbuffer = fileChannel.map(FileChannel.MapMode.READ_ONLY, 0, fileChannel.size()).load();"], [573, "\t\t} catch (IOException e) {"], [574, "\t\t\tthrow new IORuntimeException(e);"], [575, "\t\t}"], [576, "\t\treturn StrUtil.str(buffer, charset);"], [577, "\t}"], [578, ""], [579, "\t/**"], [600, "\t\tfinal FastByteArrayOutputStream out = new FastByteArrayOutputStream();"], [601, "\t\tcopy(in, out);"], [602, "\t\tif (isCloseStream) {"], [603, "\t\t\tclose(in);"], [605, "\t\treturn out.toByteArray();"], [1117, "\t * \u5173\u95ed<br>"], [1118, "\t * \u5173\u95ed\u5931\u8d25\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38"], [1119, "\t *"], [1120, "\t * @param closeable \u88ab\u5173\u95ed\u7684\u5bf9\u8c61"], [1121, "\t */"], [1122, "\tpublic static void close(AutoCloseable closeable) {"], [1123, "\t\tif (null != closeable) {"], [1124, "\t\t\ttry {"], [1125, "\t\t\t\tcloseable.close();"], [1126, "\t\t\t} catch (Exception e) {"], [1127, "\t\t\t\t// \u9759\u9ed8\u5173\u95ed"], [1128, "\t\t\t}"], [1129, "\t\t}"], [1130, "\t}"], [1131, ""], [1132, "\t/**"]]}, "num_lines_added": 54, "num_lines_removed": 200}