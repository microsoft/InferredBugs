{"hash": "0878e9503d46a304adb266492cf233e6464d330e", "message": "Polishing #222\n\n* SonarLint fixes:\r\nlocal var channel hides field channel\r\nReplace StringBuffer with StringBuilder because of local usage (no sync needed)\r\nAdd private constructors to utility classes\r\n* Multiple smaller SonarLint fixes", "file_num_lines": 417, "diff_parsed": {"added": [[312, "            int datagramsLength = messageBytes.length / maximumMessageSize;"], [315, "                datagramsLength++;"], [318, "            ByteBuffer targetBuffer = ByteBuffer.allocate(messageBytes.length + (datagramsLength * 12));"], [320, "            return sliceDatagrams(ByteBuffer.wrap(messageBytes), datagramsLength, targetBuffer);"], [338, "            int diagramsLength = tempBuffer.position() / maximumMessageSize;"], [341, "                diagramsLength++;"], [345, "            return sliceDatagrams((ByteBuffer) tempBuffer.flip(), diagramsLength, buffer);"], [454, "            throw new IllegalStateException();"]], "deleted": [[312, "            int datagrams_length = messageBytes.length / maximumMessageSize;"], [315, "                datagrams_length++;"], [318, "            ByteBuffer targetBuffer = ByteBuffer.allocate(messageBytes.length + (datagrams_length * 12));"], [320, "            return sliceDatagrams(ByteBuffer.wrap(messageBytes), datagrams_length, targetBuffer);"], [338, "            int diagrams_length = tempBuffer.position() / maximumMessageSize;"], [341, "                diagrams_length++;"], [345, "            return sliceDatagrams((ByteBuffer) tempBuffer.flip(), diagrams_length, buffer);"], [454, "            return null;"]]}, "num_lines_added": 8, "num_lines_removed": 8}