{"hash": "1c25aeec75b57d853f4e534085ff02d4eb119d85", "message": "Support for post and HTTP status codes.", "file_num_lines": 83, "diff_parsed": {"added": [[4, "import java.io.UnsupportedEncodingException;"], [5, "import java.lang.reflect.InvocationTargetException;"], [11, "import java.net.URLConnection;"], [12, "import java.util.regex.Pattern;"], [19, " * Resty is a small, convenient interface to talk to RESTful services. Its focus"], [20, " * is on simplicity and ease-of-use, often requiring only two lines of code to"], [21, " * access any web service. It supports chaining several requests which is very"], [22, " * useful in RESTful application employing HATEOS."], [24, " * Basic usage is very simple: Create a Resty instance, use authenticate methode"], [25, " * to add credentials, then call one of the content type specific methods. The"], [26, " * idea is that the method name will convey the expected content type you can"], [27, " * then operate on."], [29, " * Here is an example on how to use the geonames web service. It retrieves the"], [30, " * json object (see json.org for details) and gets the name of a place from the"], [31, " * zip code:"], [39, " * Resty supports complex path queries to navigate into a json object. This is"], [40, " * mainly used for extracting URIs to surf along a series of REST resources for"], [41, " * web services following the HATEOS paradigm."], [50, "\t\t// set up content handlers. note: this is not ideal as it might conflict"], [51, "\t\t// with existing content factories"], [56, ""], [60, ""], [61, "\t/**"], [62, "\t * Register this root URI for authentication. Whenever a URL is requested that"], [63, "\t * starts with this root, the credentials given are used for HTTP AUTH. Note"], [64, "\t * that currently authentication information is shared across all Resty"], [65, "\t * instances. This is due to the shortcomings of the java.net authentication"], [66, "\t * mechanism. This might change should Resty adopt HttpClient and is the"], [67, "\t * reason why this method is not a static one."], [69, "\t * @param aSite"], [70, "\t *          the root URI of the site"], [71, "\t * @param aLogin"], [72, "\t *          the login name"], [73, "\t * @param aPwd"], [74, "\t *          the password. The array will not be internally copied. Whenever"], [75, "\t *          you null it, the password is gone within Resty"], [84, ""], [85, "\t// public JSONResource json(Object object) throws IOException {"], [86, "\t// if (object instanceof String) {"], [87, "\t// return json((String)object);"], [88, "\t// } else if (object instanceof URI) {"], [89, "\t// return json((URI)object);"], [90, "\t// }"], [91, "\t// throw new IOException(\"Can't convert object to an URI:\" + object);"], [92, "\t// }"], [93, ""], [94, "\t/**"], [96, "\t *"], [97, "\t * @param string"], [98, "\t *          - the string to use as URI"], [105, "\t/**"], [106, "\t * GET a URI and parse the result as JSON. JSONObject, part of the json.org"], [107, "\t * libraries is used to represent the JSON."], [109, "\t * @param anUri"], [110, "\t *          the URI to request"], [115, "\tpublic JSONResource json(URI anUri) throws IOException {"], [116, "\t\treturn doGET(anUri, new JSONResource());"], [118, ""], [119, "\t/**"], [120, "\t * POST to a URI and parse the result as JSON"], [121, "\t *"], [122, "\t * @param anUri"], [123, "\t *          the URI to visit"], [124, "\t * @param requestContent"], [125, "\t *          the content to POST to the URI"], [126, "\t * @return"], [127, "\t * @throws IOException"], [128, "\t *           if uri is wrong or no connection could be made or for 10 zillion"], [129, "\t *           other reasons"], [130, "\t */"], [131, "\tpublic JSONResource json(URI anUri, Content requestContent) throws IOException {"], [132, "\t\treturn doPOST(anUri, requestContent, new JSONResource());"], [133, "\t}"], [134, ""], [135, "\t/** @see Resty#json(URI, Content) */"], [136, "\tpublic JSONResource json(String anUri, Content content) throws IOException {"], [137, "\t\treturn json(URI.create(anUri), content);"], [138, "\t}"], [139, ""], [140, "\tpublic PlainTextResource text(URI anUri) throws IOException {"], [141, "\t\treturn doGET(anUri, new PlainTextResource());"], [142, "\t}"], [143, ""], [144, "\tprotected <T extends AbstractResource> T doGET(URI anUri, T resource) throws IOException {"], [145, "\t\tURLConnection con = anUri.toURL().openConnection();"], [146, "\t\treturn fillResourceFromURL(con, resource);"], [147, "\t}"], [148, ""], [149, "\tprivate <T extends AbstractResource> T doPOST(URI anUri, Content requestContent, T resource)"], [150, "\t\t\tthrows IOException {"], [151, "\t\tURLConnection con = anUri.toURL().openConnection();"], [152, "\t\trequestContent.addContent(con);"], [153, "\t\treturn fillResourceFromURL(con, resource);"], [154, "\t}"], [155, ""], [156, "\t/**"], [157, "\t * Get the content from the URLConnection, create a Resource representing the"], [158, "\t * content and carry over some metadata like HTTP Result and location header."], [159, "\t *"], [160, "\t * @param <T extends AbstractResource> the resource that will be created and"], [161, "\t *        filled"], [162, "\t * @param con"], [163, "\t *          the URLConnection used to get the data"], [164, "\t * @param resourceClass"], [165, "\t *          the resource class to instantiate"], [166, "\t * @return the new resource"], [167, "\t * @throws IOException"], [168, "\t */"], [169, "\tprivate <T extends AbstractResource> T fillResourceFromURL(URLConnection con, T resource)"], [170, "\t\t\tthrows IOException {"], [171, "\t\tObject content = con.getContent();"], [172, "\t\tresource.setContent(content);"], [173, "\t\tresource.setURLConnection(con);"], [174, "\t\treturn resource;"], [175, "\t}"], [176, ""], [181, "\tpublic static Pattern match(String pattern) {"], [182, "\t\treturn Pattern.compile(pattern);"], [183, "\t}"], [184, ""], [185, "\tpublic static Content content(JSONObject someJson) {"], [186, "\t\tContent c = null;"], [187, "\t\ttry {"], [188, "\t\t\tc = new Content(\"application/json; charset=UTF-8\", someJson.toString().getBytes(\"UTF-8\"));"], [189, "\t\t} catch (UnsupportedEncodingException e) { /* UTF-8 is never unsupported */"], [190, "\t\t}"], [191, "\t\treturn c;"], [192, "\t}"], [193, ""], [194, "\tpublic static Content content(String somePlainText) {"], [195, "\t\tContent c = null;"], [196, "\t\ttry {"], [197, "\t\t\tc = new Content(\"text/plain; charset=UTF-8\", somePlainText.getBytes(\"UTF-8\"));"], [198, "\t\t} catch (UnsupportedEncodingException e) { /* UTF-8 is never unsupported */"], [199, "\t\t}"], [200, "\t\treturn c;"], [201, "\t}"]], "deleted": [[15, " * Resty is a small, convenient interface to talk to RESTful services."], [16, " * Its focus is on simplicity and ease-of-use, often requiring only two lines of code to access any web service."], [17, " * It supports chaining several requests which is very useful in RESTful application employing HATEOS."], [19, " * Basic usage is very simple: Create a Resty instance, use authenticate methode to add credentials, then call one of the content type specific methods."], [20, " * The idea is that the method name will convey the expected content type you can then operate on."], [22, " * Here is an example on how to use the geonames web service. It retrieves the json object (see json.org for details) and gets the name of a place from the zip code:"], [30, " * Resty supports complex path queries to navigate into a json object."], [31, " * This is mainly used for extracting URIs to surf along a series of REST resources for web services following the HATEOS paradigm."], [40, "\t\t// set up content handlers. note: this is not ideal as it might conflict with existing content factories"], [48, ""], [49, "\t/** Register this root URI for authentication. Whenever a URL is requested that starts with this root,"], [50, "\t * the credentials given are used for HTTP AUTH."], [51, "\t * Note that currently authentication information is shared across all Resty instances."], [52, "\t * This is due to the shortcomings of the java.net authentication mechanism."], [53, "\t * This might change should Resty adopt HttpClient and is the reason why this method is not a static one."], [55, "\t * @param aSite the root URI of the site"], [56, "\t * @param aLogin the login name"], [57, "\t * @param aPwd the password. The array will not be internally copied. Whenever you null it, the password is gone within Resty"], [66, ""], [67, "//\tpublic JSONResource json(Object object) throws IOException {"], [68, "//\t\tif (object instanceof String) {"], [69, "//\t\t\treturn json((String)object);"], [70, "//\t\t} else if (object instanceof URI) {"], [71, "//\t\t\treturn json((URI)object);"], [72, "//\t\t}"], [73, "//\t\tthrow new IOException(\"Can't convert object to an URI:\" + object);"], [74, "//\t}"], [75, ""], [76, "\t/**"], [78, "\t * @param string - the string to use as URI"], [85, "\t/** GET a URI and parse the result as JSON."], [86, "\t * JSONObject, part of the json.org libraries is used to represent the JSON."], [88, "\t * @param anUri the URI to request"], [93, "\tpublic JSONResource json(URI anUri) throws IOException, MalformedURLException {"], [94, "\t\tJSONObject json = JSONObject.class.cast(anUri.toURL().openConnection().getContent());"], [95, "\t\treturn new JSONResource(json);"], [97, ""], [102, ""]]}, "num_lines_added": 137, "num_lines_removed": 38}