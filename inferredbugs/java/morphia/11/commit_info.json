{"hash": "249bd0de290c659c7d3af8a522f8c2976b32da2d", "message": "update version field when inserting.  fixes #347", "file_num_lines": 1148, "diff_parsed": {"added": [[816, "        return insert(db.getCollection(kind), entities, wc);"], [825, "        return insert(getCollection(entities.iterator().next()), entities, wc);"], [829, "        //        return save(entities, wc);"], [836, "            list.add(toDbObject(involvedObjects, ent));"], [859, "    private <T> DBObject toDbObject(final Map<Object, DBObject> involvedObjects, final T ent) {"], [860, "        final MappedClass mc = mapper.getMappedClass(ent);"], [861, "        if (mc.getAnnotation(NotSaved.class) != null) {"], [862, "            throw new MappingException(String.format(\"Entity type: %s is marked as NotSaved which means you should not try to save it!\","], [863, "                                                     mc.getClazz().getName()));"], [864, "        }"], [865, "        DBObject dbObject = entityToDBObj(ent, involvedObjects);"], [866, "        List<MappedField> versionFields = mc.getFieldsAnnotatedWith(Version.class);"], [867, "        for (MappedField mappedField : versionFields) {"], [868, "            String name = mappedField.getNameToStore();"], [869, "            if (dbObject.get(name) == null) {"], [870, "                dbObject.put(name, 1);"], [871, "                mappedField.setFieldValue(ent, 1L);"], [872, "            }"], [873, "        }"], [874, "        return dbObject;"], [875, "    }"], [876, ""], [940, "        return save(entities, getWriteConcern(entities.iterator().next()));"], [1003, ""], [1004, "        Long oldVersion = (Long) mfVersion.getFieldValue(entity);"], [1005, "        long newVersion = nextValue(oldVersion);"], [1006, ""], [1008, "        mfVersion.setFieldValue(entity, newVersion);"], [1009, ""], [1010, "        if (idValue != null && newVersion != 1) {"], [1021, "            if (wc == null) {"], [1022, "                wr = dbColl.save(dbObj);"], [1023, "            } else {"], [1024, "                wr = dbColl.save(dbObj, wc);"], [1025, "            }"], [1055, "        return save(getCollection(ProxyHelper.unwrap(entity)), ProxyHelper.unwrap(entity), wc);"]], "deleted": [[816, "        final DBCollection dbColl = db.getCollection(kind);"], [817, "        return insert(dbColl, entities, wc);"], [826, "        //TODO: Do this without creating another iterator"], [827, "        final DBCollection dbColl = getCollection(entities.iterator().next());"], [828, "        return insert(dbColl, entities, wc);"], [838, "            final MappedClass mc = mapper.getMappedClass(ent);"], [839, "            if (mc.getAnnotation(NotSaved.class) != null) {"], [840, "                throw new MappingException("], [841, "                                              \"Entity type: \" + mc.getClazz().getName()"], [842, "                                              + \" is marked as NotSaved which means you should not try to save it!\");"], [843, "            }"], [844, "            list.add(entityToDBObj(ent, involvedObjects));"], [930, "        Object first = null;"], [931, "        try {"], [932, "            first = entities.iterator().next();"], [933, "        } catch (Exception e) {"], [934, "            //do nothing"], [935, "        }"], [936, "        return save(entities, getWriteConcern(first));"], [999, "        final Long oldVersion = (Long) mfVersion.getFieldValue(entity);"], [1000, "        final long newVersion = nextValue(oldVersion);"], [1002, "        if (oldVersion != null && oldVersion > 0) {"], [1012, "        } else if (wc == null) {"], [1013, "            wr = dbColl.save(dbObj);"], [1015, "            wr = dbColl.save(dbObj, wc);"], [1019, "        mfVersion.setFieldValue(entity, newVersion);"], [1046, "        final T unwrapped = ProxyHelper.unwrap(entity);"], [1047, "        final DBCollection dbColl = getCollection(unwrapped);"], [1048, "        return save(dbColl, unwrapped, wc);"]]}, "num_lines_added": 36, "num_lines_removed": 29}