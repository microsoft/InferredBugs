{"hash": "c411f3c086ad3018b39a43b22df820f7b55a1da3", "message": "\u91cd\u6784 \u5206\u5e03\u5f0f\u7684 Schedule", "file_num_lines": 88, "diff_parsed": {"added": [[33, "public class JbootDistributedRunnable implements Runnable {"], [38, "    private int expire = 50 * 1000; // \u5355\u4f4d\u79d2"], [40, "    private Runnable runnable;"], [49, "            LOG.error(\"redis is null, \" +"], [50, "                    \"can not use @DistributedRunnableEnable in your Class[\" + this.getClass().getName() + \"], \" +"], [51, "                    \"or config redis info in jboot.properties\");"], [52, "        }"], [53, ""], [54, "    }"], [55, ""], [56, "    public JbootDistributedRunnable(Runnable runnable) {"], [57, "        this.runnable = runnable;"], [58, "        this.key = \"jbootRunnable:\" + runnable.getClass().getName();"], [59, "        this.redis = Jboot.me().getRedis();"], [60, "        if (redis == null) {"], [61, "            LOG.error(\"redis is null, \" +"], [62, "                    \"can not use @DistributedRunnableEnable in your Class[\" + runnable.getClass().getName() + \"], \" +"], [63, "                    \"or config redis info in jboot.properties\");"], [70, ""], [71, "        if (redis == null) {"], [72, "            return;"], [73, "        }"], [74, ""], [77, "        for (int i = 0; i < 5; i++) {"], [79, "            Long setTimeMillis = System.currentTimeMillis();"], [80, "            result = redis.setnx(key, setTimeMillis);"], [89, "                Long saveTimeMillis = redis.get(key);"], [90, "                if (saveTimeMillis == null) {"], [91, "                    reset();"], [92, "                }"], [93, "                long ttl = System.currentTimeMillis() - saveTimeMillis;"], [94, "                if (ttl > expire) {"], [98, ""], [99, "                // \u4f11\u606f 2 \u79d2\u949f\uff0c\u91cd\u65b0\u53bb\u62a2\uff0c\u56e0\u4e3a\u53ef\u80fd\u522b\u7684\u5e94\u7528\u6267\u884c\u5931\u8d25\u4e86"], [100, "                quietSleep();"], [101, ""], [118, "            if (runnable != null) {"], [119, "                runnable.run();"], [120, "            } else {"], [121, "                boolean runSuccess = execute();"], [122, ""], [123, "                //run()\u6267\u884c\u5931\u8d25\uff0c\u8ba9\u522b\u7684\u5206\u5e03\u5f0f\u5e94\u7528APP\u53bb\u6267\u884c"], [124, "                //\u5982\u679crun()\u6267\u884c\u7684\u65f6\u95f4\u5f88\u957f\uff08\u8d85\u8fc730\u79d2\uff09,\u90a3\u4e48\u522b\u7684\u5206\u5e03\u5f0f\u5e94\u7528\u53ef\u80fd\u4e5f\u62a2\u4e0d\u5230\u4e86\uff0c\u53ea\u80fd\u7b49\u5f85\u4e0b\u6b21\u8f6e\u4f11"], [125, "                //\u4f5c\u7528\uff1a\u6545\u969c\u8f6c\u79fb"], [126, "                if (!runSuccess) {"], [127, "                    reset();"], [128, "                }"], [150, "            Thread.sleep(2000);"], [156, "    //for override"], [157, "    public boolean execute() {"], [158, "        return true;"], [159, "    }"], [160, ""], [161, ""]], "deleted": [[33, "public abstract class JbootDistributedRunnable implements Runnable {"], [38, "    private int expire = 50; // \u5355\u4f4d\u79d2"], [48, "            throw new NullPointerException(\"redis is null, please config redis info in jboot.properties\");"], [57, "        for (int i = 0; i < 6; i++) {"], [59, "            result = redis.setnx(key, \"locked\");"], [68, "                Long ttl = redis.ttl(key);"], [69, "                if (ttl == null || ttl <= 0 || ttl > expire) {"], [72, "                } else {"], [73, "                    // \u4f11\u606f 2 \u79d2\u949f\uff0c\u91cd\u65b0\u53bb\u62a2\uff0c\u56e0\u4e3a\u53ef\u80fd\u522b\u7684\u8bbe\u7f6e\u597d\u540e\uff0c\u4f46\u662f\u5374\u6267\u884c\u5931\u8d25\u4e86"], [74, "                    quietSleep();"], [84, ""], [90, "        //\u62a2\u5230\u4e86\uff0c\u4f46\u662f\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\u8bbe\u7f6e\u5931\u8d25\uff0c\u5220\u9664\u540e\uff0c\u8ba9\u5206\u5e03\u5f0f\u7684\u5176\u4ed6app\u53bb\u62a2"], [91, "        Long expireResult = redis.expire(key, 50);"], [92, "        if (expireResult == null && expireResult <= 0) {"], [93, "            reset();"], [94, "            return;"], [95, "        }"], [98, "            boolean runSuccess = execute();"], [100, "            //run()\u6267\u884c\u5931\u8d25\uff0c\u8ba9\u522b\u7684\u5206\u5e03\u5f0f\u5e94\u7528APP\u53bb\u6267\u884c"], [101, "            //\u5982\u679crun()\u6267\u884c\u7684\u65f6\u95f4\u5f88\u957f\uff08\u8d85\u8fc730\u79d2\uff09,\u90a3\u4e48\u522b\u7684\u5206\u5e03\u5f0f\u5e94\u7528\u53ef\u80fd\u4e5f\u62a2\u4e0d\u5230\u4e86\uff0c\u53ea\u80fd\u7b49\u5f85\u4e0b\u6b21\u8f6e\u4f11"], [102, "            //\u4f5c\u7528\uff1a\u6545\u969c\u8f6c\u79fb"], [103, "            if (!runSuccess) {"], [104, "                reset();"], [126, "            Thread.sleep(5000);"], [132, "    public abstract boolean execute();"]]}, "num_lines_added": 54, "num_lines_removed": 25}