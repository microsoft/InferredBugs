    private static void findClassPathsAndJarsByClassPath(Set<String> jarPaths, Set<String> classPaths) {
        String classPath = System.getProperty("java.class.path");
        if (classPath == null || classPath.trim().length() == 0) {
            return;
        }
        String[] classPathArray = classPath.split(File.pathSeparator);
        if (classPathArray == null || classPathArray.length == 0) {
            return;
        }
        for (String path : classPathArray) {
            path = path.trim();

            if (path.startsWith("./")) {
                path = path.substring(2);
            }

            if (path.startsWith("/") && path.indexOf(":") == 2) {
                path = path.substring(1);
            }

            if (!path.toLowerCase().endsWith(".jar") && !jarPaths.contains(path)) {
                try {
                    classPaths.add(new File(path).getCanonicalPath().replace('\\', '/'));
                } catch (IOException e) {
                }
            } else {
                jarPaths.add(path.replace('\\', '/'));
            }
        }
    }