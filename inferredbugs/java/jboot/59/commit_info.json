{"hash": "e330a78d075f9bc8d1430e6c2e27be295df03720", "message": "fixed\uff1a\u901a\u8fc7\u95e8\u6237\u7f51\u5173\u4e0b\u8f7d\u6587\u4ef6 \u6216\u8005 \u6e32\u67d3\u56fe\u7247\u53ef\u80fd\u51fa\u73b0\u4e71\u7801\u7684\u95ee\u9898", "file_num_lines": 206, "diff_parsed": {"added": [[138, "        if (resp.isCommitted()) {"], [139, "            return;"], [140, "        }"], [141, ""], [143, "        OutputStream outStream = null;"], [145, "            inStream = getInputStream(conn);"], [146, "            outStream = resp.getOutputStream();"], [147, "            byte[] buffer = new byte[1024];"], [148, "            for (int len = -1; (len = inStream.read(buffer)) != -1; ) {"], [149, "                outStream.write(buffer, 0, len);"], [151, "            outStream.flush();"], [153, "            quetlyClose(inStream, outStream);"], [171, ""], [174, "        //conn \u662f\u5426\u5df2\u7ecf\u6307\u5b9a\u4e86 contentType\uff0c\u5982\u679c\u6307\u5b9a\u4e86\uff0c\u5c31\u7528 conn \u7684\uff0c\u5426\u5219\u5c31\u7528\u81ea\u5df1\u914d\u7f6e\u7684"], [175, "        boolean isContentTypeSetted = false;"], [176, ""], [182, "                if (StrUtil.isBlank(headerName) || \"Content-Encoding\".equalsIgnoreCase(headerName)) {"], [184, "                }"], [185, ""], [186, "                String headerFieldValue = conn.getHeaderField(headerName);"], [187, "                if (StrUtil.isNotBlank(headerFieldValue)) {"], [188, "                    resp.setHeader(headerName, headerFieldValue);"], [189, "                    if (\"Content-Type\".equalsIgnoreCase(headerName)) {"], [190, "                        isContentTypeSetted = true;"], [195, ""], [196, "        //conn \u6ca1\u6709 Content-Type\uff0c\u9700\u8981\u8bbe\u7f6e\u4e3a\u624b\u52a8\u914d\u7f6e\u7684\u5185\u5bb9"], [197, "        if (!isContentTypeSetted) {"], [198, "            resp.setContentType(contentType);"], [199, "        }"], [283, "    private static HostnameVerifier hnv = (hostname, session) -> true;"]], "deleted": [[139, "        InputStreamReader reader = null;"], [141, "            if (!resp.isCommitted()) {"], [142, "                PrintWriter writer = resp.getWriter();"], [143, "                inStream = getInputStream(conn);"], [144, "                reader = new InputStreamReader(inStream);"], [145, "                int len;"], [146, "                char[] buffer = new char[1024];"], [147, "                while ((len = reader.read(buffer)) != -1) {"], [148, "                    writer.write(buffer, 0, len);"], [149, "                }"], [152, "            quetlyClose(inStream, reader);"], [170, "        resp.setContentType(contentType);"], [178, "                //\u9700\u8981\u6392\u9664 Content-Type\uff0c\u56e0\u4e3a\u4f1a\u53ef\u80fd\u4f1a\u8fdb\u884c\u591a\u6b21\u8bbe\u7f6e"], [179, "                if (StrUtil.isBlank(headerName)"], [180, "                        || \"Content-Encoding\".equalsIgnoreCase(headerName)"], [181, "                        || \"Content-Type\".equalsIgnoreCase(headerName)) {"], [183, "                } else {"], [184, "                    String headerFieldValue = conn.getHeaderField(headerName);"], [185, "                    if (StrUtil.isNotBlank(headerFieldValue)) {"], [186, "                        resp.setHeader(headerName, headerFieldValue);"], [274, "    private static HostnameVerifier hnv = new HostnameVerifier() {"], [275, "        @Override"], [276, "        public boolean verify(String hostname, SSLSession session) {"], [277, "            return true;"], [278, "        }"], [279, "    };"]]}, "num_lines_added": 30, "num_lines_removed": 26}