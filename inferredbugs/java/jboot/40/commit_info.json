{"hash": "30576d5bd1f4278f7922ff012d147f9f58a7d24f", "message": "v2.0-rc.2", "file_num_lines": 143, "diff_parsed": {"added": [], "deleted": [[58, "            javax.inject.Inject javaxInject = field.getAnnotation(javax.inject.Inject.class);"], [59, "            if (javaxInject != null) {"], [60, "                injectByJavaxInject(targetObject, field, javaxInject, injectDepth);"], [61, "                continue;"], [62, "            }"], [63, ""], [145, "     * \u672c\u5730\u6ce8\u5165\uff0c\u517c\u5bb9 javax \u7684\u6ce8\u89e3"], [146, "     *"], [147, "     * @param targetObject"], [148, "     * @param field"], [149, "     * @param inject"], [150, "     * @throws ReflectiveOperationException"], [151, "     */"], [152, "    private void injectByJavaxInject(Object targetObject, Field field, javax.inject.Inject inject, int injectDepth) throws ReflectiveOperationException {"], [153, ""], [154, "        Object fieldInjectedObject = get(field.getType(), injectDepth);"], [155, "        field.setAccessible(true);"], [156, "        field.set(targetObject, fieldInjectedObject);"], [157, ""], [158, "    }"], [159, ""], [160, "    /**"]]}, "num_lines_added": 0, "num_lines_removed": 22}