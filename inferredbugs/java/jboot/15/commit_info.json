{"hash": "4b4e199616300fc5b5e69227e42f07caf6394f39", "message": "fixed: \u4f18\u5316Jboot\u4ee3\u7801\u751f\u6210\u903b\u8f91\uff0c\u4f7f\u4e4b\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\u3002", "file_num_lines": 40, "diff_parsed": {"added": [[22, "import io.jboot.codegen.CodeGenHelpler;"], [24, "import javax.sql.DataSource;"], [60, "        String modelPackage = basePackage;"], [69, "        DataSource dataSource = CodeGenHelpler.getDatasource();"], [71, "        CodeGenHelpler.excludeTables(tableMetaList, excludeTables);"]], "deleted": [[21, "import com.zaxxer.hikari.HikariConfig;"], [22, "import com.zaxxer.hikari.HikariDataSource;"], [24, "import io.jboot.config.JbootProperties;"], [25, "import io.jboot.db.datasource.DatasourceConfig;"], [26, "import io.jboot.utils.StringUtils;"], [28, "import java.util.ArrayList;"], [30, "import java.util.Set;"], [65, "        String modelPackage = basePackage ;"], [74, "        DatasourceConfig datasourceConfig = JbootProperties.get(\"jboot.datasource\", DatasourceConfig.class);"], [75, ""], [76, "        HikariConfig config = new HikariConfig();"], [77, "        config.setJdbcUrl(datasourceConfig.getUrl());"], [78, "        config.setUsername(datasourceConfig.getUser());"], [79, "        config.setPassword(datasourceConfig.getPassword());"], [80, "        config.addDataSourceProperty(\"cachePrepStmts\", \"true\");"], [81, "        config.addDataSourceProperty(\"prepStmtCacheSize\", \"250\");"], [82, "        config.addDataSourceProperty(\"prepStmtCacheSqlLimit\", \"2048\");"], [83, "        config.setDriverClassName(\"com.mysql.jdbc.Driver\");"], [84, ""], [85, "        HikariDataSource dataSource = new HikariDataSource(config);"], [87, ""], [88, "        if (StringUtils.isNotBlank(excludeTables)) {"], [89, "            List<TableMeta> newTableMetaList = new ArrayList<>();"], [90, "            Set<String> excludeTableSet = StringUtils.splitToSet(excludeTables.toLowerCase(), \",\");"], [91, "            for (TableMeta tableMeta : tableMetaList) {"], [92, "                if (excludeTableSet.contains(tableMeta.name.toLowerCase())) {"], [93, "                    System.out.println(\"exclude table : \" + tableMeta.name);"], [94, "                    continue;"], [95, "                }"], [96, "                newTableMetaList.add(tableMeta);"], [97, "            }"], [98, "            tableMetaList = newTableMetaList;"], [99, "        }"]]}, "num_lines_added": 5, "num_lines_removed": 33}