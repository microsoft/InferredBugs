{"hash": "f8512a1df392c56e7966d159c78e7d5a67b7b433", "message": "*Fix threads problems caused by mongo", "file_num_lines": 232, "diff_parsed": {"added": [[4, "import java.io.IOException;"], [5, ""], [40, "import com.fasterxml.jackson.databind.ObjectMapper;"], [75, "\t private MongoClient mongoClient;"], [83, "     public DBMongoImpl(String databaseName, MongoClient mongoClient) {"], [86, "          this.mongoClient = mongoClient;"], [179, "               this.datastore().save(ts);"], [183, "               this.mongoClient.close();"], [199, "        \t  this.mongoClient.close();"], [258, "//               T parse = helper.json().parse(document.toJson(), classType);"], [259, "            T parse = null;"], [260, "\t\t\ttry {"], [261, "\t\t\t\tparse = new ObjectMapper().readValue(document.toJson(), classType);"], [262, "\t\t\t} catch (IOException e) {"], [263, "\t\t\t\te.printStackTrace();"], [264, "\t\t\t}"], [283, "//     private MongoClient createMongoClient() {"], [284, "//"], [285, "//          MongoClient client;"], [286, "//          if (Objeto.notBlank(property.getMongo().getUrl())) {"], [287, "//"], [288, "//               MongoClientURI uri = new MongoClientURI(property.getMongo().getUrl());"], [289, "//               client = new MongoClient(uri);"], [290, "//          } else {"], [291, "//               ServerAddress address = new ServerAddress(property.getMongo().getServerName(), property.getMongo().getPort().intValue());"], [292, "//               MongoCredential mongoCredential = MongoCredential.createCredential(property.getMongo().getUsername(), property.getMongo().getUsername(), property.getMongo().getPassword().toCharArray());"], [293, "//               MongoClientOptions mongoClientOptions = MongoClientOptions.builder().build();"], [294, "//               client = new MongoClient(address, mongoCredential, mongoClientOptions);"], [295, "//          }"], [296, "//"], [297, "//          return client;"], [298, "//     }"], [315, ""], [316, "          return new Morphia().createDatastore(this.mongoClient, this.databaseName);"], [321, "          return this.mongoClient.getDatabase(databaseName);"]], "deleted": [[40, "import com.mongodb.MongoClientOptions;"], [41, "import com.mongodb.MongoClientURI;"], [42, "import com.mongodb.MongoCredential;"], [43, "import com.mongodb.ServerAddress;"], [49, "import br.com.conductor.heimdall.core.environment.Property;"], [50, "import br.com.conductor.heimdall.core.util.BeanManager;"], [53, "import br.com.conductor.heimdall.middleware.spec.Helper;"], [75, "     private Property property;"], [76, ""], [81, "     private Helper helper = new HelperImpl();"], [89, "     public DBMongoImpl(String databaseName) {"], [92, "          this.property = BeanManager.getApplicationContext().getBean(Property.class);"], [93, ""], [189, ""], [190, "               createMongoClient().close();"], [206, "               createMongoClient().close();"], [265, ""], [266, "               T parse = helper.json().parse(document.toJson(), classType);"], [285, "     private MongoClient createMongoClient() {"], [286, ""], [287, "          MongoClient client;"], [288, "          if (Objeto.notBlank(property.getMongo().getUrl())) {"], [289, ""], [290, "               MongoClientURI uri = new MongoClientURI(property.getMongo().getUrl());"], [291, "               client = new MongoClient(uri);"], [292, "          } else {"], [293, "               ServerAddress address = new ServerAddress(property.getMongo().getServerName(), property.getMongo().getPort().intValue());"], [294, "               MongoCredential mongoCredential = MongoCredential.createCredential(property.getMongo().getUsername(), property.getMongo().getUsername(), property.getMongo().getPassword().toCharArray());"], [295, "               MongoClientOptions mongoClientOptions = MongoClientOptions.builder().build();"], [296, "               client = new MongoClient(address, mongoCredential, mongoClientOptions);"], [297, "          }"], [298, ""], [299, "          return client;"], [300, "     }"], [317, ""], [318, "          Morphia morphia = new Morphia();"], [319, ""], [320, "          return morphia.createDatastore(createMongoClient(), this.databaseName);"], [325, "          return createMongoClient().getDatabase(databaseName);"]]}, "num_lines_added": 35, "num_lines_removed": 39}