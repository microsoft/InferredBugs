{"hash": "fcba72afde9f997158b3df3ba465f1744bcd392a", "message": "Move check that domain group version is deployable from ring group conductor\nto helper to set a ring group's target version.", "file_num_lines": 123, "diff_parsed": {"added": [[91, "              processUpdates(snapshotRingGroup);"], [114, "  void processUpdates(RingGroup ringGroup) throws IOException {"]], "deleted": [[85, "            DomainGroup snapshotDomainGroup;"], [88, "              snapshotDomainGroup = domainGroup;"], [93, "              processUpdates(snapshotRingGroup, snapshotDomainGroup);"], [116, "  void processUpdates(RingGroup ringGroup, DomainGroup domainGroup) throws IOException {"], [117, "    // Check if there is a new version available for this ring group"], [118, "    final DomainGroupVersion domainGroupVersion = DomainGroups.getLatestVersion(domainGroup);"], [119, "    if (domainGroupVersion != null &&"], [120, "        (ringGroup.getTargetVersionNumber() == null ||"], [121, "            ringGroup.getTargetVersionNumber() < domainGroupVersion.getVersionNumber())) {"], [122, "      // There is a more recent version available"], [123, "      LOG.info(\"There is a new domain group version available for ring group \" + ringGroupName"], [124, "          + \": \" + domainGroupVersion);"], [125, "      if (!domainGroupVersionIsDeployable(domainGroupVersion)) {"], [126, "        LOG.info(\"Domain group version \" + domainGroupVersion + \" is not deployable. Ignoring it.\");"], [127, "      } else {"], [128, "        // We can change the target version of this ring group"], [129, "        LOG.info(\"Changing target version of ring group \" + ringGroupName + \" to domain group version \" + domainGroupVersion);"], [130, "        ringGroup.setTargetVersion(domainGroupVersion.getVersionNumber());"], [131, "      }"], [132, "    }"], [136, "  // Check that all domains included in the given domain group version exist and that the specified versions"], [137, "  // are not defunct or open."], [138, "  private boolean domainGroupVersionIsDeployable(DomainGroupVersion domainGroupVersion) throws IOException {"], [139, "    if (domainGroupVersion == null || domainGroupVersion.getDomainVersions() == null) {"], [140, "      return false;"], [141, "    }"], [142, "    for (DomainGroupVersionDomainVersion dgvdv : domainGroupVersion.getDomainVersions()) {"], [143, "      Domain domain = dgvdv.getDomain();"], [144, "      if (domain == null) {"], [145, "        return false;"], [146, "      }"], [147, "      DomainVersion domainVersion = domain.getVersionByNumber(dgvdv.getVersion());"], [148, "      if (domainVersion == null"], [149, "          || !DomainVersions.isClosed(domainVersion)"], [150, "          || domainVersion.isDefunct()) {"], [151, "        if (LOG.isDebugEnabled()) {"], [152, "          LOG.debug(\"Version \" + dgvdv.getVersion()"], [153, "              + \" of domain \" + domain.getName()"], [154, "              + \" is null, closed or defunct. Hence domain group version \" + domainGroupVersion + \" is not deployable.\");"], [155, "        }"], [156, "        return false;"], [157, "      }"], [158, "    }"], [159, "    return true;"], [160, "  }"], [161, ""]]}, "num_lines_added": 2, "num_lines_removed": 46}