{"hash": "548d679151a28d2dca05d3e987215f58803a2d32", "message": "Introduce interfaces around the key file merge sort and curly compacting merger\nhierarchies to simplify the code and help testing.", "file_num_lines": 67, "diff_parsed": {"added": [[23, "import com.rapleaf.hank.storage.cueball.*;"], [34, "  private final ICueballStreamBufferMergeSortFactory cueballStreamBufferMergeSortFactory;"], [35, "  private final ICurlyWriterFactory curlyWriterFactory;"], [40, "                                         ICurlyCompactingMerger merger,"], [41, "                                         ICueballStreamBufferMergeSortFactory cueballStreamBufferMergeSortFactory,"], [42, "                                         ICurlyWriterFactory curlyWriterFactory) throws IOException {"], [43, "    super(domain, partitionRemoteFileOps, localPartitionRoot);"], [45, "    this.cueballStreamBufferMergeSortFactory = cueballStreamBufferMergeSortFactory;"], [46, "    this.curlyWriterFactory = curlyWriterFactory;"], [105, "    // Note: the Curly writer used to perform the compaction must not hash the passed-in key because"], [107, "    CurlyWriter curlyWriter = curlyWriterFactory.getCurlyWriter(newCueballBaseOutputStream, newCurlyBaseOutputStream);"], [109, "    IKeyFileStreamBufferMergeSort cueballStreamBufferMergeSort ="], [110, "        cueballStreamBufferMergeSortFactory.getInstance(cueballBasePath, cueballDeltas);"], [111, ""], [112, "    merger.merge(curlyBasePath, curlyDeltas, cueballStreamBufferMergeSort, curlyWriter);"]], "deleted": [[19, "import com.rapleaf.hank.compress.CompressionCodec;"], [22, "import com.rapleaf.hank.hasher.IdentityHasher;"], [25, "import com.rapleaf.hank.storage.cueball.Cueball;"], [26, "import com.rapleaf.hank.storage.cueball.CueballFilePath;"], [27, "import com.rapleaf.hank.storage.cueball.CueballPartitionUpdater;"], [28, "import com.rapleaf.hank.storage.cueball.CueballWriter;"], [38, "  private final int recordFileReadBufferBytes;"], [43, "                                         int keyHashSize,"], [44, "                                         int offsetSize,"], [45, "                                         int hashIndexBits,"], [46, "                                         CompressionCodec compressionCodec,"], [48, "                                         int recordFileReadBufferBytes,"], [49, "                                         ICurlyCompactingMerger merger) throws IOException {"], [50, "    super(domain, partitionRemoteFileOps, keyHashSize, offsetSize, hashIndexBits, compressionCodec, localPartitionRoot);"], [51, "    this.recordFileReadBufferBytes = recordFileReadBufferBytes;"], [111, "    // Note: the Cueball writer used to perform the compaction must not hash the passed-in key because"], [113, "    // TODO: Using an identity hasher and actually copying the bytes is unnecessary and inefficient."], [114, "    // TODO: (continued) Adding the logic of writing directly a hash could be added to Cueball."], [115, "    CueballWriter cueballWriter = new CueballWriter(newCueballBaseOutputStream, keyHashSize,"], [116, "        new IdentityHasher(), offsetSize, compressionCodec, hashIndexBits);"], [117, "    CurlyWriter curlyWriter = new CurlyWriter(newCurlyBaseOutputStream, cueballWriter, offsetSize);"], [119, "    merger.merge(curlyBasePath, curlyDeltas, cueballBasePath, cueballDeltas, curlyWriter);"]]}, "num_lines_added": 15, "num_lines_removed": 22}