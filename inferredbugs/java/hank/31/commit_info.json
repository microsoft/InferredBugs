{"hash": "3ced281526f0d531d76cba1b57b8a2c34e785383", "message": "Implement AsyncHostConnectionPool and SelectRunnable internals.", "file_num_lines": 139, "diff_parsed": {"added": [[39, "  // Standby: we are waiting for the host to be SERVING"], [40, "  private volatile boolean isStandby = true;"], [41, ""], [42, "  private boolean isBusy = false;"], [46, "    CONNECTING,"], [47, "    CONNECTED"], [61, "    host.setStateChangeListener(this);"], [62, "    onWatchedNodeChange(host.getState());"], [65, "  public void get(int domainId, ByteBuffer key, HostConnectionGetCallback resultHandler) {"], [66, "    try {"], [67, "      client.get(domainId, key, resultHandler);"], [68, "    } catch (TException e) {"], [69, "      resultHandler.onError(e);"], [70, "    }"], [73, "  public void getBulk(int domainId, List<ByteBuffer> keys, HostConnectionGetBulkCallback resultHandler) {"], [74, "    try {"], [75, "      client.getBulk(domainId, keys, resultHandler);"], [76, "    } catch (TException e) {"], [77, "      resultHandler.onError(e);"], [78, "    }"], [85, "  public boolean isBusy() {"], [86, "    return isBusy;"], [87, "  }"], [88, ""], [89, "  public void setIsBusy(boolean isBusy) {"], [90, "    this.isBusy = isBusy;"], [91, "  }"], [92, ""], [93, "  boolean isStandby() {"], [94, "    return isStandby;"], [97, "  protected boolean isDisconnected() {"], [101, "  protected boolean isConnected() {"], [102, "    return state == HostConnectionState.CONNECTED;"], [105, "  public synchronized void setConnecting() {"], [106, "    state = HostConnectionState.CONNECTING;"], [109, "  public synchronized void attemptConnect() throws IOException {"], [110, "    if (state == HostConnectionState.CONNECTING && !isStandby) {"], [111, "      connectNotSynchronized();"], [112, "    }"], [163, "      isStandby = false;"], [165, "      isStandby = true;"]], "deleted": [[41, "    CONNECTED,"], [43, "    // STANDBY: we are waiting for the host to be SERVING"], [44, "    STANDBY"], [60, "  public void get(int domainId, ByteBuffer key, HostConnectionGetCallback resultHandler) throws TException {"], [61, "    client.get(domainId, key, resultHandler);"], [64, "  public void getBulk(int domainId, List<ByteBuffer> keys, HostConnectionGetBulkCallback resultHandler) throws TException {"], [65, "    client.getBulk(domainId, keys, resultHandler);"], [72, "  boolean isAvailable() {"], [73, "    return state != HostConnectionState.STANDBY;"], [76, "  private boolean isDisconnected() {"], [80, "  public synchronized void connect() throws IOException {"], [81, "    connectNotSynchronized();"], [84, "  private synchronized void reconnect() throws IOException {"], [85, "    disconnectNotSynchronized();"], [86, "    connectNotSynchronized();"], [89, "  private synchronized void disconnectAndStandby() {"], [90, "    disconnectNotSynchronized();"], [91, "    state = HostConnectionState.STANDBY;"], [142, "      // Reconnect"], [143, "      try {"], [144, "        reconnect();"], [145, "      } catch (IOException e) {"], [146, "        LOG.error(\"Error connecting to host \" + host.getAddress(), e);"], [147, "      }"], [149, "      // Disconnect and standby"], [150, "      disconnectAndStandby();"]]}, "num_lines_added": 41, "num_lines_removed": 26}