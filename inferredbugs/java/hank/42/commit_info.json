{"hash": "f2d13fc8dec0e2ce7a5c4227bbaa01396d04e280", "message": "Add listener framework that gets notified of data location changes.", "file_num_lines": 116, "diff_parsed": {"added": [[28, "public class RingGroupConductor {"]], "deleted": [[28, "public class RingGroupConductor implements RingGroupChangeListener, DomainGroupChangeListener {"], [38, "  private DomainGroup domainGroup;"], [70, "        // we are now *the* ring group conductor for this ring group."], [71, "        domainGroup = ringGroup.getDomainGroup();"], [72, ""], [73, "        // set a watch on the ring group"], [74, "        ringGroup.setListener(this);"], [75, ""], [76, "        // set a watch on the domain group version"], [77, "        domainGroup.setListener(this);"], [78, ""], [133, "  @Override"], [134, "  public void onRingGroupChange(RingGroup newRingGroup) {"], [135, "    synchronized (lock) {"], [136, "      if (LOG.isDebugEnabled()) {"], [137, "        LOG.debug(\"Got an updated ring group version!\");"], [138, "      }"], [139, "      ringGroup = newRingGroup;"], [140, "    }"], [141, "  }"], [142, ""], [143, "  @Override"], [144, "  public void onDomainGroupChange(DomainGroup newDomainGroup) {"], [145, "    synchronized (lock) {"], [146, "      if (LOG.isDebugEnabled()) {"], [147, "        LOG.debug(\"Got an updated domain group version: \" + newDomainGroup + \"!\");"], [148, "      }"], [149, "      domainGroup = newDomainGroup;"], [150, "    }"], [151, "  }"], [152, ""]]}, "num_lines_added": 1, "num_lines_removed": 31}