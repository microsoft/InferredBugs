{"hash": "dd6470b454bcc576557784f9baa2fae6829bb224", "message": "Fix NPE in UniformPartitionAssigner when a domain is not assigned to all hosts.", "file_num_lines": 128, "diff_parsed": {"added": [[145, "    if (maxHostDomain == null || minHostDomain == null) {"], [146, "      // If either maxHostDomain or minHostDomain is null, the domain is not balanced"], [147, "      return false;"], [148, "    }"], [149, "    int maxDistance = Math.abs(maxHostDomain.getPartitions().size() - minHostDomain.getPartitions().size());"], [158, "      if (hostDomain != null) {"], [159, "        int numPartitions = hostDomain.getPartitions().size();"], [160, "        if (numPartitions < minNumPartitions) {"], [161, "          minHostDomain = hostDomain;"], [162, "          minNumPartitions = numPartitions;"], [163, "        }"], [174, "      if (hostDomain != null) {"], [175, "        int numPartitions = hostDomain.getPartitions().size();"], [176, "        if (numPartitions > maxNumPartitions) {"], [177, "          maxHostDomain = hostDomain;"], [178, "          maxNumPartitions = numPartitions;"], [179, "        }"]], "deleted": [[145, "    int maxDistance = Math.abs(maxHostDomain.getPartitions().size()"], [146, "        - minHostDomain.getPartitions().size());"], [155, "      int numPartitions = hostDomain.getPartitions().size();"], [156, "      if (numPartitions < minNumPartitions) {"], [157, "        minHostDomain = hostDomain;"], [158, "        minNumPartitions = numPartitions;"], [161, ""], [170, "      int numPartitions = hostDomain.getPartitions().size();"], [171, "      if (numPartitions > maxNumPartitions) {"], [172, "        maxHostDomain = hostDomain;"], [173, "        maxNumPartitions = numPartitions;"], [176, ""]]}, "num_lines_added": 17, "num_lines_removed": 12}