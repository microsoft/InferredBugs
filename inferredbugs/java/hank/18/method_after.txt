  public static DomainGroupVersion createNewFastForwardVersion(DomainGroup domainGroup) throws IOException {
    Map<Domain, Integer> domainNameToVersion = new HashMap<Domain, Integer>();

    // find the latest domain group version
    DomainGroupVersion dgv = DomainGroups.getLatestVersion(domainGroup);

    if (dgv == null) {
      throw new IllegalArgumentException(
          "Supplied domain group must have at least one version, but it did not: " + domainGroup);
    }

    // create map of new domains and versions
    for (DomainGroupVersionDomainVersion dgvdv : dgv.getDomainVersions()) {
      domainNameToVersion.put(dgvdv.getDomain(), Domains.getLatestVersionNotOpenNotDefunct(dgvdv.getDomain()).getVersionNumber());
    }

    // call regular version creation method
    return domainGroup.createNewVersion(domainNameToVersion);
  }