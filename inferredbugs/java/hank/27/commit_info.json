{"hash": "4cc3f26743859b158bfd8084c675e125150209af", "message": "Remove unused lock in HostConnection", "file_num_lines": 192, "diff_parsed": {"added": [[228, "    if (hostState != null && hostState == HostState.SERVING) {"], [229, "      // Reconnect"], [230, "      lock();"], [231, "      try {"], [232, "        disconnect();"], [234, "          connect();"], [235, "        } catch (IOException e) {"], [236, "          LOG.error(\"Error connecting to host \" + host.getAddress(), e);"], [238, "      } finally {"], [239, "        unlock();"], [240, "      }"], [241, "    } else {"], [242, "      // Disconnect and standby"], [243, "      lock();"], [244, "      try {"], [245, "        disconnect();"], [246, "        state = HostConnectionState.STANDBY;"], [247, "      } finally {"], [248, "        unlock();"]], "deleted": [[52, "  private final Object stateChangeMutex = new Object();"], [229, "    synchronized (stateChangeMutex) {"], [230, "      if (hostState != null && hostState == HostState.SERVING) {"], [231, "        // Reconnect"], [232, "        lock();"], [233, "        try {"], [234, "          disconnect();"], [235, "          try {"], [236, "            connect();"], [237, "          } catch (IOException e) {"], [238, "            LOG.error(\"Error connecting to host \" + host.getAddress(), e);"], [239, "          }"], [240, "        } finally {"], [241, "          unlock();"], [242, "        }"], [243, "      } else {"], [244, "        // Disconnect and standby"], [245, "        lock();"], [247, "          disconnect();"], [248, "          state = HostConnectionState.STANDBY;"], [249, "        } finally {"], [250, "          unlock();"]]}, "num_lines_added": 19, "num_lines_removed": 22}