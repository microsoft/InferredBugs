{"hash": "af2b35a1769318ce9c4f00534f49a79da6e26e49", "message": "Revert \"Only link imports by default; link exports lazily like before\"\n\nThis reverts commit 94c026db039f3230408285fe398c7a5c76645814.", "file_num_lines": 667, "diff_parsed": {"added": [[948, "        if (state == Linkage.State.LINKED) {"], [958, "                    while (state == Linkage.State.LINKING || state == Linkage.State.NEW) try {"], [965, "                    if (state == Linkage.State.LINKED) {"], [968, "                    this.linkage = linkage = new Linkage(linkage.getSourceList(), Linkage.State.LINKING);"], [971, "                link(linkage);"], [988, "    void link(final Linkage linkage) throws ModuleLoadException {"], [997, "            subtractTime += addPaths(dependencies, importsMap, filterStack, visited);"], [1001, "                    this.linkage = new Linkage(linkage.getSourceList(), Linkage.State.LINKED, importsMap, exportsMap);"], [1011, "    void relinkIfNecessary() throws ModuleLoadException {"], [1013, "        if (linkage.getState() != Linkage.State.UNLINKED) {"], [1018, "            if (linkage.getState() != Linkage.State.UNLINKED) {"], [1021, "            this.linkage = linkage = new Linkage(linkage.getSourceList(), Linkage.State.LINKING);"]], "deleted": [[51, "import static org.jboss.modules.Linkage.State.*;"], [52, ""], [950, "        if (state.compareTo(exports ? LINKED_EXPORTS : LINKED) >= 0) {"], [960, "                    while (state == (exports ? LINKING_EXPORTS : LINKING) || state == NEW) try {"], [967, "                    if (state == (exports ? LINKED_EXPORTS : LINKED)) {"], [970, "                    this.linkage = linkage = new Linkage(linkage.getSourceList(), exports ? LINKING_EXPORTS : LINKING);"], [973, "                if (exports) {"], [974, "                    linkExports(linkage);"], [975, "                } else {"], [976, "                    link(linkage);"], [977, "                }"], [994, "    boolean link(final Linkage linkage) throws ModuleLoadException {"], [996, "        final Dependency[] dependencies = linkage.getSourceList();"], [997, "        final long start = Metrics.getCurrentCPUTime();"], [998, "        long subtractTime = 0L;"], [999, "        try {"], [1000, "            final Set<Visited> visited = new FastCopyHashSet<Visited>(16);"], [1001, "            final FastCopyHashSet<PathFilter> filterStack = new FastCopyHashSet<PathFilter>(8);"], [1002, "            subtractTime += addPaths(dependencies, importsMap, filterStack, visited);"], [1003, "            synchronized (this) {"], [1004, "                if (this.linkage == linkage) {"], [1005, "                    this.linkage = new Linkage(linkage.getSourceList(), LINKED, importsMap, null);"], [1006, "                    notifyAll();"], [1007, "                    return true;"], [1008, "                }"], [1009, "                // else all our efforts were just wasted since someone changed the deps in the meantime"], [1010, "                return false;"], [1011, "            }"], [1012, "        } finally {"], [1013, "            moduleLoader.addLinkTime(Metrics.getCurrentCPUTime() - start - subtractTime);"], [1014, "        }"], [1015, "    }"], [1016, ""], [1017, "    boolean linkExports(final Linkage linkage) throws ModuleLoadException {"], [1028, "                    this.linkage = new Linkage(linkage.getSourceList(), LINKED_EXPORTS, linkage.getAllPaths(), exportsMap);"], [1030, "                    return true;"], [1033, "                return false;"], [1040, "    void linkIfNecessary() throws ModuleLoadException {"], [1042, "        if (linkage.getState().compareTo(LINKING) >= 0) {"], [1047, "            if (linkage.getState().compareTo(LINKING) >= 0) {"], [1050, "            this.linkage = linkage = new Linkage(linkage.getSourceList(), LINKING);"]]}, "num_lines_added": 12, "num_lines_removed": 41}