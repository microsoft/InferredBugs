{"hash": "33bb3f808cbda95f4df7dfa0823afbaf68e61a79", "message": "Deprecates SpanCollector in favor of zipkin.reporter.Reporter (#248)\n\nzipkin-reporter was made to allow others to re-use transport logic\r\nwithout copy/paste. It has all the functionality Brave's SpanCollector\r\nalong with new functionality such as being able to send spans sooner\r\nthan a polling interval (ex on span count or byte size threshold).\r\n\r\nThis also allows re-use of third-party transports such as those for\r\nthe Amazon cloud.\r\n\r\nSee https://github.com/openzipkin/zipkin-reporter-java\r\nSee https://github.com/openzipkin/zipkin-aws", "file_num_lines": 186, "diff_parsed": {"added": [[23, "import zipkin.reporter.Reporter;"], [36, "    private Reporter<zipkin.Span> mockReporter;"], [44, "        mockReporter = mock(Reporter.class);"], [51, "                .reporter(mockReporter)"], [131, "        Span finished = new Span().setName(\"foo\").setTimestamp(1000L); // set in start span"], [139, "        verify(mockReporter).report(finished.toZipkin());"], [140, "        verifyNoMoreInteractions(mockReporter);"], [148, "        Span finished = new Span().setName(\"foo\").setTimestamp(1000L); // set in start span"], [156, "        verify(mockReporter).report(finished.toZipkin());"], [157, "        verifyNoMoreInteractions(mockReporter);"], [174, "        Span finished = new Span().setName(\"foo\").setTimestamp(1000L); // Set by user"], [181, "        verify(mockReporter).report(finished.toZipkin());"], [182, "        verifyNoMoreInteractions(mockReporter);"], [199, "        Span finished = new Span().setName(\"foo\").setTimestamp(1000L); // set in start span"], [205, "        verify(mockReporter).report(finished.toZipkin());"], [206, "        verifyNoMoreInteractions(mockReporter);"], [223, "        Span finished = new Span().setName(\"foo\").setTimestamp(1000L); // Set by user"], [228, "        verify(mockReporter).report(finished.toZipkin());"], [229, "        verifyNoMoreInteractions(mockReporter);"], [240, "        verifyNoMoreInteractions(mockReporter);"], [249, "        verifyNoMoreInteractions(mockReporter);"]], "deleted": [[4, "import static org.junit.Assert.assertFalse;"], [5, "import static org.junit.Assert.assertNotEquals;"], [7, "import static org.junit.Assert.fail;"], [38, "    private SpanCollector mockCollector;"], [46, "        mockCollector = mock(SpanCollector.class);"], [53, "                .spanCollector(mockCollector)"], [133, "        Span finished = new Span().setTimestamp(1000L); // set in start span"], [141, "        verify(mockCollector).collect(finished);"], [142, "        verifyNoMoreInteractions(mockCollector);"], [150, "        Span finished = new Span().setTimestamp(1000L); // set in start span"], [158, "        verify(mockCollector).collect(finished);"], [159, "        verifyNoMoreInteractions(mockCollector);"], [176, "        Span finished = new Span().setTimestamp(1000L); // Set by user"], [183, "        verify(mockCollector).collect(finished);"], [184, "        verifyNoMoreInteractions(mockCollector);"], [201, "        Span finished = new Span().setTimestamp(1000L); // set in start span"], [207, "        verify(mockCollector).collect(finished);"], [208, "        verifyNoMoreInteractions(mockCollector);"], [225, "        Span finished = new Span().setTimestamp(1000L); // Set by user"], [230, "        verify(mockCollector).collect(finished);"], [231, "        verifyNoMoreInteractions(mockCollector);"], [242, "        verifyNoMoreInteractions(mockCollector);"], [251, "        verifyNoMoreInteractions(mockCollector);"]]}, "num_lines_added": 21, "num_lines_removed": 23}