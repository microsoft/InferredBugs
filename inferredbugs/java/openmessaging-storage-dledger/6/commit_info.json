{"hash": "adc220aeb8df6a96caa7bec5b46fb93ab9e45055", "message": "Enable truncate", "file_num_lines": 331, "diff_parsed": {"added": [[211, "            reviseLegerBeginIndex();"], [223, "    public void reviseLegerBeginIndex() {"], [224, "        //get leger begin index"], [225, "        ByteBuffer tmpBuffer = dataFileQueue.getFirstMappedFile().sliceByteBuffer();"], [226, "        tmpBuffer.getInt(); //magic"], [227, "        tmpBuffer.getInt(); //size"], [228, "        legerBeginIndex = tmpBuffer.getLong();"], [229, "    }"], [230, ""], [266, "    public long truncate(DLegerEntry entry, long leaderTerm, String leaderId) {"], [267, "        PreConditions.check(memberState.isFollower(), DLegerException.Code.NOT_FOLLOWER, null, memberState.getLeaderId());"], [268, "        ByteBuffer dataBuffer = localEntryBuffer.get();"], [269, "        ByteBuffer indexBuffer = localIndexBuffer.get();"], [270, "        DLegerEntryCoder.encode(entry, dataBuffer);"], [271, "        int entrySize = dataBuffer.remaining();"], [272, "        synchronized(memberState) {"], [273, "            PreConditions.check(memberState.isFollower(), DLegerException.Code.NOT_FOLLOWER, null, memberState.getLeaderId());"], [274, "            PreConditions.check(leaderTerm == memberState.currTerm(), DLegerException.Code.UNCONSISTENCT_TERM, null, memberState.getLeaderId());"], [275, "            PreConditions.check(leaderId.equals(memberState.getLeaderId()), DLegerException.Code.UNCONSISTENCT_LEADER, null, memberState.getLeaderId());"], [276, "            dataFileQueue.truncateDirtyFiles(entry.getPos());"], [277, "            if (dataFileQueue.getMaxWrotePosition() != entry.getPos()) {"], [278, "                logger.warn(\"[TRUNCATE] data wrotePos: {} != truncatePos: {}\", dataFileQueue.getMaxWrotePosition(), entry.getPos());"], [279, "                dataFileQueue.truncateDirtyFiles(0);"], [280, "                dataFileQueue.getLastMappedFile(entry.getPos());"], [281, "            }"], [282, "            indexFileQueue.truncateDirtyFiles(entry.getIndex() * INDEX_NUIT_SIZE);"], [283, "            if (indexFileQueue.getMaxWrotePosition() != entry.getIndex() * INDEX_NUIT_SIZE) {"], [284, "                logger.warn(\"[TRUNCATE] index wrotePos: {} != truncatePos: {}\", indexFileQueue.getMaxWrotePosition(), entry.getIndex() * INDEX_NUIT_SIZE);"], [285, "                indexFileQueue.truncateDirtyFiles(0);"], [286, "                indexFileQueue.getLastMappedFile(entry.getIndex() * INDEX_NUIT_SIZE);"], [287, "            }"], [288, "            long dataPos = dataFileQueue.append(dataBuffer.array(), 0, dataBuffer.remaining());"], [289, "            PreConditions.check(dataPos == entry.getPos(), DLegerException.Code.DISK_ERROR, null);"], [290, "            DLegerEntryCoder.encodeIndex(dataPos, entrySize, entry.getMagic(), entry.getIndex(), entry.getTerm(), indexBuffer);"], [291, "            long indexPos = indexFileQueue.append(indexBuffer.array(), 0, indexBuffer.remaining());"], [292, "            PreConditions.check(indexPos == entry.getIndex() * INDEX_NUIT_SIZE, DLegerException.Code.DISK_ERROR, null);"], [293, "            legerEndTerm = memberState.currTerm();"], [294, "            legerEndIndex = entry.getIndex();"], [295, "            committedIndex = entry.getIndex();"], [296, "            reviseLegerBeginIndex();"], [297, "            return entry.getIndex();"], [298, "        }"], [299, "    }"], [300, ""], [301, ""], [302, ""], [303, ""], [304, "    @Override"], [318, "            PreConditions.check(dataPos == entry.getPos(), DLegerException.Code.DISK_ERROR, String.format(\"%d != %d\", dataPos, entry.getPos()));"], [353, "        dLegerEntry.setPos(pos);"], [366, ""], [367, "    @Override"], [368, "    public MemberState getMemberState() {"], [369, "        return memberState;"], [370, "    }"], [371, ""]], "deleted": [[211, "            //get leger begin index"], [212, "            ByteBuffer tmpBuffer = dataFileQueue.getFirstMappedFile().sliceByteBuffer();"], [213, "            tmpBuffer.getInt(); //magic"], [214, "            tmpBuffer.getInt(); //size"], [215, "            legerBeginIndex = byteBuffer.getLong();"], [275, "            PreConditions.check(dataPos != -1, DLegerException.Code.DISK_ERROR, null);"]]}, "num_lines_added": 56, "num_lines_removed": 6}