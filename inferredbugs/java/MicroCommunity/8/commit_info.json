{"hash": "a2a27d09de45b6eb671bb50a25b6eb6d01902beb", "message": "\u4f18\u5316\u4fee\u6539\u5bc6\u7801\u529f\u80fd", "file_num_lines": 89, "diff_parsed": {"added": [[9, "import com.java110.core.smo.user.IUserInnerServiceSMO;"], [10, "import com.java110.dto.user.UserDto;"], [18, "import com.java110.utils.util.BeanConvertUtil;"], [21, "import org.springframework.beans.factory.annotation.Autowired;"], [28, "import java.util.List;"], [29, "import java.util.Map;"], [30, ""], [40, "    @Autowired"], [41, "    private IUserInnerServiceSMO userInnerServiceSMOImpl;"], [42, ""], [122, "        UserDto userDto = new UserDto();"], [123, "        userDto.setStatusCd(\"0\");"], [124, "        userDto.setUserId(paramObj.getString(\"userId\"));"], [125, "        List<UserDto> userDtos = userInnerServiceSMOImpl.getUserHasPwd(userDto);"], [127, "        Assert.listOnlyOne(userDtos, \"\u6570\u636e\u9519\u8bef\u67e5\u8be2\u5230\u591a\u6761\u7528\u6237\u4fe1\u606f\u6216\u5355\u6761\");"], [129, "        JSONObject userInfo = JSONObject.parseObject(JSONObject.toJSONString(userDtos.get(0)));"], [131, "        if (!paramObj.getString(\"oldPwd\").equals(userDtos.get(0).getPassword())) {"]], "deleted": [[112, "        //\u9996\u5148\u6839\u636e\u5458\u5de5ID\u67e5\u8be2\u5458\u5de5\u4fe1\u606f\uff0c\u6839\u636e\u5458\u5de5\u4fe1\u606f\u4fee\u6539\u76f8\u5e94\u7684\u6570\u636e"], [113, "        ResponseEntity responseEntity = null;"], [114, "        AppService appService = DataFlowFactory.getService(dataFlowContext.getAppId(), ServiceCodeConstant.SERVICE_CODE_QUERY_USER_USERINFO);"], [115, "        if (appService == null) {"], [116, "            throw new ListenerExecuteException(1999, \"\u5f53\u524d\u6ca1\u6709\u6743\u9650\u8bbf\u95ee\" + ServiceCodeConstant.SERVICE_CODE_QUERY_USER_USERINFO);"], [118, "        }"], [119, "        String requestUrl = appService.getUrl() + \"?userId=\" + paramObj.getString(\"userId\");"], [120, "        HttpHeaders header = new HttpHeaders();"], [121, "        header.add(CommonConstant.HTTP_SERVICE.toLowerCase(), ServiceCodeConstant.SERVICE_CODE_QUERY_USER_USERINFO);"], [122, "        dataFlowContext.getRequestHeaders().put(\"REQUEST_URL\", requestUrl);"], [123, "        HttpEntity<String> httpEntity = new HttpEntity<String>(\"\", header);"], [124, "        doRequest(dataFlowContext, appService, httpEntity);"], [125, "        responseEntity = dataFlowContext.getResponseEntity();"], [126, ""], [127, "        if (responseEntity.getStatusCode() != HttpStatus.OK) {"], [128, "            dataFlowContext.setResponseEntity(responseEntity);"], [129, "        }"], [131, "        JSONObject userInfo = JSONObject.parseObject(responseEntity.getBody().toString());"], [133, "        if (!paramObj.getString(\"oldPwd\").equals(userInfo.getString(\"password\"))) {"]]}, "num_lines_added": 17, "num_lines_removed": 19}