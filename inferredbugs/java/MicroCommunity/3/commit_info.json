{"hash": "b54074c03698c77f8a102157aefd3fa874a9c51e", "message": "\u6839\u636e\u7528\u6237\u540d\u5b9a\u4f4d\u5458\u5de5\u63a5\u53e3\u7aef\u5f00\u53d1", "file_num_lines": 120, "diff_parsed": {"added": [[19, "import java.util.HashMap;"], [48, "    public void soService(ServiceDataFlowEvent event) throws ListenerExecuteException{"], [66, "        String useIds = getUserIds(responseEntity,dataFlowContext);"], [67, "        if(StringUtil.isEmpty(useIds)){"], [73, "        JSONArray userInfos = getUserInfos(responseEntity);"], [74, "        Map<String,String> paramIn = new HashMap<>();"], [75, "        paramIn.put(\"userIds\",useIds);"], [76, "        paramIn.put(\"storeId\",data.getString(\"storeId\"));"], [77, "        //\u67e5\u8be2\u662f\u5546\u6237\u5458\u5de5\u7684userId"], [78, "        responseEntity = super.callService(dataFlowContext,ServiceCodeConstant.SERVICE_CODE_QUERY_STOREUSER_BYUSERIDS,paramIn);"], [79, ""], [80, "        if(responseEntity.getStatusCode() != HttpStatus.OK){"], [81, "            return ;"], [82, "        }"], [83, ""], [84, "        responseEntity = new ResponseEntity<String>(getStaffUsers(userInfos,responseEntity).toJSONString(),HttpStatus.OK);"], [85, "        dataFlowContext.setResponseEntity(responseEntity);"], [86, "    }"], [87, ""], [88, "    /**"], [89, "     * \u67e5\u8be2\u5546\u6237\u5458\u5de5"], [90, "     * @param userInfos \u7528\u6237\u4fe1\u606f"], [91, "     * @param responseEntity \u5546\u6237\u8fd4\u56de\u7684\u7528\u6237ID\u4fe1\u606f"], [92, "     * @return"], [93, "     */"], [94, "    private JSONArray getStaffUsers(JSONArray userInfos,ResponseEntity<String> responseEntity ){"], [95, ""], [96, ""], [97, "        JSONObject storeUserInfo = null;"], [98, "        JSONArray newStaffUsers = new JSONArray();"], [99, "        JSONArray storeUsers = JSONObject.parseObject(responseEntity.getBody().toString()).getJSONArray(\"storeUsers\");"], [100, "        if(storeUsers == null || storeUsers.size() < 1){"], [101, "            return newStaffUsers;"], [102, "        }"], [103, ""], [104, "        for(int storeUserIndex = 0 ;storeUserIndex < storeUsers.size();storeUserIndex++){"], [105, "            storeUserInfo = storeUsers.getJSONObject(storeUserIndex);"], [106, ""], [107, "            for(int userIndex = 0; userIndex < userInfos.size();userIndex ++){"], [108, "                if(userInfos.getJSONObject(userIndex).getString(\"userId\").equals(storeUserInfo.getString(\"userId\"))){"], [109, "                    newStaffUsers.add(userInfos.getJSONObject(userIndex));"], [110, "                }"], [111, "            }"], [112, "        }"], [113, ""], [114, ""], [115, "        return newStaffUsers;"], [116, "    }"], [117, ""], [118, ""], [119, "    /**"], [120, "     * \u83b7\u53d6\u7528ID"], [121, "     * \u5982\uff1a"], [122, "     *     123,456,567"], [123, "     * @param responseEntity"], [124, "     * @param dataFlowContext"], [125, "     * @return"], [126, "     */"], [127, "    private String getUserIds(ResponseEntity<String> responseEntity,DataFlowContext dataFlowContext){"], [128, "        JSONObject userInfo = null;"], [129, "        String userId = \"\";"], [130, "        JSONArray resultInfo = JSONObject.parseObject(responseEntity.getBody().toString()).getJSONArray(\"users\");"], [131, "        if(resultInfo == null || resultInfo.size() < 1){"], [132, "            return userId;"], [133, "        }"], [134, ""], [135, "        for(int userIndex = 0 ;userIndex < resultInfo.size();userIndex++){"], [136, "            userInfo = resultInfo.getJSONObject(userIndex);"], [137, "            userId += (userInfo.getString(\"user_id\") +\",\");"], [138, "        }"], [139, ""], [140, "        userId = userId.length()>0?userId.substring(0,userId.lastIndexOf(\",\")):userId;"], [141, ""], [142, "        return userId;"], [143, "    }"], [144, ""], [145, ""], [146, "    /**"], [147, "     * \u83b7\u53d6\u7528\u6237"], [148, "     * @param responseEntity"], [149, "     * @return"], [150, "     */"], [151, "    private JSONArray getUserInfos(ResponseEntity<String> responseEntity){"], [152, "        JSONArray resultInfo = JSONObject.parseObject(responseEntity.getBody().toString()).getJSONArray(\"users\");"], [153, "        if(resultInfo == null || resultInfo.size() < 1){"], [154, "            return null;"], [155, "        }"], [157, "        return resultInfo;"]], "deleted": [[47, "    public void soService(ServiceDataFlowEvent event) {"], [53, ""], [54, "        Assert.hasKeyAndValue(data,\"page\",\"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542bpage\u8282\u70b9\");"], [55, "        Assert.hasKeyAndValue(data,\"rows\",\"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542brows\u8282\u70b9\");"], [67, "        JSONArray resultInfo = JSONObject.parseObject(responseEntity.getBody().toString()).getJSONArray(\"users\");"], [69, "        if(resultInfo != null || resultInfo.size() < 1){"]]}, "num_lines_added": 88, "num_lines_removed": 6}