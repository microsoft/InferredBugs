{"hash": "d072c86047404819b1ea194db66bc8852064b551", "message": "cookie consent content api by page name", "file_num_lines": 439, "diff_parsed": {"added": [[32, "import com.salesmanager.shop.model.content.ContentDescriptionEntity;"], [132, "\t\t//ReadableContentPage page = new ReadableContentPage();"], [137, "\t\t\t/*page.setName(contentDescription.get().getName());"], [138, "\t\t\tpage.setPageContent(contentDescription.get().getDescription());*/"], [139, "\t\t\treturn this.contentDescriptionToReadableContent(store, content, contentDescription.get());"], [141, "/*\t\tpage.setId(content.getId());"], [149, "\t\treturn page;*/"], [150, "\t\treturn null;"], [151, "\t}"], [152, ""], [153, "\tprivate ReadableContentPage contentDescriptionToReadableContent(MerchantStore store, Content content, ContentDescription contentDescription) {"], [154, ""], [155, "\t\tReadableContentPage page = new ReadableContentPage();"], [156, ""], [157, ""], [158, "\t\tpage.setName(contentDescription.getName());"], [159, "\t\tpage.setPageContent(contentDescription.getDescription());"], [160, ""], [161, "\t\tpage.setId(content.getId());"], [162, "\t\tpage.setSlug(contentDescription.getSeUrl());"], [163, "\t\tpage.setDisplayedInMenu(content.isLinkToMenu());"], [164, "\t\tpage.setTitle(contentDescription.getTitle());"], [165, "\t\tpage.setMetaDetails(contentDescription.getMetatagDescription());"], [166, "\t\tpage.setContentType(ContentType.PAGE.name());"], [167, "\t\tpage.setCode(content.getCode());"], [168, "\t\tpage.setPath(fileUtils.buildStaticFilePath(store.getCode(), contentDescription.getSeUrl()));"], [170, ""], [171, ""], [352, "\t\t\t\tcontent = Optional.ofNullable(contentService.getByCode(code, store))"], [355, "\t\t\t\tcontent = Optional.ofNullable(contentService.getByCode(code, store, language))"], [552, ""], [553, "\t@Override"], [554, "\tpublic ReadableContentPage getContentPageByName(String name, MerchantStore store, Language language) {"], [555, "\t\tValidate.notNull(name, \"Content name cannot be null\");"], [556, "\t\tValidate.notNull(store, \"MerchantStore cannot be null\");"], [557, "\t\tValidate.notNull(language, \"Language cannot be null\");"], [558, ""], [559, "\t\ttry {"], [560, ""], [561, ""], [562, "\t\t\tContentDescription contentDescription = Optional.ofNullable(contentService.getBySeUrl(store, name))"], [563, "\t\t\t\t\t.orElseThrow(() -> new ResourceNotFoundException(\"No page found : \" + name));"], [564, ""], [565, "\t\t\treturn this.contentDescriptionToReadableContent(store, contentDescription.getContent(), contentDescription);"], [566, ""], [567, "\t\t} catch (Exception e) {"], [568, "\t\t\tthrow new ServiceRuntimeException(\"Error while getting page \" + e.getMessage(), e);"], [569, "\t\t}"], [570, "\t}"]], "deleted": [[36, "import com.salesmanager.shop.model.content.ContentDescriptionEntity;"], [38, "import com.salesmanager.shop.model.content.ContentDescriptionEntity;"], [133, "\t\tReadableContentPage page = new ReadableContentPage();"], [138, "\t\t\tpage.setName(contentDescription.get().getName());"], [139, "\t\t\tpage.setPageContent(contentDescription.get().getDescription());"], [141, "\t\tpage.setId(content.getId());"], [330, "\t\t\t\tOptional.ofNullable(contentService.getByCode(code, store))"], [333, "\t\t\t\tOptional.ofNullable(contentService.getByCode(code, store, language))"]]}, "num_lines_added": 49, "num_lines_removed": 8}