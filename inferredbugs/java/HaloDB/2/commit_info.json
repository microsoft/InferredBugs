{"hash": "8ade92e6c97bd95837cf302bca36039ad243bcd2", "message": "Use only a single rw channel.", "file_num_lines": 160, "diff_parsed": {"added": [[19, "\tprivate FileChannel channel;"], [37, "    private HaloDBFile(int fileId, File backingFile, IndexFile indexFile,"], [38, "                       FileChannel channel, HaloDBOptions options) throws IOException {"], [42, "\t\tthis.channel = channel;"], [43, "\t\tthis.writeOffset = channel.size();"], [59, "\t\t\tbytesRead = channel.read(destinationBuffer, currentPosition);"], [89, "\t\twriteToChannel(record.serialize(), channel);"], [132, "\tFileChannel getChannel() {"], [133, "\t\treturn channel;"], [145, "\t\treturn new HaloDBFile(fileId, filename, indexFile, rch, options);"], [156, "\t\tFileChannel channel = new RandomAccessFile(file, \"rw\").getChannel();"], [164, "\t\treturn new HaloDBFile(fileId, file, indexFile, channel, options);"], [171, "    void close() throws IOException {"], [172, "\t\tif (channel != null) {"], [173, "\t\t\tchannel.close();"], [177, "    void delete() throws IOException {"], [206, "\t\t\tthis.endOffset = channel.size();"]], "deleted": [[19, "\tprivate FileChannel writeChannel;"], [20, "\tprivate FileChannel readChannel;"], [38, "    private HaloDBFile(int fileId, File backingFile, IndexFile indexFile, FileChannel writeChannel,"], [39, "\t\t\t\t\t   FileChannel readChannel, HaloDBOptions options) throws IOException {"], [43, "\t\tthis.writeChannel = writeChannel;"], [44, "\t\tthis.readChannel = readChannel;"], [45, "\t\tthis.writeOffset = readChannel.size();"], [61, "\t\t\tbytesRead = readChannel.read(destinationBuffer, currentPosition);"], [91, "\t\twriteToChannel(record.serialize(), writeChannel);"], [130, "\tFileChannel getWriteChannel() {"], [131, "\t\treturn writeChannel;"], [132, "\t}"], [133, ""], [138, "\tFileChannel getReadChannel() {"], [139, "\t\treturn readChannel;"], [151, "\t\treturn new HaloDBFile(fileId, filename, indexFile, null, rch, options);"], [162, "\t\t//TODO: do we need a separate read and write channel."], [163, "\t\tFileChannel wch = new RandomAccessFile(file, \"rw\").getChannel();"], [164, "\t\tFileChannel rch = new RandomAccessFile(file, \"r\").getChannel();"], [172, "\t\treturn new HaloDBFile(fileId, file, indexFile, wch, rch, options);"], [179, "\tsynchronized void closeForWriting() throws IOException {"], [180, "\t\tif (writeChannel != null) {"], [181, "\t\t\twriteChannel.close();"], [182, "\t\t\twriteChannel = null;"], [183, "\t\t}"], [184, "\t}"], [185, ""], [186, "\tpublic synchronized void close() throws IOException {"], [187, "\t\tcloseForWriting();"], [188, "\t\tif (readChannel != null) {"], [189, "\t\t\treadChannel.close();"], [193, "\tsynchronized void delete() throws IOException {"], [222, "\t\t\tthis.endOffset = readChannel.size();"]]}, "num_lines_added": 17, "num_lines_removed": 33}