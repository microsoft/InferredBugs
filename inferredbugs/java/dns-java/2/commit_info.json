{"hash": "23ab07756023e5f3537b3035db97405bc97cf71c", "message": "naming and api changes based on gh feedback", "file_num_lines": 71, "diff_parsed": {"added": [[20, "import com.google.common.collect.Sets;"], [22, "import com.spotify.dns.ChangeNotifier;"], [26, "import com.spotify.dns.DnsSrvWatcher;"], [39, "    Function<LookupResult, Integer> resultTransformer = new Function<LookupResult, Integer>() {"], [40, "      @Nullable"], [41, "      @Override"], [42, "      public Integer apply(@Nullable LookupResult input) {"], [43, "        return input.weight();"], [44, "      }"], [45, "    };"], [46, ""], [53, ""], [54, "    DnsSrvWatcher<LookupResult> watcher = DnsSrvResolvers.newWatcherBuilder(resolver)"], [55, "        .polling(1, TimeUnit.SECONDS)"], [56, "        .build();"], [69, "          ChangeNotifier<LookupResult> notifier = watcher.watch(line);"], [70, "          notifier.setListener(new ChangeListener(line), false);"], [79, "  static class ChangeListener implements ChangeNotifier.Listener<LookupResult> {"], [83, "    ChangeListener(String name) {"], [88, "    public void endpointsChanged(ChangeNotifier.ChangeNotification<LookupResult> changeNotification) {"], [90, "      for (LookupResult endpoint : changeNotification.previous()) {"], [91, "        System.out.println(\"  prev: \" + endpoint);"], [92, "      }"], [93, ""], [94, "      for (LookupResult endpoint : changeNotification.current()) {"], [95, "        System.out.println(\"  curr: \" + endpoint);"], [96, "      }"], [97, ""], [98, "      final Sets.SetView<LookupResult> unchanged ="], [99, "          Sets.intersection(changeNotification.current(), changeNotification.previous());"], [100, ""], [101, "      for (LookupResult endpoint : unchanged) {"], [102, "        System.out.println(\"  noch: \" + endpoint);"]], "deleted": [[24, "import com.spotify.dns.EndpointProvider;"], [26, "import com.spotify.dns.PollingDnsSrvResolver;"], [44, "    PollingDnsSrvResolver<String> poller = DnsSrvResolvers.pollingResolver(resolver,"], [45, "      new Function<LookupResult, String>() {"], [46, "        @Nullable"], [47, "        @Override"], [48, "        public String apply(@Nullable LookupResult input) {"], [49, "          return input.toString() + System.currentTimeMillis() / 5000;"], [50, "        }"], [51, "      }"], [52, "    );"], [65, "          poller.poll(line, 1, TimeUnit.SECONDS)"], [66, "              .setListener(new EndpointListener(line), false);"], [75, "  static class EndpointListener implements EndpointProvider.Listener<String> {"], [79, "    EndpointListener(String name) {"], [84, "    public void endpointsChanged(EndpointProvider<String> endpointProvider) {"], [86, "      for (String endpoint : endpointProvider.getEndpoints()) {"], [87, "        System.out.println(\"  \" + endpoint);"]]}, "num_lines_added": 33, "num_lines_removed": 18}