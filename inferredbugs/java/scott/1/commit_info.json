{"hash": "77ddaa4e7d1ed8ad0cb50ea7c6ba6558e03b6f0a", "message": "Fix support for Mockito, Issue #25", "file_num_lines": 189, "diff_parsed": {"added": [[23, "\tprivate int lineNumberForMethodCallTrack;"], [59, "\t\t\tinstrumentToTrackFieldState(accessedField, lineNumber);"], [65, "\t\t\t\tinstrumentToTrackVariableName(localVariableScope, lineNumber);"], [66, "\t\t\t\tinstrumentToTrackVariableState(localVariableScope, lineNumber);"], [73, "\t\tthis.lineNumberForMethodCallTrack = this.lineNumber;"], [104, "\t\tif (this.lineNumberForMethodCallTrack == 0) {"], [105, "\t\t\tthis.lineNumberForMethodCallTrack = this.lineNumber;"], [106, "\t\t}"], [108, "\t\tif (!owner.startsWith(\"org/mockito\")) {"], [109, "\t\t\t// track every variable state after method calls"], [110, "\t\t\tfor (LocalVariableScope localVariableScope : localVariableScopes) {"], [111, "\t\t\t\tif (!localVariables.contains(localVariableScope.var)) continue;"], [112, ""], [113, "\t\t\t\tif (isVariableInScope(localVariableScope.var)) {"], [114, "\t\t\t\t\tinstrumentToTrackVariableState(localVariableScope, lineNumberForMethodCallTrack);"], [115, "\t\t\t\t}"], [116, "\t\t\t}"], [118, "\t\t\t// track every field state after method calls"], [119, "\t\t\tfor (AccessedField accessedField : accessedFields) {"], [120, "\t\t\t\tinstrumentToTrackFieldState(accessedField, lineNumberForMethodCallTrack);"], [124, "\t\tthis.lineNumberForMethodCallTrack = this.lineNumber;"], [125, ""], [126, "\t\t/*"], [127, "\t\t * Visit the method instruction after placing the tracking code"], [128, "\t\t * because otherwise we might confuse Mockito, see Issue #25."], [129, "\t\t * Because of this, the tracking code has to book the values to the previous line"], [130, "\t\t * for the first method call for every line."], [131, "\t\t */"], [132, "\t\tsuper.visitMethodInsn(opcode, owner, name, desc, itf);"], [151, "\t\t\t\tinstrumentToTrackVariableName(lvs, lineNumber);"], [152, "\t\t\t\tinstrumentToTrackVariableState(lvs, lineNumber);"], [161, "\t\t// Track variable state at variable increases (e.g. i++)."], [163, "\t\tinstrumentToTrackVariableState(lvs, lineNumber);"], [179, "\t\t\t\t\tinstrumentToTrackFieldState(accessedField, lineNumber);"], [193, "\tprivate void instrumentToTrackVariableState(LocalVariableScope localVariableScope, int lineNumber) {"], [194, "\t\tLogger.log(\" - instrumentToTrackVariableState of variable at \" + getLineNumberBoundedByScope(lineNumber, localVariableScope) + \": \" + localVariableScope);"], [196, "\t\tsuper.visitLdcInsn(getLineNumberBoundedByScope(lineNumber, localVariableScope));"], [202, "\tprivate int getLineNumberBoundedByScope(int lineNumber, LocalVariableScope localVariableScope) {"], [203, "\t\treturn Math.min(localVariableScope.end, Math.max(lineNumber, localVariableScope.start));"], [204, "\t}"], [205, ""], [206, "\tprivate void instrumentToTrackFieldState(AccessedField accessedField, int lineNumber) {"], [229, "\tprivate void instrumentToTrackVariableName(LocalVariableScope localVariableScope, int lineNumber) {"], [230, "\t\tLogger.log(\" - instrumentToTrackVariableName at \" + getLineNumberBoundedByScope(lineNumber, localVariableScope) + \": \" + localVariableScope);"], [232, "\t\tsuper.visitLdcInsn(getLineNumberBoundedByScope(lineNumber, localVariableScope));"]], "deleted": [[58, "\t\t\tinstrumentToTrackFieldState(accessedField);"], [64, "\t\t\t\tinstrumentToTrackVariableName(localVariableScope);"], [65, "\t\t\t\tinstrumentToTrackVariableState(localVariableScope);"], [102, "\t\tsuper.visitMethodInsn(opcode, owner, name, desc, itf);"], [104, "\t\t// track every variable state after method calls"], [105, "\t\tfor (LocalVariableScope localVariableScope : localVariableScopes) {"], [106, "\t\t\tif (!localVariables.contains(localVariableScope.var)) continue;"], [108, "\t\t\tif (isVariableInScope(localVariableScope.var)) {"], [109, "\t\t\t\tinstrumentToTrackVariableState(localVariableScope);"], [113, "\t\t// track every field state after method calls"], [114, "\t\tfor (AccessedField accessedField : accessedFields) {"], [115, "\t\t\tinstrumentToTrackFieldState(accessedField);"], [116, "\t\t}"], [135, "\t\t\t\tinstrumentToTrackVariableName(lvs);"], [136, "\t\t\t\tinstrumentToTrackVariableState(lvs);"], [145, "\t\t// Track variable state and name at variable stores. (At variable increases.)"], [147, "\t\tinstrumentToTrackVariableName(lvs);"], [148, "\t\tinstrumentToTrackVariableState(lvs);"], [164, "\t\t\t\t\tinstrumentToTrackFieldState(accessedField);"], [178, "\tprivate void instrumentToTrackVariableState(LocalVariableScope localVariableScope) {"], [179, "\t\tLogger.log(\" - instrumentToTrackVariableState of variable at \" + lineNumber + \": \" + localVariableScope);"], [181, "\t\tsuper.visitLdcInsn(lineNumber);"], [187, "\tprivate void instrumentToTrackFieldState(AccessedField accessedField) {"], [210, "\tprivate void instrumentToTrackVariableName(LocalVariableScope localVariableScope) {"], [211, "\t\tLogger.log(\" - instrumentToTrackVariableName at \" + lineNumber + \": \" + localVariableScope);"], [213, "\t\tsuper.visitLdcInsn(lineNumber);"]]}, "num_lines_added": 45, "num_lines_removed": 26}