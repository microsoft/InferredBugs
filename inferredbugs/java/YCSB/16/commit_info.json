{"hash": "57e1ab5a0cae13d1766c8fa6bdbf9d9117ee50d0", "message": "[hbase10] Still too many threads #691.\nFix broken synchronization meant to guard against over-creation\nof cluster connection instances on startup when multiple threads.", "file_num_lines": 345, "diff_parsed": {"added": [[54, "import java.util.concurrent.atomic.AtomicInteger;"], [67, ""], [68, "  private static AtomicInteger threadCount = new AtomicInteger(0);"], [73, ""], [74, "  /**"], [75, "   * A Cluster Connection instance that is shared by all running ycsb threads."], [76, "   * Needs to be initialized late so we pick up command-line configs if any."], [77, "   * To ensure one instance only in a multi-threaded context, guard access"], [78, "   * with a 'lock' object."], [79, "   * @See #CONNECTION_LOCK."], [80, "   */"], [82, "  private static final Object CONNECTION_LOCK = new Object();"], [133, "    if ((getProperties().getProperty(\"principal\")!=null)"], [136, "        UserGroupInformation.loginUserFromKeytab(getProperties().getProperty(\"principal\"),"], [145, "      threadCount.getAndIncrement();"], [146, "      synchronized (CONNECTION_LOCK) {"], [148, "          // Initialize if not set up already."], [179, "      synchronized (CONNECTION_LOCK) {"], [180, "        connection.getTable(tName).getTableDescriptor();"], [181, "      }"], [208, "      threadCount.decrementAndGet();"], [209, "      if (threadCount.get() <= 0) {"], [210, "        // Means we are done so ok to shut down the Connection."], [211, "        synchronized (CONNECTION_LOCK) {"], [212, "          if (connection != null) {"], [213, "            connection.close();"], [214, "            connection = null;"], [215, "          }"], [225, "    synchronized (CONNECTION_LOCK) {"], [226, "      this.currentTable = connection.getTable(tName);"], [227, "      if (clientSideBuffering) {"], [228, "        final BufferedMutatorParams p = new BufferedMutatorParams(tName);"], [229, "        p.writeBufferSize(writeBufferSize);"], [230, "        this.bufferedMutator = connection.getBufferedMutator(p);"], [231, "      }"]], "deleted": [[66, ""], [67, "  // Must be an object for synchronization and tracking running thread counts."], [68, "  private static Integer threadCount = 0;"], [124, "    if ((getProperties().getProperty(\"principal\")!=null)"], [127, "        UserGroupInformation.loginUserFromKeytab(getProperties().getProperty(\"principal\"),"], [136, "      synchronized(threadCount) {"], [137, "        ++threadCount;"], [169, "      connection.getTable(tName).getTableDescriptor();"], [196, "      synchronized(threadCount) {"], [197, "        --threadCount;"], [198, "        if (threadCount <= 0 && connection != null) {"], [199, "          connection.close();"], [200, "          connection = null;"], [210, "    this.currentTable = this.connection.getTable(tName);"], [211, "    // suggestions from"], [212, "    // http://ryantwopointoh.blogspot.com/2009/01/"], [213, "    // performance-of-hbase-importing.html"], [214, "    if (clientSideBuffering) {"], [215, "      final BufferedMutatorParams p = new BufferedMutatorParams(tName);"], [216, "      p.writeBufferSize(writeBufferSize);"], [217, "      this.bufferedMutator = this.connection.getBufferedMutator(p);"]]}, "num_lines_added": 35, "num_lines_removed": 21}