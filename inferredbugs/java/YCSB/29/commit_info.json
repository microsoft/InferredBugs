{"hash": "1a3c8cb92e97348b11ed3441380e13ee852523de", "message": "[hbase10] Address #701 by mimicking the same locks from the HBase 0.9\u2026 (#1028)\n\n* [hbase10] Fix #701 by mimicking the same locks from the HBase 0.98 client in the HBase 10 client.\r\n\r\n* Address CR comments, thanks @allanbank.\r\n\r\n* Addressed the table lock.\r\n\r\n* Restore the lock on the connection shutdown.", "file_num_lines": 338, "diff_parsed": {"added": [[69, "  private static final AtomicInteger THREAD_COUNT = new AtomicInteger(0);"], [70, ""], [72, ""], [146, "    String table = getProperties().getProperty(TABLENAME_PROPERTY, TABLENAME_PROPERTY_DEFAULT);"], [148, "      THREAD_COUNT.getAndIncrement();"], [149, "      synchronized (THREAD_COUNT) {"], [153, ""], [154, "          // Terminate right now if table does not exist, since the client"], [155, "          // will not propagate this error upstream once the workload"], [156, "          // starts."], [157, "          final TableName tName = TableName.valueOf(table);"], [158, "          connection.getTable(tName).getTableDescriptor();"], [204, "      int threadCount = THREAD_COUNT.decrementAndGet();"], [205, "      if (threadCount <= 0) {"], [207, "        synchronized (THREAD_COUNT) {"], [208, "          if (connection != null) {"], [209, "            connection.close();"], [210, "            connection = null;"], [211, "          }"], [221, "    this.currentTable = connection.getTable(tName);"], [222, "    if (clientSideBuffering) {"], [223, "      final BufferedMutatorParams p = new BufferedMutatorParams(tName);"], [224, "      p.writeBufferSize(writeBufferSize);"], [225, "      this.bufferedMutator = connection.getBufferedMutator(p);"]], "deleted": [[70, ""], [71, "  private static AtomicInteger threadCount = new AtomicInteger(0);"], [72, ""], [85, "  private static final Object CONNECTION_LOCK = new Object();"], [148, "      threadCount.getAndIncrement();"], [149, "      synchronized (CONNECTION_LOCK) {"], [175, ""], [176, "    // Terminate right now if table does not exist, since the client"], [177, "    // will not propagate this error upstream once the workload"], [178, "    // starts."], [179, "    String table = getProperties().getProperty(TABLENAME_PROPERTY, TABLENAME_PROPERTY_DEFAULT);"], [180, "    try {"], [181, "      final TableName tName = TableName.valueOf(table);"], [182, "      synchronized (CONNECTION_LOCK) {"], [183, "        connection.getTable(tName).getTableDescriptor();"], [184, "      }"], [185, "    } catch (IOException e) {"], [186, "      throw new DBException(e);"], [187, "    }"], [211, "      threadCount.decrementAndGet();"], [212, "      if (threadCount.get() <= 0) {"], [214, "        synchronized (CONNECTION_LOCK) {"], [215, "          if (connection != null) {"], [216, "            connection.close();"], [217, "            connection = null;"], [218, "          }"], [228, "    synchronized (CONNECTION_LOCK) {"], [229, "      this.currentTable = connection.getTable(tName);"], [230, "      if (clientSideBuffering) {"], [231, "        final BufferedMutatorParams p = new BufferedMutatorParams(tName);"], [232, "        p.writeBufferSize(writeBufferSize);"], [233, "        this.bufferedMutator = connection.getBufferedMutator(p);"], [234, "      }"]]}, "num_lines_added": 24, "num_lines_removed": 33}