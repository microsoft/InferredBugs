{"hash": "0397cb6c651ad5c54a5b41f9055f2931ad60a784", "message": "Optimizing the driver to remove unneeded work and (#1298)\n\nfixing a bug in update.", "file_num_lines": 342, "diff_parsed": {"added": [[236, "    Document document = null;"], [252, ""], [287, "    // Azure Cosmos does not have patch support.  Until then we need to read"], [288, "    // the document, update in place, and then write back."], [289, "    // This could actually be made more efficient by using a stored procedure"], [290, "    // and doing the read/modify write on the server side.  Perhaps"], [291, "    // that will be a future improvement."], [292, ""], [294, "    ResourceResponse<Document> updatedResource = null;"], [295, "    ResourceResponse<Document> readResouce = null;"], [296, "    RequestOptions reqOptions = null;"], [297, "    Document document = null;"], [298, ""], [299, "    try {"], [300, "      reqOptions = getRequestOptions(key);"], [301, "      readResouce = AzureCosmosClient.client.readDocument(documentLink, reqOptions);"], [302, "      document = readResouce.getResource();"], [303, "    } catch (DocumentClientException e) {"], [304, "      if (!this.includeExceptionStackInLog) {"], [305, "        e = null;"], [306, "      }"], [307, "      LOGGER.error(\"Failed to read key {} in collection {} in database {} during update operation\","], [308, "          key, table, this.databaseName, e);"], [309, "      return Status.ERROR;"], [310, "    }"], [312, "    // Update values"], [313, "    for (Entry<String, ByteIterator> entry : values.entrySet()) {"], [314, "      document.set(entry.getKey(), entry.getValue().toString());"], [316, ""], [331, ""], [339, "    RequestOptions requestOptions = getRequestOptions(key);"], [340, ""], [345, "            requestOptions,"], [350, "            requestOptions,"], [368, ""]], "deleted": [[62, "  private static final int NS_IN_US = 1000;"], [63, "  private static final String NA_STRING = \"N/A\";"], [64, ""], [239, "    Document document;"], [240, "    long startTime = System.nanoTime();"], [251, "    } finally {"], [252, "      long elapsed = (System.nanoTime() - startTime) / NS_IN_US;"], [253, "      LOGGER.debug(\"Read key {} in {}us - ActivityID: {}\", key, elapsed,"], [254, "              readResource != null ? readResource.getActivityId() : NA_STRING);"], [259, "      LOGGER.trace(\"Read result: {}\", document);"], [267, "    long startTime = System.nanoTime();"], [283, "    } finally {"], [284, "      long elapsed = (System.nanoTime() - startTime) / NS_IN_US;"], [285, "      LOGGER.debug(\"Queried {} records for key {} in {}us - ActivityID: {}\","], [286, "              recordcount, startkey, elapsed,"], [287, "              feedResponse != null ? feedResponse.getActivityId() : NA_STRING);"], [302, "    Document document = getDocumentDefinition(key, values);"], [304, "    RequestOptions reqOptions = getRequestOptions(key);"], [305, "    if (reqOptions == null) {"], [306, "      reqOptions = new RequestOptions();"], [313, "    ResourceResponse<Document> updatedResource = null;"], [314, "    long startTime = System.nanoTime();"], [323, "    } finally {"], [324, "      long elapsed = (System.nanoTime() - startTime) / NS_IN_US;"], [325, "      LOGGER.debug(\"Updated key {} in {}us - ActivityID: {}\", key, elapsed,"], [326, "              updatedResource != null ? updatedResource.getActivityId() : NA_STRING);"], [328, ""], [336, "    long startTime = System.nanoTime();"], [341, "            getRequestOptions(key),"], [346, "            getRequestOptions(key),"], [356, "    } finally {"], [357, "      long elapsed = (System.nanoTime() - startTime) / NS_IN_US;"], [358, "      LOGGER.debug(\"Inserted key {} in {}us - ActivityID: {}\", key, elapsed,"], [359, "              resourceResponse != null ? resourceResponse.getActivityId() : NA_STRING);"], [368, "    long startTime = System.nanoTime();"], [378, "    } finally {"], [379, "      long elapsed = (System.nanoTime() - startTime) / NS_IN_US;"], [380, "      LOGGER.debug(\"Deleted key {} in {}us - ActivityID: {}\", key, elapsed,"], [381, "              deletedResource != null ? deletedResource.getActivityId() : NA_STRING);"], [394, "      LOGGER.trace(\"Result- key: {}, value: {}\", attr.getKey(), attr.getValue().toString());"]]}, "num_lines_added": 35, "num_lines_removed": 40}