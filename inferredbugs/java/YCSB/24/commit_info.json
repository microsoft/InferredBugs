{"hash": "a564c4cb638ec9fba87ceaf3fef381b5a1489106", "message": "[core] Fix checkstyle for CoreWorkload (#897)", "file_num_lines": 435, "diff_parsed": {"added": [[3, " * <p>"], [7, " * <p>"], [9, " * <p>"], [21, "import com.yahoo.ycsb.generator.*;"], [25, "import java.util.*;"], [31, " * <p>"], [57, " * 'user00000005' key. In order to see its impact, zeropadding needs to be bigger than number of"], [74, "  protected String table;"], [86, "  protected int fieldcount;"], [93, "   * <p>"], [130, "  protected NumberGenerator fieldlengthgenerator;"], [143, "  protected boolean readallfields;"], [156, "  protected boolean writeallfields;"], [236, "  /**"], [247, ""], [311, "  protected NumberGenerator keysequence;"], [312, "  protected DiscreteGenerator operationchooser;"], [313, "  protected NumberGenerator keychooser;"], [314, "  protected NumberGenerator fieldchooser;"], [315, "  protected AcknowledgedCounterGenerator transactioninsertkeysequence;"], [316, "  protected NumberGenerator scanlength;"], [317, "  protected boolean orderedinserts;"], [318, "  protected int recordcount;"], [319, "  protected int zeropadding;"], [320, "  protected int insertionRetryLimit;"], [321, "  protected int insertionRetryInterval;"], [323, "  private Measurements measurements = Measurements.getMeasurements();"], [363, "    fieldnames = new ArrayList<>();"], [368, ""], [404, "        FIELD_LENGTH_DISTRIBUTION_PROPERTY,"], [405, "        FIELD_LENGTH_DISTRIBUTION_PROPERTY_DEFAULT)).equals(\"constant\")) {"], [432, "    } else if (requestdistrib.compareTo(\"zipfian\") == 0) {"], [478, "  protected String buildKeyName(long keynum) {"], [485, "    for (int i = 0; i < fill; i++) {"], [495, "    HashMap<String, ByteIterator> value = new HashMap<>();"], [514, "    HashMap<String, ByteIterator> values = new HashMap<>();"], [598, "    String operation = operationchooser.nextString();"], [599, "    if(operation == null) {"], [600, "      return false;"], [601, "    }"], [602, ""], [603, "    switch (operation) {"], [618, "    }"], [645, "    measurements.measure(\"VERIFY\", (int) (endTime - startTime) / 1000);"], [646, "    measurements.reportStatus(\"VERIFY\", verifyStatus);"], [649, "  protected int nextKeynum() {"], [689, ""], [721, "    long ist = measurements.getIntendedtartTimeNs();"], [733, "    measurements.measure(\"READ-MODIFY-WRITE\", (int) ((en - st) / 1000));"], [734, "    measurements.measureIntended(\"READ-MODIFY-WRITE\", (int) ((en - ist) / 1000));"], [797, "   *"], [802, "  protected static DiscreteGenerator createOperationGenerator(final Properties p) {"], [816, ""]], "deleted": [[3, " *"], [7, " *"], [9, " *"], [20, "import java.util.Properties;"], [21, ""], [23, "import com.yahoo.ycsb.generator.AcknowledgedCounterGenerator;"], [24, "import com.yahoo.ycsb.generator.ConstantIntegerGenerator;"], [25, "import com.yahoo.ycsb.generator.CounterGenerator;"], [26, "import com.yahoo.ycsb.generator.DiscreteGenerator;"], [27, "import com.yahoo.ycsb.generator.ExponentialGenerator;"], [28, "import com.yahoo.ycsb.generator.HistogramGenerator;"], [29, "import com.yahoo.ycsb.generator.HotspotIntegerGenerator;"], [30, "import com.yahoo.ycsb.generator.NumberGenerator;"], [31, "import com.yahoo.ycsb.generator.ScrambledZipfianGenerator;"], [32, "import com.yahoo.ycsb.generator.SequentialGenerator;"], [33, "import com.yahoo.ycsb.generator.SkewedLatestGenerator;"], [34, "import com.yahoo.ycsb.generator.UniformIntegerGenerator;"], [35, "import com.yahoo.ycsb.generator.ZipfianGenerator;"], [39, "import java.util.ArrayList;"], [40, "import java.util.HashMap;"], [41, "import java.util.HashSet;"], [42, "import java.util.List;"], [43, "import java.util.Map;"], [44, "import java.util.Objects;"], [45, "import java.util.Vector;"], [46, ""], [52, " *"], [78, " * 'user00000005' key. In order to see its impact, zeropadding needs to be bigger than number of"], [95, "  public static String table;"], [96, ""], [108, "  int fieldcount;"], [115, "   *"], [152, "  NumberGenerator fieldlengthgenerator;"], [165, "  boolean readallfields;"], [178, "  boolean writeallfields;"], [179, ""], [259, "   /**"], [270, ""], [334, "  NumberGenerator keysequence;"], [335, ""], [336, "  DiscreteGenerator operationchooser;"], [337, ""], [338, "  NumberGenerator keychooser;"], [339, ""], [340, "  NumberGenerator fieldchooser;"], [341, ""], [342, "  AcknowledgedCounterGenerator transactioninsertkeysequence;"], [344, "  NumberGenerator scanlength;"], [345, ""], [346, "  boolean orderedinserts;"], [347, ""], [348, "  int recordcount;"], [349, "  int zeropadding;"], [350, ""], [351, "  int insertionRetryLimit;"], [352, "  int insertionRetryInterval;"], [353, ""], [354, "  private Measurements _measurements = Measurements.getMeasurements();"], [394, "    fieldnames = new ArrayList<String>();"], [399, ""], [435, "          FIELD_LENGTH_DISTRIBUTION_PROPERTY,"], [436, "          FIELD_LENGTH_DISTRIBUTION_PROPERTY_DEFAULT)).equals(\"constant\")) {"], [463, "    }else if (requestdistrib.compareTo(\"zipfian\") == 0) {"], [509, "  public String buildKeyName(long keynum) {"], [516, "    for(int i=0; i<fill; i++) {"], [526, "    HashMap<String, ByteIterator> value = new HashMap<String, ByteIterator>();"], [545, "    HashMap<String, ByteIterator> values = new HashMap<String, ByteIterator>();"], [629, "    switch (operationchooser.nextString()) {"], [644, "    }"], [671, "    _measurements.measure(\"VERIFY\", (int) (endTime - startTime) / 1000);"], [672, "    _measurements.reportStatus(\"VERIFY\", verifyStatus);"], [675, "  int nextKeynum() {"], [715, ""], [747, "    long ist = _measurements.getIntendedtartTimeNs();"], [759, "    _measurements.measure(\"READ-MODIFY-WRITE\", (int) ((en - st) / 1000));"], [760, "    _measurements.measureIntended(\"READ-MODIFY-WRITE\", (int) ((en - ist) / 1000));"], [827, "  public static DiscreteGenerator createOperationGenerator(final Properties p) {"], [841, ""]]}, "num_lines_added": 53, "num_lines_removed": 78}