{"hash": "e0011de4475969c19023694f5074b50e5d12a08f", "message": "BOOKKEEPER-408: BookieReadWriteTest will enter the endless loop and will not leave out (ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421401 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 834, "diff_parsed": {"added": [[37, "import java.util.concurrent.atomic.AtomicInteger;"], [97, "        AtomicInteger rc = new AtomicInteger(BKException.Code.OK);"], [98, "        Enumeration<LedgerEntry> ls = null;"], [105, ""], [106, "        void setReturnCode(int rc) {"], [107, "            this.rc.compareAndSet(BKException.Code.OK, rc);"], [108, "        }"], [109, ""], [110, "        int getReturnCode() {"], [111, "            return rc.get();"], [112, "        }"], [113, ""], [114, "        void setLedgerEntries(Enumeration<LedgerEntry> ls) {"], [115, "            this.ls = ls;"], [116, "        }"], [117, ""], [118, "        Enumeration<LedgerEntry> getLedgerEntries() {"], [119, "            return ls;"], [120, "        }"], [188, "        SyncObj sync = new SyncObj();"], [211, "                assertEquals(\"Error adding\", BKException.Code.OK, sync.getReturnCode());"], [232, "                assertEquals(\"Error reading\", BKException.Code.OK, sync.getReturnCode());"], [240, "            Enumeration<LedgerEntry> ls = sync.getLedgerEntries();"], [274, "        SyncObj sync = new SyncObj();"], [295, "                assertEquals(\"Error adding\", BKException.Code.OK, sync.getReturnCode());"], [350, "                assertEquals(\"Error reading\", BKException.Code.OK, sync.getReturnCode());"], [358, "            Enumeration<LedgerEntry> ls = sync.getLedgerEntries();"], [407, "            SyncObj sync = (SyncObj)ctx;"], [408, "            sync.setLedgerEntries(seq);"], [409, "            sync.setReturnCode(rc);"], [438, "        SyncObj sync = new SyncObj();"], [489, "                assertEquals(\"Error adding\", BKException.Code.OK, sync.getReturnCode());"], [516, "                assertEquals(\"Error reading\", BKException.Code.OK, sync.getReturnCode());"], [533, "        SyncObj sync = new SyncObj();"], [556, "                assertEquals(\"Error adding\", BKException.Code.OK, sync.getReturnCode());"], [571, "            Enumeration<LedgerEntry> ls = lh.readEntries(0, numEntriesToWrite - 1);"], [626, "            Enumeration<LedgerEntry> ls = lh.readEntries(0, numEntriesToWrite - 1);"], [675, "            Enumeration<LedgerEntry> ls = lh.readEntries(0, numEntriesToWrite - 1);"], [722, "            Enumeration<LedgerEntry> ls = lh.readEntries(0, numEntriesToWrite - 1);"], [751, "        SyncObj sync = new SyncObj();"], [774, "                assertEquals(\"Error adding\", BKException.Code.OK, sync.getReturnCode());"], [874, "                assertEquals(\"Error reading\", BKException.Code.OK, sync.getReturnCode());"], [1070, "                assertEquals(\"Error reading\", BKException.Code.OK, sync.getReturnCode());"], [1090, "        SyncObj sync = (SyncObj) ctx;"], [1091, "        sync.setReturnCode(rc);"], [1092, "        synchronized (sync) {"], [1093, "            sync.counter++;"], [1094, "            sync.notify();"], [1100, "        SyncObj sync = (SyncObj) ctx;"], [1101, "        sync.setLedgerEntries(seq);"], [1102, "        sync.setReturnCode(rc);"], [1112, "        sync.setReturnCode(rc);"]], "deleted": [[37, ""], [75, "    Enumeration<LedgerEntry> ls;"], [93, "    // Synchronization"], [94, "    SyncObj sync;"], [95, "    Set<Object> syncObjs;"], [385, "            if(rc != BKException.Code.OK) {"], [386, "                fail(\"Return code is not OK: \" + rc);"], [387, "            }"], [388, ""], [389, "            ls = seq;"], [546, "            ls = lh.readEntries(0, numEntriesToWrite - 1);"], [601, "            ls = lh.readEntries(0, numEntriesToWrite - 1);"], [650, "            ls = lh.readEntries(0, numEntriesToWrite - 1);"], [697, "            ls = lh.readEntries(0, numEntriesToWrite - 1);"], [1061, "        if(rc != BKException.Code.OK) fail(\"Return code is not OK: \" + rc);"], [1062, ""], [1063, "        SyncObj x = (SyncObj) ctx;"], [1064, ""], [1065, "        synchronized (x) {"], [1066, "            x.counter++;"], [1067, "            x.notify();"], [1073, "        if(rc != BKException.Code.OK) fail(\"Return code is not OK: \" + rc);"], [1074, ""], [1075, "        ls = seq;"], [1076, ""], [1086, ""], [1101, "        sync = new SyncObj(); // initialize the synchronization data structure"], [1102, ""]]}, "num_lines_added": 52, "num_lines_removed": 28}