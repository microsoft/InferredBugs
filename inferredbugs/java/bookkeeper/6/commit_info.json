{"hash": "268bdb8c6b5f642967329a99ec1dce5ba0af46d7", "message": "BOOKKEEPER-228: Fix the bugs in BK benchmark (umamaheswararao via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1334107 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 340, "diff_parsed": {"added": [[39, "import org.apache.bookkeeper.conf.ClientConfiguration;"], [40, "import org.apache.commons.cli.CommandLine;"], [41, "import org.apache.commons.cli.CommandLineParser;"], [42, "import org.apache.commons.cli.HelpFormatter;"], [43, "import org.apache.commons.cli.Options;"], [44, "import org.apache.commons.cli.ParseException;"], [45, "import org.apache.commons.cli.PosixParser;"], [54, "import org.slf4j.Logger;"], [55, "import org.slf4j.LoggerFactory;"], [70, "    static class Context {"], [76, "            this.localStartTime = time;"], [190, "                while (this.counter.get() > 0) {"], [191, "                    waitFor(1000);"], [192, "                }"], [200, "        throughput = sent*1000/getDuration();"], [208, "        LOG.info(\"Finished processing in ms: \" + getDuration() + \" tp = \" + throughput);"], [209, "    }"], [210, ""], [211, "    private void waitFor(int waitTime) throws InterruptedException {"], [212, "        Thread.sleep(waitTime);"], [293, "        if(lastWarmUpTP < (throughput = warmUp(servers, data, ledgers, ensemble, quorum, passwd, throttle))) {"]], "deleted": [[23, "import java.io.DataInputStream;"], [37, "import org.apache.bookkeeper.conf.ClientConfiguration;"], [41, "import org.slf4j.Logger;"], [42, "import org.slf4j.LoggerFactory;"], [51, ""], [52, "import org.apache.commons.cli.HelpFormatter;"], [53, "import org.apache.commons.cli.Option;"], [54, "import org.apache.commons.cli.Options;"], [55, "import org.apache.commons.cli.CommandLine;"], [56, "import org.apache.commons.cli.CommandLineParser;"], [57, "import org.apache.commons.cli.PosixParser;"], [58, "import org.apache.commons.cli.ParseException;"], [73, "    class Context {"], [75, "        long globalStartTime;"], [80, "            this.localStartTime = this.globalStartTime = time;"], [88, "        this.pace = pace;"], [151, "        byte messageCount = 0;"], [196, "                while(this.counter.get() > 0)"], [197, "                    Thread.sleep(1000);"], [205, "        throughput = sent*1000/duration;"], [213, "        LOG.info(\"Finished processing in ms: \" + duration + \" tp = \" + throughput);"], [294, "        while(lastWarmUpTP < (throughput = warmUp(servers, data, ledgers, ensemble, quorum, passwd, throttle))) {"], [296, "            lastWarmUpTP = throughput;"], [297, "            // we will just run once, so lets break"], [298, "            break;"]]}, "num_lines_added": 21, "num_lines_removed": 25}