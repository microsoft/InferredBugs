{"hash": "9fcb7c0cddee8b78e1c3aa8db5f7478d9a13397c", "message": "BOOKKEEPER-384: Clean up LedgerManagerFactory and LedgerManager usage in tests (rakeshr via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1379445 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 159, "diff_parsed": {"added": [[38, "import org.apache.zookeeper.KeeperException;"], [39, "import org.junit.After;"], [58, "    private final DigestType digestType = DigestType.CRC32;"], [59, "    private int numberOfLedgers = 3;"], [60, "    private List<Long> ledgerList;"], [61, "    private LedgerManagerFactory newLedgerManagerFactory;"], [62, "    private LedgerManager ledgerManager;"], [63, ""], [64, "    public BookieLedgerIndexTest(String ledgerManagerFactory)"], [65, "            throws IOException, KeeperException, InterruptedException {"], [80, "        ledgerList = new ArrayList<Long>(3);"], [81, "        // initialize ledger manager"], [82, "        newLedgerManagerFactory = LedgerManagerFactory.newLedgerManagerFactory("], [83, "                baseConf, zkc);"], [84, "        ledgerManager = newLedgerManagerFactory.newLedgerManager();"], [85, "    }"], [86, ""], [87, "    @After"], [88, "    public void tearDown() throws Exception {"], [89, "        super.tearDown();"], [90, "        if (null != newLedgerManagerFactory) {"], [91, "            newLedgerManagerFactory.uninitialize();"], [92, "            newLedgerManagerFactory = null;"], [93, "        }"], [94, "        if (null != ledgerManager) {"], [95, "            ledgerManager.close();"], [96, "            ledgerManager = null;"], [97, "        }"], [107, "        for (int i = 0; i < numberOfLedgers; i++) {"], [108, "            createAndAddEntriesToLedger().close();"], [109, "        }"], [135, "        for (int i = 0; i < numberOfLedgers; i++) {"], [136, "            createAndAddEntriesToLedger().close();"], [137, "        }"], [209, "        LedgerHandle lh = bkc.createLedger(digestType, \"admin\".getBytes());"], [219, "        ledgerList.add(lh.getId());"]], "deleted": [[54, "    private byte[] ledgerPassword = \"admin\".getBytes();"], [57, "    private DigestType digestType;"], [58, ""], [59, "    public BookieLedgerIndexTest(String ledgerManagerFactory) {"], [63, "        this.digestType = DigestType.CRC32;"], [83, "        LedgerManagerFactory newLedgerManagerFactory = LedgerManagerFactory"], [84, "                .newLedgerManagerFactory(baseConf, zkc);"], [85, "        LedgerManager ledgerManager = newLedgerManagerFactory"], [86, "                .newLedgerManager();"], [87, ""], [88, "        List<Long> ledgerList = new ArrayList<Long>(3);"], [89, "        LedgerHandle lh = createAndAddEntriesToLedger();"], [90, "        lh.close();"], [91, "        ledgerList.add(lh.getId());"], [92, ""], [93, "        lh = createAndAddEntriesToLedger();"], [94, "        lh.close();"], [95, "        ledgerList.add(lh.getId());"], [97, "        lh = createAndAddEntriesToLedger();"], [98, "        lh.close();"], [99, "        ledgerList.add(lh.getId());"], [125, "        LedgerManagerFactory newLedgerManagerFactory = LedgerManagerFactory"], [126, "                .newLedgerManagerFactory(baseConf, zkc);"], [127, "        LedgerManager ledgerManager = newLedgerManagerFactory"], [128, "                .newLedgerManager();"], [129, ""], [130, "        List<Long> ledgerList = new ArrayList<Long>(3);"], [131, "        LedgerHandle lh = createAndAddEntriesToLedger();"], [132, "        lh.close();"], [133, "        ledgerList.add(lh.getId());"], [134, ""], [135, "        lh = createAndAddEntriesToLedger();"], [136, "        lh.close();"], [137, "        ledgerList.add(lh.getId());"], [138, ""], [139, "        lh = createAndAddEntriesToLedger();"], [140, "        lh.close();"], [141, "        ledgerList.add(lh.getId());"], [160, "            LedgerManagerFactory newLedgerManagerFactory = LedgerManagerFactory"], [161, "                    .newLedgerManagerFactory(baseConf, zkc);"], [162, "            LedgerManager ledgerManager = newLedgerManagerFactory"], [163, "                    .newLedgerManager();"], [164, ""], [165, "            List<Long> ledgerList = new ArrayList<Long>(3);"], [167, "            ledgerList.add(lh1.getId());"], [169, "            ledgerList.add(lh2.getId());"], [221, "        LedgerHandle lh = bkc.createLedger(digestType, ledgerPassword);"]]}, "num_lines_added": 36, "num_lines_removed": 47}