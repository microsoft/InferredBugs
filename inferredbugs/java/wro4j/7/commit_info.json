{"hash": "bd28c3ff411d64e9410afbd8310183152e86e08a", "message": "refactor jarWildcardLocator", "file_num_lines": 83, "diff_parsed": {"added": [[9, "import java.util.ArrayList;"], [37, " *"], [49, ""], [58, "    if (isSupported(jarPath)) {"], [59, "      return locateStreamFromJar(uri, jarPath);"], [60, "    }"], [61, "    return super.locateStream(uri, folder);"], [62, "  }"], [63, ""], [64, "  /**"], [65, "   * @return true if the file is of a certain supported type."], [66, "   */"], [67, "  private boolean isSupported(final File jarPath) {"], [71, "        return true;"], [74, "    return false;"], [76, ""], [84, ""], [88, "   *"], [98, ""], [101, "   *"], [117, ""], [121, "   *"], [135, ""], [139, ""], [141, "    final List<JarEntry> jarEntryList = Collections.list(file.entries());"], [142, "    final List<JarEntry> filteredJarEntryList = new ArrayList<JarEntry>();"], [143, "    for (final JarEntry entry : jarEntryList) {"], [144, "      final boolean isSupportedEntry = entry.getName().startsWith(classPath) && accept(entry, wildcard);"], [145, "      if (isSupportedEntry) {"], [146, "        filteredJarEntryList.add(entry);"], [147, "      }"], [148, "    }"], [150, ""], [151, "    for (final JarEntry entry : filteredJarEntryList) {"]], "deleted": [[36, " *"], [48, ""], [60, "        return locateStreamFromJar(uri, jarPath);"], [63, "    return super.locateStream(uri, folder);"], [65, ""], [73, ""], [77, "   *"], [87, ""], [90, "   *"], [106, ""], [110, "   *"], [124, ""], [128, ""], [130, "    List<JarEntry> jarEntryList = Collections.list(file.entries());"], [131, ""], [133, ""], [134, "    for (JarEntry entry : jarEntryList) {"], [135, "      if (entry.getName().startsWith(classPath) && accept(entry, wildcard)) {"], [139, "      }"]]}, "num_lines_added": 34, "num_lines_removed": 19}