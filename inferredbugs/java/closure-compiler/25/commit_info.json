{"hash": "6c2efacb7315e03b25d0b23a6c881df9955b210a", "message": "Turn off data-flow based variable analysis for pathological cases\nFixes issue 534\nFixes issue 446\n\nR=acleung\nDELTA=397552  (397543 added, 2 deleted, 7 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=3085\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1374 b0f006be-c8cd-11de-a2e8-8d36a3108c74", "file_num_lines": 296, "diff_parsed": {"added": [[92, "  private static boolean shouldOptimizeScope(Scope scope) {"], [97, "    if (scope.isGlobal()) {"], [98, "      return false;"], [100, ""], [101, "    if (LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE <"], [102, "        scope.getVarCount()) {"], [103, "      return false;"], [104, "    }"], [105, ""], [106, "    return true;"], [107, "  }"], [108, ""], [109, "  @Override"], [110, "  public void enterScope(NodeTraversal t) {"], [112, "    if (!shouldOptimizeScope(scope)) {"], [113, "      return;"], [114, "    }"], [116, "    ControlFlowGraph<Node> cfg = t.getControlFlowGraph();"], [142, "    if (!shouldOptimizeScope(t.getScope())) {"]], "deleted": [[92, "  @Override"], [93, "  public void enterScope(NodeTraversal t) {"], [98, "    if (t.inGlobalScope()) {"], [99, "      return;"], [102, "    ControlFlowGraph<Node> cfg = t.getControlFlowGraph();"], [129, "    if (t.inGlobalScope()) {"]]}, "num_lines_added": 19, "num_lines_removed": 6}