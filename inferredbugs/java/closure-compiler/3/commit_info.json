{"hash": "6a94702f5cf769973528adc8b3dc3e9cf56277c8", "message": "Change on 2010/07/07 15:59:31 by johnlenz\n\n        Automated g4 rollback.\n\n        *** Reason for rollback ***\n\n          If an output file is openned, close it to be sure it is flushed.\n\n        *** Original change description ***\n\n        Automated g4 rollback.\n\n        *** Reason for rollback ***\n\n          <enter reason for rollback>\n\n        *** Original change description ***\n\n        Buffer file stream to improve file system performance.\n\n        R=acleung\n        DELTA=36  (26 added, 1 deleted, 9 changed)\n\nChange on 2010/07/07 16:31:41 by nicksantos\n\n        Sort and namespace the baked-in externs files, so that\n        they do not conflict with the user's file names.\n        Fixes issue 194\n\n        R=acleung\n        DELTA=90  (69 added, 17 deleted, 4 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=50002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@266 b0f006be-c8cd-11de-a2e8-8d36a3108c74", "file_num_lines": 176, "diff_parsed": {"added": [[254, "      return CommandLineRunner.getDefaultExterns();"]], "deleted": [[20, "import com.google.common.io.LimitInputStream;"], [38, "import java.io.InputStream;"], [43, "import java.util.zip.ZipEntry;"], [44, "import java.util.zip.ZipInputStream;"], [258, "      InputStream input = Compiler.class.getResourceAsStream("], [259, "          \"/externs.zip\");"], [260, "      ZipInputStream zip = new ZipInputStream(input);"], [261, "      List<JSSourceFile> externs = Lists.newLinkedList();"], [262, ""], [263, "      for (ZipEntry entry; (entry = zip.getNextEntry()) != null; ) {"], [264, "        LimitInputStream entryStream ="], [265, "            new LimitInputStream(zip, entry.getSize());"], [266, "        externs.add("], [267, "            JSSourceFile.fromInputStream(entry.getName(), entryStream));"], [268, "      }"], [269, ""], [270, "      return externs;"]]}, "num_lines_added": 1, "num_lines_removed": 17}