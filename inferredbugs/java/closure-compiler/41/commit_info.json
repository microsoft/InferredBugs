{"hash": "01fbd3a7d7c6fa2d8ba288cdc2820a169d58ed2d", "message": "Remove support for legacy casts.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43450961", "file_num_lines": 1112, "diff_parsed": {"added": [[450, "        JSDocInfo info = n.getJSDocInfo();"], [451, "        if (info != null && info.hasType()) {"], [452, "          n.setJSType(info.getType().evaluate(syntacticScope, registry));"], [454, "        break;"]], "deleted": [[450, "        break;"], [451, "    }"], [452, ""], [453, "    // TODO(johnlenz): remove this after the CAST node change has shaken out."], [454, "    if (!n.isFunction()) {"], [455, "      JSDocInfo info = n.getJSDocInfo();"], [456, "      if (info != null && info.hasType()) {"], [457, "        JSType castType = info.getType().evaluate(syntacticScope, registry);"], [458, ""], [459, "        // A stubbed type declaration on a qualified name should take"], [460, "        // effect for all subsequent accesses of that name,"], [461, "        // so treat it the same as an assign to that name."], [462, "        if (n.isQualifiedName() &&"], [463, "            n.getParent().isExprResult()) {"], [464, "          updateScopeForTypeChange(scope, n, n.getJSType(), castType);"], [466, ""], [467, "        n.setJSType(castType);"], [468, "      }"]]}, "num_lines_added": 4, "num_lines_removed": 18}