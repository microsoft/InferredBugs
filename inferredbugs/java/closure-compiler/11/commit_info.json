{"hash": "3e42e575f21275d2d0f8196f2f22b4ea06995d5b", "message": "Make CommandLineRunner more extensible\nFixes issue 353.\nContributed by Ibrahim Chaehoi\n\nRevision created by MOE tool push_codebase.\n\nR=johnlenz\nDELTA=45  (30 added, 2 deleted, 13 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=679\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@823 b0f006be-c8cd-11de-a2e8-8d36a3108c74", "file_num_lines": 969, "diff_parsed": {"added": [[307, "  public static class FlagUsageException extends Exception {"], [310, "    public FlagUsageException(String message) {"], [318, "   * Can be overridden by subclasses who want to pull files from different"], [319, "   * places."], [320, "   *"], [326, "  protected List<JSSourceFile> createInputs(List<String> files,"], [417, "      checkModuleName(name);"], [419, "              throw new FlagUsageException(\"Duplicate module name: \" + name);"], [420, "          }"], [477, "   * Validates the module name. Can be overridden by subclasses."], [478, "   * @param name The module name"], [479, "   * @throws FlagUsageException if the validation fails"], [480, "   */"], [481, "  protected void checkModuleName(String name)"], [482, "      throws FlagUsageException {"], [483, "    if (!TokenStream.isJSIdentifier(name)) {"], [484, "      throw new FlagUsageException(\"Invalid module name: '\" + name + \"'\");"], [485, "    }"], [486, "  }"], [487, ""], [488, "  /**"], [704, "          writeOutput(writer, compiler, compiler.toSource(m),"], [705, "              moduleWrappers.get(m.getName()), \"%s\");"], [833, "   * 3) Multiple js output, multiple extra output: sub in the module output"], [834, "   *    file."], [871, "   * Converts a file name into a Writer taking in account the output charset."], [881, ""], [882, "    return streamToOutputWriter(filenameToOutputStream(fileName));"], [883, "  }"], [884, ""], [885, "  /**"], [886, "   * Converts a file name into a Ouputstream."], [887, "   * Returns null if the file name is null."], [888, "   */"], [889, "  protected OutputStream filenameToOutputStream(String fileName)"], [890, "      throws IOException {"], [891, "    if (fileName == null){"], [892, "      return null;"], [893, "    }"], [894, "    return new FileOutputStream(fileName);"], [1018, "        OutputStream file ="], [1019, "            filenameToOutputStream(functionInformationMapOutputPath);"], [1557, ""]], "deleted": [[307, "  protected static class FlagUsageException extends Exception {"], [310, "    FlagUsageException(String message) {"], [323, "  private List<JSSourceFile> createInputs(List<String> files,"], [414, "      if (!TokenStream.isJSIdentifier(name)) {"], [415, "        throw new FlagUsageException(\"Invalid module name: '\" + name + \"'\");"], [416, "      }"], [418, "        throw new FlagUsageException(\"Duplicate module name: \" + name);"], [419, "      }"], [691, "          writeOutput(writer, compiler, compiler.toSource(m), moduleWrappers.get("], [692, "              m.getName()), \"%s\");"], [820, "   * 3) Multiple js output, multiple extra output: sub in the module output file."], [857, "   * Converts a file name into a Writer."], [867, "    return streamToOutputWriter(new FileOutputStream(fileName));"], [991, "        FileOutputStream file ="], [992, "            new FileOutputStream(functionInformationMapOutputPath);"], [1530, ""]]}, "num_lines_added": 43, "num_lines_removed": 16}