{"hash": "21cf8fd6e2ba57eccaaf18b3053bd68d0c174c3b", "message": "Adds a method to export module dependencies as JSON.\n\nEnables output of individual module compilation units for modules\nderived from CommonJS based input files.\n\nR=johnlenz,nicksantos\nDELTA=133  (133 added, 0 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=5498\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2189 b0f006be-c8cd-11de-a2e8-8d36a3108c74", "file_num_lines": 1329, "diff_parsed": {"added": [[35, "import com.google.javascript.jscomp.deps.SortedDependencies;"], [36, "import com.google.javascript.jscomp.deps.SortedDependencies.CircularDependencyException;"], [749, "      if (options.processCommonJSModules) {"], [750, "        // For CommonJS modules constructs modules from actual inputs."], [751, "        modules = Lists.newArrayList(compiler.getDegenerateModuleGraph()"], [752, "            .getAllModules());"], [753, "        // The module graph constructor expects modules to be already sorted."], [754, "        try {"], [755, "          SortedDependencies<JSModule> sorter ="], [756, "              new SortedDependencies<JSModule>(modules);"], [757, "          modules = sorter.getDependenciesOf(modules, true);"], [758, "        } catch (CircularDependencyException e) {"], [759, "          throw Throwables.propagate(e);"], [760, "        }"], [761, "      }"], [823, "      outputModuleGraphJson();"], [826, "      outputModuleGraphJson();"], [1439, "   * Creates a file containing the current module graph in JSON serialization."], [1440, "   */"], [1441, "  private void outputModuleGraphJson() throws IOException {"], [1442, "    if (config.outputModuleDependencies != null &&"], [1443, "        config.outputModuleDependencies != \"\") {"], [1444, "      Writer out = fileNameToOutputWriter2(config.outputModuleDependencies);"], [1445, "      printModuleGraphJsonTo(compiler.getDegenerateModuleGraph(), out);"], [1446, "      out.close();"], [1447, "    }"], [1448, "  }"], [1449, ""], [1450, "  /**"], [1451, "   * Prints the current module graph as JSON."], [1452, "   */"], [1453, "  @VisibleForTesting"], [1454, "  void printModuleGraphJsonTo(JSModuleGraph graph,"], [1455, "      Appendable out) throws IOException {"], [1456, "    out.append(compiler.getDegenerateModuleGraph().toJson().toString());"], [1457, "  }"], [1458, ""], [1459, "  /**"], [1984, "    private String outputModuleDependencies = null;"], [1985, ""], [1986, "    /**"], [1987, "     * Sets whether a JSON file representing the dependencies between modules"], [1988, "     * should be created."], [1989, "     */"], [1990, "    CommandLineConfig setOutputModuleDependencies(String"], [1991, "        outputModuleDependencies) {"], [1992, "      this.outputModuleDependencies = outputModuleDependencies;"], [1993, "      return this;"], [1994, "    }"], [1995, ""]], "deleted": []}, "num_lines_added": 50, "num_lines_removed": 0}