{"hash": "2bbded191da279d08fe76e24f40339bb9b3df0b4", "message": "Simplify a bunch of the subclassing around types and property maps, and\nmore clearly document the few places where we generate properties lazily.\n\nR=dimvar\nDELTA=398  (86 added, 282 deleted, 30 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=5947\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2374 b0f006be-c8cd-11de-a2e8-8d36a3108c74", "file_num_lines": 280, "diff_parsed": {"added": [[108, "    return PropertyMap.immutableEmptyMap();"], [111, "  /**"], [112, "   * Default getSlot implementation. This gets overridden by FunctionType"], [113, "   * for lazily-resolved prototypes."], [114, "   */"], [116, "  public Property getSlot(String name) {"], [117, "    return getPropertyMap().getSlot(name);"], [118, "  }"], [122, "    return getPropertyMap().getOwnProperty(name);"], [381, "    Property p = getSlot(propertyName);"], [382, "    return p == null ? null : p.getNode();"], [387, "   * be implemented recursively, as you generally need to know exactly on"], [391, "    Property p = getOwnSlot(propertyName);"], [392, "    return p == null ? null : p.getJSDocInfo();"], [416, "   * This gets overridden by FunctionType for lazily-resolved call() and"], [417, "   * bind() functions."], [418, "   *"], [422, "  public JSType getPropertyType(String propertyName) {"], [423, "    StaticSlot<JSType> slot = getSlot(propertyName);"], [424, "    if (slot == null) {"], [425, "      if (isNoResolvedType() || isCheckedUnknownType()) {"], [426, "        return getNativeType(JSTypeNative.CHECKED_UNKNOWN_TYPE);"], [427, "      } else if (isEmptyType()) {"], [428, "        return getNativeType(JSTypeNative.NO_TYPE);"], [429, "      }"], [430, "      return getNativeType(JSTypeNative.UNKNOWN_TYPE);"], [431, "    }"], [432, "    return slot.getType();"], [433, "  }"], [434, ""], [435, "  @Override"], [436, "  public boolean hasProperty(String propertyName) {"], [437, "    // Unknown types have all properties."], [438, "    return isEmptyType() || isUnknownType() || getSlot(propertyName) != null;"], [439, "  }"], [446, "    return getOwnSlot(propertyName) != null;"], [449, "  /**"], [450, "   * Returns the names of all the properties directly on this type."], [451, "   *"], [452, "   * Overridden by FunctionType to add \"prototype\"."], [453, "   */"], [455, "    return getPropertyMap().getOwnPropertyNames();"], [461, "  public boolean isPropertyTypeInferred(String propertyName) {"], [462, "    StaticSlot<JSType> slot = getSlot(propertyName);"], [463, "    return slot == null ? false : slot.isTypeInferred();"], [464, "  }"], [469, "  public boolean isPropertyTypeDeclared(String propertyName) {"], [470, "    StaticSlot<JSType> slot = getSlot(propertyName);"], [471, "    return slot == null ? false : !slot.isTypeInferred();"], [472, "  }"], [477, "  final boolean hasOwnDeclaredProperty(String name) {"], [483, "    Property p = getSlot(propertyName);"], [484, "    return p == null ? false : p.isFromExterns();"], [490, "  public int getPropertiesCount() {"], [491, "    return getPropertyMap().getPropertiesCount();"], [492, "  }"], [507, "  final void collectPropertyNames(Set<String> props) {"], [508, "    getPropertyMap().collectPropertyNames(props);"], [509, "  }"]], "deleted": [[108, "    return null;"], [112, "  public abstract Property getSlot(String name);"], [116, "    if (hasOwnProperty(name)) {"], [117, "      return getSlot(name);"], [118, "    }"], [119, "    return null;"], [378, "    return null;"], [383, "   * be done implemented recursively, as you generally need to know exactly on"], [387, "    return null;"], [414, "  public abstract JSType getPropertyType(String propertyName);"], [421, "    return hasProperty(propertyName);"], [424, "  /** Returns the names of all the properties directly on this type. */"], [426, "    return ImmutableSet.of();"], [432, "  public abstract boolean isPropertyTypeInferred(String propertyName);"], [437, "  public abstract boolean isPropertyTypeDeclared(String propertyName);"], [442, "  boolean hasOwnDeclaredProperty(String name) {"], [448, "    return false;"], [454, "  public abstract int getPropertiesCount();"], [469, "  abstract void collectPropertyNames(Set<String> props);"]]}, "num_lines_added": 59, "num_lines_removed": 19}