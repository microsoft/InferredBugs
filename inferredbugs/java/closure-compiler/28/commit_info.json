{"hash": "1ef3fba11b7e62e7d0a986db0dcbfa88bc5ab429", "message": "Fix symboltable crash when a function is not properly annotated\nas a constructor.\n\nR=acleung\nDELTA=39  (27 added, 7 deleted, 5 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=3605\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1544 b0f006be-c8cd-11de-a2e8-8d36a3108c74", "file_num_lines": 826, "diff_parsed": {"added": [[294, "    return getSymbolForName(fn.getSource(), instanceType.getReferenceName());"], [315, "    return getSymbolForName(fn.getSource(), pType.getReferenceName());"], [316, "  }"], [317, ""], [318, "  private Symbol getSymbolForName(Node source, String name) {"], [323, "    SymbolScope scope = source == null ?"], [324, "        globalScope : getEnclosingScope(source);"], [325, ""], [326, "    // scope will sometimes be null if one of the type-stripping passes"], [327, "    // was run, and the symbol isn't in the AST anymore."], [328, "    return scope == null ? null : scope.getSlot(name);"], [383, "      if (!ownerFn.isConstructor() && !ownerFn.isInterface()) {"], [384, "        return null;"], [385, "      }"]], "deleted": [[294, "    String name = instanceType.getReferenceName();"], [295, "    if (name == null || globalScope == null) {"], [296, "      return null;"], [297, "    }"], [298, ""], [299, "    Node source = fn.getSource();"], [300, "    return (source == null ?"], [301, "        globalScope : getEnclosingScope(source)).getSlot(name);"], [322, "    String name = pType.getReferenceName();"], [327, "    Node source = fn.getSource();"], [328, "    return (source == null ?"], [329, "        globalScope : getEnclosingScope(source)).getSlot(name);"]]}, "num_lines_added": 14, "num_lines_removed": 12}