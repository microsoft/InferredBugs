{"hash": "27b083a44185add5dd0d3e4bfcc69161462175d9", "message": "Don't inline variables that depends on a parameter if arguments is escaped.\n\nR=johnlenz\nDELTA=41  (36 added, 3 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1136\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@949 b0f006be-c8cd-11de-a2e8-8d36a3108c74", "file_num_lines": 274, "diff_parsed": {"added": [[31, "import java.util.Map.Entry;"], [359, "      if (isParameter(v)) {"], [365, ""], [366, "    // Also, assume we no longer know anything that depends on a parameter."], [367, "    for (Entry<Var, Definition> pair: output.reachingDef.entrySet()) {"], [368, "      Definition value = pair.getValue();"], [369, "      if (value == null) {"], [370, "        continue;"], [371, "      }"], [372, "      for (Var dep : value.depends) {"], [373, "        if (isParameter(dep)) {"], [374, "          output.reachingDef.put(pair.getKey(), null);"], [375, "        }"], [376, "      }"], [377, "    }"], [378, "  }"], [379, ""], [380, "  private boolean isParameter(Var v) {"], [381, "    return v.getParentNode().getType() == Token.LP;"]], "deleted": [[358, "      if (v.getParentNode().getType() == Token.LP) {"]]}, "num_lines_added": 19, "num_lines_removed": 1}