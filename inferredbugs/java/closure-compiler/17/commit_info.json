{"hash": "dd5a73fdb8740d4753a2c08efaa9eb56932943a0", "message": "Automated g4 rollback.\n\n*** Reason for rollback ***\n\nBreaks gmail\n\n*** Original change description ***\n\nWhen it is possible to make the ES5 Strict mode assumptions about a\nfunction's \"this\" it is easier to inline a function referencing \"this\".\nAdd \"CompilerOption.assumeStrictThis\" and take advantage of it during\nfunction inlining.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2200\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1165 b0f006be-c8cd-11de-a2e8-8d36a3108c74", "file_num_lines": 228, "diff_parsed": {"added": [[30, "import java.util.Map.Entry;"], [194, "          fnTemplateRoot, null, argMap);"], [213, "          Node newValue = entry.getValue().cloneTree();"], [214, "          Node newNode = NodeUtil.newVarNode(name, newValue)"], [215, "              .copyInformationFromForTree(newValue);"], [216, "          newVars.add(0, newNode);"], [217, "          // Remove the parameter from the list to replace."], [218, "          newArgMap.remove(name);"], [224, "          fnTemplateRoot, null, newArgMap);"]], "deleted": [[18, "import static com.google.javascript.jscomp.FunctionArgumentInjector.THIS_MARKER;"], [19, ""], [31, "import java.util.Map.Entry;"], [180, "   * Create a unique \"this\" name."], [181, "   */"], [182, "  private String getUniqueThisName() {"], [183, "    return \"JSCompiler_inline_this_\" + safeNameIdSupplier.get();"], [184, "  }"], [185, ""], [186, "  /**"], [203, "          compiler, fnTemplateRoot, null, argMap);"], [222, "          if (name.equals(THIS_MARKER)) {"], [223, "            boolean referencesThis = NodeUtil.referencesThis(fnTemplateRoot);"], [224, "            // Update \"this\", this is only necessary if \"this\" is referenced"], [225, "            // and the value of \"this\" is not Token.THIS, or the value of \"this\""], [226, "            // has side effects."], [227, ""], [228, "            Node value = entry.getValue();"], [229, "            if (value.getType() != Token.THIS"], [230, "                && (referencesThis"], [231, "                    || NodeUtil.mayHaveSideEffects(value, compiler))) {"], [232, "              String newName = getUniqueThisName();"], [233, "              Node newValue = entry.getValue().cloneTree();"], [234, "              Node newNode = NodeUtil.newVarNode(newName, newValue)"], [235, "                  .copyInformationFromForTree(newValue);"], [236, "              newVars.add(0, newNode);"], [237, "              // Remove the parameter from the list to replace."], [238, "              newArgMap.put(THIS_MARKER,"], [239, "                  Node.newString(Token.NAME, newName)"], [240, "                      .copyInformationFromForTree(newValue));"], [241, "            }"], [242, "          } else {"], [243, "            Node newValue = entry.getValue().cloneTree();"], [244, "            Node newNode = NodeUtil.newVarNode(name, newValue)"], [245, "                .copyInformationFromForTree(newValue);"], [246, "            newVars.add(0, newNode);"], [247, "            // Remove the parameter from the list to replace."], [248, "            newArgMap.remove(name);"], [249, "          }"], [255, "          compiler, fnTemplateRoot, null, newArgMap);"]]}, "num_lines_added": 9, "num_lines_removed": 40}