{"hash": "d7d904219104bd2223049dd54f9d253de326d251", "message": "Encapsulate Vault lease endpoint differences in LeaseEndpoints.\n\nWe now provide a LeaseEndpoints enum that reflects differences between Vault versions regarding their lease endpoints.\n\nRelated pull request: gh-282.\nCloses gh-262.", "file_num_lines": 455, "diff_parsed": {"added": [[116, " * @see LeaseEndpoints"], [137, "\tprivate LeaseEndpoints leaseEndpoints = LeaseEndpoints.Legacy;"], [138, ""], [181, "\t * Set the {@link LeaseEndpoints} to delegate renewal/revocation calls to."], [182, "\t * {@link LeaseEndpoints} encapsulates differences between Vault versions that affect"], [183, "\t * the location of renewal/revocation endpoints."], [184, "\t *"], [185, "\t * @param leaseEndpoints must not be {@literal null}."], [186, "\t * @since 2.1"], [187, "\t * @see LeaseEndpoints"], [188, "\t */"], [189, "\tpublic void setLeaseEndpoints(LeaseEndpoints leaseEndpoints) {"], [190, ""], [191, "\t\tAssert.notNull(leaseEndpoints, \"LeaseEndpoints must not be null\");"], [192, ""], [193, "\t\tthis.leaseEndpoints = leaseEndpoints;"], [194, "\t}"], [195, ""], [196, "\t/**"], [613, "\t\treturn operations.doWithSession(restOperations -> leaseEndpoints.renew(lease,"], [614, "\t\t\t\trestOperations));"], [649, ".doWithSession(restOperations -> {"], [650, "\t\t\t\tleaseEndpoints.revoke(lease, restOperations);"], [651, "\t\t\t\treturn null;"], [652, "\t\t\t});"]], "deleted": [[38, "import org.springframework.http.HttpEntity;"], [39, "import org.springframework.http.HttpMethod;"], [41, "import org.springframework.http.ResponseEntity;"], [51, "import org.springframework.vault.core.RestOperationsCallback;"], [598, "\t\tHttpEntity<Object> leaseRenewalEntity = getLeaseRenewalBody(lease);"], [599, ""], [600, "\t\tResponseEntity<Map<String, Object>> entity = operations"], [601, "\t\t\t\t.doWithSession(restOperations -> (ResponseEntity) restOperations"], [602, "\t\t\t\t\t\t.exchange(\"sys/renew\", HttpMethod.PUT, leaseRenewalEntity, Map.class));"], [603, ""], [604, "\t\tAssert.state(entity != null && entity.getBody() != null,"], [605, "\t\t\t\t\"Renew response must not be null\");"], [606, ""], [607, "\t\tMap<String, Object> body = entity.getBody();"], [608, "\t\tString leaseId = (String) body.get(\"lease_id\");"], [609, "\t\tNumber leaseDuration = (Number) body.get(\"lease_duration\");"], [610, "\t\tboolean renewable = (Boolean) body.get(\"renewable\");"], [611, ""], [612, "\t\treturn Lease.of(leaseId, leaseDuration != null ? leaseDuration.longValue() : 0,"], [613, "\t\t\t\trenewable);"], [616, "\tprivate static HttpEntity<Object> getLeaseRenewalBody(Lease lease) {"], [617, ""], [618, "\t\tMap<String, String> leaseRenewalData = new HashMap<>();"], [619, "\t\tleaseRenewalData.put(\"lease_id\", lease.getLeaseId());"], [620, "\t\tleaseRenewalData.put(\"increment\","], [621, "\t\t\t\tLong.toString(lease.getLeaseDuration().getSeconds()));"], [622, ""], [623, "\t\treturn new HttpEntity<>(leaseRenewalData);"], [624, "\t}"], [657, "\t\t\t\t\t.doWithSession((RestOperationsCallback<ResponseEntity<Map<String, Object>>>) restOperations -> (ResponseEntity) restOperations"], [658, "\t\t\t\t\t\t\t.exchange(\"sys/revoke/{leaseId}\", HttpMethod.PUT, null,"], [659, "\t\t\t\t\t\t\t\t\tMap.class, lease.getLeaseId()));"]]}, "num_lines_added": 25, "num_lines_removed": 32}