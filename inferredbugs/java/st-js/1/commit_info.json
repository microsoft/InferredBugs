{"hash": "ddf8a84881e2c0a0a15a0cdd7bb4730c2f9d3084", "message": "replace DataType with SyntheticType. don't generate extends, constructor call and typedesc for that", "file_num_lines": 1340, "diff_parsed": {"added": [[114, "import java.util.ArrayList;"], [136, "import org.stjs.generator.utils.Option;"], [633, "\t\tif ((clazz != null) && (clazz instanceof ClassWrapper) && ClassUtils.isSyntheticType(clazz)) {"], [658, ""], [659, "\t\tOption<ClassWrapper> superClass = classScope.getClazz().getSuperclass();"], [660, ""], [661, "\t\tif (superClass.isDefined()) {"], [662, "\t\t\tif (ClassUtils.isSyntheticType(superClass.getOrThrow())) {"], [663, "\t\t\t\t// do not add call to super class is it's a synthetic"], [664, "\t\t\t\treturn;"], [665, "\t\t\t}"], [666, ""], [667, "\t\t\tif (superClass.getOrThrow().getClazz().equals(Object.class)) {"], [668, "\t\t\t\t// avoid useless call to super() when the super class is Object"], [669, "\t\t\t\treturn;"], [670, "\t\t\t}"], [671, "\t\t\tprinter.print(stJsName(superClass.getOrThrow())).print(\".call\");"], [674, ""], [681, "\t\tOption<ClassWrapper> superClass = scope(n).closest(ClassScope.class).getClazz().getSuperclass();"], [682, "\t\tif (superClass.isDefined() && !ClassUtils.isSyntheticType(superClass.getOrThrow())) {"], [683, "\t\t\tif ((n.getBlock().getStmts() != null) && (n.getBlock().getStmts().size() > 0)) {"], [684, "\t\t\t\tStatement firstStatement = n.getBlock().getStmts().get(0);"], [685, "\t\t\t\tif (!(firstStatement instanceof ExplicitConstructorInvocationStmt)) {"], [686, "\t\t\t\t\t// generate possibly missing super() call"], [687, "\t\t\t\t\tStatement callSuper = new ExplicitConstructorInvocationStmt();"], [688, "\t\t\t\t\tcallSuper.setData(new ASTNodeData());"], [689, "\t\t\t\t\tparent(callSuper, n.getBlock());"], [690, "\t\t\t\t\tscope(callSuper, scope(n.getBlock()));"], [691, "\t\t\t\t\tn.getBlock().getStmts().add(0, callSuper);"], [692, "\t\t\t\t\t// addCallToSuper(scope(n).closest(ClassScope.class), context, Collections.<Expression>"], [693, "\t\t\t\t\t// emptyList());"], [694, "\t\t\t\t}"], [725, "\tprivate List<TypeWrapper> getImplementsOrExtends(ClassOrInterfaceDeclaration n) {"], [726, "\t\tList<TypeWrapper> types = new ArrayList<TypeWrapper>();"], [727, ""], [728, "\t\tif (n.getExtends() != null) {"], [729, "\t\t\tfor (ClassOrInterfaceType ext : n.getExtends()) {"], [730, "\t\t\t\tTypeWrapper type = resolvedType(ext);"], [731, "\t\t\t\tif (!ClassUtils.isSyntheticType(type)) {"], [732, "\t\t\t\t\ttypes.add(type);"], [733, "\t\t\t\t}"], [734, ""], [735, "\t\t\t}"], [736, "\t\t}"], [737, "\t\tif (n.getImplements() != null) {"], [738, "\t\t\tfor (ClassOrInterfaceType impl : n.getImplements()) {"], [739, "\t\t\t\tTypeWrapper type = resolvedType(impl);"], [740, "\t\t\t\tif (!ClassUtils.isSyntheticType(type)) {"], [741, "\t\t\t\t\ttypes.add(type);"], [742, "\t\t\t\t}"], [743, "\t\t\t}"], [744, "\t\t}"], [745, "\t\treturn types;"], [746, "\t}"], [747, ""], [784, "\t\t\tList<TypeWrapper> implementsOrExtends = getImplementsOrExtends(n);"], [785, "\t\t\tif (implementsOrExtends.size() > 0) {"], [791, "\t\t\t\tfor (TypeWrapper ext : implementsOrExtends) {"], [792, "\t\t\t\t\tprinter.print(\", \" + stJsName(ext));"], [794, ""], [862, "\t\tboolean generateSuperClass = false;"], [864, "\t\t\tTypeWrapper superClass = resolvedType(n.getExtends().get(0));"], [865, "\t\t\tif (!ClassUtils.isSyntheticType(superClass)) {"], [866, "\t\t\t\tgenerateSuperClass = true;"], [867, "\t\t\t\tprinter.print(\"stjs.copyProps(\");"], [868, ""], [869, "\t\t\t\t// for (ClassOrInterfaceType ext : n.getExtends()) {"], [870, "\t\t\t\t// printer.print(\", \" + stJsName(resolvedType(ext)));"], [871, "\t\t\t\t// }"], [872, "\t\t\t\tprinter.print(stJsName(superClass));"], [873, "\t\t\t\tprinter.print(\".\").print(GeneratorConstants.TYPE_DESCRIPTION_PROPERTY).print(\", \");"], [874, "\t\t\t}"], [900, "\t\tif (generateSuperClass) {"]], "deleted": [[631, "\t\tif ((clazz != null) && (clazz instanceof ClassWrapper) && ClassUtils.isDataType(((ClassWrapper) clazz))) {"], [656, "\t\tif (classScope.getClazz().getSuperclass().isDefined()"], [657, "\t\t\t\t&& !classScope.getClazz().getSuperclass().getOrThrow().getClazz().equals(Object.class)) {"], [658, "\t\t\t// avoid useless call to super() when the super class is Object"], [659, "\t\t\tprinter.print(stJsName(classScope.getClazz().getSuperClass())).print(\".call\");"], [668, "\t\tif ((n.getBlock().getStmts() != null) && (n.getBlock().getStmts().size() > 0)) {"], [669, "\t\t\tStatement firstStatement = n.getBlock().getStmts().get(0);"], [670, "\t\t\tif (!(firstStatement instanceof ExplicitConstructorInvocationStmt)) {"], [671, "\t\t\t\t// generate possibly missing super() call"], [672, "\t\t\t\tStatement callSuper = new ExplicitConstructorInvocationStmt();"], [673, "\t\t\t\tcallSuper.setData(new ASTNodeData());"], [674, "\t\t\t\tparent(callSuper, n.getBlock());"], [675, "\t\t\t\tscope(callSuper, scope(n.getBlock()));"], [676, "\t\t\t\tn.getBlock().getStmts().add(0, callSuper);"], [677, "\t\t\t\t// addCallToSuper(scope(n).closest(ClassScope.class), context, Collections.<Expression> emptyList());"], [744, "\t\t\tif (((n.getExtends() != null) && (n.getExtends().size() > 0))"], [745, "\t\t\t\t\t|| ((n.getImplements() != null) && (n.getImplements().size() > 0))) {"], [751, "\t\t\t\tif (n.getExtends() != null) {"], [752, "\t\t\t\t\tfor (ClassOrInterfaceType ext : n.getExtends()) {"], [753, "\t\t\t\t\t\tprinter.print(\", \" + stJsName(resolvedType(ext)));"], [754, "\t\t\t\t\t}"], [755, "\t\t\t\t}"], [756, "\t\t\t\tif (n.getImplements() != null) {"], [757, "\t\t\t\t\tfor (ClassOrInterfaceType impl : n.getImplements()) {"], [758, "\t\t\t\t\t\tprinter.print(\", \" + stJsName(resolvedType(impl)));"], [759, "\t\t\t\t\t}"], [829, "\t\t\tprinter.print(\"stjs.copyProps(\");"], [830, ""], [831, "\t\t\t// for (ClassOrInterfaceType ext : n.getExtends()) {"], [832, "\t\t\t// printer.print(\", \" + stJsName(resolvedType(ext)));"], [833, "\t\t\t// }"], [834, "\t\t\tprinter.print(stJsName(resolvedType(n.getExtends().get(0))));"], [835, "\t\t\tprinter.print(\".\").print(GeneratorConstants.TYPE_DESCRIPTION_PROPERTY).print(\", \");"], [861, "\t\tif ((n.getExtends() != null) && (n.getExtends().size() > 0)) {"]]}, "num_lines_added": 73, "num_lines_removed": 34}