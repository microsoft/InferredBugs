{"hash": "f78a1566438522608051696c8e4acba5bab5b0cb", "message": "More literate tests.", "file_num_lines": 61, "diff_parsed": {"added": [[23, "import org.hamcrest.Matcher;"], [29, "import static org.apache.logging.log4j.junit.FileMatchers.exists;"], [30, "import static org.apache.logging.log4j.junit.FileMatchers.hasFiles;"], [31, "import static org.apache.logging.log4j.junit.FileMatchers.hasName;"], [32, "import static org.apache.logging.log4j.junit.FileMatchers.that;"], [33, "import static org.hamcrest.Matchers.both;"], [34, "import static org.hamcrest.Matchers.endsWith;"], [35, "import static org.hamcrest.Matchers.hasItemInArray;"], [66, "        assertThat(dir, both(exists()).and(hasFiles()));"], [69, "        final Matcher<File[]> hasGzippedFile = hasItemInArray(that(hasName(that(endsWith(\".gz\")))));"], [72, "            if (hasGzippedFile.matches(files)) {"], [73, "                return; // test succeeded"]], "deleted": [[58, "        assertTrue(\"Directory not created\", dir.exists() && dir.listFiles().length > 0);"], [63, "            assertTrue(\"No files created\", files.length > 0);"], [64, "            for (final File file : files) {"], [65, "                if (file.getName().endsWith(\".gz\")) {"], [66, "                    return; // test succeeded"], [67, "                }"]]}, "num_lines_added": 12, "num_lines_removed": 6}