{"hash": "59b7833b4cc6d29fea90dcdf9ebd131f437bfecf", "message": "Add in constraint validator logic to PluginBuilder.\n\n  - Also includes a couple clean-up things.", "file_num_lines": 242, "diff_parsed": {"added": [[21, "import java.lang.reflect.AccessibleObject;"], [26, "import java.util.Collection;"], [33, "import org.apache.logging.log4j.core.config.ConfigurationException;"], [38, "import org.apache.logging.log4j.core.config.plugins.validation.ConstraintValidator;"], [39, "import org.apache.logging.log4j.core.config.plugins.validation.ConstraintValidators;"], [44, "import org.apache.logging.log4j.core.util.ReflectionUtil;"], [128, "                node.getName(), e);"], [141, "            LOGGER.error(\"Unable to invoke factory method in class {} for element {}.\", this.clazz, this.node.getName(),"], [142, "                e);"], [157, "                ReflectionUtil.makeAccessible(method);"], [171, "        AccessibleObject.setAccessible(fields, true);"], [196, "            final Collection<ConstraintValidator<Annotation, Object>> validators ="], [197, "                ConstraintValidators.findValidators(annotations);"], [198, "            final Object value = field.get(builder);"], [199, "            for (ConstraintValidator<Annotation, Object> validator : validators) {"], [200, "                if (!validator.isValid(value)) {"], [201, "                    throw new ConfigurationException(\"Invalid value [\" + value + \"] for field \" + field.getName());"], [202, "                }"], [203, "            }"], [219, "                ReflectionUtil.makeAccessible(method);"], [223, "        throw new IllegalStateException(\"No factory method found for class \" + clazz.getName());"], [253, "            final Collection<ConstraintValidator<Annotation, Object>> validators ="], [254, "                ConstraintValidators.findValidators(annotations[i]);"], [255, "            final Object value = args[i];"], [256, "            for (final ConstraintValidator<Annotation, Object> validator : validators) {"], [257, "                if (!validator.isValid(value)) {"], [258, "                    throw new ConfigurationException(\"Invalid value [\" + value + \"] for parameter \" + i);"], [259, "                }"], [260, "            }"]], "deleted": [[28, "import org.apache.logging.log4j.Level;"], [122, "            LOGGER.catching(Level.ERROR, e);"], [124, "                node.getName());"], [137, "            LOGGER.catching(Level.ERROR, e);"], [138, "            LOGGER.error(\"Unable to invoke factory method in class {} for element {}.\", this.clazz, this.node.getName());"], [169, "            field.setAccessible(true);"], [209, "        LOGGER.debug(\"No factory method found in class {}.\", clazz.getName());"], [210, "        return null;"]]}, "num_lines_added": 29, "num_lines_removed": 8}