{"hash": "c3414fa3401ad4213f4ce51419ab9940029f8d9e", "message": "More literate assertions.", "file_num_lines": 118, "diff_parsed": {"added": [[36, "import static org.apache.logging.log4j.junit.MapMatchers.hasSize;"], [37, "import static org.hamcrest.Matchers.hasEntry;"], [38, "import static org.junit.Assert.*;"], [39, ""], [72, "        assertEquals(\"Simple log message changed\", logEvent0.getMessage(), rewritten.getMessage());"], [92, "        assertEquals(\"Simple log message changed\", logEvent0.getMessage(), rewritten.getMessage());"], [112, "        assertEquals(\"Simple log message changed\", logEvent0.getMessage(), rewritten.getMessage());"], [128, "        assertThat(\"unwanted entry change\", addedMap, hasEntry(\"test1\", \"one\"));"], [129, "        assertThat(\"existing entry not updated\", addedMap, hasEntry(\"test2\", \"2\"));"], [130, "        assertThat(\"new entry not added\", addedMap, hasEntry(\"test3\", \"three\"));"], [131, "        assertThat(\"wrong size\", addedMap, hasSize(3));"], [135, "        assertThat(\"unwanted entry change\", updatedMap, hasEntry(\"test1\", \"one\"));"], [136, "        assertThat(\"existing entry not updated\", updatedMap, hasEntry(\"test2\", \"2\"));"], [137, "        assertThat(\"wrong size\", updatedMap, hasSize(2));"], [142, "        assertEquals(\"LoggerName changed\", orig.getLoggerName(), changed.getLoggerName());"], [143, "        assertEquals(\"Marker changed\", orig.getMarker(), changed.getMarker());"], [144, "        assertEquals(\"FQCN changed\", orig.getLoggerFqcn(), changed.getLoggerFqcn());"], [145, "        assertEquals(\"Level changed\", orig.getLevel(), changed.getLevel());"], [146, "        assertArrayEquals(\"Throwable changed\","], [147, "            orig.getThrown() == null ? null : orig.getThrownProxy().getExtendedStackTrace(),"], [148, "            changed.getThrown() == null ? null : changed.getThrownProxy().getExtendedStackTrace()"], [149, "        );"], [150, "        assertEquals(\"ContextMap changed\", orig.getContextMap(), changed.getContextMap());"], [151, "        assertEquals(\"ContextStack changed\", orig.getContextStack(), changed.getContextStack());"], [152, "        assertEquals(\"ThreadName changed\", orig.getThreadName(), changed.getThreadName());"], [153, "        assertEquals(\"Source changed\", orig.getSource(), changed.getSource());"], [154, "        assertEquals(\"Millis changed\", orig.getTimeMillis(), changed.getTimeMillis());"]], "deleted": [[33, "import org.junit.Assert;"], [69, "        Assert.assertEquals(\"Simple log message changed\", logEvent0.getMessage(), rewritten.getMessage());"], [89, "        Assert.assertEquals(\"Simple log message changed\", logEvent0.getMessage(), rewritten.getMessage());"], [109, "        Assert.assertEquals(\"Simple log message changed\", logEvent0.getMessage(), rewritten.getMessage());"], [125, "        Assert.assertEquals(\"unwanted entry change\", \"one\", addedMap.get(\"test1\"));"], [126, "        Assert.assertEquals(\"existing entry not updated\", \"2\", addedMap.get(\"test2\"));"], [127, "        Assert.assertEquals(\"new entry not added\", \"three\", addedMap.get(\"test3\"));"], [128, "        Assert.assertEquals(\"wrong size\", 3, addedMap.size());"], [132, "        Assert.assertEquals(\"unwanted entry change\", \"one\", updatedMap.get(\"test1\"));"], [133, "        Assert.assertEquals(\"existing entry not updated\", \"2\", updatedMap.get(\"test2\"));"], [134, "        Assert.assertEquals(\"wrong size\", 2, updatedMap.size());"], [139, "        Assert.assertEquals(\"LoggerName changed\", orig.getLoggerName(), changed.getLoggerName());"], [140, "        Assert.assertEquals(\"Marker changed\", orig.getMarker(), changed.getMarker());"], [141, "        Assert.assertEquals(\"FQCN changed\", orig.getLoggerFqcn(), changed.getLoggerFqcn());"], [142, "        Assert.assertEquals(\"Level changed\", orig.getLevel(), changed.getLevel());"], [143, "        Assert.assertArrayEquals(\"Throwable changed\", orig.getThrown() == null //"], [144, "                ? null //"], [145, "                : ((Log4jLogEvent) orig).getThrownProxy().getExtendedStackTrace(), //"], [146, "                changed.getThrown() == null //"], [147, "                        ? null //"], [148, "                        : ((Log4jLogEvent) changed).getThrownProxy().getExtendedStackTrace());"], [149, "        Assert.assertEquals(\"ContextMap changed\", orig.getContextMap(), changed.getContextMap());"], [150, "        Assert.assertEquals(\"ContextStack changed\", orig.getContextStack(), changed.getContextStack());"], [151, "        Assert.assertEquals(\"ThreadName changed\", orig.getThreadName(), changed.getThreadName());"], [152, "        Assert.assertEquals(\"Source changed\", orig.getSource(), changed.getSource());"], [153, "        Assert.assertEquals(\"Millis changed\", orig.getTimeMillis(), changed.getTimeMillis());"]]}, "num_lines_added": 27, "num_lines_removed": 26}