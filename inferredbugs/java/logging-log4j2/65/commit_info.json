{"hash": "64c8a69bb83fc84b9505b053e35e16540367c9f8", "message": "[LOG4J2-1019] ZipCompressAction leaves files open when an IO error takes\nplace.", "file_num_lines": 60, "diff_parsed": {"added": [[101, "            throws IOException {"], [103, "            try (final FileInputStream fis = new FileInputStream(source);"], [104, "                    final ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(destination))) {"], [105, "                zos.setLevel(level);"], [107, "                final ZipEntry zipEntry = new ZipEntry(source.getName());"], [108, "                zos.putNextEntry(zipEntry);"], [110, "                final byte[] inbuf = new byte[BUF_SIZE];"], [111, "                int n;"], [113, "                while ((n = fis.read(inbuf)) != -1) {"], [114, "                    zos.write(inbuf, 0, n);"], [115, "                }"]], "deleted": [[101, "        throws IOException {"], [103, "            final FileInputStream fis = new FileInputStream(source);"], [104, "            final FileOutputStream fos = new FileOutputStream(destination);"], [105, "            final ZipOutputStream zos = new ZipOutputStream(fos);"], [106, "            zos.setLevel(level);"], [108, "            final ZipEntry zipEntry = new ZipEntry(source.getName());"], [109, "            zos.putNextEntry(zipEntry);"], [111, "            final byte[] inbuf = new byte[BUF_SIZE];"], [112, "            int n;"], [114, "            while ((n = fis.read(inbuf)) != -1) {"], [115, "                zos.write(inbuf, 0, n);"], [118, "            zos.close();"], [119, "            fis.close();"], [120, ""]]}, "num_lines_added": 11, "num_lines_removed": 14}