{"hash": "f78a1566438522608051696c8e4acba5bab5b0cb", "message": "More literate tests.", "file_num_lines": 62, "diff_parsed": {"added": [[26, "import org.hamcrest.Matcher;"], [31, "import static org.apache.logging.log4j.junit.FileMatchers.exists;"], [32, "import static org.apache.logging.log4j.junit.FileMatchers.hasFiles;"], [33, "import static org.apache.logging.log4j.junit.FileMatchers.hasName;"], [34, "import static org.apache.logging.log4j.junit.FileMatchers.that;"], [35, "import static org.hamcrest.Matchers.both;"], [36, "import static org.hamcrest.Matchers.endsWith;"], [37, "import static org.hamcrest.Matchers.hasItemInArray;"], [38, "import static org.hamcrest.Matchers.startsWith;"], [74, "        assertThat(dir, both(exists()).and(hasFiles()));"], [76, "        assertNotNull(files);"], [77, "        final Matcher<File> withCorrectFileName ="], [78, "            both(hasName(that(endsWith(\".log\")))).and(hasName(that(startsWith(\"test1\"))));"], [79, "        assertThat(files, hasItemInArray(withCorrectFileName));"]], "deleted": [[65, "        assertTrue(\"Directory not created\", dir.exists() && dir.listFiles().length > 0);"], [67, "        assertTrue(\"No files created\", files.length > 0);"], [68, "        boolean found = false;"], [69, "        for (final File file : files) {"], [70, "            final String name = file.getName();"], [71, "            if (name.startsWith(\"test1\") && name.endsWith(\".log\")) {"], [72, "                found = true;"], [73, "                break;"], [74, "            }"], [75, "        }"], [76, "        assertTrue(\"No archived files found\", found);"]]}, "num_lines_added": 14, "num_lines_removed": 11}