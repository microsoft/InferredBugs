{"hash": "fd0ddbf78c1d65721d778a0e9990072efb3e79fc", "message": "LOG4J2-547 - Have Logger API expose a PrintWriter instead of custom LoggerStream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/logging/log4j/log4j2/trunk@1573212 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 322, "diff_parsed": {"added": [[22, "import java.io.PrintWriter;"], [276, "        final PrintWriter stream = logger.printWriter(Level.DEBUG);"], [277, "        stream.println(\"println\");"], [278, "        stream.print(\"print followed by println\");"], [280, "        stream.println(\"multiple\\nlines\");"], [282, "        stream.print(\"print embedded newline\\n\");"], [284, "        stream.print(\"Last Line without newline\");"], [285, "        stream.close();"], [286, "        assertEquals(8, results.size());"], [287, "        assertEquals(\"msg 1\", \" DEBUG println\", results.get(0));"], [288, "        assertEquals(\"msg 2\", \" DEBUG print followed by println\", results.get(1));"], [289, "        assertEquals(\"msg 3\", \" DEBUG multiple\", results.get(2));"], [290, "        assertEquals(\"msg 4\", \" DEBUG lines\", results.get(3));"], [291, "        assertEquals(\"msg 5 should be blank-ish\", \" DEBUG \", results.get(4));"], [292, "        assertEquals(\"msg 6\", \" DEBUG print embedded newline\", results.get(5));"], [293, "        assertEquals(\"msg 7 should be blank-ish\", \" DEBUG \", results.get(6));"], [294, "        assertEquals(\"msg 8 Last line\", \" DEBUG Last Line without newline\", results.get(7));"], [299, "        final PrintWriter stream = logger.printWriter(MarkerManager.getMarker(\"HI\"), Level.INFO);"], [300, "        stream.println(\"println\");"], [301, "        stream.print(\"print with embedded newline\\n\");"], [302, "        stream.println(\"last line\");"], [303, "        stream.close();"], [305, "        assertEquals(\"println 1\", \"HI INFO println\", results.get(0));"], [306, "        assertEquals(\"print with embedded newline\", \"HI INFO print with embedded newline\", results.get(1));"], [307, "        assertEquals(\"println 2\", \"HI INFO last line\", results.get(2));"]], "deleted": [[29, "import org.apache.logging.log4j.spi.LoggerStream;"], [276, "        final LoggerStream stream = logger.getStream(Level.DEBUG);"], [277, "        stream.println(\"Debug message 1\");"], [278, "        stream.print(\"Debug message 2\");"], [281, "        stream.print(\"Debug message 3\\n\");"], [283, "        assertEquals(5, results.size());"], [284, "        assertThat(\"Incorrect message\", results.get(0), startsWith(\" DEBUG Debug message 1\"));"], [285, "        assertThat(\"Incorrect message\", results.get(1), startsWith(\" DEBUG Debug message 2\"));"], [286, "        assertEquals(\"Message should be blank-ish\", \" DEBUG \", results.get(2));"], [287, "        assertThat(\"Incorrect message\", results.get(3), startsWith(\" DEBUG Debug message 3\"));"], [288, "        assertEquals(\"Message should be blank-ish\", \" DEBUG \", results.get(4));"], [293, "        final LoggerStream stream = logger.getStream(MarkerManager.getMarker(\"HI\"), Level.INFO);"], [294, "        stream.println(\"Hello, world!\");"], [295, "        stream.print(\"How about this?\\n\");"], [296, "        stream.println(\"Is this thing on?\");"], [298, "        assertThat(\"Incorrect message.\", results.get(0), startsWith(\"HI INFO Hello\"));"], [299, "        assertThat(\"Incorrect message.\", results.get(1), startsWith(\"HI INFO How about\"));"], [300, "        assertThat(\"Incorrect message.\", results.get(2), startsWith(\"HI INFO Is this\"));"]]}, "num_lines_added": 25, "num_lines_removed": 18}