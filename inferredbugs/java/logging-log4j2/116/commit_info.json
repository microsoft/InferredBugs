{"hash": "53e7bbc0f06fb73b6a42fcf7fb43ec603e60e639", "message": "First commit for LOG4J2-1558 branch.", "file_num_lines": 220, "diff_parsed": {"added": [[56, "    private Reconnector reconnector;"], [70, "     * @param socket The Socket."], [78, "     * @param bufferSize The buffer size."], [80, "    public TcpSocketManager(final String name, final OutputStream os, final Socket socket, final InetAddress inetAddress,"], [82, "                            final boolean immediateFail, final Layout<? extends Serializable> layout, int bufferSize) {"], [83, "        super(name, os, inetAddress, host, port, layout, true, bufferSize);"], [86, "        this.socket = socket;"], [89, "        if (socket == null) {"], [90, "            reconnector = new Reconnector(this);"], [91, "            reconnector.setDaemon(true);"], [92, "            reconnector.setPriority(Thread.MIN_PRIORITY);"], [93, "            reconnector.start();"], [102, "     * @param reconnectDelayMillis The interval to pause between retries."], [103, "     * @param bufferSize The buffer size."], [107, "            int reconnectDelayMillis, final boolean immediateFail, final Layout<? extends Serializable> layout, final int bufferSize) {"], [114, "        if (reconnectDelayMillis == 0) {"], [115, "            reconnectDelayMillis = DEFAULT_RECONNECTION_DELAY_MILLIS;"], [117, "        return (TcpSocketManager) getManager(\"TCP:\" + host + ':' + port, new FactoryData("], [118, "                host, port, connectTimeoutMillis, reconnectDelayMillis, immediateFail, layout, bufferSize), FACTORY);"], [124, "            if (reconnector != null && !immediateFail) {"], [125, "                reconnector.latch();"], [140, "                if (retry && reconnector == null) {"], [141, "                    reconnector = new Reconnector(this);"], [142, "                    reconnector.setDaemon(true);"], [143, "                    reconnector.setPriority(Thread.MIN_PRIORITY);"], [144, "                    reconnector.start();"], [155, "        if (reconnector != null) {"], [156, "            reconnector.shutdown();"], [157, "            reconnector.interrupt();"], [158, "            reconnector = null;"], [159, "        }"], [160, "        final Socket oldSocket = socket;"], [161, "        socket = null;"], [162, "        if (oldSocket != null) {"], [163, "            try {"], [164, "                oldSocket.close();"], [165, "            } catch (IOException e) {"], [166, "                LOGGER.error(\"Could not close socket {}\", socket);"], [167, "            }"], [235, "                        reconnector = null;"], [270, "        private final int reconnectDelayMillis;"], [273, "        private final int bufferSize;"], [275, "        public FactoryData(final String host, final int port, final int connectTimeoutMillis, final int reconnectDelayMillis,"], [276, "                           final boolean immediateFail, final Layout<? extends Serializable> layout, final int bufferSize) {"], [280, "            this.reconnectDelayMillis = reconnectDelayMillis;"], [283, "            this.bufferSize = bufferSize;"], [308, "                        data.connectTimeoutMillis, data.reconnectDelayMillis, data.immediateFail, data.layout, data.bufferSize);"], [313, "            if (data.reconnectDelayMillis == 0) {"], [317, "                    data.reconnectDelayMillis, data.immediateFail, data.layout, data.bufferSize);"]], "deleted": [[56, "    private Reconnector connector;"], [70, "     * @param sock The Socket."], [79, "    public TcpSocketManager(final String name, final OutputStream os, final Socket sock, final InetAddress inetAddress,"], [81, "                            final boolean immediateFail, final Layout<? extends Serializable> layout) {"], [82, "        super(name, os, inetAddress, host, port, layout, true);"], [85, "        this.socket = sock;"], [88, "        if (sock == null) {"], [89, "            connector = new Reconnector(this);"], [90, "            connector.setDaemon(true);"], [91, "            connector.setPriority(Thread.MIN_PRIORITY);"], [92, "            connector.start();"], [101, "     * @param delayMillis The interval to pause between retries."], [105, "            int delayMillis, final boolean immediateFail, final Layout<? extends Serializable> layout) {"], [112, "        if (delayMillis == 0) {"], [113, "            delayMillis = DEFAULT_RECONNECTION_DELAY_MILLIS;"], [115, "        return (TcpSocketManager) getManager(\"TCP:\" + host + ':' + port, new FactoryData(host, port,"], [116, "                connectTimeoutMillis, delayMillis, immediateFail, layout), FACTORY);"], [122, "            if (connector != null && !immediateFail) {"], [123, "                connector.latch();"], [138, "                if (retry && connector == null) {"], [139, "                    connector = new Reconnector(this);"], [140, "                    connector.setDaemon(true);"], [141, "                    connector.setPriority(Thread.MIN_PRIORITY);"], [142, "                    connector.start();"], [153, "        if (connector != null) {"], [154, "            connector.shutdown();"], [155, "            connector.interrupt();"], [156, "            connector = null;"], [224, "                        connector = null;"], [259, "        private final int delayMillis;"], [263, "        public FactoryData(final String host, final int port, final int connectTimeoutMillis, final int delayMillis,"], [264, "                           final boolean immediateFail, final Layout<? extends Serializable> layout) {"], [268, "            this.delayMillis = delayMillis;"], [295, "                        data.connectTimeoutMillis, data.delayMillis, data.immediateFail, data.layout);"], [300, "            if (data.delayMillis == 0) {"], [304, "                    data.delayMillis, data.immediateFail, data.layout);"]]}, "num_lines_added": 49, "num_lines_removed": 36}