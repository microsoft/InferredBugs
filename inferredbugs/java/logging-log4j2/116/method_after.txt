    @Override
    protected void write(final byte[] bytes, final int offset, final int length, final boolean immediateFlush)  {
        if (socket == null) {
            if (reconnector != null && !immediateFail) {
                reconnector.latch();
            }
            if (socket == null) {
                final String msg = "Error writing to " + getName() + " socket not available";
                throw new AppenderLoggingException(msg);
            }
        }
        synchronized (this) {
            try {
                final OutputStream outputStream = getOutputStream();
                outputStream.write(bytes, offset, length);
                if (immediateFlush) {
                    outputStream.flush();
                }
            } catch (final IOException ex) {
                if (retry && reconnector == null) {
                    reconnector = new Reconnector(this);
                    reconnector.setDaemon(true);
                    reconnector.setPriority(Thread.MIN_PRIORITY);
                    reconnector.start();
                }
                final String msg = "Error writing to " + getName();
                throw new AppenderLoggingException(msg, ex);
            }
        }
    }