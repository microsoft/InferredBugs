{"hash": "f78a1566438522608051696c8e4acba5bab5b0cb", "message": "More literate tests.", "file_num_lines": 70, "diff_parsed": {"added": [[32, "import static org.apache.logging.log4j.junit.FileMatchers.exists;"], [33, "import static org.apache.logging.log4j.junit.FileMatchers.hasFiles;"], [34, "import static org.apache.logging.log4j.junit.FileMatchers.hasName;"], [35, "import static org.apache.logging.log4j.junit.FileMatchers.that;"], [36, "import static org.hamcrest.Matchers.both;"], [37, "import static org.hamcrest.Matchers.endsWith;"], [38, "import static org.hamcrest.Matchers.hasItemInArray;"], [87, "        assertThat(dir, both(exists()).and(hasFiles()));"], [89, "        assertNotNull(files);"], [90, "        assertThat(files, hasItemInArray(that(hasName(that(endsWith(fileExtension))))));"]], "deleted": [[80, "        assertTrue(\"Directory not created\", dir.exists() && dir.listFiles().length > 0);"], [82, "        assertTrue(\"No files created\", files.length > 0);"], [83, "        boolean found = false;"], [84, "        for (final File file : files) {"], [85, "            if (file.getName().endsWith(fileExtension)) {"], [86, "                found = true;"], [87, "                break;"], [88, "            }"], [89, "        }"], [90, "        assertTrue(\"No compressed files found\", found);"]]}, "num_lines_added": 10, "num_lines_removed": 10}