{"hash": "ad24ac5ed336df66ed1b7ed3f8099bb3ee8cc0ab", "message": "Resource should be managed by try-with-resource.", "file_num_lines": 85, "diff_parsed": {"added": [[44, "        try (final RandomAccessFile raf = new RandomAccessFile(file, \"rw\")) {"], [45, "            final OutputStream os = NullOutputStream.NULL_OUTPUT_STREAM;"], [46, "            final RandomAccessFileManager manager = new RandomAccessFileManager(raf, file.getName(), os, false,"], [47, "                    RandomAccessFileManager.DEFAULT_BUFFER_SIZE, null, null);"], [49, "            final int size = RandomAccessFileManager.DEFAULT_BUFFER_SIZE * 3;"], [50, "            final byte[] data = new byte[size];"], [51, "            manager.write(data); // no buffer overflow exception"], [53, "            // buffer is full but not flushed yet"], [54, "            assertEquals(RandomAccessFileManager.DEFAULT_BUFFER_SIZE * 2, raf.length());"], [55, "        }}"], [66, "        try (final RandomAccessFile raf = new RandomAccessFile(file, \"rw\")) {"], [67, "            final OutputStream os = NullOutputStream.NULL_OUTPUT_STREAM;"], [68, "            final RandomAccessFileManager manager = new RandomAccessFileManager(raf, file.getName(), os, false,"], [69, "                    RandomAccessFileManager.DEFAULT_BUFFER_SIZE, null, null);"], [70, ""], [71, "            final int size = RandomAccessFileManager.DEFAULT_BUFFER_SIZE * 3 + 1;"], [72, "            final byte[] data = new byte[size];"], [73, "            manager.write(data); // no exception"], [74, "            assertEquals(RandomAccessFileManager.DEFAULT_BUFFER_SIZE * 3, raf.length());"], [75, ""], [76, "            manager.flush();"], [77, "            assertEquals(size, raf.length()); // all data written to file now"], [78, "        }}"], [84, "        try (final RandomAccessFile raf = new RandomAccessFile(file, \"rw\")) {"], [85, "            final OutputStream os = NullOutputStream.NULL_OUTPUT_STREAM;"], [86, "            final int bufferSize = 4 * 1024;"], [87, "            assertNotEquals(bufferSize, RandomAccessFileManager.DEFAULT_BUFFER_SIZE);"], [88, ""], [89, "            final RandomAccessFileManager manager = new RandomAccessFileManager(raf, file.getName(), os, false,"], [90, "                    bufferSize, null, null);"], [91, ""], [92, "            // check the resulting buffer size is what was requested"], [93, "            assertEquals(bufferSize, manager.getBufferSize());"], [94, "        }}"], [100, "        try (final RandomAccessFile raf = new RandomAccessFile(file, \"rw\")) {"], [101, "            final OutputStream os = NullOutputStream.NULL_OUTPUT_STREAM;"], [102, "            final int bufferSize = 1;"], [103, "            final RandomAccessFileManager manager = new RandomAccessFileManager(raf, file.getName(), os, false,"], [104, "                    bufferSize, null, null);"], [105, ""], [106, "            final int size = bufferSize * 3 + 1;"], [107, "            final byte[] data = new byte[size];"], [108, "            manager.write(data); // no exception"], [109, "            assertEquals(bufferSize * 3, raf.length());"], [110, ""], [111, "            manager.flush();"], [112, "            assertEquals(size, raf.length()); // all data written to file now"], [113, "        }}"]], "deleted": [[44, "        final RandomAccessFile raf = new RandomAccessFile(file, \"rw\");"], [45, "        final OutputStream os = NullOutputStream.NULL_OUTPUT_STREAM;"], [46, "        final RandomAccessFileManager manager = new RandomAccessFileManager(raf, file.getName(), os,"], [47, "                false, RandomAccessFileManager.DEFAULT_BUFFER_SIZE, null, null);"], [49, "        final int size = RandomAccessFileManager.DEFAULT_BUFFER_SIZE * 3;"], [50, "        final byte[] data = new byte[size];"], [51, "        manager.write(data); // no buffer overflow exception"], [53, "        // buffer is full but not flushed yet"], [54, "        assertEquals(RandomAccessFileManager.DEFAULT_BUFFER_SIZE * 2, raf.length());"], [55, "    }"], [66, "        final RandomAccessFile raf = new RandomAccessFile(file, \"rw\");"], [67, "        final OutputStream os = NullOutputStream.NULL_OUTPUT_STREAM;"], [68, "        final RandomAccessFileManager manager = new RandomAccessFileManager(raf, file.getName(), os,"], [69, "                false, RandomAccessFileManager.DEFAULT_BUFFER_SIZE, null, null);"], [70, ""], [71, "        final int size = RandomAccessFileManager.DEFAULT_BUFFER_SIZE * 3 + 1;"], [72, "        final byte[] data = new byte[size];"], [73, "        manager.write(data); // no exception"], [74, "        assertEquals(RandomAccessFileManager.DEFAULT_BUFFER_SIZE * 3, raf.length());"], [75, ""], [76, "        manager.flush();"], [77, "        assertEquals(size, raf.length()); // all data written to file now"], [78, "    }"], [84, "        final RandomAccessFile raf = new RandomAccessFile(file, \"rw\");"], [85, "        final OutputStream os = NullOutputStream.NULL_OUTPUT_STREAM;"], [86, "        final int bufferSize = 4 * 1024;"], [87, "        assertNotEquals(bufferSize, RandomAccessFileManager.DEFAULT_BUFFER_SIZE);"], [88, ""], [89, "        final RandomAccessFileManager manager = new RandomAccessFileManager(raf, file.getName(), os,"], [90, "                false, bufferSize, null, null);"], [91, ""], [92, "        // check the resulting buffer size is what was requested"], [93, "        assertEquals(bufferSize, manager.getBufferSize());"], [94, "    }"], [100, "        final RandomAccessFile raf = new RandomAccessFile(file, \"rw\");"], [101, "        final OutputStream os = NullOutputStream.NULL_OUTPUT_STREAM;"], [102, "        final int bufferSize = 1;"], [103, "        final RandomAccessFileManager manager = new RandomAccessFileManager(raf, file.getName(), os,"], [104, "                false, bufferSize, null, null);"], [105, ""], [106, "        final int size = bufferSize * 3 + 1;"], [107, "        final byte[] data = new byte[size];"], [108, "        manager.write(data); // no exception"], [109, "        assertEquals(bufferSize * 3, raf.length());"], [110, ""], [111, "        manager.flush();"], [112, "        assertEquals(size, raf.length()); // all data written to file now"], [113, "    }"]]}, "num_lines_added": 48, "num_lines_removed": 48}