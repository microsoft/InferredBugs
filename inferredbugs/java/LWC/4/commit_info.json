{"hash": "77db5ece935f05ef2be4fbbd26570c0126619052", "message": "Moved the database converter to its own handy class", "file_num_lines": 45, "diff_parsed": {"added": [[77, "        // rev up those sqlite databases because I sure am hungry for some data..."], [78, "        DatabaseMigrator migrator = new DatabaseMigrator();"], [80, "        if (migrator.convertFrom(Type.SQLite)) {"], [81, "            logger.info(\"Successfully converted.\");"], [89, "        } else {"]], "deleted": [[77, "        logger.info(\"Loading SQLite\");"], [78, ""], [79, "        // rev up those sqlite databases because I sure am hungry for some"], [80, "        // data..."], [81, "        PhysDB sqliteDatabase = new PhysDB(Type.SQLite);"], [82, ""], [83, "        try {"], [84, "            sqliteDatabase.connect();"], [85, "            sqliteDatabase.load();"], [86, ""], [87, "            logger.info(\"SQLite is good to go\");"], [88, "            physicalDatabase.getConnection().setAutoCommit(false);"], [89, ""], [90, "            logger.info(\"Preliminary scan...............\");"], [91, "            int startProtections = physicalDatabase.getProtectionCount();"], [92, ""], [93, "            int protectionCount = sqliteDatabase.getProtectionCount();"], [94, "            int historyCount = sqliteDatabase.getHistoryCount();"], [95, ""], [96, "            int expectedProtections = protectionCount + startProtections;"], [97, ""], [98, "            logger.info(\"TO CONVERT:\");"], [99, "            logger.info(\"Protections:\\t\" + protectionCount);"], [100, "            logger.info(\"History:\\t\" + historyCount);"], [101, "            logger.info(\"\");"], [102, ""], [103, "            if (protectionCount > 0) {"], [104, "                logger.info(\"Converting: PROTECTIONS\");"], [105, ""], [106, "                List<Protection> tmp = sqliteDatabase.loadProtections();"], [107, ""], [108, "                for (Protection protection : tmp) {"], [109, "                    // sync it to the live database"], [110, "                    protection.saveNow();"], [111, "                }"], [112, ""], [113, "                logger.info(\"COMMITTING\");"], [114, "                physicalDatabase.getConnection().commit();"], [115, "                logger.info(\"OK , expecting: \" + expectedProtections);"], [116, "                if (expectedProtections == (protectionCount = physicalDatabase.getProtectionCount())) {"], [117, "                    logger.info(\"OK.\");"], [118, "                } else {"], [119, "                    logger.info(\"Weird, only \" + protectionCount + \" protections are in the database? Continuing...\");"], [120, "                }"], [121, "            }"], [122, ""], [123, "            if (historyCount > 0) {"], [124, "                logger.info(\"Converting: HISTORY\");"], [125, ""], [126, "                List<History> tmp = sqliteDatabase.loadHistory();"], [127, ""], [128, "                for (History history : tmp) {"], [129, "                    // make sure it's assumed it does not exist in the database"], [130, "                    history.setExists(false);"], [131, ""], [132, "                    // sync the history object with the active database (ala MySQL)"], [133, "                    history.sync();"], [134, "                }"], [135, ""], [136, "                logger.info(\"OK\");"], [137, "            }"], [138, ""], [139, "            logger.info(\"Closing SQLite\");"], [140, "            sqliteDatabase.getConnection().close();"], [149, "        } catch (Exception e) {"], [151, "            e.printStackTrace();"], [152, "        }"], [153, ""], [154, "        try {"], [155, "            physicalDatabase.getConnection().setAutoCommit(true);"], [156, "        } catch (SQLException e) {"], [157, "            e.printStackTrace();"]]}, "num_lines_added": 5, "num_lines_removed": 72}