{"hash": "4475e0f1609c1ccdf2a12fad372dcbc2181d24f3", "message": "Added support for soft dependencies.\n\nSoft dependencies allow plugins to request to be loaded after another plugin, but they will not throw an UnknownDependency exception if the other plugin is not present.", "file_num_lines": 626, "diff_parsed": {"added": [[48, "        return loadPlugin(file, false);"], [49, "    }"], [50, ""], [51, "    public Plugin loadPlugin(File file, boolean ignoreSoftDependencies) throws InvalidPluginException, InvalidDescriptionException, UnknownDependencyException {"], [133, "        if (!ignoreSoftDependencies) {"], [134, "            ArrayList<String> softDepend;"], [135, "            try {"], [136, "                softDepend = (ArrayList)description.getSoftDepend();"], [137, "                if (softDepend == null) {"], [138, "                    softDepend = new ArrayList<String>();"], [139, "                }"], [140, "            } catch (ClassCastException ex) {"], [141, "                 throw new InvalidPluginException(ex);"], [142, "            }"], [143, ""], [144, "            for (String pluginName : softDepend) {"], [145, "                if (loaders == null) {"], [146, "                    throw new UnknownSoftDependencyException(pluginName);"], [147, "                }"], [148, "                PluginClassLoader current = loaders.get(pluginName);"], [149, "                if (current == null) {"], [150, "                    throw new UnknownSoftDependencyException(pluginName);"], [151, "                }"], [152, "            }"], [153, "        }"], [154, ""]], "deleted": []}, "num_lines_added": 26, "num_lines_removed": 0}