    protected void initialize(boolean strict) {
        try {
            activator = DOMHelper.getElementByAttribute("data-activates", getId());
            if (alwaysShowActivator || !isFixed()) {
                String style = activator.getAttribute("style");
                activator.setAttribute("style", style + "; display: block !important");
                activator.removeClassName(CssName.NAVMENU_PERMANENT);
            }
        } catch (Exception ex) {
            if (strict) {
                throw new IllegalArgumentException("Could not setup MaterialSideNav please ensure you have MaterialNavBar with an activator setup to match this widgets id.");
            }
        }

        SideNavType type = getType();
        processType(type);

        JsSideNavOptions options = new JsSideNavOptions();
        options.menuWidth = width;
        options.edge = edge != null ? edge.getCssName() : null;
        options.closeOnClick = closeOnClick;

        JsMaterialElement element = $(activator);
        element.sideNav(options);

        element.off("side-nav-closing");
        element.on("side-nav-closing", e1 -> {
            onClosing();
            return true;
        });

        element.off("side-nav-closed");
        element.on("side-nav-closed", e1 -> {
            onClosed();
            return true;
        });

        element.off("side-nav-opening");
        element.on("side-nav-opening", e1 -> {
            onOpening();
            return true;
        });

        element.off("side-nav-opened");
        element.on("side-nav-opened", e1 -> {
            onOpened();
            return true;
        });
    }