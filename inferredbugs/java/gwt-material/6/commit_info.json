{"hash": "bee225743e64bca90b3f92adffd0078e06aca5fb", "message": "Initial Delivery of SideNav Types : OVERLAY & FLOAT", "file_num_lines": 386, "diff_parsed": {"added": [[83, "    private HandlerRegistration overlayOpeningHandler;"], [288, "                case OVERLAY:"], [289, "                    applyOverlayType();"], [290, "                    break;"], [291, "                case FLOAT:"], [292, "                    applyFloatType();"], [293, "                    break;"], [315, "    protected MaterialWidget getNavMenu() {"], [316, "        Element navMenuElement = DOMHelper.getElementByAttribute(\"data-activates\", getId());"], [317, "        if (navMenuElement != null) {"], [318, "            return new MaterialWidget(navMenuElement);"], [319, "        }"], [320, "        return null;"], [321, "    }"], [322, ""], [323, "    /**"], [324, "     * Provides a float sidenav that will overlay on top of the content not the navbar without"], [325, "     * any grey overlay behind it."], [326, "     */"], [327, "    protected void applyFloatType() {"], [328, "        $(\"header\").css(\"paddingLeft\", \"0px\");"], [329, "        $(\"main\").css(\"paddingLeft\", width + \"px\");"], [330, "    }"], [331, ""], [332, "    /**"], [333, "     * Provides an overlay sidenav just like when opening sidenav on mobile / tablet"], [334, "     */"], [335, "    protected void applyOverlayType() {"], [336, "        setShowOnAttach(false);"], [337, "        getNavMenu().setShowOn(ShowOn.SHOW_ON_LARGE);"], [338, "        if (overlayOpeningHandler == null) {"], [339, "            overlayOpeningHandler = addOpeningHandler(event -> {"], [340, "                Scheduler.get().scheduleDeferred(() -> $(\"#sidenav-overlay\").css(\"visibility\", \"visible\"));"], [341, "            });"], [342, "        }"], [343, "        $(\"header\").css(\"paddingLeft\", \"0px\");"], [344, "        $(\"main\").css(\"paddingLeft\", \"0px\");"], [345, "    }"], [346, ""], [347, "    /**"], [348, "     * Provides a Fixed type sidenav which by default on desktop - activator will notbe visible"], [349, "     * but you can configure it by setting the property setAlwaysShowActivator() to true"], [350, "     */"], [358, ""], [359, ""], [360, "        $(\"header\").css(\"paddingLeft\", width + \"px\");"], [361, "        $(\"main\").css(\"paddingLeft\", width + \"px\");"], [362, "        $(\"footer\").css(\"paddingLeft\", width + \"px\");"], [426, "            getNavMenu().setShowOn(ShowOn.SHOW_ON_MED_DOWN);"], [427, "            if (alwaysShowActivator && getType() != SideNavType.FIXED) {"], [428, "                getNavMenu().setShowOn(ShowOn.SHOW_ON_LARGE);"], [430, "                getNavMenu().setHideOn(HideOn.HIDE_ON_LARGE);"], [432, "            getNavMenu().removeStyleName(CssName.NAVMENU_PERMANENT);"]], "deleted": [[378, "            MaterialWidget navMenu = new MaterialWidget(activator);"], [379, "            navMenu.setShowOn(ShowOn.SHOW_ON_MED_DOWN);"], [380, "            if (alwaysShowActivator) {"], [381, "                navMenu.setShowOn(ShowOn.SHOW_ON_LARGE);"], [383, "                navMenu.setHideOn(HideOn.HIDE_ON_LARGE);"], [385, "            activator.removeClassName(CssName.NAVMENU_PERMANENT);"]]}, "num_lines_added": 53, "num_lines_removed": 6}