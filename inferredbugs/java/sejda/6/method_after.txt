    @Test
    public void mergeWithSignatureRemovesSignatureValue() throws IOException {
        PDDocument destination = new PDDocument();
        AcroFormsMerger victim = new AcroFormsMerger(AcroFormPolicy.MERGE, destination);
        assertNotNull(document.getDocumentCatalog().getAcroForm());
        victim.mergeForm(document.getDocumentCatalog().getAcroForm(), annotationsLookup);
        mapping.clear();
        annotationsLookup.clear();

        PDDocument anotherDoc = PDFParser.parse(SeekableSources.inMemorySeekableSourceFrom(
                getClass().getClassLoader().getResourceAsStream("pdf/forms/simple_form_with_signature_signed.pdf")));
        for (PDPage current : anotherDoc.getPages()) {
            mapping.addLookupEntry(current, new PDPage());
            annotationsLookup = new AnnotationsDistiller(anotherDoc).retainRelevantAnnotations(mapping);
        }
        victim.mergeForm(anotherDoc.getDocumentCatalog().getAcroForm(), annotationsLookup);

        assertFalse(victim.getForm().getFields().isEmpty());

        PDAcroForm form = victim.getForm();
        assertNotNull(form);
        PDField signature = null;
        for (PDField current : form.getFieldTree()) {
            if (current.getFieldType() == COSName.SIG.getName()) {
                signature = current;
            }
        }
        assertNotNull(signature);
        assertEquals("", signature.getValueAsString());
        assertTrue(form.isSignaturesExist());
    }