{"hash": "b08d51028a6ff34318bcf24fb854757408ff40c9", "message": "close #300: Merge task could accept images", "file_num_lines": 70, "diff_parsed": {"added": [[30, "import org.apache.commons.lang3.mutable.MutableInt;"], [34, "import org.sejda.impl.sambox.component.image.ImagesToPdfDocumentConverter;"], [66, "        final MutableInt currentStep = new MutableInt(0);"], [68, "        ImagesToPdfDocumentConverter converter = new ImagesToPdfDocumentConverter() {"], [69, "            @Override"], [70, "            public void beforeImage(Source<?> source) throws TaskException {"], [71, "                executionContext().assertTaskNotCancelled();"], [72, "                currentStep.increment();"], [73, "            }"], [75, "            @Override"], [76, "            public void afterImage(PDImageXObject image) {"], [77, "                notifyEvent(executionContext().notifiableTaskMetadata()).stepsCompleted(currentStep.getValue()).outOf(totalSteps);"], [78, "            }"], [80, "            @Override"], [81, "            public void failedImage(Source<?> source, TaskIOException e) throws TaskException{"], [86, "        };"], [87, ""], [88, "        documentHandler = converter.convert(parameters.getSourceList());"]], "deleted": [[28, "import java.awt.Point;"], [34, "import org.sejda.impl.sambox.component.PageImageWriter;"], [41, "import org.sejda.sambox.pdmodel.PDPage;"], [42, "import org.sejda.sambox.pdmodel.common.PDRectangle;"], [68, "        int currentStep = 0;"], [70, "        documentHandler = new PDDocumentHandler();"], [71, "        documentHandler.setCreatorOnPDDocument();"], [72, ""], [73, "        PageImageWriter imageWriter = new PageImageWriter(documentHandler.getUnderlyingPDDocument());"], [74, ""], [75, "        for (Source<?> source : parameters.getSourceList()) {"], [76, "            executionContext().assertTaskNotCancelled();"], [77, ""], [78, "            currentStep++;"], [79, ""], [80, "            try {"], [81, "                PDImageXObject image = PageImageWriter.toPDXImageObject(source);"], [82, "                PDRectangle mediaBox = PDRectangle.A4;"], [83, ""], [84, "                if (image.getWidth() > image.getHeight() && image.getWidth() > mediaBox.getWidth()) {"], [85, "                    mediaBox = new PDRectangle(mediaBox.getHeight(), mediaBox.getWidth());"], [86, "                }"], [87, ""], [88, "                PDPage page = documentHandler.addBlankPage(mediaBox);"], [89, ""], [90, "                // full page (scaled down only)"], [91, "                int width = image.getWidth();"], [92, "                int height = image.getHeight();"], [93, ""], [94, "                if (width > mediaBox.getWidth()) {"], [95, "                    int targetWidth = (int) mediaBox.getWidth();"], [96, "                    LOG.debug(\"Scaling image down to fit by width {} vs {}\", width, targetWidth);"], [97, ""], [98, "                    float ratio = (float) width / targetWidth;"], [99, "                    width = targetWidth;"], [100, "                    height = Math.round(height / ratio);"], [101, "                }"], [102, ""], [103, "                if (height > mediaBox.getHeight()) {"], [104, "                    int targetHeight = (int) mediaBox.getHeight();"], [105, "                    LOG.debug(\"Scaling image down to fit by height {} vs {}\", height, targetHeight);"], [106, ""], [107, "                    float ratio = (float) height / targetHeight;"], [108, "                    height = targetHeight;"], [109, "                    width = Math.round(width / ratio);"], [110, "                }"], [111, ""], [112, "                // centered on page"], [113, "                int x = ((int) mediaBox.getWidth() - width) / 2;"], [114, "                int y = ((int) mediaBox.getHeight() - height) / 2;"], [116, "                imageWriter.append(page, image, new Point(x, y), width, height, null, 0);"], [118, "                notifyEvent(executionContext().notifiableTaskMetadata()).stepsCompleted(currentStep).outOf(totalSteps);"], [119, "            } catch (TaskIOException e) {"], [124, "        }"]]}, "num_lines_added": 18, "num_lines_removed": 54}