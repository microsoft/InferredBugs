{"hash": "9468cdbc6819dd85c6a7aaac05fed09268bd744d", "message": "Adds font support for gujarati and tamil languages", "file_num_lines": 174, "diff_parsed": {"added": [[48, "import java.util.Arrays;"], [49, "import java.util.List;"], [111, "        assertNotNull(findFontFor(\"\u067e\u0646\u062c\u0627\u0628\u06cc, \u0a2a\u0a70\u0a1c\u0a3e\u0a2c\u0a40\")); // punjabi"], [112, "        assertNotNull(findFontFor(\"\u0ba4\u0bae\u0bbf\u0bb4\u0bcd\")); // tamil"], [113, "        assertNotNull(findFontFor(\"\u0a97\u0ac1\u0a9c\u0ab0\u0abe\u0aa4\u0ac0\")); // gujarati"], [118, "        assertNotNull(findFontFor(\"\u0a97\u0ac1\u0a9c\u0ab0\u0abe\u0aa4\u0ac0 \u0ba4\u0bae\u0bbf\u0bb4\u0bcd \u067e\u0646\u062c\u0627\u0628\u06cc, \u0a2a\u0a70\u0a1c\u0a3e\u0a2c\u0a40 \u0a39\u0a30\u0a1c\u0a4b\u0a24 \u0a38\u0a3f\u0a70\u0a18 \u1797\u17b6\u179f\u17b6\u1781\u17d2\u1798\u17c2\u179a\u1329 latin \u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c \u0e17\u0e14\u0e2a\u0e2d\u0e1a \u0d35\u0d40\u0d1f \u092e\u093e\u0928\u0915 \u0939\u093f\u0928\u094d\u0926\u0940 \u0d4d \u0c1c \u0989 \u1797\u17b6\u179f\u17b6\u1781\u17d2\u1798\u17c2\u179a  \u05e2\u05d1\u05e8\u05d9\u05ea\")); // all in one"], [123, "        List<String> strings = Arrays.asList(\"\u0a97\u0ac1\u0a9c\u0ab0\u0abe\u0aa4\u0ac0 \u0a2a\u0a70\u0a1c\u0a3e\u0a2c\u0a40 \u0ba4\u0bae\u0bbf\u0bb4\u0bcd\","], [124, "                \"\u0a39\u0a30\u0a1c\u0a4b\u0a24 \u0a38\u0a3f\u0a70\u0a18 \u1797\u17b6\u179f\u17b6\u1781\u17d2\u1798\u17c2\u179a latin \u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c \u0e17\u0e14\u0e2a\u0e2d\u0e1a \u0d35\u0d40\u0d1f \u092e\u093e\u0928\u0915 \u0939\u093f\u0928\u094d\u0926\u0940 \u0d4d \u0c1c \u0989 \u2617\u2984\u2738\u2583 \");"], [125, ""], [126, "        for(String str: strings) {"], [127, "            PDDocument doc = new PDDocument();"], [128, "            PDPage page = new PDPage();"], [129, "            new PageTextWriter(doc).write(page, new Point(10, 10), str, getStandardType1Font(StandardType1Font.HELVETICA), 10.0d, Color.BLACK);"], [130, "            doc.addPage(page);"], [131, "            PDDocumentHandler handler = new PDDocumentHandler(doc);"], [132, "            File tmp = IOUtils.createTemporaryPdfBuffer();"], [133, "            handler.savePDDocument(tmp);"], [134, ""], [135, "            PDDocument doc2 = PDFParser.parse(SeekableSources.seekableSourceFrom(tmp));"], [136, "            String text = new PdfTextExtractorByArea().extractTextFromArea(doc2.getPage(0), new Rectangle(0, 0, 1000, 1000));"], [137, "            assertEquals(noWhitespace(str), noWhitespace(text));"], [138, "        }"]], "deleted": [[109, "        assertNotNull(findFontFor(\"Shri \u0a39\u0a30\u0a1c\u0a4b\u0a24 \u0a38\u0a3f\u0a70\u0a18 / Harjot Singh\"));"], [114, "        assertNotNull(findFontFor(\"\u0a39\u0a30\u0a1c\u0a4b\u0a24 \u0a38\u0a3f\u0a70\u0a18 \u1797\u17b6\u179f\u17b6\u1781\u17d2\u1798\u17c2\u179a\u1329 latin \u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c \u0e17\u0e14\u0e2a\u0e2d\u0e1a \u0d35\u0d40\u0d1f \u092e\u093e\u0928\u0915 \u0939\u093f\u0928\u094d\u0926\u0940 \u0d4d \u0c1c \u0989 \u1797\u17b6\u179f\u17b6\u1781\u17d2\u1798\u17c2\u179a  \u05e2\u05d1\u05e8\u05d9\u05ea\")); // all in one"], [119, "        String str = \"\u0a39\u0a30\u0a1c\u0a4b\u0a24 \u0a38\u0a3f\u0a70\u0a18 \u1797\u17b6\u179f\u17b6\u1781\u17d2\u1798\u17c2\u179a latin \u0105\u0107\u0119\u0142\u0144\u00f3\u015b\u017a\u017c \u0e17\u0e14\u0e2a\u0e2d\u0e1a \u0d35\u0d40\u0d1f \u092e\u093e\u0928\u0915 \u0939\u093f\u0928\u094d\u0926\u0940 \u0d4d \u0c1c \u0989 \u2617\u2984\u2738\u2583 \";"], [120, "        PDDocument doc = new PDDocument();"], [121, "        PDPage page = new PDPage();"], [122, "        new PageTextWriter(doc).write(page, new Point(10, 10), str, getStandardType1Font(StandardType1Font.HELVETICA), 10.0d, Color.BLACK);"], [123, "        doc.addPage(page);"], [124, "        PDDocumentHandler handler = new PDDocumentHandler(doc);"], [125, "        File tmp = IOUtils.createTemporaryPdfBuffer();"], [126, "        handler.savePDDocument(tmp);"], [127, ""], [128, "        PDDocument doc2 = PDFParser.parse(SeekableSources.seekableSourceFrom(tmp));"], [129, "        String text = new PdfTextExtractorByArea().extractTextFromArea(doc2.getPage(0), new Rectangle(0,0, 1000, 1000));"], [130, "        assertEquals(noWhitespace(str), noWhitespace(text));"]]}, "num_lines_added": 22, "num_lines_removed": 14}