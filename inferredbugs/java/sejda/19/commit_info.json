{"hash": "e1dddac7ba89d39e564059eecf77105dc536715e", "message": "Added [TOTAL_FILESNUMBER] placeholder. This needs to done at the end of task, when we know the number of generated files so it doesn't fit well our current names generation logic. To keep it simple I just put it at the end of the process, right before we move the files to the final destination. I also moved the name shortening logic after we replace this placeholder", "file_num_lines": 24, "diff_parsed": {"added": [[30, ""], [63, "        return toSafeFilename(prefixTypesChain.process(prefix, ofNullable(request).orElseGet(() -> nameRequest())));"]], "deleted": [[24, "import static org.apache.commons.io.FilenameUtils.getBaseName;"], [25, "import static org.apache.commons.io.FilenameUtils.getExtension;"], [29, "import java.nio.charset.Charset;"], [30, "import java.nio.charset.StandardCharsets;"], [31, ""], [67, "        String result = toSafeFilename("], [68, "                prefixTypesChain.process(prefix, ofNullable(request).orElseGet(() -> nameRequest())));"], [69, ""], [70, "        String osName = System.getProperty(\"os.name\").toLowerCase();"], [71, "        if (osName.contains(\"win\") || osName.contains(\"mac\")) {"], [72, "            // char based max length"], [73, "            result = shortenFilenameCharLength(result, 255);"], [74, "        } else {"], [75, "            // bytes based max length"], [76, "            result = shortenFilenameBytesLength(result, 254, StandardCharsets.UTF_8);"], [77, "        }"], [78, ""], [79, "        return result;"], [82, "    static String shortenFilenameCharLength(String input, int maxCharLength) {"], [83, "        if (input.length() > maxCharLength) {"], [84, "            String baseName = getBaseName(input);"], [85, "            String ext = getExtension(input);"], [86, ""], [87, "            baseName = baseName.substring(0, maxCharLength - 1 - ext.length());"], [88, "            return String.format(\"%s.%s\", baseName, ext);"], [89, "        }"], [90, "        return input;"], [91, ""], [92, "    }"], [93, ""], [94, "    static String shortenFilenameBytesLength(String input, int maxBytesLength, Charset charset) {"], [95, "        if (input.getBytes(charset).length > maxBytesLength) {"], [96, "            String baseName = getBaseName(input);"], [97, "            String ext = getExtension(input);"], [98, ""], [99, "            // drop last char from basename, try again"], [100, "            baseName = baseName.substring(0, baseName.length() - 1);"], [101, "            String shorterFilename = String.format(\"%s.%s\", baseName, ext);"], [102, ""], [103, "            while (shorterFilename.getBytes(charset).length > maxBytesLength) {"], [104, "                baseName = baseName.substring(0, baseName.length() - 1);"], [105, "                shorterFilename = String.format(\"%s.%s\", baseName, ext);"], [106, "            }"], [107, ""], [108, "            return shorterFilename;"], [109, "        }"], [110, "        return input;"], [111, "    }"]]}, "num_lines_added": 2, "num_lines_removed": 48}