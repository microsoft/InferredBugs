{"hash": "a8cc224fd8ca5765e21612a6425fd199cc687e58", "message": "Version 1.5.1 - Add changes to support Intel i3", "file_num_lines": 205, "diff_parsed": {"added": [[24, "import java.util.NavigableMap;"], [25, "import java.util.TreeMap;"], [46, "    private static NavigableMap<Integer, AffinityLock[]> CORES; // set by cpuLayout()"], [66, "            CORES = new TreeMap<Integer, AffinityLock[]>();"], [70, "                AffinityLock[] als = CORES.get(core);"], [71, "                if (als == null)"], [72, "                    CORES.put(core, als = new AffinityLock[threads]);"], [73, "                als[cpuLayout.threadId(id)] = al;"], [130, "                for (AffinityLock[] als : CORES.descendingMap().values()) {"], [132, "                        int core = coreForId(al.id);"], [133, "                        if (!al.canReserve() || !strategy.matches(cpuId, core))"], [199, "            for (AffinityLock al : CORES.get(core)) {"], [210, "                for (AffinityLock al : CORES.get(core)) {"]], "deleted": [[44, "    private static AffinityLock[][] CORES; // set by cpuLayout()"], [64, "            CORES = new AffinityLock[cores][threads];"], [68, "                CORES[core][cpuLayout.threadId(id)] = al;"], [125, "                for (int i = CORES.length - 1; i > 0; i--) {"], [126, "                    AffinityLock[] als = CORES[i];"], [128, "                        if (!al.canReserve() || !strategy.matches(cpuId, i))"], [194, "            for (AffinityLock al : CORES[core]) {"], [205, "                for (AffinityLock al : CORES[core]) {"]]}, "num_lines_added": 13, "num_lines_removed": 8}