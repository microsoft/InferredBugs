{"hash": "3517db2625b0cfa1896c22911e518f89e24bea2c", "message": "Added onUserStatsUnloaded(), onUserAchievementStored() callbacks.", "file_num_lines": 375, "diff_parsed": {"added": [[53, "\t\tpublic void onUserStatsUnloaded(SteamID steamIDUser) {"], [54, "\t\t\tSystem.out.println(\"User stats unloaded: userId=\" + steamIDUser.getAccountID());"], [55, "\t\t}"], [56, ""], [57, "\t\t@Override"], [58, "\t\tpublic void onUserAchievementStored(long gameId, boolean isGroupAchievement, String achievementName,"], [59, "\t\t\t\t\t\t\t\t\t\t\tint curProgress, int maxProgress) {"], [60, "\t\t\tSystem.out.println(\"User achievement stored: gameId=\" + gameId + \", name=\" + achievementName +"], [61, "\t\t\t\t\t\", progress=\" + curProgress + \"/\" + maxProgress);"], [62, "\t\t}"], [63, ""], [64, "\t\t@Override"], [299, "\t\t} else if (input.startsWith(\"achievement set \")) {"], [300, "\t\t\tString achievementName = input.substring(\"achievement set \".length());"], [301, "\t\t\tSystem.out.println(\"- setting \" + achievementName + \" to 'achieved'\");"], [302, "\t\t\tuserStats.setAchievement(achievementName);"], [303, "\t\t} else if (input.startsWith(\"achievement clear \")) {"], [304, "\t\t\tString achievementName = input.substring(\"achievement clear \".length());"], [305, "\t\t\tSystem.out.println(\"- clearing \" + achievementName);"], [306, "\t\t\tuserStats.clearAchievement(achievementName);"]], "deleted": []}, "num_lines_added": 20, "num_lines_removed": 0}