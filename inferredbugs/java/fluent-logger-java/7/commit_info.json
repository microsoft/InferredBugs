{"hash": "38e301bf039b26bde9007903575400085c38c1cc", "message": "changed logging API: FluentLogger#flush() throws IOException to FluentLogger#flush()", "file_num_lines": 187, "diff_parsed": {"added": [[221, "        // suppress reconnection burst"], [222, "        if (!reconnector.enableReconnection(System.currentTimeMillis())) {"], [223, "            return true;"], [225, ""], [226, "        // send pending data"], [227, "        flush();"], [228, ""], [232, "    public synchronized void flush() {"], [233, "        try {"], [234, "            reconnect(); // check whether connection is established or not"], [235, "            out.write(getBuffer()); // write data"], [236, "            out.flush();"], [237, "            clearBuffer();"], [238, "        } catch (IOException e) {"], [239, "            LOG.throwing(this.getClass().getName(), \"flush\", e);"], [240, "        }"]], "deleted": [[221, "        try {"], [222, "            // suppress reconnection burst"], [223, "            if (!reconnector.enableReconnection(System.currentTimeMillis())) {"], [224, "                return true;"], [225, "            }"], [226, ""], [227, "            // send pending data"], [228, "            flush();"], [229, "        } catch (IOException e) {"], [230, "            // close socket"], [231, "            close();"], [236, "    public synchronized void flush() throws IOException {"], [237, "        reconnect(); // check whether connection is established or not"], [238, "        out.write(getBuffer()); // write data"], [239, "        out.flush();"], [240, "        clearBuffer();"]]}, "num_lines_added": 16, "num_lines_removed": 16}