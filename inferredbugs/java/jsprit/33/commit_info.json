{"hash": "9184e4f392fec08e58b2c568e7be3db2f8629b3b", "message": "fix bug: tsp reader could not read asymmetric matrix", "file_num_lines": 285, "diff_parsed": {"added": [[33, "import java.util.HashMap;"], [35, "import java.util.Map;"], [62, "        int coordIndex = 0;"], [63, "        Map<Integer,Integer> indexMap = new HashMap<Integer, Integer>();"], [129, "                Integer id = Integer.parseInt(tokens[0]);"], [130, "                coords[coordIndex] = Coordinate.newInstance(Double.parseDouble(tokens[1]), Double.parseDouble(tokens[2]));"], [131, "                indexMap.put(id,coordIndex);"], [132, "                coordIndex++;"], [138, "                Integer id = Integer.parseInt(tokens[0]);"], [139, "                int index = indexMap.get(id);"], [140, "                demands[index] = Integer.parseInt(tokens[1]);"], [167, "        for (Integer id_ : indexMap.keySet()) {"], [168, "            String id = id_.toString();"], [169, "            int index = indexMap.get(id_);"], [171, "                if(index == 0) {"], [174, "                                    .setCoordinate(coords[index]).setIndex(index).build())"], [182, "                            .setCoordinate(coords[index]).setIndex(index).build())"], [183, "                    .addSizeDimension(0, demands[index]).build();"], [239, "                FastVehicleRoutingTransportCostsMatrix.Builder matrixBuilder = FastVehicleRoutingTransportCostsMatrix.Builder.newInstance(dimensions,false);"]], "deleted": [[60, ""], [126, "                coords[Integer.parseInt(tokens[0]) - 1] = Coordinate.newInstance(Double.parseDouble(tokens[1]), Double.parseDouble(tokens[2]));"], [132, "                demands[Integer.parseInt(tokens[0]) - 1] = Integer.parseInt(tokens[1]);"], [159, "        for (int i = 0; i < coords.length; i++) {"], [160, "            String id = \"\" + (i + 1);"], [162, "                if(i==0) {"], [165, "                                    .setCoordinate(coords[i]).setIndex(i).build())"], [166, ""], [174, "                            .setCoordinate(coords[i]).setIndex(i).build())"], [175, "                    .addSizeDimension(0, demands[i]).build();"], [231, "                FastVehicleRoutingTransportCostsMatrix.Builder matrixBuilder = FastVehicleRoutingTransportCostsMatrix.Builder.newInstance(dimensions,true);"]]}, "num_lines_added": 19, "num_lines_removed": 11}