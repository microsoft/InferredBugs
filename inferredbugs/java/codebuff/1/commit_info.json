{"hash": "579c5f86251ef173cf15cd40a147ee8d87cbe679", "message": "* drop one feature was not comparing just WS error rate but overall rate. less meaningful.\n* separate drop feature from all vs one from curated decision.", "file_num_lines": 162, "diff_parsed": {"added": [[4, "import org.antlr.codebuff.Formatter;"], [6, "import org.antlr.v4.runtime.misc.Triple;"], [37, "\t\ttestFeatures(languages, false);"], [38, "\t}"], [39, ""], [40, "\tpublic static void testFeatures(LangDescriptor[] languages, boolean includeAllFeatures) throws Exception {"], [43, "\t\tFeatureMetaData[] whichFeatures = FEATURES_INJECT_WS;"], [44, "\t\tif ( includeAllFeatures ) {"], [45, "\t\t\twhichFeatures = FEATURES_ALL;"], [46, "\t\t}"], [47, ""], [50, "\t\tif ( includeAllFeatures ) {"], [51, "\t\t\tlabels.add(\"all-in\");"], [52, "\t\t}"], [53, "\t\tfor (FeatureMetaData f : whichFeatures) {"], [54, "\t\t\tif ( f==FeatureMetaData.UNUSED || f.type.toString().startsWith(\"INFO_\") ) continue;"], [62, "\t\t\tFeatureMetaData[] injectWSFeatures = deepCopy(whichFeatures);"], [65, "\t\t\tList<Float> errors = getWSErrorRates(language, injectWSFeatures, FEATURES_ALIGN);"], [74, "\t\t\t// do it again to get answer with all features if they want"], [75, "\t\t\tif ( includeAllFeatures ) {"], [76, "\t\t\t\terrors = getWSErrorRates(language, FEATURES_ALL, FEATURES_ALIGN);"], [77, "\t\t\t\tCollections.sort(errors);"], [78, "\t\t\t\tn = errors.size();"], [79, "\t\t\t\tmedian = errors.get(n/2);"], [80, "\t\t\t\tSystem.out.println(\"all-in error median \"+median);"], [81, "\t\t\t\tfeatureToErrors.put(\"all-in\", median);"], [82, "\t\t\t}"], [93, "\t\t\t\terrors = getWSErrorRates(language, injectWSFeatures, FEATURES_ALIGN);"], [149, "\t\tif ( includeAllFeatures ) {"], [150, "\t\t\tfileName = \"python/src/drop_one_feature_from_all.py\";"], [151, "\t\t}"], [156, "\tpublic static List<Float> getWSErrorRates(LangDescriptor language,"], [157, "\t                                          FeatureMetaData[] injectWSFeatures,"], [158, "\t                                          FeatureMetaData[] alignmentFeatures)"], [162, "\t\tTriple<List<Formatter>,List<Float>,List<Float>> results ="], [164, "\t\tList<Formatter> formatters = results.a;"], [165, "\t\tList<Float> wsErrorRates = new ArrayList<>(); // don't include align errors"], [166, "\t\tfor (Formatter formatter : formatters) {"], [167, "\t\t\tClassificationAnalysis analysis ="], [168, "\t\t\t\tnew ClassificationAnalysis(formatter.testDoc, formatter.getAnalysisPerToken());"], [169, "\t\t\twsErrorRates.add(analysis.getWSErrorRate());"], [170, "\t\t}"], [171, "\t\tSystem.out.println(results.c);"], [172, "\t\tSystem.out.println(\"vs\");"], [173, "\t\tSystem.out.println(wsErrorRates);"], [174, "\t\treturn wsErrorRates;"]], "deleted": [[5, "import org.antlr.v4.runtime.misc.Pair;"], [40, "\t\tlabels.add(\"all-in\");"], [41, "\t\tfor (FeatureMetaData f : FEATURES_ALL) {"], [49, "\t\t\tFeatureMetaData[] injectWSFeatures = deepCopy(FEATURES_ALL);"], [50, "\t\t\tFeatureMetaData[] alignmentFeatures = deepCopy(FEATURES_ALIGN);"], [53, "\t\t\tList<Float> errors = getErrorRates(language, FEATURES_INJECT_WS, alignmentFeatures);"], [62, "\t\t\t// do it again to get answer with all features"], [63, "\t\t\terrors = getErrorRates(language, FEATURES_ALL, alignmentFeatures);"], [64, "\t\t\tCollections.sort(errors);"], [65, "\t\t\tn = errors.size();"], [66, "\t\t\tmedian = errors.get(n/2);"], [67, "\t\t\tSystem.out.println(\"all-in error median \"+median);"], [68, "\t\t\tfeatureToErrors.put(\"all-in\", median);"], [79, "\t\t\t\terrors = getErrorRates(language, injectWSFeatures, alignmentFeatures);"], [139, "\tpublic static List<Float> getErrorRates(LangDescriptor language,"], [140, "\t                                        FeatureMetaData[] injectWSFeatures,"], [141, "\t                                        FeatureMetaData[] alignmentFeatures)"], [145, "\t\tPair<List<Float>,List<Float>> results ="], [147, "\t\tList<Float> errorRates = results.b;"], [148, "//\t\tSystem.out.println(errorRates);"], [149, "\t\treturn errorRates;"]]}, "num_lines_added": 46, "num_lines_removed": 21}