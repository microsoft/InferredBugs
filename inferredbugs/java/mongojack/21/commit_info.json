{"hash": "ee23a47373f575f39742738d17ea518ee6cb2a4e", "message": "Test and fix for issue #182 (#183)\n\nTest and fix for issue #182", "file_num_lines": 412, "diff_parsed": {"added": [[4, " *"], [8, " *"], [10, " *"], [34, "import com.mongodb.client.model.ReplaceOptions;"], [39, "import org.bson.Document;"], [40, "import org.bson.codecs.Codec;"], [41, "import org.bson.codecs.CollectibleCodec;"], [42, "import org.bson.conversions.Bson;"], [43, "import org.mongojack.internal.MongoJackModule;"], [44, "import org.mongojack.internal.object.document.DocumentObjectGenerator;"], [45, "import org.mongojack.internal.object.document.DocumentObjectTraversingParser;"], [46, "import org.mongojack.internal.query.QueryCondition;"], [47, "import org.mongojack.internal.stream.JacksonCodec;"], [48, "import org.mongojack.internal.util.DocumentSerializationUtils;"], [49, ""], [50, "import java.io.IOException;"], [51, "import java.util.ArrayList;"], [52, "import java.util.List;"], [57, " *"], [59, " *"], [64, " *"], [97, "     *"], [106, "     *"], [122, "     *"], [141, "     *"], [148, "     *"], [160, "     *"], [181, "     *"], [195, "     *"], [212, "     *"], [243, "     *"], [275, "     *"], [308, "     *"], [340, "     *"], [360, "     *"], [380, "     *"], [401, "     *"], [421, "     *"], [541, "     *"], [565, "     *"], [589, "     *"], [606, "     *"], [623, "     *"], [640, "     *"], [664, "     *"], [690, "     *"], [717, "     *"], [728, "     *"], [739, "     *"], [752, "     *"], [769, "     *"], [791, "     *"], [798, "     *"], [810, "     *"], [821, "     *"], [832, "     *"], [845, "     *"], [856, "     *"], [867, "     *"], [886, "     *"], [900, "        Object _id;"], [901, "        @SuppressWarnings(\"unchecked\")"], [902, "        final Codec<T> codec = getMongoCollection().getCodecRegistry().get((Class<T>) object.getClass());"], [903, "        if (codec instanceof CollectibleCodec) {"], [904, "            _id = JacksonCodec.extractValueEx(((CollectibleCodec<T>) codec).getDocumentId(object));"], [905, "        } else {"], [906, "            Document dbObject = convertToDocument(object);"], [907, "            _id = dbObject.get(\"_id\");"], [908, "        }"], [910, "            if (concern == null) {"], [911, "                this.insert(object);"], [912, "            } else {"], [913, "                this.insert(object, concern);"], [914, "            }"], [915, "            if (codec instanceof CollectibleCodec) {"], [916, "                return UpdateResult.acknowledged(0, 1L, ((CollectibleCodec<T>)codec).getDocumentId(object));"], [917, "            } else {"], [918, "                return UpdateResult.acknowledged(0, 1L, null);"], [919, "            }"], [927, "     *"], [937, "     *"], [949, "     *"], [959, "     *"], [970, "     *"], [983, "     *"], [996, "     *"], [1007, "     *"], [1021, "     *"], [1034, "     *"], [1052, "     *"], [1067, "     *"], [1077, "     *"], [1088, "     *"], [1098, "     *"], [1108, "     *"], [1123, "     *"], [1151, "     *"], [1163, "     *"], [1192, "     *"], [1204, "     *"], [1256, "         *"]], "deleted": [[4, " *"], [8, " *"], [10, " *"], [19, "import java.io.IOException;"], [20, "import java.util.ArrayList;"], [21, "import java.util.List;"], [22, ""], [23, "import com.mongodb.client.model.ReplaceOptions;"], [24, "import org.bson.BsonObjectId;"], [25, "import org.bson.Document;"], [26, "import org.bson.conversions.Bson;"], [27, "import org.bson.types.ObjectId;"], [28, "import org.mongojack.internal.MongoJackModule;"], [29, "import org.mongojack.internal.object.document.DocumentObjectGenerator;"], [30, "import org.mongojack.internal.object.document.DocumentObjectTraversingParser;"], [31, "import org.mongojack.internal.query.QueryCondition;"], [32, "import org.mongojack.internal.util.DocumentSerializationUtils;"], [56, " *"], [58, " *"], [63, " *"], [96, "     *"], [105, "     *"], [121, "     *"], [140, "     *"], [147, "     *"], [159, "     *"], [180, "     *"], [194, "     *"], [211, "     *"], [242, "     *"], [274, "     *"], [307, "     *"], [339, "     *"], [359, "     *"], [379, "     *"], [400, "     *"], [420, "     *"], [540, "     *"], [564, "     *"], [588, "     *"], [605, "     *"], [622, "     *"], [639, "     *"], [663, "     *"], [689, "     *"], [716, "     *"], [727, "     *"], [738, "     *"], [751, "     *"], [768, "     *"], [790, "     *"], [797, "     *"], [809, "     *"], [820, "     *"], [831, "     *"], [844, "     *"], [855, "     *"], [866, "     *"], [885, "     *"], [899, "        Document dbObject = convertToDocument(object);"], [900, "        Object _id = dbObject.get(\"_id\");"], [902, "            this.insert(object, concern);"], [903, "            return UpdateResult.acknowledged(0, 1L, new BsonObjectId((ObjectId) convertToDocument(object).get(\"_id\")));"], [911, "     *"], [921, "     *"], [933, "     *"], [943, "     *"], [954, "     *"], [967, "     *"], [980, "     *"], [991, "     *"], [1005, "     *"], [1018, "     *"], [1036, "     *"], [1051, "     *"], [1061, "     *"], [1072, "     *"], [1082, "     *"], [1092, "     *"], [1107, "     *"], [1135, "     *"], [1147, "     *"], [1176, "     *"], [1188, "     *"], [1240, "         *"]]}, "num_lines_added": 101, "num_lines_removed": 85}