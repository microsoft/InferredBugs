{"hash": "bbabf5d17dd1cd08508c4cbd191595423d21af17", "message": "JANDEX-30 Add ability to get on disk version to the index reader", "file_num_lines": 52, "diff_parsed": {"added": [[48, "    /**"], [49, "     * The latest index version supported by this version of Jandex."], [50, "     */"], [51, "    private static final int CURRENT_VERSION = IndexReaderV2.MAX_VERSION;"], [52, ""], [53, "    private static final int MAGIC = 0xBABE1F15;"], [54, "    private PackedDataInputStream input;"], [55, "    private int version = -1;"], [64, "        this.input = new PackedDataInputStream(new BufferedInputStream(input));"], [77, "        if(version == -1) {"], [78, "            readVersion();"], [80, "        IndexReaderImpl reader = getReader(input, version);"], [82, "            input.close();"], [97, ""], [98, "    /**"], [99, "     * Returns the internal version number of the index that was read. Generally"], [100, "     * this will be compared to {@link #CURRENT_VERSION} to make sure that the index"], [101, "     * format is up to date."], [102, "     *"], [103, "     * @return The internal version number of the index that was read"], [104, "     * @throws IOException If the index could not be read"], [105, "     */"], [106, "    public int getVersion() throws IOException {"], [107, "        if(version == -1) {"], [108, "            readVersion();"], [109, "        }"], [110, "        return version;"], [111, "    }"], [112, ""], [113, "    /**"], [114, "     * The latest index version supported by this version of Jandex"], [115, "     *"], [116, "     * @return the latest index version supported by this version of Jandex"], [117, "     */"], [118, "    public static int getCurrentVersion() {"], [119, "        return CURRENT_VERSION;"], [120, "    }"], [121, ""], [122, "    private void readVersion() throws IOException {"], [123, "        if (input.readInt() != MAGIC) {"], [124, "            input.close();"], [125, "            throw new IllegalArgumentException(\"Not a jandex index\");"], [126, "        }"], [127, "        version = input.readByte();"], [128, "    }"]], "deleted": [[47, "    private static final int MAGIC = 0xBABE1F15;"], [48, "    private InputStream input;"], [58, "        this.input = input;"], [71, "        PackedDataInputStream stream = new PackedDataInputStream(new BufferedInputStream(input));"], [72, "        if (stream.readInt() != MAGIC) {"], [73, "            stream.close();"], [74, "            throw new IllegalArgumentException(\"Not a jandex index\");"], [76, "        byte version = stream.readByte();"], [77, ""], [78, "        IndexReaderImpl reader = getReader(stream, version);"], [80, "            stream.close();"], [83, ""]]}, "num_lines_added": 45, "num_lines_removed": 12}