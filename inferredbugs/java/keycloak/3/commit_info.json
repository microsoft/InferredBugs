{"hash": "273e706a42ce8df516d5a6d2272794d3e9714c03", "message": "undertow refresh token support", "file_num_lines": 94, "diff_parsed": {"added": [[62, "            completeAuthentication(securityContext, bearer);"], [81, "        completeAuthentication(securityContext, oauth);"], [94, "    protected void completeAuthentication(SecurityContext securityContext, OAuthAuthenticator oauth) {"], [95, "        final KeycloakPrincipal principal = new KeycloakPrincipal(oauth.getToken().getSubject(), null);"], [96, "        KeycloakUndertowAccount account = new KeycloakUndertowAccount(principal, oauth.getToken(), oauth.getTokenString(), oauth.getRefreshToken(), realmConfig, resourceMetadata, adapterConfig);"], [101, "    protected void completeAuthentication(SecurityContext securityContext, BearerTokenAuthenticator bearer) {"], [102, "        final KeycloakPrincipal principal = new KeycloakPrincipal(bearer.getToken().getSubject(), bearer.getSurrogate());"], [103, "        KeycloakUndertowAccount account = new KeycloakUndertowAccount(principal, bearer.getToken(), bearer.getTokenString(), null, realmConfig, resourceMetadata, adapterConfig);"], [104, "        securityContext.authenticationComplete(account, \"KEYCLOAK\", false);"]], "deleted": [[62, "            final AccessToken token = bearer.getToken();"], [63, "            String surrogate = bearer.getSurrogate();"], [64, "            KeycloakAuthenticatedSession session = new KeycloakAuthenticatedSession(bearer.getTokenString(), token, resourceMetadata);"], [65, "            KeycloakPrincipal principal = completeAuthentication(securityContext, token, surrogate);"], [66, "            propagateBearer(exchange, session, principal);"], [85, "        KeycloakAuthenticatedSession session = new KeycloakAuthenticatedSession(oauth.getTokenString(), oauth.getToken(), resourceMetadata);"], [86, "        KeycloakPrincipal principal = completeAuthentication(securityContext, oauth.getToken(), null);"], [87, "        propagateOauth(exchange, session, principal);"], [100, "    protected KeycloakPrincipal completeAuthentication(SecurityContext securityContext, AccessToken token, String surrogate) {"], [101, "        final KeycloakPrincipal skeletonKeyPrincipal = new KeycloakPrincipal(token.getSubject(), surrogate);"], [102, "        Set<String> roles = null;"], [103, "        if (adapterConfig.isUseResourceRoleMappings()) {"], [104, "            AccessToken.Access access = token.getResourceAccess(resourceMetadata.getResourceName());"], [105, "            if (access != null) roles = access.getRoles();"], [106, "        } else {"], [107, "            AccessToken.Access access = token.getRealmAccess();"], [108, "            if (access != null) roles = access.getRoles();"], [109, "        }"], [110, "        if (roles == null) roles = Collections.emptySet();"], [111, "        final Set<String> accountRoles = roles;"], [112, "        Account account = new Account() {"], [113, "            @Override"], [114, "            public Principal getPrincipal() {"], [115, "                return skeletonKeyPrincipal;"], [116, "            }"], [117, ""], [118, "            @Override"], [119, "            public Set<String> getRoles() {"], [120, "                return accountRoles;"], [121, "            }"], [122, "        };"], [124, "        return skeletonKeyPrincipal;"], [127, "    protected void propagateBearer(HttpServerExchange exchange, KeycloakAuthenticatedSession session, KeycloakPrincipal principal) {"], [128, "        exchange.putAttachment(SKELETON_KEY_SESSION_ATTACHMENT_KEY, session);"], [129, ""], [130, "    }"], [132, "    protected void propagateOauth(HttpServerExchange exchange, KeycloakAuthenticatedSession session, KeycloakPrincipal principal) {"], [133, "        exchange.putAttachment(SKELETON_KEY_SESSION_ATTACHMENT_KEY, session);"], [136, ""]]}, "num_lines_added": 9, "num_lines_removed": 39}