{"hash": "8fc6368202cd7931e3ea390e37204980641aee06", "message": "[KEYCLOAK-883] - OIDC brokering tests.", "file_num_lines": 101, "diff_parsed": {"added": [[57, ""], [58, "        @Override"], [59, "        protected String[] getTestRealms() {"], [60, "            return new String[] {\"realm-with-broker\"};"], [61, "        }"], [84, "        assertTrue(this.driver.getCurrentUrl().startsWith(\"http://localhost:8082/auth/\"));"], [87, "        this.loginPage.login(\"test-user\", \"password\");"], [89, "        doAfterProviderAuthentication(providerId);"], [91, "        doUpdateProfile(providerId);"], [92, ""], [93, "        // authenticated and redirected to app"], [94, "        assertTrue(this.driver.getCurrentUrl().startsWith(\"http://localhost:8081/test-app/\"));"], [95, "        assertNotNull(retrieveSessionStatus());"], [96, ""], [97, "        doAssertFederatedUser(providerId);"], [98, ""], [99, "        driver.navigate().to(\"http://localhost:8081/test-app/logout\");"], [100, "        driver.navigate().to(\"http://localhost:8081/test-app/\");"], [101, ""], [102, "        assertTrue(this.driver.getCurrentUrl().startsWith(\"http://localhost:8081/auth/realms/realm-with-broker/protocol/openid-connect/login\"));"], [103, "    }"], [105, "    protected void doAssertFederatedUser(String providerId) {"], [109, "        UserModel federatedUser = getFederatedUser();"], [111, "        assertEquals(userEmail, federatedUser.getEmail());"], [112, "        assertEquals(userFirstName, federatedUser.getFirstName());"], [113, "        assertEquals(userLastName, federatedUser.getLastName());"], [114, "    }"], [116, "    protected UserModel getFederatedUser() {"], [119, "        UserModel userModel = samlServerSession.users().getUserByUsername(\"test-user\", brokerRealm);"], [121, "        if (userModel != null) {"], [122, "            return userModel;"], [123, "        }"], [125, "        userModel = samlServerSession.users().getUserByEmail(\"test-user@localhost\", brokerRealm);"], [127, "        if (userModel == null) {"], [128, "            return samlServerSession.users().getUserByEmail(\"new@email.com\", brokerRealm);"], [129, "        }"], [131, "        return userModel;"], [132, "    }"], [134, "    protected void doUpdateProfile(String providerId) {"], [135, "        String userEmail = \"new@email.com\";"], [136, "        String userFirstName = \"New first\";"], [137, "        String userLastName = \"New last\";"], [138, ""], [139, "        // update profile"], [140, "        this.updateProfilePage.assertCurrent();"], [141, "        this.updateProfilePage.update(userFirstName, userLastName, userEmail);"], [142, "    }"], [143, ""], [144, "    protected void doAfterProviderAuthentication(String providerId) {"], [156, "        } catch (IOException ignore) {"], [157, "            ignore.printStackTrace();"]], "deleted": [[79, "        assertTrue(this.driver.getCurrentUrl().startsWith(\"http://localhost:8082/auth/realms/realm-with-saml-identity-provider/protocol/saml\"));"], [82, "        this.loginPage.login(\"saml.user\", \"password\");"], [84, "        assertTrue(this.driver.getCurrentUrl().startsWith(\"http://localhost:8081/auth/broker/realm-with-broker/\" + providerId));"], [86, "        // update profile"], [87, "        this.updateProfilePage.assertCurrent();"], [93, "        this.updateProfilePage.update(userFirstName, userLastName, userEmail);"], [94, ""], [95, "        // authenticated and redirected to app"], [96, "        assertTrue(this.driver.getCurrentUrl().startsWith(\"http://localhost:8081/test-app/\"));"], [101, "        UserModel federatedUser = samlServerSession.users().getUserByEmail(userEmail, brokerRealm);"], [103, "        // user created"], [104, "        assertNotNull(federatedUser);"], [105, "        assertEquals(userFirstName, federatedUser.getFirstName());"], [106, "        assertEquals(userLastName, federatedUser.getLastName());"], [108, "        driver.navigate().to(\"http://localhost:8081/test-app/logout\");"], [109, "        driver.navigate().to(\"http://localhost:8081/test-app/\");"], [111, "        assertTrue(this.driver.getCurrentUrl().startsWith(\"http://localhost:8081/auth/realms/realm-with-broker/protocol/openid-connect/login\"));"], [113, "        // choose the identity provider"], [114, "        this.loginPage.clickSocial(providerId);"], [116, "        // already authenticated in saml idp and redirected to app"], [117, "        assertTrue(this.driver.getCurrentUrl().startsWith(\"http://localhost:8081/test-app/\"));"], [128, ""], [129, "            assertNotNull(retrieveSessionStatus());"], [130, "        } catch (IOException e) {"], [131, "            throw new RuntimeException(\"Could not retrieve session status.\", e);"]]}, "num_lines_added": 51, "num_lines_removed": 25}