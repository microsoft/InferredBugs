{"hash": "07fd8ae9d7c66617c5ac8a6735d628e7c30d950b", "message": "KEYCLOAK-836 Added OsgiJaxrsBearerTokenFilterImpl to be used in fuse", "file_num_lines": 225, "diff_parsed": {"added": [[8, "import org.keycloak.adapters.AuthenticatedActionsHandler;"], [47, "    protected volatile boolean started;"], [51, "    // TODO: Should also somehow handle stop lifecycle for de-registration"], [57, "        attemptStart();"], [70, "        attemptStart();"], [71, "    }"], [72, ""], [73, "    // INITIALIZATION AND STARTUP"], [74, ""], [75, "    protected void attemptStart() {"], [76, "        if (started) {"], [77, "            throw new IllegalStateException(\"Filter already started. Make sure to specify just keycloakConfigResolver or keycloakConfigFile but not both\");"], [78, "        }"], [79, ""], [80, "        if (isInitialized()) {"], [81, "            start();"], [82, "        } else {"], [83, "            log.fine(\"Not yet initialized\");"], [84, "        }"], [85, "    }"], [86, ""], [87, "    protected boolean isInitialized() {"], [88, "        return this.keycloakConfigFile != null || this.keycloakConfigResolverClass != null;"], [97, "            Class<? extends KeycloakConfigResolver> resolverClass = loadResolverClass();"], [100, "                KeycloakConfigResolver resolver = resolverClass.newInstance();"], [104, "                throw new RuntimeException(\"Unable to instantiate resolver \" + resolverClass);"], [110, "            InputStream is = loadKeycloakConfigFile();"], [120, "    protected Class<? extends KeycloakConfigResolver> loadResolverClass() {"], [121, "        try {"], [122, "            return (Class<? extends KeycloakConfigResolver>)getClass().getClassLoader().loadClass(keycloakConfigResolverClass);"], [123, "        } catch (ClassNotFoundException cnfe) {"], [124, "            // Fallback to tccl"], [125, "            try {"], [126, "                return (Class<? extends KeycloakConfigResolver>)Thread.currentThread().getContextClassLoader().loadClass(keycloakConfigResolverClass);"], [127, "            } catch (ClassNotFoundException cnfe2) {"], [128, "                throw new RuntimeException(\"Unable to find resolver class: \" + keycloakConfigResolverClass);"], [129, "            }"], [130, "        }"], [131, "    }"], [132, ""], [133, "    protected InputStream loadKeycloakConfigFile() {"], [160, "    // REQUEST HANDLING"], [161, ""], [166, "        if (handlePreauth(facade)) {"], [177, "    protected boolean handlePreauth(JaxrsHttpFacade facade) {"], [180, "            // Send response now (if not already sent)"], [182, "                facade.getResponse().end();"], [202, "            // Send response now (if not already sent)"], [204, "                facade.getResponse().end();"], [214, "        handleAuthActions(facade, resolvedDeployment);"], [267, "    protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {"], [268, "        AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);"], [269, "        if (authActionsHandler.handledRequest()) {"], [270, "            // Send response now (if not already sent)"], [271, "            if (!facade.isResponseFinished()) {"], [272, "                facade.getResponse().end();"], [273, "            }"], [274, "        }"], [275, "    }"], [276, ""]], "deleted": [[46, "    private volatile boolean started;"], [50, "    // TODO: Should also handle stop lifecycle for de-registration"], [56, "        start();"], [69, "        start();"], [78, "            Class<?> clazz;"], [79, "            try {"], [80, "                clazz = getClass().getClassLoader().loadClass(keycloakConfigResolverClass);"], [81, "            } catch (ClassNotFoundException cnfe) {"], [82, "                // Fallback to tccl"], [83, "                try {"], [84, "                    clazz = Thread.currentThread().getContextClassLoader().loadClass(keycloakConfigResolverClass);"], [85, "                } catch (ClassNotFoundException cnfe2) {"], [86, "                    throw new RuntimeException(\"Unable to find resolver class: \" + keycloakConfigResolverClass);"], [87, "                }"], [88, "            }"], [91, "                KeycloakConfigResolver resolver = (KeycloakConfigResolver) clazz.newInstance();"], [95, "                throw new RuntimeException(\"Unable to instantiate resolver \" + clazz);"], [101, "            InputStream is = readConfigFile();"], [111, "    protected InputStream readConfigFile() {"], [142, "        if (handlePreauth(request, facade)) {"], [153, "    protected boolean handlePreauth(ContainerRequestContext request, JaxrsHttpFacade facade) {"], [156, "            // Response might be already finished if error was sent"], [158, "                request.abortWith(facade.getResponseBuilder().build());"], [178, "            // Send response now"], [180, "                request.abortWith(facade.getResponseBuilder().build());"]]}, "num_lines_added": 60, "num_lines_removed": 25}