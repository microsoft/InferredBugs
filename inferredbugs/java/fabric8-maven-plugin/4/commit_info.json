{"hash": "3570eee0a03b6ad8dcd907a9cc4edfa0afcddea5", "message": "Cleanup round for cluster-start\n\nStabilized download of gofabric8 binary\n\nStill todo:\n\n- Progressbar for download\n- Checksum handling", "file_num_lines": 215, "diff_parsed": {"added": [[37, "import java.nio.file.Files;"], [44, ""], [45, "    // Command to call for gofabric8"], [46, "    protected static final String GOFABRIC8 = \"gofabric8\";"], [47, ""], [48, "    // Download parameters"], [49, "    private static final String GOFABRIC8_VERSION_URL = \"https://raw.githubusercontent.com/fabric8io/gofabric8/master/version/VERSION\";"], [50, "    private String GOFABRIC_DOWNLOAD_URL_FORMAT = \"https://github.com/fabric8io/gofabric8/releases/download/v%s/gofabric8-%s-%s\"; // version, platform, arch"], [51, ""], [52, "    private enum Platform { linux, darwin, windows }"], [53, "    private enum Architecture { amd64, arm }"], [62, "    private File fabric8BinDir;"], [72, "        File gofabric8 = ProcessUtil.findExecutable(log, GOFABRIC8);"], [73, "        if (gofabric8 == null) {"], [74, "            validateFabric8Dir();"], [75, ""], [76, "            gofabric8 = new File(fabric8BinDir, GOFABRIC8);"], [77, "            if (!gofabric8.exists() || !gofabric8.isFile() || !gofabric8.canExecute()) {"], [78, "                // X-TODO: Maybe allow for an update of gofabric8 itself ?"], [79, "                downloadGoFabric8(gofabric8);"], [82, "            // --- \u2702 --- \u2702 --- \u2702 --- \u2702 --- \u2702 --- \u2702 --- \u2702 --- \u2702 --- \u2702 --- \u2702 --- \u2702 --- \u2702 --- \u2702 --- \u2702 --- \u2702"], [83, ""], [85, "            if (!ProcessUtil.folderIsOnPath(log, fabric8BinDir)) {"], [86, "                String absolutePath = fabric8BinDir.getAbsolutePath();"], [89, "                if (getPlatform().equals(Platform.windows.name())) {"], [127, "            getLog().info(\"Found gofabric8 at: \" + gofabric8);"], [128, "            runGofabric8(gofabric8.getAbsolutePath() + \" version\");"], [130, "        return gofabric8;"], [149, "    // Check for a valide ~/.fabric8/bin"], [150, "    private void validateFabric8Dir() throws MojoExecutionException {"], [151, "        if (!fabric8BinDir.exists()) {"], [152, "            if (!fabric8BinDir.mkdirs()) {"], [153, "                throw new MojoExecutionException(String.format(\"Failed to create directory %s. Do you have permission on this folder?\", fabric8BinDir));"], [154, "            }"], [155, "        } else if (!fabric8BinDir.isDirectory()) {"], [156, "            throw new MojoExecutionException(String.format(\"%s exists but is not a directory\", fabric8BinDir));"], [157, "        }"], [158, "    }"], [159, ""], [160, "    // Download gofabric8"], [162, ""], [163, "        // Download to a temporary file"], [164, "        File tempFile = downloadToTempFile();"], [165, ""], [166, "        // Move into it's destination place in ~/.fabric8/bin"], [167, "        moveGofabric8InPlace(tempFile, destFile);"], [168, ""], [169, "        // Make some noise"], [170, "        runGofabric8(destFile + \" version\");"], [171, "    }"], [172, ""], [173, "    // First download in a temporary place"], [174, "    private File downloadToTempFile() throws MojoExecutionException {"], [175, "        // TODO: Very checksum and potentially signature"], [176, "        File tempFile = createGofabric8DownloadFile();"], [177, "        URL downloadUrl = getGofabric8DownloadUrl();"], [178, "        try (OutputStream out = new FileOutputStream(tempFile)) {"], [179, "            InputStream in = downloadUrl.openStream();"], [180, "            IOHelpers.copy(in, out);"], [181, "            return tempFile;"], [183, "            throw new MojoExecutionException(\"Failed to download URL \" + downloadUrl + \" to  \" + tempFile + \": \" + e, e);"], [185, "    }"], [187, "    // Where to put the initial download of gofabric8"], [188, "    private File createGofabric8DownloadFile() throws MojoExecutionException {"], [189, "        File file = null;"], [191, "            File downloadDir = Files.createTempDirectory(fabric8BinDir.toPath(), \"download\").toFile();"], [192, "            downloadDir.deleteOnExit();"], [193, "            File ret = new File(downloadDir, \"gofabric8\");"], [194, "            ret.deleteOnExit();"], [195, "            log.debug(\"Downloading gofabric8 to temporary file %s\", ret);"], [196, "            return ret;"], [198, "            throw new MojoExecutionException(\"Failed to create a temporary file for the download\");"], [200, "    }"], [202, "    // Create download URL + log"], [203, "    private URL getGofabric8DownloadUrl() throws MojoExecutionException {"], [204, "        String version = getGoFabric8Version();"], [205, ""], [206, "        String platform = getPlatform().name();"], [207, "        String arch = getArchitecture().name();"], [208, "        String releaseUrl = String.format(GOFABRIC_DOWNLOAD_URL_FORMAT, version, platform, arch);"], [209, "        if (platform.equalsIgnoreCase(\"windows\")) {"], [212, "        log.info(\"Downloading gofabric8:\");"], [213, "        log.info(\"   Version:      [[B]]%s[[B]]\", version);"], [214, "        log.info(\"   Platform:     [[B]]%s[[B]]\", platform);"], [215, "        log.info(\"   Architecture: [[B]]%s[[B]]\", arch);"], [216, ""], [218, "            return new URL(releaseUrl);"], [220, "            throw new MojoExecutionException(\"Failed to create URL from \" + releaseUrl + \": \" + e, e);"], [222, "    }"], [224, "    // Move gofabric8 to its final place"], [225, "    private void moveGofabric8InPlace(File tempFile, File destFile) throws MojoExecutionException {"], [226, "        if (!tempFile.renameTo(destFile)) {"], [229, "                IOHelpers.copy(new FileInputStream(tempFile), new FileOutputStream(destFile));"], [230, "                log.info(\"Downloaded gofabric8 to %s\",destFile);"], [232, "                throw new MojoExecutionException(\"Failed to copy temporary file \" + tempFile + \" to \" + destFile + \": \" + e, e);"], [235, "        if (!destFile.setExecutable(true)) {"], [236, "            throw new MojoExecutionException(\"Cannot make \" + destFile + \" executable\");"], [237, "        }"], [238, "    }"], [239, ""], [240, "    // Download version for gofabric8"], [241, "    private String getGoFabric8Version() throws MojoExecutionException {"], [242, "        try {"], [243, "            String version = IOHelpers.readFully(new URL(GOFABRIC8_VERSION_URL));"], [244, "            return version;"], [245, "        } catch (IOException e) {"], [246, "            throw new MojoExecutionException(\"Failed to load gofabric8 version from \" + GOFABRIC8_VERSION_URL + \". \" + e, e);"], [247, "        }"], [248, "    }"], [249, ""], [250, "    private Architecture getArchitecture() {"], [251, "        String osArch = System.getProperty(\"os.arch\");"], [252, "        if (osArch != null && osArch.toLowerCase().contains(\"arm\")) {"], [253, "            return Architecture.arm;"], [254, "        } else {"], [255, "            return Architecture.amd64;"], [256, "        }"], [259, "    protected Platform getPlatform() {"], [262, "            return Platform.darwin;"], [264, "            return Platform.windows;"], [265, "        } else {"], [266, "            return Platform.linux;"], [270, "    protected void runGofabric8(String command) throws MojoExecutionException {"], [271, "        // Be sure to run in batch mode"], [272, "        command += \" --batch\";"], [273, "        log.info(\"Running %s\", command);"], [274, ""], [275, "        String message = \"gofabric8\" + command.substring(command.indexOf(\" \"));"], [277, "            int result = ProcessUtil.runCommand(createExternalProcessLogger(\"[[B]]gofabric8[[B]] \"), command, message);"], [278, "            if (result != 0) {"], [279, "                throw new MojoExecutionException(\"Failed to execute \" + message + \" result was: \" + result);"], [280, "            }"]], "deleted": [[43, "    private static final String gofabric8VersionURL = \"https://raw.githubusercontent.com/fabric8io/gofabric8/master/version/VERSION\";"], [44, "    public static final String batchModeArgument = \" --batch\";"], [45, "    public static final String GOFABRIC8 = \"gofabric8\";"], [53, ""], [55, "    private File fabric8Dir;"], [65, "        File file = ProcessUtil.findExecutable(log, GOFABRIC8);"], [66, "        // X-TODO: Maybe allow for an update of gofabric8 itself ?"], [67, "        if (file == null) {"], [68, "            File binDir = getFabric8Dir();"], [69, "            binDir.mkdirs();"], [70, "            if (!binDir.isDirectory() || !binDir.exists()) {"], [71, "                throw new MojoExecutionException(\"Failed to create directory: \" + binDir + \". Do you have permission on this folder?\");"], [72, "            }"], [73, "            file = new File(binDir, \"gofabric8\");"], [74, "            if (!file.exists() || !file.isFile() || !file.canExecute()) {"], [75, "                downloadGoFabric8(file);"], [79, "            if (!ProcessUtil.folderIsOnPath(log, binDir)) {"], [80, "                String absolutePath = binDir.getAbsolutePath();"], [83, "                if (getPlatform().equals(Platforms.WINDOWS)) {"], [121, "            getLog().info(\"Found gofabric8 at: \" + file);"], [122, "            runCommand(file.getAbsolutePath() + \" version\" + batchModeArgument, \"gofabric8 version\" + batchModeArgument, \"gofabric8\");"], [124, "        return file;"], [143, "    /**"], [144, "     * Downloads the latest <code>gofabric8</code> binary and runs the version command"], [145, "     * to check the binary works before installing it."], [146, "     */"], [148, "        File file = null;"], [149, "        try {"], [150, "            file = File.createTempFile(\"fabric8\", \".bin\");"], [152, "            throw new MojoExecutionException(\"Failed to create a temporary file for the download\");"], [154, "        log.debug(\"Downloading gofabric8 to temporary file: \" + file.getAbsolutePath());"], [156, "        String version;"], [158, "            version = IOHelpers.readFully(new URL(gofabric8VersionURL));"], [159, "            log.info(\"Downloading version \" + version + \" of gofabric8 to \" + destFile + \" ...\");"], [161, "            throw new MojoExecutionException(\"Failed to load gofabric8 version from: \" + gofabric8VersionURL + \". \" + e, e);"], [164, "        String platform = getPlatform();"], [165, "        String osArch = System.getProperty(\"os.arch\");"], [166, "        String arch = Architectures.AMD64;"], [167, "        if (osArch.toLowerCase().contains(\"arm\")) {"], [168, "            arch = Architectures.ARM;"], [169, "        }"], [170, "        String releaseUrl = \"https://github.com/fabric8io/gofabric8/releases/download/v\" + version + \"/gofabric8-\" + platform + \"-\" + arch;"], [171, "        if (platform.equals(\"windows\")) {"], [174, "        URL downloadUrl;"], [176, "            downloadUrl = new URL(releaseUrl);"], [178, "            throw new MojoExecutionException(\"Failed to create URL: \" + releaseUrl + \". \" + e, e);"], [180, "        InputStream inputStream;"], [181, "        try {"], [182, "            inputStream = downloadUrl.openStream();"], [183, "        } catch (IOException e) {"], [184, "            throw new MojoExecutionException(\"Failed to open URL: \" + releaseUrl + \". \" + e, e);"], [185, "        }"], [186, "        try (OutputStream out = new FileOutputStream(file)) {"], [187, "            IOHelpers.copy(inputStream, out);"], [188, "        } catch (IOException e) {"], [189, "            throw new MojoExecutionException(\"Failed to download URL: \" + releaseUrl + \" to file: \" + file + \". \" + e, e);"], [190, "        }"], [191, "        file.setExecutable(true);"], [192, "        // TODO: Very checksum and potentially signature"], [193, ""], [194, "        // lets check we can execute the binary before we try to replace it if it already exists"], [195, "        runCommand(file.getAbsolutePath() + \" version\" + batchModeArgument, \"gofabric8 version\" + batchModeArgument, \"gofabric8\");"], [197, "        boolean result = file.renameTo(destFile);"], [198, "        if (!result) {"], [201, "                IOHelpers.copy(new FileInputStream(file), new FileOutputStream(destFile));"], [202, "                destFile.setExecutable(true);"], [204, "                throw new MojoExecutionException(\"Failed to copy temporary file \" + file + \" to \" + destFile + \": \" + e, e);"], [207, "        log.info(\"Downloaded gofabric8 version \" + version + \" platform: \" + platform + \" arch:\" + arch + \" on: \" + System.getProperty(\"os.name\") + \" \" + arch + \" to: \" + destFile);"], [210, "    protected String getPlatform() {"], [212, "        String platform = Platforms.LINUX;"], [214, "            platform = Platforms.DARWIN;"], [216, "            platform = Platforms.WINDOWS;"], [218, "        return platform;"], [221, "    protected void runCommand(String commandLine, String message, String executableName) throws MojoExecutionException {"], [222, "        log.info(\"Running command \" + executableName + \" \" + commandLine);"], [223, "        int result = -1;"], [225, "            result = ProcessUtil.runCommand(createExternalProcessLogger(\"[[B]]\" + executableName + \"[[B]] \"), commandLine, message);"], [229, "        if (result != 0) {"], [230, "            throw new MojoExecutionException(\"Failed to execute \" + message + \" result was: \" + result);"], [231, "        }"], [232, "    }"], [233, ""], [234, "    protected File getFabric8Dir() {"], [235, "        if (fabric8Dir == null) {"], [236, "            fabric8Dir = new File(\".\");"], [237, "        }"], [238, "        fabric8Dir.mkdirs();"], [239, "        return fabric8Dir;"], [249, ""], [250, ""], [251, "    public static class Platforms {"], [252, "        public static final String LINUX = \"linux\";"], [253, "        public static final String DARWIN = \"darwin\";"], [254, "        public static final String WINDOWS = \"windows\";"], [255, "    }"], [256, ""], [257, "    public static class Architectures {"], [258, "        public static final String AMD64 = \"amd64\";"], [259, "        public static final String ARM = \"arm\";"], [260, "    }"]]}, "num_lines_added": 132, "num_lines_removed": 100}