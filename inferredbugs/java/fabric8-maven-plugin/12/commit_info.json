{"hash": "015dd823339cb3472f3882e70ca37bafcde88569", "message": "Remove volume permission init containers for openshift (#790)\n\nPlease note that this is only a temporary solution as it let ResourceMojo directly reference hardcoded the VolumePermissionEnricher. This is necessary as the enricher have no knowledge whether they are enriching for OpenShift of Kubernetes when called. If #678 is tackled this will be resolved and the hack in ResourceMojo which references VolumePermissionEnricher.ENRICHER_NAME must be removed.\n\nFixes #790", "file_num_lines": 531, "diff_parsed": {"added": [[33, "import io.fabric8.kubernetes.api.builder.TypedVisitor;"], [35, "import io.fabric8.kubernetes.api.model.*;"], [62, "import io.fabric8.maven.enricher.api.util.InitContainerHandler;"], [63, "import io.fabric8.maven.enricher.standard.VolumePermissionEnricher;"], [494, "        // TODO: Remove this ASAP when https://github.com/fabric8io/fabric8-maven-plugin/issues/678 is fixed"], [495, "        removeInitContainers(builder, VolumePermissionEnricher.ENRICHER_NAME);"], [499, "    private void removeInitContainers(KubernetesListBuilder builder, final String enricherName) {"], [500, "         builder.accept(new TypedVisitor<PodTemplateSpecBuilder>() {"], [501, "             @Override"], [502, "             public void visit(PodTemplateSpecBuilder builder) {"], [503, "                 InitContainerHandler initContainerHandler = new InitContainerHandler(log);"], [504, "                 if (initContainerHandler.hasInitContainer(builder, enricherName)) {"], [505, "                     log.verbose(\"Removing init container from openshift.yml for %s\",enricherName);"], [506, "                     initContainerHandler.removeInitContainer(builder, enricherName);"], [507, "                 }"], [508, "             }"], [509, "         });"], [510, "    }"], [511, ""]], "deleted": [[34, "import io.fabric8.kubernetes.api.model.ConfigMap;"], [35, "import io.fabric8.kubernetes.api.model.HasMetadata;"], [36, "import io.fabric8.kubernetes.api.model.KubernetesList;"], [37, "import io.fabric8.kubernetes.api.model.KubernetesListBuilder;"], [38, "import io.fabric8.kubernetes.api.model.ObjectMeta;"], [39, "import io.fabric8.kubernetes.api.model.Service;"], [495, ""], [496, "        if (openshiftManifest != null && openshiftManifest.isFile() && openshiftManifest.exists()) {"], [497, "            // lets add any ImageStream / ImageStreamTag objects which are already on disk"], [498, "            // from a previous `BuildMojo` execution"], [499, "            KubernetesClient client = clusterAccess.createDefaultClient(log);"], [500, "            Set<HasMetadata> oldEntities;"], [501, "            try {"], [502, "                oldEntities = KubernetesResourceUtil.loadResources(openshiftManifest);"], [503, "            } catch (Exception e) {"], [504, "                throw new MojoExecutionException(\"Failed to load openshift manifest \" + openshiftManifest + \". \" + e, e);"], [505, "            }"], [506, "            for (HasMetadata entity : oldEntities) {"], [507, "                if (entity instanceof ImageStream || entity instanceof ImageStreamTag) {"], [508, "                    if (KubernetesResourceUtil.findResourceByName(objects, entity.getClass(), KubernetesHelper.getName(entity)) == null) {"], [509, "                        objects.add(entity);"], [510, "                    }"], [511, "                }"], [512, "            }"], [513, "        }"]]}, "num_lines_added": 19, "num_lines_removed": 25}