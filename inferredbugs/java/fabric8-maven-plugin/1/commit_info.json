{"hash": "303419d203b72260d4df4aff5cd07c4ca27b9511", "message": "fixes #81 so we generate an openshift specific yaml file for openshift specific resources", "file_num_lines": 457, "diff_parsed": {"added": [[92, ""], [96, "    @Parameter(property = \"fabric8.kubernetesManifest\", defaultValue = \"${basedir}/target/classes/kubernetes.yml\")"], [100, "     * The generated openshift YAML file"], [101, "     */"], [102, "    @Parameter(property = \"fabric8.openshiftManifest\", defaultValue = \"${basedir}/target/classes/openshift.yml\")"], [103, "    private File openshiftManifest;"], [104, ""], [105, "    /**"], [176, "    // Kubernetes client"], [181, "        KubernetesClient kubernetes = createKubernetesClient();"], [182, "        File manifest;"], [183, "        String clusterKind = \"Kubernetes\";"], [184, "        if (KubernetesHelper.isOpenShift(kubernetes)) {"], [185, "            manifest = openshiftManifest;"], [186, "            clusterKind = \"OpenShift\";"], [187, ""], [188, "        } else {"], [189, "            manifest = kubernetesManifest;"], [190, "        }"], [193, "                throw new MojoFailureException(\"No such generated manifest file: \" + manifest);"], [195, "                getLog().warn(\"No such generated manifest file: \" + manifest + \" for this project so ignoring\");"], [203, "        log.info(\"Using \" + clusterKind +\" at: \" + kubernetes.getMasterUrl() + \" in namespace \" + getNamespace() + \" with manifest: \" + manifest);"]], "deleted": [[95, "    @Parameter(property = \"fabric8.manifest\", defaultValue = \"${basedir}/target/classes/kubernetes.yml\")"], [169, "    // Kubernetes cliend"], [174, "        File manifest = kubernetesManifest;"], [177, "                throw new MojoFailureException(\"No such generated kubernetes YAML file: \" + manifest);"], [179, "                getLog().warn(\"No such generated kubernetes YAML file: \" + manifest + \" for this project so ignoring\");"], [183, "        KubernetesClient kubernetes = createKubernetesClient();"], [188, "        getLog().info(\"Using kubernetes at: \" + kubernetes.getMasterUrl() + \" in namespace \" + getNamespace() + \" Kubernetes manifest: \" + manifest);"]]}, "num_lines_added": 22, "num_lines_removed": 7}