{"hash": "7f52337e4807d395e5b7c38a4902443ea27dd7d7", "message": "Hardened and simplified external process handling", "file_num_lines": 225, "diff_parsed": {"added": [[41, "import io.fabric8.maven.core.util.ProcessUtil;"], [48, "import io.fabric8.utils.Strings;"], [213, "        File command = getKubeCtlExecutable(controller);"], [214, "        log.info(\"Port forwarding to port \" + remoteDebugPort + \" on pod \" + podName + \" using command \" + command);"], [216, "        List<String> args = new ArrayList<>();"], [217, "        args.add(\"port-forward\");"], [218, "        args.add(podName);"], [219, "        args.add(localDebugPort + \":\" + remoteDebugPort);"], [221, "        String commandLine = command + \" \" + Strings.join(args, \" \");"], [222, "        log.verbose(\"Executing command \" + commandLine);"], [223, "        try {"], [228, "            ProcessUtil.runCommand(createExternalProcessLogger(\"[[B]]\" + command.getName() + \"[[B]] \"), command, args, true);"], [230, "            throw new MojoExecutionException(\"Failed to start port forwarding with \" + commandLine + \": \" + e, e);"]], "deleted": [[63, "import static io.fabric8.maven.core.util.ProcessUtil.processCommandAsync;"], [212, "        File file = getKubeCtlExecutable(controller);"], [213, "        String command = file.getName();"], [214, "        log.info(\"Port forwarding to port \" + remoteDebugPort + \" on pod \" + podName + \" using command: \" + command);"], [216, "        String arguments = \" port-forward \" + podName + \" \" + localDebugPort + \":\" + remoteDebugPort;"], [217, "        String commands = command + arguments;"], [218, "        log.info(\"Executing command: \" + commands);"], [219, "        final String message = \"port forward\";"], [220, "        final Process process;"], [221, "        try {"], [222, "            process = Runtime.getRuntime().exec(file.getAbsolutePath() + arguments);"], [223, "            Runtime.getRuntime().addShutdownHook(new Thread(\"mvn fabric8:run-interactive shutdown hook\") {"], [224, "                @Override"], [225, "                public void run() {"], [226, "                    if (process != null) {"], [227, "                        log.info(\"Terminating port forward process:\");"], [228, "                        try {"], [229, "                            process.destroy();"], [230, "                        } catch (Exception e) {"], [231, "                            log.error(\"Failed to terminate process \" + message);"], [232, "                        }"], [233, "                        try {"], [234, "                            if (process != null && process.isAlive()) {"], [235, "                                process.destroyForcibly();"], [236, "                            }"], [237, "                        } catch (Exception e) {"], [238, "                            log.error(\"Failed to forcibly terminate process \" + message);"], [239, "                        }"], [240, "                    }"], [241, "                }"], [242, "            });"], [248, "            processCommandAsync(process, createExternalProcessLogger(\"[[B]]\" + command + \"[[B]] \"), commands, message);"], [250, "            throw new MojoExecutionException(\"Failed to execute process \" + commands + \" for \" +"], [251, "                    message + \": \" + e, e);"]]}, "num_lines_added": 13, "num_lines_removed": 34}