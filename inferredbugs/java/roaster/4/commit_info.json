{"hash": "3c0783776d908d9c26c95d18075b45cc44df1f14", "message": "Improved the code of package org.jboss.forge.roaster (#92)\n\n* Improved the code of package org.jboss.forge.roaster\r\n\r\n* Adding provided feedback\r\n\r\n* Change exception message back", "file_num_lines": 36, "diff_parsed": {"added": [[14, "import java.nio.charset.StandardCharsets;"], [17, " * Various stream utilities."], [25, "      // Util class"], [29, "    * Return a {@link String} containing the contents of the given {@link InputStream}. The caller is responsible to"], [30, "    * close the stream."], [31, "    *"], [32, "    * @param stream the stream to read from"], [33, "    * @return the content of the stream"], [34, "    * @throws RuntimeException if a {@link IOException} occurs"], [39, ""], [43, "         Reader in = new InputStreamReader(stream, StandardCharsets.UTF_8);"], [61, "}"]], "deleted": [[10, "import java.io.ByteArrayInputStream;"], [11, "import java.io.Closeable;"], [15, "import java.io.OutputStream;"], [17, "import java.io.UnsupportedEncodingException;"], [20, " * Stream utilities."], [31, "    * Return a {@link String} containing the contents of the given {@link InputStream}"], [39, "         Reader in = new InputStreamReader(stream, \"UTF-8\");"], [51, "      catch (UnsupportedEncodingException e)"], [52, "      {"], [53, "         throw new RuntimeException(e);"], [54, "      }"], [61, ""], [62, "   public static void write(final InputStream source, final OutputStream destination)"], [63, "   {"], [64, "      try"], [65, "      {"], [66, "         final byte[] buffer = new byte[0x10000];"], [67, "         int read;"], [68, "         do"], [69, "         {"], [70, "            read = source.read(buffer, 0, buffer.length);"], [71, "            if (read > 0)"], [72, "            {"], [73, "               destination.write(buffer, 0, read);"], [74, "            }"], [75, "         }"], [76, "         while (read >= 0);"], [77, "      }"], [78, "      catch (IOException e)"], [79, "      {"], [80, "         throw new RuntimeException(e);"], [81, "      }"], [82, "   }"], [83, ""], [84, "   public static InputStream fromString(final String data)"], [85, "   {"], [86, "      return new ByteArrayInputStream(data.getBytes());"], [87, "   }"], [88, ""], [89, "   /**"], [90, "    * Closes the resource without throwing any exception"], [91, "    *"], [92, "    * @param source the resource to be closed. May be null"], [93, "    */"], [94, "   public static void closeQuietly(final Closeable source)"], [95, "   {"], [96, "      if (source != null)"], [97, "      {"], [98, "         try"], [99, "         {"], [100, "            source.close();"], [101, "         }"], [102, "         catch (IOException ignore)"], [103, "         {"], [104, ""], [105, "         }"], [106, "      }"], [107, "   }"], [108, "}"]]}, "num_lines_added": 12, "num_lines_removed": 59}