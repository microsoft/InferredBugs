{"hash": "75003dc863c453b31338a9984b3e6b4919d02c7d", "message": "Add ARM v6, v7, android support", "file_num_lines": 160, "diff_parsed": {"added": [[27, "import java.io.ByteArrayOutputStream;"], [29, "import java.io.InputStream;"], [112, "    public static boolean isAndroid() {"], [113, "        return System.getProperty(\"java.runtime.name\", \"\").toLowerCase().contains(\"android\");"], [114, "    }"], [115, ""], [116, "    static String getHardwareName() {"], [117, "        try {"], [118, "            Process p = Runtime.getRuntime().exec(\"uname -m\");"], [119, "            p.waitFor();"], [120, ""], [121, "            InputStream in = p.getInputStream();"], [122, "            try {"], [123, "                int readLen = 0;"], [124, "                ByteArrayOutputStream b = new ByteArrayOutputStream();"], [125, "                byte[] buf = new byte[32];"], [126, "                while((readLen = in.read(buf, 0, buf.length)) >= 0) {"], [127, "                    b.write(buf, 0, readLen);"], [128, "                }"], [129, "                return b.toString();"], [130, "            }"], [131, "            finally {"], [132, "                if(in != null) {"], [133, "                    in.close();"], [134, "                }"], [135, "            }"], [136, "        }"], [137, "        catch (Throwable e) {"], [138, "            System.err.println(\"Error while running uname -m: \" + e.getMessage());"], [139, "            return \"unknown\";"], [140, "        }"], [141, "    }"], [142, ""], [143, "    static String resolveArmArchType() {"], [144, "        // For Android"], [145, "        if(isAndroid()) {"], [146, "            return \"android-arm\";"], [147, "        }"], [148, ""], [149, "        if(System.getProperty(\"os.name\").contains(\"Linux\")) {"], [150, "            String armType = getHardwareName();"], [151, "            // armType (uname -m) can be armv5t, armv5te, armv5tej, armv5tejl, armv6, armv7, armv7l, i686"], [152, "            if(armType.startsWith(\"armv6\")) {"], [153, "                // Raspberry PI"], [154, "                return \"armv6\";"], [155, "            }"], [156, "            else if(armType.startsWith(\"armv7\")) {"], [157, "                // Generic"], [158, "                return \"armv7\";"], [159, "            }"], [160, ""], [162, "            // http://bugs.java.com/bugdatabase/view_bug.do?bug_id=8005545"], [163, "            String abi = System.getProperty(\"sun.arch.abi\");"], [164, "            if(abi != null && abi.startsWith(\"gnueabihf\")) {"], [165, "                return \"armv7\";"], [167, ""], [169, "            String javaHome = System.getProperty(\"java.home\");"], [170, "            try {"], [171, "                // determine if first JVM found uses ARM hard-float ABI"], [172, "                int exitCode = Runtime.getRuntime().exec(\"which readelf\").waitFor();"], [173, "                if(exitCode == 0) {"], [174, "                    String[] cmdarray = {\"/bin/sh\", \"-c\", \"find '\" + javaHome +"], [175, "                        \"' -name 'libjvm.so' | head -1 | xargs readelf -A | \" +"], [176, "                        \"grep 'Tag_ABI_VFP_args: VFP registers'\"};"], [177, "                    exitCode = Runtime.getRuntime().exec(cmdarray).waitFor();"], [178, "                    if (exitCode == 0) {"], [179, "                        return \"armv7\";"], [181, "                } else {"], [182, "                    System.err.println(\"WARNING! readelf not found. Cannot check if running on an armhf system, \" +"], [183, "                        \"armel architecture will be presumed.\");"], [186, "            catch(IOException e) {"], [187, "                // ignored: fall back to \"arm\" arch (soft-float ABI)"], [188, "            }"], [189, "            catch(InterruptedException e) {"], [190, "                // ignored: fall back to \"arm\" arch (soft-float ABI)"], [191, "            }"], [192, "        }"], [193, "        // Use armv5, soft-float ABI"], [194, "        return \"arm\";"], [195, "    }"], [196, ""], [197, "    public static String getArchName() {"], [198, "        String osArch = System.getProperty(\"os.arch\");"], [199, "        if(osArch.startsWith(\"arm\")) {"], [200, "            osArch = resolveArmArchType();"]], "deleted": [[110, "    public static String getArchName() {"], [111, "        String osArch = System.getProperty(\"os.arch\");"], [112, "        if(osArch.startsWith(\"arm\")) {"], [114, "            if(System.getProperty(\"sun.arch.abi\") != null && System.getProperty(\"sun.arch.abi\").startsWith(\"gnueabihf\")) {"], [115, "                return translateArchNameToFolderName(\"armhf\");"], [118, "            if(System.getProperty(\"os.name\").contains(\"Linux\")) {"], [119, "                String javaHome = System.getProperty(\"java.home\");"], [120, "                try {"], [121, "                    // determine if first JVM found uses ARM hard-float ABI"], [122, "                    int exitCode = Runtime.getRuntime().exec(\"which readelf\").waitFor();"], [123, "                    if(exitCode == 0) {"], [124, "                        String[] cmdarray = {\"/bin/sh\", \"-c\", \"find '\" + javaHome +"], [125, "                                \"' -name 'libjvm.so' | head -1 | xargs readelf -A | \" +"], [126, "                                \"grep 'Tag_ABI_VFP_args: VFP registers'\"};"], [127, "                        exitCode = Runtime.getRuntime().exec(cmdarray).waitFor();"], [128, "                        if (exitCode == 0) {"], [129, "                            return translateArchNameToFolderName(\"armhf\");"], [130, "                        }"], [131, "                    } else {"], [132, "                        System.err.println(\"WARNING! readelf not found. Cannot check if running on an armhf system, \" +"], [133, "                                \"armel architecture will be presumed.\");"], [136, "                catch(IOException e) {"], [137, "                    // ignored: fall back to \"arm\" arch (soft-float ABI)"], [138, "                }"], [139, "                catch(InterruptedException e) {"], [140, "                    // ignored: fall back to \"arm\" arch (soft-float ABI)"], [141, "                }"]]}, "num_lines_added": 85, "num_lines_removed": 27}