{"hash": "ee2d81d5aab2607d65fd847e3086d14458694967", "message": "[SQLLINE-326] Respect user, password properties in url; add connectInteractionMode property\n\nNew property connectInteractionMode controls when to prompt for user\nand password:\n* askCredentials: ask for credentials if any of them is missed as\n  property;\n* notAskCredentials: do not ask for credentials at all;\n* useNPTogetherOrEmpty: ask only if at least one credential-related\n  property is present and non-empty; otherwise use empty properties\n  (this is the behavior of sqlline-1.7.0 and earlier).", "file_num_lines": 2420, "diff_parsed": {"added": [[378, "              \"-p\", ConnectionSpec.H2.password,"], [2651, "      String[] connectionArgs = {"], [2656, "          \"-log\", \"target\" + File.separator + filename,"], [2669, "  public void testInitArgsForSuccessConnectionWithUserPassInUrl() {"], [2670, "    try {"], [2671, "      final ByteArrayOutputStream os = new ByteArrayOutputStream();"], [2672, "      final String[] connectionArgs = {"], [2673, "          \"-u\", ConnectionSpec.H2.url"], [2674, "              + \";user=\" + ConnectionSpec.H2.username"], [2675, "              + \";password=\" + ConnectionSpec.H2.password,"], [2676, "          \"-e\", \"!set maxwidth 80\"};"], [2677, "      begin(sqlLine, os, false, connectionArgs);"], [2678, "      assertThat(os.toString(\"UTF8\"),"], [2679, "          not(containsString(\"Duplicate property\")));"], [2680, "    } catch (Throwable t) {"], [2681, "      throw new RuntimeException(t);"], [2682, "    }"], [2683, "  }"], [2684, ""], [2685, "  @Test"], [2686, "  public void testInitArgsForSuccessConnectionWithUserInUrl() {"], [2687, "    try {"], [2688, "      new MockUp<sqlline.Commands>() {"], [2689, "        @Mock"], [2690, "        String readUsername(String url) {"], [2691, "          return ConnectionSpec.H2.username;"], [2692, "        }"], [2693, "      };"], [2694, "      final ByteArrayOutputStream os = new ByteArrayOutputStream();"], [2695, "      final String[] connectionArgs = {"], [2696, "          \"-u\", ConnectionSpec.H2.url"], [2697, "              + \";user=\" + ConnectionSpec.H2.username,"], [2698, "          \"-p\", ConnectionSpec.H2.password,"], [2699, "          \" --connectInteractiveModes=useEmptyCredentials\","], [2700, "          \"-e\", \"!set maxwidth 80\"};"], [2701, "      begin(sqlLine, os, false, connectionArgs);"], [2702, "      assertThat(os.toString(\"UTF8\"),"], [2703, "          allOf(not(containsString(\"Duplicate property\")),"], [2704, "              not(containsString(\">....\"))));"], [2705, "    } catch (Throwable t) {"], [2706, "      throw new RuntimeException(t);"], [2707, "    }"], [2708, "  }"], [2709, ""], [2710, "  @Test"], [2711, "  public void testInitArgsWithInteractiveAskForUserPassword() {"], [2712, "    try {"], [2713, "      new MockUp<sqlline.Commands>() {"], [2714, "        @Mock"], [2715, "        String readUsername(String url) {"], [2716, "          return ConnectionSpec.H2.username;"], [2717, "        }"], [2718, "      };"], [2719, "      new MockUp<sqlline.Commands>() {"], [2720, "        @Mock"], [2721, "        String readPassword(String url) {"], [2722, "          return ConnectionSpec.H2.password;"], [2723, "        }"], [2724, "      };"], [2725, "      final ByteArrayOutputStream os = new ByteArrayOutputStream();"], [2726, "      final String[] connectionArgs = {"], [2727, "          \"-u\", ConnectionSpec.H2.url,"], [2728, "          \"-e\", \"!set maxwidth 80\"};"], [2729, "      begin(sqlLine, os, false, connectionArgs);"], [2730, "      assertThat(os.toString(\"UTF8\"),"], [2731, "          allOf(not(containsString(\"Duplicate property\")),"], [2732, "              not(containsString(\">....\")),"], [2733, "              not(containsString(\"Usage:\"))));"], [2734, "    } catch (Throwable t) {"], [2735, "      throw new RuntimeException(t);"], [2736, "    }"], [2737, "  }"], [2738, ""], [2739, "  @Test"], [2740, "  public void testInitArgsWithInteractiveAskForPassword() {"], [2741, "    try {"], [2742, "      new MockUp<sqlline.Commands>() {"], [2743, "        @Mock"], [2744, "        String readPassword(String url) {"], [2745, "          return ConnectionSpec.H2.password;"], [2746, "        }"], [2747, "      };"], [2748, "      final ByteArrayOutputStream os = new ByteArrayOutputStream();"], [2749, "      final String[] connectionArgs = {"], [2750, "          \"-u\", ConnectionSpec.H2.url,"], [2751, "          \"-n\", ConnectionSpec.H2.username,"], [2752, "          \"-e\", \"!set maxwidth 80\"};"], [2753, "      begin(sqlLine, os, false, connectionArgs);"], [2754, "      assertThat(os.toString(\"UTF8\"),"], [2755, "          allOf(not(containsString(\"Duplicate property\")),"], [2756, "              not(containsString(\"Usage:\"))));"], [2757, "    } catch (Throwable t) {"], [2758, "      throw new RuntimeException(t);"], [2759, "    }"], [2760, "  }"], [2761, ""], [2762, "  @Test"], [2763, "  public void testInitArgsWithInteractiveAskForUser() {"], [2764, "    try {"], [2765, "      new MockUp<sqlline.Commands>() {"], [2766, "        @Mock"], [2767, "        String readUsername(String url) {"], [2768, "          return ConnectionSpec.H2.username;"], [2769, "        }"], [2770, "      };"], [2771, "      final ByteArrayOutputStream os = new ByteArrayOutputStream();"], [2772, "      final String[] connectionArgs = {"], [2773, "          \"-u\", ConnectionSpec.H2.url,"], [2774, "          \"-p\", ConnectionSpec.H2.password,"], [2775, "          \"-e\", \"!set maxwidth 80\"};"], [2776, "      begin(sqlLine, os, false, connectionArgs);"], [2777, "      assertThat(os.toString(\"UTF8\"),"], [2778, "          allOf(not(containsString(\"Duplicate property\")),"], [2779, "              not(containsString(\"Usage:\"))));"], [2780, "    } catch (Throwable t) {"], [2781, "      throw new RuntimeException(t);"], [2782, "    }"], [2783, "  }"], [2784, ""], [2785, "  @Test"]], "deleted": [[2609, "      final SqlLine sqlLine = new SqlLine();"], [2649, "      final SqlLine sqlLine = new SqlLine();"], [2652, "      String[] connectionArgs = new String[] {"], [2657, "          \"-log\", \"target/\" + filename,"]]}, "num_lines_added": 120, "num_lines_removed": 4}