{"hash": "0af5f93e4ae54ffa707f00c6b5d55f2f70775240", "message": "Code cleanup\n- @Override where appropriate\n- removed unused method and imports\n- removed placeholder comments", "file_num_lines": 4292, "diff_parsed": {"added": [[3587, "            debug(loc(\"isolation-status\", isoldesc));"], [3960, "            debug(\"Connecting to \" + url);"]], "deleted": [[59, "    //~ Static fields/initializers ---------------------------------------------"], [60, ""], [172, "    //~ Instance fields --------------------------------------------------------"], [173, ""], [312, "    //~ Constructors -----------------------------------------------------------"], [313, ""], [316, "        // registerKnownDrivers ();"], [317, ""], [329, "    //~ Methods ----------------------------------------------------------------"], [330, ""], [1250, "    ////////////////////"], [1251, "    // String utilities"], [1252, "    ////////////////////"], [1757, "    Driver [] scanDriversOLD(String line)"], [1758, "    {"], [1759, "        long start = System.currentTimeMillis();"], [1760, ""], [1761, "        Set paths = new HashSet();"], [1762, "        Set driverClasses = new HashSet();"], [1763, ""], [1764, "        for ("], [1765, "            StringTokenizer tok ="], [1766, "                new StringTokenizer("], [1767, "                    System.getProperty(\"java.ext.dirs\"),"], [1768, "                    System.getProperty(\"path.separator\"));"], [1769, "            tok.hasMoreTokens();)"], [1770, "        {"], [1771, "            File [] files = new File(tok.nextToken()).listFiles();"], [1772, "            for (int i = 0; (files != null) && (i < files.length); i++) {"], [1773, "                paths.add(files[i].getAbsolutePath());"], [1774, "            }"], [1775, "        }"], [1776, ""], [1777, "        for ("], [1778, "            StringTokenizer tok ="], [1779, "                new StringTokenizer("], [1780, "                    System.getProperty(\"java.class.path\"),"], [1781, "                    System.getProperty(\"path.separator\"));"], [1782, "            tok.hasMoreTokens();)"], [1783, "        {"], [1784, "            paths.add(new File(tok.nextToken()).getAbsolutePath());"], [1785, "        }"], [1786, ""], [1787, "        for (Iterator i = paths.iterator(); i.hasNext();) {"], [1788, "            File f = new File((String) i.next());"], [1789, "            output("], [1790, "                color().pad(loc(\"scanning\", f.getAbsolutePath()), 60),"], [1791, "                false);"], [1792, ""], [1793, "            try {"], [1794, "                ZipFile zf = new ZipFile(f);"], [1795, "                int total = zf.size();"], [1796, "                int index = 0;"], [1797, ""], [1798, "                for ("], [1799, "                    Enumeration zfEnum = zf.entries();"], [1800, "                    zfEnum.hasMoreElements();)"], [1801, "                {"], [1802, "                    ZipEntry entry = (ZipEntry) zfEnum.nextElement();"], [1803, "                    String name = entry.getName();"], [1804, "                    progress(index++, total);"], [1805, ""], [1806, "                    if (name.endsWith(\".class\")) {"], [1807, "                        name = name.replace('/', '.');"], [1808, "                        name = name.substring(0, name.length() - 6);"], [1809, ""], [1810, "                        try {"], [1811, "                            // check for the string \"driver\" in the class"], [1812, "                            // to see if we should load it. Not perfect, but"], [1813, "                            // it is far too slow otherwise."], [1814, "                            if (name.toLowerCase().indexOf(\"driver\") != -1) {"], [1815, "                                Class c ="], [1816, "                                    Class.forName("], [1817, "                                        name,"], [1818, "                                        false,"], [1819, "                                        getClass().getClassLoader());"], [1820, "                                if (Driver.class.isAssignableFrom(c)"], [1821, "                                    && !(Modifier.isAbstract("], [1822, "                                            c.getModifiers())))"], [1823, "                                {"], [1824, "                                    try {"], [1825, "                                        // load and initialize"], [1826, "                                        Class.forName(name);"], [1827, "                                    } catch (Exception e) {"], [1828, "                                    }"], [1829, "                                    driverClasses.add(c.newInstance());"], [1830, "                                }"], [1831, "                            }"], [1832, "                        } catch (Throwable t) {"], [1833, "                        }"], [1834, "                    }"], [1835, "                }"], [1836, ""], [1837, "                progress(total, total);"], [1838, "            } catch (Exception e) {"], [1839, "            }"], [1840, "        }"], [1841, ""], [1842, "        info(\"scan complete in \""], [1843, "            + (System.currentTimeMillis() - start) + \"ms\");"], [1844, "        return (Driver []) driverClasses.toArray(new Driver[0]);"], [1845, "    }"], [1846, ""], [3690, "            debug( loc( \"isolation-status\", isoldesc ) );"], [4063, "            debug( \"Connecting to \" + url );"], [5612, "// End SqlLine.java"]]}, "num_lines_added": 2, "num_lines_removed": 106}