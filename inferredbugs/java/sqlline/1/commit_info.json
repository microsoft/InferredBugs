{"hash": "07a3759e1de32bab4215ab70e72069560d29414c", "message": "Initial port to sqlline2. Build works, test fails with jline jar not found so presumably a maven issue", "file_num_lines": 4244, "diff_parsed": {"added": [[57, "import jline.console.completer.AggregateCompleter;"], [58, "import jline.console.completer.ArgumentCompleter;"], [59, "import jline.console.completer.Completer;"], [60, "import jline.console.completer.FileNameCompleter;"], [61, "import jline.console.completer.NullCompleter;"], [62, "import jline.console.ConsoleReader;"], [63, "import jline.console.completer.StringsCompleter;"], [64, "import jline.console.history.FileHistory;"], [65, "import jline.console.history.History;"], [207, "    private Completer sqlLineCommandCompleter;"], [237, "                new Completer[] {"], [238, "                    new StringsCompleter(getConnectionURLExamples())"], [242, "                new Completer[] { new TableNameCompleter() }),"], [245, "                new Completer[] { new TableNameCompleter() }),"], [248, "                new Completer[] { new TableNameCompleter() }),"], [251, "                new Completer[] { new TableNameCompleter() }),"], [256, "                new Completer[] { new TableNameCompleter() }),"], [265, "                new Completer[] { new TableNameCompleter() }),"], [270, "                new Completer[] { new TableNameCompleter() }),"], [275, "                new Completer[] {"], [276, "                    new StringsCompleter(getMetadataMethodNames())"], [288, "                new Completer[] { new FileNameCompleter() }),"], [299, "                new Completer[] { new FileNameCompleter() }),"], [302, "                new Completer[] { new FileNameCompleter() }),"], [311, "                new Completer[] { new StringsCompleter(getIsolationLevels()) }),"], [314, "                new Completer[] {"], [315, "                    new StringsCompleter("], [324, "                new Completer[] { new FileNameCompleter() }),"], [348, "        sqlLineCommandCompleter = (Completer) new SQLLineCommandCompleter();"], [750, "        Terminal terminal = TerminalFactory.create();"], [757, "                    System.out);"], [772, "                InputStream historyIn = new BufferedInputStream("], [774, "                        opts.getHistoryFile()));"], [789, "            FileHistory history = new FileHistory( new File (opts.getHistoryFile() ) ) ;"], [790, "            if (null != historyBuffer) {"], [791, "              history.load( historyBuffer );"], [793, "            reader.setHistory( history );"], [798, "        reader.addCompleter( new SQLLineCompleter() );"], [1708, "                    ClassNameCompleter.getClassNames()));"], [2004, "        public Completer [] getParameterCompleters();"], [2867, "        private Completer [] parameterCompleters = new Completer[0];"], [2872, "            Completer [] completors)"], [2878, "                this.parameterCompleters ="], [2879, "                    new Completer[] {"], [2880, "                        new NullCompleter()"], [2884, "                c.add(new NullCompleter());"], [2885, "                this.parameterCompleters ="], [2886, "                    (Completer []) c.toArray(new Completer[0]);"], [2925, "        public void setParameterCompleters(Completer [] parameterCompleters)"], [2927, "            this.parameterCompleters = parameterCompleters;"], [2930, "        public Completer [] getParameterCompleters()"], [2932, "            return this.parameterCompleters;"], [2945, "        public ReflectiveCommandHandler(String [] cmds, Completer [] completer)"], [2947, "            super(cmds, loc(\"help-\" + cmds[0]), completer);"], [3038, "            ListIterator<History.Entry> hist = reader.getHistory().entries();"], [3040, "            while( hist.hasNext() )  {"], [3041, "                index++ ;"], [3042, "                output(color().pad(index + \".\", 6).append(hist.next().toString()));"], [4364, "    class SQLLineCompleter"], [4365, "        implements Completer"], [4374, "                return sqlLineCommandCompleter.complete(buf, pos, cand);"], [4376, "                if ((con() != null) && (con().sqlLineSQLCompleter != null)) {"], [4377, "                    return con().sqlLineSQLCompleter.complete(buf, pos, cand);"], [4385, "    class SQLLineCommandCompleter"], [4386, "        extends AggregateCompleter"], [4388, "        public SQLLineCommandCompleter()"], [4390, "            List<Completer> completors = new LinkedList<Completer>();"], [4395, "                    Completer [] comps = commands[i].getParameterCompleters();"], [4396, "                    List<Completer> compl = new LinkedList<Completer>();"], [4397, "                    compl.add(new StringsCompleter(COMMAND_PREFIX + cmds[j]));"], [4399, "                    compl.add(new NullCompleter()); // last param no complete"], [4401, "                    completors.add( new ArgumentCompleter( compl ) );"], [4405, "            getCompleters().addAll( completors );"], [4409, "    class TableNameCompleter"], [4410, "        implements Completer"], [4418, "            return new StringsCompleter(con().getTableNames(true)).complete("], [4426, "        extends StringsCompleter"], [4433, "            Set<String> completions = new TreeSet<String>();"], [4490, "            getStrings().addAll(completions);"], [4569, "        private Completer sqlLineSQLCompleter = null;"], [4625, "               sqlLineSQLCompleter ="], [4626, "                new ArgumentCompleter("], [4627, "                    new ArgumentCompleter.WhitespaceArgumentDelimiter() {"], [4632, "                        @Override"], [4633, "                        public boolean isDelimiterChar(final CharSequence buffer, int pos)"], [4635, "                            char c = buffer.charAt( pos ) ;"], [4644, "                    }"], [4645, "                    ,new SQLLineSQLCompletor(skipmeta));"], [4648, "            ((ArgumentCompleter) sqlLineSQLCompleter).setStrict(false);"], [4877, "        implements Completer"], [4896, "        private int maxWidth = TerminalFactory.get().getWidth();"], [4897, "        private int maxHeight = TerminalFactory.get().getHeight();"], [4916, "        public Completer [] optionCompletors()"], [4918, "            return new Completer[] {"], [4964, "                return new StringsCompleter(propertyNames()).complete("]], "deleted": [[198, "    private Completor sqlLineCommandCompletor;"], [228, "                new Completor[] {"], [229, "                    new SimpleCompletor(getConnectionURLExamples())"], [233, "                new Completor[] { new TableNameCompletor() }),"], [236, "                new Completor[] { new TableNameCompletor() }),"], [239, "                new Completor[] { new TableNameCompletor() }),"], [242, "                new Completor[] { new TableNameCompletor() }),"], [247, "                new Completor[] { new TableNameCompletor() }),"], [256, "                new Completor[] { new TableNameCompletor() }),"], [261, "                new Completor[] { new TableNameCompletor() }),"], [266, "                new Completor[] {"], [267, "                    new SimpleCompletor(getMetadataMethodNames())"], [279, "                new Completor[] { new FileNameCompletor() }),"], [290, "                new Completor[] { new FileNameCompletor() }),"], [293, "                new Completor[] { new FileNameCompletor() }),"], [302, "                new Completor[] { new SimpleCompletor(getIsolationLevels()) }),"], [305, "                new Completor[] {"], [306, "                    new SimpleCompletor("], [315, "                new Completor[] { new FileNameCompletor() }),"], [339, "        sqlLineCommandCompletor = new SQLLineCommandCompletor();"], [741, "        Terminal terminal = Terminal.setupTerminal();"], [748, "                    new PrintWriter(System.out));"], [763, "                FileInputStream historyIn ="], [765, "                        opts.getHistoryFile());"], [780, "            // now set the output for the history"], [781, "            PrintWriter historyOut ="], [782, "                new PrintWriter(new FileWriter("], [783, "                        opts.getHistoryFile()));"], [784, "            reader.getHistory().setOutput(historyOut);"], [785, "        } catch (Exception e) {"], [786, "            handleException(e);"], [787, "        }"], [788, ""], [789, "        try {"], [790, "            // now load in the previous history"], [791, "            if (historyBuffer != null) {"], [792, "                reader.getHistory().load(historyBuffer);"], [798, "        reader.addCompletor(new SQLLineCompletor());"], [1708, "                    ClassNameCompletor.getClassNames()));"], [2004, "        public Completor [] getParameterCompletors();"], [2867, "        private Completor [] parameterCompletors = new Completor[0];"], [2872, "            Completor [] completors)"], [2878, "                this.parameterCompletors ="], [2879, "                    new Completor[] {"], [2880, "                        new NullCompletor()"], [2884, "                c.add(new NullCompletor());"], [2885, "                this.parameterCompletors ="], [2886, "                    (Completor []) c.toArray(new Completor[0]);"], [2925, "        public void setParameterCompletors(Completor [] parameterCompletors)"], [2927, "            this.parameterCompletors = parameterCompletors;"], [2930, "        public Completor [] getParameterCompletors()"], [2932, "            return this.parameterCompletors;"], [2945, "        public ReflectiveCommandHandler(String [] cmds, Completor [] completor)"], [2947, "            super(cmds, loc(\"help-\" + cmds[0]), completor);"], [3038, "            List hist = reader.getHistory().getHistoryList();"], [3040, "            for (Iterator i = hist.iterator(); i.hasNext(); index++) {"], [3041, "                output(color().pad(index + \".\", 6).append(i.next().toString()));"], [4363, "    class SQLLineCompletor"], [4364, "        implements Completor"], [4373, "                return sqlLineCommandCompletor.complete(buf, pos, cand);"], [4375, "                if ((con() != null) && (con().sqlLineSQLCompletor != null)) {"], [4376, "                    return con().sqlLineSQLCompletor.complete(buf, pos, cand);"], [4384, "    class SQLLineCommandCompletor"], [4385, "        extends MultiCompletor"], [4387, "        public SQLLineCommandCompletor()"], [4389, "            List completors = new LinkedList();"], [4394, "                    Completor [] comps = commands[i].getParameterCompletors();"], [4395, "                    List compl = new LinkedList();"], [4396, "                    compl.add(new SimpleCompletor(COMMAND_PREFIX + cmds[j]));"], [4398, "                    compl.add(new NullCompletor()); // last param no complete"], [4400, "                    completors.add("], [4401, "                        new ArgumentCompletor("], [4402, "                            (Completor []) compl.toArray(new Completor[0])));"], [4406, "            setCompletors((Completor []) completors.toArray(new Completor[0]));"], [4410, "    class TableNameCompletor"], [4411, "        implements Completor"], [4419, "            return new SimpleCompletor(con().getTableNames(true)).complete("], [4427, "        extends SimpleCompletor"], [4434, "            Set completions = new TreeSet();"], [4491, "            setCandidateStrings((String []) completions.toArray(new String[0]));"], [4570, "        private Completor sqlLineSQLCompletor = null;"], [4626, "            sqlLineSQLCompletor ="], [4627, "                new ArgumentCompletor("], [4628, "                    new SQLLineSQLCompletor(skipmeta),"], [4629, "                    new ArgumentCompletor.AbstractArgumentDelimiter() {"], [4634, "                        public boolean isDelimiterChar(String buf, int pos)"], [4636, "                            char c = buf.charAt(pos);"], [4645, "                    });"], [4648, "            ((ArgumentCompletor) sqlLineSQLCompletor).setStrict(false);"], [4877, "        implements Completor"], [4896, "        private int maxWidth = Terminal.setupTerminal().getTerminalWidth();"], [4897, "        private int maxHeight = Terminal.setupTerminal().getTerminalHeight();"], [4916, "        public Completor [] optionCompletors()"], [4918, "            return new Completor[] {"], [4964, "                return new SimpleCompletor(propertyNames()).complete("]]}, "num_lines_added": 95, "num_lines_removed": 95}