{"hash": "8c2dcb389b75d362ec8811034eba7d2d1d333a9d", "message": "Added test for aggregated and hopefully fixed #29.", "file_num_lines": 115, "diff_parsed": {"added": [[15, "import static org.junit.Assert.assertNull;"], [71, "        PipelineFactory factory = new PipelineFactory();"], [72, "        final Pipeline pipe1 = factory.extractPipeline(\"pipe1\", build1);"], [73, "        final Pipeline pipe2 = factory.extractPipeline(\"pipe2\", build2);"], [74, ""], [75, "        Pipeline aggregated1 = factory.createPipelineAggregated(pipe1);"], [76, "        Pipeline aggregated2 = factory.createPipelineAggregated(pipe2);"], [77, ""], [78, "        assertNull(aggregated1.getStages().get(0).getVersion());"], [79, "        assertNull(aggregated2.getStages().get(0).getVersion());"], [80, ""], [81, "        assertTrue(aggregated1.getStages().get(0).getTasks().get(0).getStatus().isIdle());"], [82, "        assertTrue(aggregated2.getStages().get(0).getTasks().get(0).getStatus().isIdle());"], [83, ""], [84, ""], [94, "        aggregated1 = factory.createPipelineAggregated(pipe1);"], [95, "        aggregated2 = factory.createPipelineAggregated(pipe2);"], [98, "        assertEquals(jenkins.getInstance().getRootUrl() + \"job/sonar1/1/\", aggregated1.getStages().get(1).getTasks().get(0).getLink());"], [99, ""], [100, "        assertEquals(true, aggregated2.getStages().get(1).getTasks().get(0).getStatus().isIdle());"], [101, "        assertEquals(jenkins.getInstance().getRootUrl() + \"job/sonar1/\", aggregated2.getStages().get(1).getTasks().get(0).getLink());"], [106, "        aggregated1 = factory.createPipelineAggregated(pipe1);"], [107, "        aggregated2 = factory.createPipelineAggregated(pipe2);"], [108, ""], [109, "        assertEquals(\"#1\", aggregated1.getStages().get(1).getVersion());"], [110, "        assertEquals(\"#1\", aggregated2.getStages().get(1).getVersion());"], [111, ""], [112, "        assertEquals(true, aggregated2.getStages().get(1).getTasks().get(0).getStatus().isSuccess());"], [113, "        assertEquals(jenkins.getInstance().getRootUrl() + \"job/sonar1/2/\", aggregated2.getStages().get(1).getTasks().get(0).getLink());"], [114, ""], [115, ""], [116, "        jenkins.buildAndAssertSuccess(build1);"], [117, "        jenkins.waitUntilNoActivity();"], [118, ""], [119, "        aggregated1 = factory.createPipelineAggregated(pipe1);"], [120, "        aggregated2 = factory.createPipelineAggregated(pipe2);"], [121, ""], [122, ""], [123, "        assertEquals(\"#2\", aggregated1.getStages().get(1).getVersion());"], [124, "        assertEquals(\"#1\", aggregated2.getStages().get(1).getVersion());"], [125, ""], [126, "        assertEquals(jenkins.getInstance().getRootUrl() + \"job/sonar1/3/\", aggregated1.getStages().get(1).getTasks().get(0).getLink());"], [127, "        assertEquals(jenkins.getInstance().getRootUrl() + \"job/sonar1/2/\", aggregated2.getStages().get(1).getTasks().get(0).getLink());"], [128, ""], [163, "        assertEquals(jenkins.getInstance().getRootUrl() + \"job/build/1/\", latest.getStages().get(0).getTasks().get(0).getLink());"]], "deleted": [[75, "        PipelineFactory factory = new PipelineFactory();"], [76, "        final Pipeline pipe1 = factory.extractPipeline(\"pipe1\", build1);"], [77, "        final Pipeline pipe2 = factory.extractPipeline(\"pipe2\", build2);"], [82, "        Pipeline aggregated1 = factory.createPipelineAggregated(pipe1);"], [83, "        Pipeline aggregated2 = factory.createPipelineAggregated(pipe2);"], [86, "        assertEquals(true, aggregated2.getStages().get(1).getStatus().isIdle());"], [91, "        Pipeline aggregated3 = factory.createPipelineAggregated(pipe1);"], [92, "        Pipeline aggregated4 = factory.createPipelineAggregated(pipe2);"], [94, "        assertEquals(\"#1\", aggregated3.getStages().get(1).getVersion());"], [95, "        assertEquals(\"#1\", aggregated4.getStages().get(1).getVersion());"], [129, ""]]}, "num_lines_added": 45, "num_lines_removed": 11}