{"hash": "d265523a75140919e46aedc1ff2e815e1f8b9fd0", "message": "#168, removed some precalcs that are not needed\n\nOriginal code does not make any lengh-based checks in these cases.", "file_num_lines": 195, "diff_parsed": {"added": [[14, "import java.io.ByteArrayOutputStream;"], [222, "\t\t\t\t\tByteArrayOutputStream data = new ByteArrayOutputStream();"], [223, "\t\t\t\t\tBinaryEncoder enc = new BinaryEncoder( data );"], [224, "\t\t\t\t\tenc.setEncoderContext( endpoint.getEncoderContext() );"], [225, "\t\t\t\t\tenc.putMessage( responseObject );"], [226, "\t\t\t\t\tresponseHandle.setEntity( new NByteArrayEntity(data.toByteArray()) );"], [228, "\t\t\t\t\tlogger.info(\"sendResponse: Encoding failed\", e);"]], "deleted": [[43, "import org.opcfoundation.ua.utils.SizeCalculationOutputStream;"], [222, "\t    \t    \tSizeCalculationOutputStream tmp = new SizeCalculationOutputStream();"], [223, "\t    \t    \tBinaryEncoder calc = new BinaryEncoder(tmp);"], [224, "\t    \t\t\tcalc.setEncoderContext( endpoint.getEncoderContext() );"], [225, "\t\t\t\t\tcalc.putMessage( responseObject );"], [226, "\t\t    \t\tint len = tmp.getLength();"], [227, "\t\t    \t\tbyte[] data = new byte[ len ];"], [228, "\t\t    \t\tBinaryEncoder enc = new BinaryEncoder( data );"], [229, "\t\t    \t\tenc.setEncoderContext( endpoint.getEncoderContext() );"], [230, "\t\t    \t\tenc.putMessage( responseObject );"], [231, "\t\t    \t\tresponseHandle.setEntity( new NByteArrayEntity(data) );"], [233, "\t\t\t    \tlogger.info(\"sendResponse: Encoding failed\", e);"]]}, "num_lines_added": 7, "num_lines_removed": 12}