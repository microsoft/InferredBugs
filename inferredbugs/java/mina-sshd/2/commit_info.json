{"hash": "6f05650ed48e65cfc7bc3b004c1a7b11c87e781f", "message": "SSHD-1: Upgrade to mina 2.0.0-m4\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/sshd/trunk@725047 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 556, "diff_parsed": {"added": [[23, "import java.io.InterruptedIOException;"], [41, "import org.apache.mina.core.session.IoSession;"], [42, "import org.apache.mina.core.buffer.IoBuffer;"], [43, "import org.apache.mina.core.future.CloseFuture;"], [44, "import org.apache.mina.core.future.WriteFuture;"], [45, "import org.apache.mina.core.future.IoFutureListener;"], [46, "import org.apache.mina.core.future.IoFuture;"], [68, "     * underlying MINA session. See {@link #getSession(IoSession, boolean)}"], [69, "     * and {@link #attachSession(IoSession, AbstractSession)}."], [84, "    /** The session is being closed */"], [85, "    protected boolean closing;"], [199, "    public void messageReceived(IoBuffer buffer) throws Exception {"], [245, "                    return;"], [257, "     * The call will not block until the mina session is actually closed."], [262, "                if (!closed && !closing) {"], [264, "                        closing = true;"], [272, "                        CloseFuture future = ioSession.close(true);"], [273, "                        future.addListener(new IoFutureListener() {"], [274, "                            public void operationComplete(IoFuture future) {"], [275, "                                synchronized (lock) {"], [276, "                                    log.debug(\"IoSession closed\");"], [277, "                                    closed = true;"], [278, "                                    lock.notifyAll();"], [279, "                                }"], [280, "                            }"], [281, "                        });"], [305, "            IoBuffer bb = IoBuffer.wrap(buffer.array(), buffer.rpos(), buffer.available());"], [497, "        IoBuffer buffer = IoBuffer.allocate(32);"], [780, "     * Send a disconnect packet with the given reason and message."], [781, "     * Once the packet has been sent, the session will be closed"], [782, "     * asynchronously."], [794, "        f.addListener(new IoFutureListener() {"], [795, "            public void operationComplete(IoFuture future) {"], [796, "                close();"], [797, "            }"], [798, "        });"]], "deleted": [[40, "import org.apache.mina.common.ByteBuffer;"], [41, "import org.apache.mina.common.IoSession;"], [42, "import org.apache.mina.common.WriteFuture;"], [43, "import org.apache.mina.common.CloseFuture;"], [65, "     * underlying MINA session. See {@link #getSession(org.apache.mina.common.IoSession, boolean)}"], [66, "     * and {@link #attachSession(org.apache.mina.common.IoSession, AbstractSession)}."], [194, "    public void messageReceived(ByteBuffer buffer) throws Exception {"], [251, "     * The call will block until the mina session is actually closed."], [256, "                if (!closed) {"], [265, "                        CloseFuture future = ioSession.close();"], [266, "                        log.debug(\"Waiting for IoSession to be closed\");"], [267, "                        future.join();"], [268, "                        log.debug(\"IoSession closed\");"], [272, "                    closed = true;"], [273, "                    lock.notifyAll();"], [294, "            ByteBuffer bb = ByteBuffer.wrap(buffer.array(), buffer.rpos(), buffer.available());"], [486, "        ByteBuffer buffer = ByteBuffer.allocate(32);"], [769, "     * Send a disconnect packet with the given reason and message"], [781, "        f.join();"], [782, "        close();"]]}, "num_lines_added": 36, "num_lines_removed": 20}