{"hash": "3394b46b34d0014d136b0712c2c1ef38afd25545", "message": "Code cleanup", "file_num_lines": 77, "diff_parsed": {"added": [[12, "import org.bukkit.command.CommandSender;"], [13, "import org.bukkit.entity.Player;"], [14, "import org.bukkit.inventory.ItemStack;"], [15, ""], [16, "import java.util.ArrayList;"], [17, "import java.util.Date;"], [18, "import java.util.List;"], [24, "        PluginConfig config = Settings.getConfig();"], [25, "        MessagesConfig messages = Messages.getInstance();"], [26, "        Player player = (Player) sender;"], [27, "        User user = User.get(player);"], [31, "            player.sendMessage(messages.validityHasNotGuild);"], [36, "            player.sendMessage(messages.validityIsNotOwner);"], [40, "        if (config.validityWhen != 0) {"], [44, "            if (d > config.validityWhen) {"], [45, "                long when = d - config.validityWhen;"], [46, "                player.sendMessage(messages.validityWhen.replace(\"{TIME}\", TimeUtils.getDurationBreakdown(when)));"], [51, "        List<ItemStack> itemsList = config.validityItems;"], [53, "            if (!player.getInventory().containsAtLeast(itemStack, itemStack.getAmount())) {"], [54, "                String msg = messages.validityItems;"], [76, "                player.sendMessage(msg);"], [80, "            player.getInventory().removeItem(itemStack);"], [88, "        c += config.validityTime;"], [91, "        player.sendMessage(messages.validityDone.replace(\"{DATE}\", config.dateFormat.format(new Date(c))));"], [93, ""]], "deleted": [[3, "import java.util.ArrayList;"], [4, "import java.util.Date;"], [5, "import java.util.List;"], [6, ""], [7, "import org.bukkit.command.CommandSender;"], [8, "import org.bukkit.entity.Player;"], [9, "import org.bukkit.inventory.ItemStack;"], [10, ""], [25, "        PluginConfig pc = Settings.getConfig();"], [26, "        MessagesConfig m = Messages.getInstance();"], [27, "        Player p = (Player) sender;"], [28, "        User user = User.get(p);"], [32, "            p.sendMessage(m.validityHasNotGuild);"], [37, "            p.sendMessage(m.validityIsNotOwner);"], [41, "        if (pc.validityWhen != 0) {"], [45, "            if (d > pc.validityWhen) {"], [46, "                long when = d - pc.validityWhen;"], [47, "                p.sendMessage(m.validityWhen.replace(\"{TIME}\", TimeUtils.getDurationBreakdown(when)));"], [52, "        List<ItemStack> itemsList = pc.validityItems;"], [54, "            if (!p.getInventory().containsAtLeast(itemStack, itemStack.getAmount())) {"], [55, "                String msg = m.validityItems;"], [77, "                p.sendMessage(msg);"], [81, "            p.getInventory().removeItem(itemStack);"], [89, "        c += pc.validityTime;"], [92, "        p.sendMessage(m.validityDone.replace(\"{DATE}\", pc.dateFormat.format(new Date(c))));"]]}, "num_lines_added": 25, "num_lines_removed": 25}