{"hash": "e3ba8070652f3ab983162a4deccf785246024be4", "message": "simplify testing of GHRepoName", "file_num_lines": 65, "diff_parsed": {"added": [[4, "import com.tngtech.java.junit.dataprovider.DataProvider;"], [5, "import com.tngtech.java.junit.dataprovider.DataProviderRunner;"], [7, "import org.junit.runner.RunWith;"], [8, ""], [9, "import static org.hamcrest.Matchers.allOf;"], [10, "import static org.hamcrest.Matchers.nullValue;"], [11, "import static org.jenkinsci.plugins.github.test.GitHubRepoNameMatchers.repo;"], [12, "import static org.jenkinsci.plugins.github.test.GitHubRepoNameMatchers.withHost;"], [13, "import static org.jenkinsci.plugins.github.test.GitHubRepoNameMatchers.withRepoName;"], [14, "import static org.jenkinsci.plugins.github.test.GitHubRepoNameMatchers.withUserName;"], [15, "import static org.junit.Assert.assertThat;"], [20, "@RunWith(DataProviderRunner.class)"], [24, "    @DataProvider({"], [25, "            \"git@github.com:jenkinsci/jenkins.git, github.com, jenkinsci, jenkins\","], [26, "            \"git@github.com:jenkinsci/jenkins/, github.com, jenkinsci, jenkins\","], [27, "            \"git@github.com:jenkinsci/jenkins, github.com, jenkinsci, jenkins\","], [28, "            \"git@gh.company.com:jenkinsci/jenkins.git, gh.company.com, jenkinsci, jenkins\","], [29, "            \"git@gh.company.com:jenkinsci/jenkins, gh.company.com, jenkinsci, jenkins\","], [30, "            \"git@gh.company.com:jenkinsci/jenkins/, gh.company.com, jenkinsci, jenkins\","], [31, "            \"git://github.com/jenkinsci/jenkins.git, github.com, jenkinsci, jenkins\","], [32, "            \"git://github.com/jenkinsci/jenkins/, github.com, jenkinsci, jenkins\","], [33, "            \"git://github.com/jenkinsci/jenkins, github.com, jenkinsci, jenkins\","], [34, "            \"https://user@github.com/jenkinsci/jenkins.git, github.com, jenkinsci, jenkins\","], [35, "            \"https://user@github.com/jenkinsci/jenkins, github.com, jenkinsci, jenkins\","], [36, "            \"https://user@github.com/jenkinsci/jenkins/, github.com, jenkinsci, jenkins\","], [37, "            \"https://employee@gh.company.com/jenkinsci/jenkins.git, gh.company.com, jenkinsci, jenkins\","], [38, "            \"https://employee@gh.company.com/jenkinsci/jenkins, gh.company.com, jenkinsci, jenkins\","], [39, "            \"https://employee@gh.company.com/jenkinsci/jenkins/, gh.company.com, jenkinsci, jenkins\","], [40, "            \"git://company.net/jenkinsci/jenkins.git, company.net, jenkinsci, jenkins\","], [41, "            \"git://company.net/jenkinsci/jenkins, company.net, jenkinsci, jenkins\","], [42, "            \"git://company.net/jenkinsci/jenkins/, company.net, jenkinsci, jenkins\","], [43, "            \"https://github.com/jenkinsci/jenkins.git, github.com, jenkinsci, jenkins\","], [44, "            \"https://github.com/jenkinsci/jenkins, github.com, jenkinsci, jenkins\","], [45, "            \"https://github.com/jenkinsci/jenkins/, github.com, jenkinsci, jenkins\","], [46, "    })"], [47, "    public void githubFullRepo(String url, String host, String user, String repo) {"], [48, "        assertThat(url, repo(allOf("], [49, "                withHost(host),"], [50, "                withUserName(user),"], [51, "                withRepoName(repo)"], [52, "        )));"], [57, "        assertThat(\"               https://user@github.com/jenkinsci/jenkins/      \", repo(allOf("], [58, "                withHost(\"github.com\"),"], [59, "                withUserName(\"jenkinsci\"),"], [60, "                withRepoName(\"jenkins\")"], [61, "        )));"], [65, "    @DataProvider(value = {"], [66, "            \"gopher://gopher.floodgap.com\","], [67, "            \"https//github.com/jenkinsci/jenkins\","], [68, "            \"\","], [69, "            \"null\""], [70, "    }, trimValues = false)"], [71, "    public void badUrl(String url) {"], [72, "        assertThat(url, repo(nullValue(GitHubRepositoryName.class)));"]], "deleted": [[3, "import static org.junit.Assert.assertEquals;"], [4, "import static org.junit.Assert.assertNotNull;"], [5, "import static org.junit.Assert.assertNull;"], [6, ""], [8, ""], [16, "    private void testURL(String URL, String host, String owner, String repository)"], [17, "    {"], [18, "        GitHubRepositoryName repo = GitHubRepositoryName.create(URL);"], [19, "        assertNotNull(repo);"], [20, "        assertEquals(host, repo.host);"], [21, "        assertEquals(owner, repo.userName);"], [22, "        assertEquals(repository, repo.repositoryName);"], [23, "    }"], [24, ""], [25, "    @Test"], [26, "    public void gitAtUrlGitHub() {"], [27, "\ttestURL(\"git@github.com:jenkinsci/jenkins.git\", \"github.com\", \"jenkinsci\", \"jenkins\");"], [28, "    }"], [29, ""], [30, "    @Test"], [31, "    public void gitAtUrlOtherHost() {"], [32, "\ttestURL(\"git@gh.company.com:jenkinsci/jenkins.git\", \"gh.company.com\", \"jenkinsci\", \"jenkins\");"], [33, "    }"], [34, ""], [35, "    @Test"], [36, "    public void gitColonUrlGitHub() {"], [37, "\ttestURL(\"git://github.com/jenkinsci/jenkins.git\", \"github.com\", \"jenkinsci\", \"jenkins\");"], [38, "    }"], [39, ""], [40, "    @Test"], [41, "    public void gitColonUrlOtherHost() {"], [42, "\ttestURL(\"git://company.net/jenkinsci/jenkins.git\", \"company.net\", \"jenkinsci\", \"jenkins\");"], [43, "    }"], [44, ""], [45, "    @Test"], [46, "    public void httpsUrlGitHub() {"], [47, "\ttestURL(\"https://user@github.com/jenkinsci/jenkins.git\", \"github.com\", \"jenkinsci\", \"jenkins\");"], [48, "    }"], [49, ""], [50, "    @Test"], [51, "    public void httpsUrlGitHubWithoutUser() {"], [52, "\ttestURL(\"https://github.com/jenkinsci/jenkins.git\", \"github.com\", \"jenkinsci\", \"jenkins\");"], [53, "    }"], [54, ""], [55, "    @Test"], [56, "    public void httpsUrlOtherHost() {"], [57, "\ttestURL(\"https://employee@gh.company.com/jenkinsci/jenkins.git\", \"gh.company.com\", \"jenkinsci\", \"jenkins\");"], [58, "    }"], [59, ""], [60, "    @Test"], [61, "    public void gitAtUrlGitHubNoSuffix() {"], [62, "\ttestURL(\"git@github.com:jenkinsci/jenkins\", \"github.com\", \"jenkinsci\", \"jenkins\");"], [63, "    }"], [64, ""], [65, "    @Test"], [66, "    public void gitAtUrlOtherHostNoSuffix() {"], [67, "\ttestURL(\"git@gh.company.com:jenkinsci/jenkins\", \"gh.company.com\", \"jenkinsci\", \"jenkins\");"], [68, "    }"], [69, ""], [70, "    @Test"], [71, "    public void gitColonUrlGitHubNoSuffix() {"], [72, "\ttestURL(\"git://github.com/jenkinsci/jenkins\", \"github.com\", \"jenkinsci\", \"jenkins\");"], [73, "    }"], [74, ""], [75, "    @Test"], [76, "    public void gitColonUrlOtherHostNoSuffix() {"], [77, "\ttestURL(\"git://company.net/jenkinsci/jenkins\", \"company.net\", \"jenkinsci\", \"jenkins\");"], [78, "    }"], [79, ""], [80, "    @Test"], [81, "    public void httpsUrlGitHubNoSuffix() {"], [82, "\ttestURL(\"https://user@github.com/jenkinsci/jenkins\", \"github.com\", \"jenkinsci\", \"jenkins\");"], [83, "    }"], [84, ""], [85, "    @Test"], [86, "    public void httpsUrlGitHubWithoutUserNoSuffix() {"], [87, "\ttestURL(\"https://github.com/jenkinsci/jenkins\", \"github.com\", \"jenkinsci\", \"jenkins\");"], [88, "    }"], [89, ""], [90, "    @Test"], [91, "    public void httpsUrlOtherHostNoSuffix() {"], [92, "\ttestURL(\"https://employee@gh.company.com/jenkinsci/jenkins\", \"gh.company.com\", \"jenkinsci\", \"jenkins\");"], [93, "    }"], [94, ""], [95, "    @Test"], [96, "    public void gitAtUrlGitHubTrailingSlash() {"], [97, "        GitHubRepositoryName repo = GitHubRepositoryName"], [98, "                .create(\"git@github.com:jenkinsci/jenkins/\");"], [99, "        assertNotNull(repo);"], [100, "        assertEquals(\"jenkinsci\", repo.userName);"], [101, "        assertEquals(\"jenkins\", repo.repositoryName);"], [102, "        assertEquals(\"github.com\", repo.host);"], [103, "    }"], [104, ""], [105, "    @Test"], [106, "    public void gitAtUrlOtherHostTrailingSlash() {"], [107, "        GitHubRepositoryName repo = GitHubRepositoryName"], [108, "                .create(\"git@gh.company.com:jenkinsci/jenkins/\");"], [109, "        assertNotNull(repo);"], [110, "        assertEquals(\"jenkinsci\", repo.userName);"], [111, "        assertEquals(\"jenkins\", repo.repositoryName);"], [112, "        assertEquals(\"gh.company.com\", repo.host);"], [113, "    }"], [114, ""], [115, "    @Test"], [116, "    public void gitColonUrlGitHubTrailingSlash() {"], [117, "        GitHubRepositoryName repo = GitHubRepositoryName"], [118, "                .create(\"git://github.com/jenkinsci/jenkins/\");"], [119, "        assertNotNull(repo);"], [120, "        assertEquals(\"jenkinsci\", repo.userName);"], [121, "        assertEquals(\"jenkins\", repo.repositoryName);"], [122, "        assertEquals(\"github.com\", repo.host);"], [123, "    }"], [124, ""], [125, "    @Test"], [126, "    public void gitColonUrlOtherHostTrailingSlash() {"], [127, "        GitHubRepositoryName repo = GitHubRepositoryName"], [128, "                .create(\"git://company.net/jenkinsci/jenkins/\");"], [129, "        assertNotNull(repo);"], [130, "        assertEquals(\"jenkinsci\", repo.userName);"], [131, "        assertEquals(\"jenkins\", repo.repositoryName);"], [132, "        assertEquals(\"company.net\", repo.host);"], [133, "    }"], [134, ""], [136, "    public void httpsUrlGitHubTrailingSlash() {"], [137, "        GitHubRepositoryName repo = GitHubRepositoryName"], [138, "                .create(\"https://user@github.com/jenkinsci/jenkins/\");"], [139, "        assertNotNull(repo);"], [140, "        assertEquals(\"jenkinsci\", repo.userName);"], [141, "        assertEquals(\"jenkins\", repo.repositoryName);"], [142, "        assertEquals(\"github.com\", repo.host);"], [143, "    }"], [144, ""], [145, "    @Test"], [146, "    public void httpsUrlGitHubWithoutUserTrailingSlash() {"], [147, "        //this is valid for anonymous usage"], [148, "        GitHubRepositoryName repo = GitHubRepositoryName"], [149, "                .create(\"https://github.com/jenkinsci/jenkins/\");"], [150, "        assertNotNull(repo);"], [151, "        assertEquals(\"jenkinsci\", repo.userName);"], [152, "        assertEquals(\"jenkins\", repo.repositoryName);"], [153, "        assertEquals(\"github.com\", repo.host);"], [157, "    public void httpsUrlOtherHostTrailingSlash() {"], [158, "        GitHubRepositoryName repo = GitHubRepositoryName"], [159, "                .create(\"https://employee@gh.company.com/jenkinsci/jenkins/\");"], [160, "        assertNotNull(repo);"], [161, "        assertEquals(\"jenkinsci\", repo.userName);"], [162, "        assertEquals(\"jenkins\", repo.repositoryName);"], [163, "        assertEquals(\"gh.company.com\", repo.host);"], [164, "    }"], [165, ""], [166, "    @Test"], [168, "        GitHubRepositoryName repo = GitHubRepositoryName"], [169, "                .create(\"               https://user@github.com/jenkinsci/jenkins/      \");"], [170, "        assertNotNull(repo);"], [171, "        assertEquals(\"jenkinsci\", repo.userName);"], [172, "        assertEquals(\"jenkins\", repo.repositoryName);"], [173, "        assertEquals(\"github.com\", repo.host);"], [177, "    public void badProtocol() {"], [178, "        GitHubRepositoryName repo = GitHubRepositoryName"], [179, "                .create(\"gopher://gopher.floodgap.com\");"], [180, "        assertNull(repo);"], [182, ""], [183, "    @Test"], [184, "    public void missingColon() {"], [185, "        GitHubRepositoryName repo = GitHubRepositoryName"], [186, "                .create(\"https//github.com/jenkinsci/jenkins\");"], [187, "        assertNull(repo);"], [188, "    }"], [189, ""]]}, "num_lines_added": 54, "num_lines_removed": 170}