{"hash": "b67ae8439c56d2a4e6df51377fad837ca961555d", "message": "#65 - better diags on verbose", "file_num_lines": 143, "diff_parsed": {"added": [[5, "import java.net.URL;"], [22, "\tboolean verbose = false;"], [58, "\tpublic static CFLintFilter createFilter(boolean verbose) {"], [63, "\t\t\t\tif(verbose){"], [64, "\t\t\t\t\tSystem.out.println(\"No cflintexclude.json on classpath.\");"], [65, "\t\t\t\t}"], [68, "\t\t\tif(verbose){"], [69, "\t\t\t\tfinal URL url = CFLintFilter.class.getResource(\"/cflintexclude.json\");"], [70, "\t\t\t\tSystem.out.println(\"Using exclude file \" + url);"], [71, "\t\t\t}"], [72, ""], [79, "\t\tfinal CFLintFilter filter = new CFLintFilter(data);"], [80, "\t\tfilter.setVerbose(verbose);"], [81, "\t\tif (verbose){"], [82, "\t\t\tSystem.out.println(\"Exclude rule count : \" + filter.data.size());"], [83, "\t\t}"], [84, "\t\treturn filter;"], [87, "\tpublic static CFLintFilter createFilter(final String excludeJSON,boolean verbose) {"], [88, "\t\tfinal CFLintFilter filter = new CFLintFilter(excludeJSON);"], [89, "\t\tfilter.setVerbose(verbose);"], [90, "\t\treturn filter;"], [91, "\t}"], [93, "\t\tfinal CFLintFilter filter = new CFLintFilter(excludeJSON);"], [94, "\t\treturn filter;"], [107, "\t\t\t\t\t}else if (verbose){"], [108, "\t\t\t\t\t\tSystem.out.println(\"Exclude matched file \" + bugInfo.getFilename());"], [114, "\t\t\t\t\t}else if (verbose){"], [115, "\t\t\t\t\t\tSystem.out.println(\"Exclude matched message code \" + bugInfo.getMessageCode());"], [122, "\t\t\t\t\t}else if (verbose){"], [123, "\t\t\t\t\t\tSystem.out.println(\"Exclude matched function name \" + bugInfo.getFunction());"], [128, "\t\t\t\t\t\t\t|| !bugInfo.getVariable().matches(jsonObj.get(\"variable\").toString())) {"], [130, "\t\t\t\t\t}else if (verbose){"], [131, "\t\t\t\t\t\tSystem.out.println(\"Exclude matched variable name \" + bugInfo.getVariable());"], [138, "\t\t\t\t\t}else if (verbose){"], [139, "\t\t\t\t\t\tSystem.out.println(\"Exclude matched line \" + bugInfo.getLine());"], [146, "\t\t\t\t\t}else if (verbose){"], [147, "\t\t\t\t\t\tSystem.out.println(\"Exclude matched expression \" + bugInfo.getExpression());"], [155, ""], [156, "\tpublic void setVerbose(boolean verbose) {"], [157, "\t\tthis.verbose = verbose;"], [158, "\t}"]], "deleted": [[56, "\tpublic static CFLintFilter createFilter() {"], [69, "\t\treturn new CFLintFilter(data);"], [73, "\t\treturn new CFLintFilter(excludeJSON);"], [101, "\t\t\t\t\t\t\t|| !bugInfo.getFunction().matches(jsonObj.get(\"function\").toString())) {"]]}, "num_lines_added": 41, "num_lines_removed": 4}