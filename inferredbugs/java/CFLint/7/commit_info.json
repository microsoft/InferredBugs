{"hash": "1b07e49e26fbd2529e346bd0fd222cd0a8f792bb", "message": "#199\n\nadded hint checking for cfscript: components,functions,arguments.", "file_num_lines": 816, "diff_parsed": {"added": [[41, "import com.cflint.tools.PrecedingCommentReader;"], [439, "\t\t\t\tfunctionContext.setFunctionInfo(function);"], [513, "\t\tfinal String mlText = PrecedingCommentReader.getMultiLine(context, functionToken);"], [514, "\t\tif(mlText != null && !mlText.isEmpty()){"], [515, "\t\t\tfinal Pattern pattern = Pattern.compile(\".*\\\\s*@CFLintIgnore\\\\s+([\\\\w,_]+)\\\\s*.*\", Pattern.DOTALL);"], [516, "\t\t\tfinal Matcher matcher = pattern.matcher(mlText);"], [517, "\t\t\tif (matcher.matches()) {"], [518, "\t\t\t\tString ignoreCodes = matcher.group(1);"], [519, "\t\t\t\tcontext.ignore(Arrays.asList(ignoreCodes.split(\",\\\\s*\")));"]], "deleted": [[438, "\t\t\t\tfunctionContext.setFunctionIdentifier(function.getName());"], [512, "\t\tIterable<Token> tokens = context.beforeTokens(functionToken);"], [513, "\t\tfor (Token currentTok : tokens) {"], [514, "\t\t\tif (currentTok.getChannel() == Token.HIDDEN_CHANNEL && currentTok.getType() == CFSCRIPTLexer.ML_COMMENT) {"], [515, "\t\t\t\tString mlText = currentTok.getText();"], [516, "\t\t\t\tPattern pattern = Pattern.compile(\".*\\\\s*@CFLintIgnore\\\\s+([\\\\w,_]+)\\\\s*.*\", Pattern.DOTALL);"], [517, "\t\t\t\tMatcher matcher = pattern.matcher(mlText);"], [518, "\t\t\t\tif (matcher.matches()) {"], [519, "\t\t\t\t\tString ignoreCodes = matcher.group(1);"], [520, "\t\t\t\t\tcontext.ignore(Arrays.asList(ignoreCodes.split(\",\\\\s*\")));"], [521, "\t\t\t\t}"], [522, "\t\t\t} else if (currentTok.getLine() < functionToken.getLine()) {"], [523, "\t\t\t\tbreak;"]]}, "num_lines_added": 9, "num_lines_removed": 13}