  protected void setup(int numServers){
    peers = Arrays.stream(MiniRaftCluster.generateIds(numServers, 0))
        .map(RaftPeerId::valueOf)
        .map(id -> new RaftPeer(id, NetUtils.createLocalServerAddress()))
        .collect(Collectors.toList());
    servers = new ArrayList<>(peers.size());
    stateMachines = new ConcurrentHashMap<>();
    // start stream servers on raft peers.
    for (int i = 0; i < peers.size(); i++) {
      final RaftPeer peer = peers.get(i);
      final RaftServer server = newRaftServer(peer, properties);
      final DataStreamServerImpl streamServer = new DataStreamServerImpl(server, properties, null);
      final DataStreamServerRpc rpc = streamServer.getServerRpc();
      if (i == 0) {
        // only the first server routes requests to peers.
        List<RaftPeer> otherPeers = new ArrayList<>(peers);
        otherPeers.remove(peers.get(i));
        rpc.addRaftPeers(otherPeers);
      }
      rpc.start();
      servers.add(streamServer);
    }
  }