{"hash": "12af614ad2c6ebf9bbcda9a49b4984c61f0fd2c2", "message": "RATIS-1127. Add a stream(RaftGroupId) method to DataStreamApi. (#248)\n\n* RATIS-1127. Add a stream(RaftGroupId) method to DataStreamApi.\r\n\r\n* Fix DataStreamBaseTest.\r\n\r\n* Fix checkstyle and some minor changes.", "file_num_lines": 350, "diff_parsed": {"added": [[57, "import java.util.Collection;"], [60, "import java.util.concurrent.CompletionException;"], [150, "  class Server {"], [151, "    private final RaftPeer peer;"], [152, "    private final RaftServer raftServer;"], [153, "    private final DataStreamServerImpl dataStreamServer;"], [154, ""], [155, "    Server(RaftPeer peer) {"], [156, "      this.peer = peer;"], [157, "      this.raftServer = newRaftServer(peer, properties);"], [158, "      this.dataStreamServer = new DataStreamServerImpl(raftServer, null);"], [159, "    }"], [160, ""], [161, "    RaftPeer getPeer() {"], [162, "      return peer;"], [163, "    }"], [164, ""], [165, "    MultiDataStreamStateMachine getStateMachine(RaftGroupId groupId) throws IOException {"], [166, "      return (MultiDataStreamStateMachine)raftServer.getStateMachine(groupId);"], [167, "    }"], [168, ""], [169, "    void start() {"], [170, "      dataStreamServer.getServerRpc().start();"], [171, "    }"], [172, ""], [173, "    void addRaftPeers(Collection<RaftPeer> peers) {"], [174, "      dataStreamServer.getServerRpc().addRaftPeers(peers);"], [175, "    }"], [176, ""], [177, "    void close() throws IOException {"], [178, "      dataStreamServer.close();"], [179, "    }"], [180, "  }"], [181, ""], [184, "  private List<Server> servers;"], [185, ""], [186, "  Server getPrimaryServer() {"], [187, "    return servers.get(0);"], [188, "  }"], [192, "      private final ConcurrentMap<RaftGroupId, MultiDataStreamStateMachine> stateMachines = new ConcurrentHashMap<>();"], [193, ""], [317, "    final List<RaftPeer> peers = Arrays.stream(MiniRaftCluster.generateIds(numServers, 0))"], [325, "      final Server server = new Server(peer);"], [330, "        server.addRaftPeers(otherPeers);"], [332, "      server.start();"], [333, "      servers.add(server);"], [338, "    return new DataStreamClientImpl(getPrimaryServer().getPeer(), properties, null);"], [342, "    for (Server server : servers) {"], [408, "    try {"], [409, "      assertHeader(out.getHeader(), dataSize);"], [410, "    } catch (Throwable e) {"], [411, "      throw new CompletionException(e);"], [415, "  void assertHeader(RaftClientRequest header, int dataSize) throws Exception {"], [416, "    final Server server = getPrimaryServer();"], [417, "    final MultiDataStreamStateMachine s = server.getStateMachine(header.getRaftGroupId());"], [418, "    final SingleDataStream stream = s.getSingleDataStream(header.getCallId());"], [419, "    final RaftClientRequest writeRequest = stream.getWriteRequest();"], [420, "    Assert.assertEquals(writeRequest.getCallId(), header.getCallId());"], [421, "    Assert.assertEquals(writeRequest.getRaftGroupId(), header.getRaftGroupId());"], [422, "    Assert.assertEquals(writeRequest.getServerId(), header.getServerId());"], [423, "    Assert.assertEquals(dataSize, stream.getByteWritten());"], [424, "  }"], [425, ""]], "deleted": [[41, "import org.apache.ratis.server.DataStreamServerRpc;"], [151, "  private List<DataStreamServerImpl> servers;"], [152, "  private List<RaftPeer> peers;"], [153, "  private ConcurrentMap<RaftGroupId, MultiDataStreamStateMachine> stateMachines;"], [280, "    peers = Arrays.stream(MiniRaftCluster.generateIds(numServers, 0))"], [285, "    stateMachines = new ConcurrentHashMap<>();"], [289, "      final RaftServer server = newRaftServer(peer, properties);"], [290, "      final DataStreamServerImpl streamServer = new DataStreamServerImpl(server, properties, null);"], [291, "      final DataStreamServerRpc rpc = streamServer.getServerRpc();"], [296, "        rpc.addRaftPeers(otherPeers);"], [298, "      rpc.start();"], [299, "      servers.add(streamServer);"], [304, "    return new DataStreamClientImpl(peers.get(0), properties, null);"], [308, "    for (DataStreamServerImpl server : servers) {"], [374, ""], [375, "    final RaftClientRequest header = out.getHeader();"], [376, "    for (MultiDataStreamStateMachine s : stateMachines.values()) {"], [377, "      final SingleDataStream stream = s.getSingleDataStream(header.getCallId());"], [378, "      if (stream == null) {"], [379, "        continue;"], [380, "      }"], [381, "      final RaftClientRequest writeRequest = stream.getWriteRequest();"], [382, "      if (writeRequest.getClientId().equals(header.getClientId())) {"], [383, "        Assert.assertEquals(writeRequest.getCallId(), header.getCallId());"], [384, "        Assert.assertEquals(writeRequest.getRaftGroupId(), header.getRaftGroupId());"], [385, "        Assert.assertEquals(writeRequest.getServerId(), header.getServerId());"], [386, "      }"], [387, "      Assert.assertEquals(dataSize, stream.getByteWritten());"]]}, "num_lines_added": 63, "num_lines_removed": 28}