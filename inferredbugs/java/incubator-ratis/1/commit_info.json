{"hash": "04992114b0209fefadfb4c6cc1d2b99d87a26fa8", "message": "Netty: Add NotLeaderException, RaftReconfiguration and RestartRaftPeer tests.", "file_num_lines": 85, "diff_parsed": {"added": [[37, "public class MiniRaftClusterWithNetty extends MiniRaftCluster.RpcBase {"], [71, "  private static NettyRpcService newNettyRpcService("], [72, "      RaftServer s, RaftConfiguration conf) {"], [73, "    final String address = getAddress(s.getId(), conf);"], [74, "    final int port = RaftUtils.newInetSocketAddress(address).getPort();"], [75, "    return new NettyRpcService(port, s);"], [76, "  }"], [77, ""], [83, "      final NettyRpcService rpc = newNettyRpcService(s, conf);"], [91, "  protected RaftServer setPeerRpc(RaftPeer peer) throws IOException {"], [93, "    final NettyRpcService rpc = newNettyRpcService(s, conf);"], [95, "    return s;"]], "deleted": [[37, "public class MiniRaftClusterWithNetty extends MiniRaftCluster {"], [76, "      final String address = getAddress(s.getId(), conf);"], [77, "      final int port = RaftUtils.newInetSocketAddress(address).getPort();"], [78, "      final NettyRpcService rpc = new NettyRpcService(port, s);"], [86, "  protected void setPeerRpc() throws IOException {"], [87, "    for(RaftPeer p : conf.getPeers()) {"], [88, "      setPeerRpc(p);"], [89, "    }"], [90, "  }"], [91, ""], [92, "  private void setPeerRpc(RaftPeer peer) throws IOException {"], [94, "    final String address = getAddress(s.getId(), conf);"], [95, "    final int port = RaftUtils.newInetSocketAddress(address).getPort();"], [96, "    final NettyRpcService rpc = new NettyRpcService(port, s);"], [119, ""], [120, "  @Override"], [121, "  public void setBlockRequestsFrom(String src, boolean block) {"], [122, "    RaftTestUtil.setBlockRequestsFrom(src, block);"], [123, "  }"]]}, "num_lines_added": 12, "num_lines_removed": 19}