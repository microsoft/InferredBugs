{"hash": "7878ddf40b8c730f31ec7205b2a1b4fc64c6f0c7", "message": "RATIS-1085. Encode a RaftClientRequest as the head of a stream request (#221)", "file_num_lines": 139, "diff_parsed": {"added": [[99, "      writeRequest = request;"], [109, "  private RaftClientRequest writeRequest;"], [143, "    DataStreamClientImpl.DataStreamOutputImpl impl = (DataStreamClientImpl.DataStreamOutputImpl) out;"], [146, ""], [147, "    // add header"], [148, "    futures.add(impl.getHeaderFuture());"], [156, "      futures.add(out.writeAsync(bf));"], [164, ""], [165, "    Assert.assertEquals(writeRequest.getClientId(), impl.getHeader().getClientId());"], [166, "    Assert.assertEquals(writeRequest.getCallId(), impl.getHeader().getCallId());"], [167, "    Assert.assertEquals(writeRequest.getRaftGroupId(), impl.getHeader().getRaftGroupId());"], [168, "    Assert.assertEquals(writeRequest.getServerId(), impl.getHeader().getServerId());"], [169, ""]], "deleted": [[142, "    //send request"], [144, "    futures.add(sendRequest(out, 1024));"], [152, "      futures.add(out.streamAsync(bf));"], [164, "  CompletableFuture<DataStreamReply> sendRequest(DataStreamOutput out, int size) {"], [165, "    // TODO RATIS-1085: create a RaftClientRequest and put it in the buffer"], [166, "    final ByteBuffer buffer = initBuffer(0, size);"], [167, "    return out.streamAsync(buffer);"], [168, "  }"], [169, ""]]}, "num_lines_added": 13, "num_lines_removed": 9}