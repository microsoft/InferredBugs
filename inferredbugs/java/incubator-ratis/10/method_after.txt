    @BeforeClass
    public static void beforeClass() {
        cluster = new LogServiceCluster(3);
        cluster.createWorkers(3);
        workers = cluster.getWorkers();
        assert(workers.size() == 3);

        RaftProperties properties = new RaftProperties();
        RaftClientConfigKeys.Rpc.setRequestTimeout(properties, TimeDuration.valueOf(15, TimeUnit.SECONDS));

        cluster.getMasters().parallelStream().forEach(master ->
            ((MetaStateMachine)master.getMetaStateMachine()).setProperties(properties));

        client = new LogServiceClient(cluster.getMetaIdentity(), properties) {
          @Override
          public LogStream createLog(LogName logName) throws IOException {
            createCount.incrementAndGet();
            return super.createLog(logName);
          }

          @Override
          public void deleteLog(LogName logName) throws IOException {
            deleteCount.incrementAndGet();
            super.deleteLog(logName);
          }

          @Override
          public List<LogInfo> listLogs() throws IOException {
            listCount.incrementAndGet();
            return super.listLogs();
          }
        };
    }