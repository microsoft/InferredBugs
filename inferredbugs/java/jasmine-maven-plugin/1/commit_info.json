{"hash": "b3d009de623152b8506496ce1eb1a392be7f3e25", "message": "it feels good to finally be able to refactor some expressiveness into this class.", "file_num_lines": 55, "diff_parsed": {"added": [[29, "\t\tif(writingAManualSpecRunnerIsNecessary()) {"], [37, "\tprivate boolean writingAManualSpecRunnerIsNecessary() {"], [38, "\t\treturn sources.getDirectory().exists() && specs.getDirectory().exists();"], [39, "\t}"], [40, ""], [42, "\t\tFile runnerDestination = new File(jasmineTargetDir,manualSpecRunnerHtmlFileName);"], [44, "\t\tString newRunnerHtml = new SpecRunnerHtmlGenerator(scriptsForRunner(), sourceEncoding).generate(ReporterType.TrivialReporter, customRunnerTemplate);"], [45, "\t\tif(newRunnerDiffersFromOldRunner(runnerDestination, newRunnerHtml)) {"], [46, "\t\t\tsaveRunner(runnerDestination, newRunnerHtml);"], [52, "\tprivate Set<String> scriptsForRunner() throws IOException {"], [53, "\t\treturn relativizesASetOfScripts.relativize(jasmineTargetDir, resolvesCompleteListOfScriptLocations.resolve(sources, specs, preloadSources));"], [54, "\t}"], [55, ""], [56, "\tprivate String existingRunner(File destination) throws IOException {"], [68, "\tprivate boolean newRunnerDiffersFromOldRunner(File runnerDestination, String newRunner) throws IOException {"], [69, "\t\treturn !StringUtils.equals(newRunner, existingRunner(runnerDestination));"], [70, "\t}"], [71, ""], [72, "\tprivate void saveRunner(File runnerDestination, String newRunner) throws IOException {"], [73, "\t\tfileUtilsWrapper.writeStringToFile(runnerDestination, newRunner, sourceEncoding);"], [74, "\t}"]], "deleted": [[29, "\t\tif(sources.getDirectory().exists() && specs.getDirectory().exists()) {"], [38, "\t\tSet<String> scripts = relativizesASetOfScripts.relativize(jasmineTargetDir, resolvesCompleteListOfScriptLocations.resolve(sources, specs, preloadSources));"], [39, ""], [40, "\t\tSpecRunnerHtmlGenerator htmlGenerator = new SpecRunnerHtmlGenerator(scripts, sourceEncoding);"], [41, "\t\tString runner = htmlGenerator.generate(ReporterType.TrivialReporter, customRunnerTemplate);"], [43, "\t\tFile destination = new File(jasmineTargetDir,manualSpecRunnerHtmlFileName);"], [44, "\t\tString existingRunner = loadExistingManualRunner(destination);"], [45, ""], [46, "\t\tif(!StringUtils.equals(runner, existingRunner)) {"], [47, "\t\t\tfileUtilsWrapper.writeStringToFile(destination, runner, sourceEncoding);"], [53, "\tprivate String loadExistingManualRunner(File destination) throws IOException {"]]}, "num_lines_added": 21, "num_lines_removed": 11}