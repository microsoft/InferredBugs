{"hash": "278ee4d9babb5abb86791211e3979fa5ed09f555", "message": "Renamed 'ForBinding' to 'Binder'. Introduced Stage. Added name package to Javadocs. Updated some random Javadocs.\n\ngit-svn-id: https://google-guice.googlecode.com/svn/trunk@150 d779f126-a31b-0410-b53b-1d3aecad763e", "file_num_lines": 612, "diff_parsed": {"added": [[41, " * implementations."], [43, " * <p>Creates several bindings by default:"], [49, " * <li>The {@link Stage} passed to the builder's constructor"], [73, "  final Stage stage;"], [74, ""], [103, "   *"], [104, "   * @param stage we're running in. If the stage is {@link Stage#PRODUCTION},"], [105, "   *  we will eagerly load container-scoped objects."], [107, "  public ContainerBuilder(Stage stage) {"], [112, "    bind(Stage.class).to(stage);"], [115, ""], [116, "    this.stage = stage;"], [117, "  }"], [118, ""], [119, "  /**"], [120, "   * Constructs a new builder for a development environment (see"], [121, "   * {@link Stage#DEVELOPMENT})."], [122, "   */"], [123, "  public ContainerBuilder() {"], [124, "    this(Stage.DEVELOPMENT);"], [271, "  public synchronized Container create()"], [287, "    createBindings(preloaders);"], [370, "  private void createBindings(List<ContextualCallable<Void>> preloaders) {"], [372, "      createBinding(builder, preloaders);"], [376, "  private <T> void createBinding(BindingBuilder<T> builder,"], [387, "    boolean preload = stage == Stage.PRODUCTION;"]], "deleted": [[36, "import java.util.Properties;"], [42, " * implementations. A binding implementation could be anything from a constant"], [43, " * value to an object in the HTTP session."], [45, " * <p>Not safe for concurrent use."], [46, " *"], [47, " * <p>Default bindings include:"], [55, " * <p>Converts constants as needed from {@code String} to any primitive type in"], [56, " * addition to {@code enum} and {@code Class<?>}."], [57, " *"], [108, "  public ContainerBuilder() {"], [257, "   * @param preload If true, the container will load all container-scoped"], [258, "   *     bindings now. If false, the container will lazily load them. Eager"], [259, "   *     loading is appropriate for production use (catch errors early and take"], [260, "   *     any performance hit up front) while lazy loading can speed development."], [265, "  public synchronized Container create(boolean preload)"], [281, "    createBindings(preload, preloaders);"], [364, "  private void createBindings(boolean preload,"], [365, "      List<ContextualCallable<Void>> preloaders) {"], [367, "      createBinding(builder, preload, preloaders);"], [371, "  private <T> void createBinding(BindingBuilder<T> builder, boolean preload,"]]}, "num_lines_added": 26, "num_lines_removed": 20}