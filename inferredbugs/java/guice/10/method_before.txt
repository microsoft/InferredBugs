  java.util.List<com.google.inject.spi.DependencyAndSource> getDependencyChain() {
    com.google.common.collect.ImmutableList.Builder<com.google.inject.spi.DependencyAndSource>
        builder = com.google.common.collect.ImmutableList.builder();
    for (int i = 0; i < dependencyStackSize; i += 2) {
      Object evenEntry = dependencyStack[i];
      Dependency<?> dependency;
      if (evenEntry instanceof com.google.inject.Key) {
        dependency = Dependency.get((com.google.inject.Key<?>) evenEntry);
      } else {
        dependency = (Dependency<?>) evenEntry;
      }
      builder.add(new com.google.inject.spi.DependencyAndSource(dependency, dependencyStack[i + 1]));
    }
    return builder.build();
  }