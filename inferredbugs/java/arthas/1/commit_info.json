{"hash": "e8225f1cbca799f56e051d28a1b38885ffd6260f", "message": "improve exec jps logic. #278", "file_num_lines": 172, "diff_parsed": {"added": [[93, "        String jps = \"jps\";"], [94, "        File jpsFile = findJps();"], [95, "        if (jpsFile != null) {"], [96, "            jps = jpsFile.getAbsolutePath();"], [101, "            command = new String[] { jps, \"-v\" };"], [103, "            command = new String[] { jps };"], [106, "        List<String> lines = ExecutingCommand.runNative(command);"], [107, ""], [108, "        int currentPid = Integer.parseInt(ProcessUtils.getPid());"], [109, "        for (String line : lines) {"], [110, "            int pid = new Scanner(line).nextInt();"], [111, "            if (pid == currentPid) {"], [112, "                continue;"], [114, "            result.put(pid, line);"]], "deleted": [[93, "        File jps = findJps();"], [94, "        if (jps == null) {"], [95, "            return result;"], [100, "            command = new String[] { jps.getAbsolutePath(), \"-v\" };"], [102, "            command = new String[] { jps.getAbsolutePath() };"], [105, "        ProcessBuilder pb = new ProcessBuilder(command);"], [106, "        try {"], [107, "            Process proc = pb.start();"], [108, "            BufferedReader stdInput = new BufferedReader(new InputStreamReader(proc.getInputStream()));"], [109, ""], [110, "            // read the output from the command"], [111, "            String line = null;"], [112, "            int currentPid = Integer.parseInt(ProcessUtils.getPid());"], [113, "            while ((line = stdInput.readLine()) != null) {"], [114, "                int pid = new Scanner(line).nextInt();"], [115, "                if (pid == currentPid) {"], [116, "                    continue;"], [117, "                }"], [118, "                result.put(pid, line);"], [120, "        } catch (Throwable e) {"], [121, "            // ignore"]]}, "num_lines_added": 14, "num_lines_removed": 21}