{"hash": "f76601b241f0ef4902d3d86d9396772777be99e2", "message": "\u589e\u52a0\u7528\u6237\u9879\u76ee\u6743\u9650\u4e0d\u901a\u8fc7\u65f6\u7684\u65e5\u5fd7", "file_num_lines": 56, "diff_parsed": {"added": [[1, "package com.luckyframe.common.utils.security;"], [2, ""], [3, "import java.util.List;"], [4, ""], [5, "import org.apache.commons.lang3.StringUtils;"], [6, "import org.slf4j.Logger;"], [7, "import org.slf4j.LoggerFactory;"], [8, ""], [9, "import com.alibaba.fastjson.JSON;"], [10, "import com.luckyframe.common.constant.PermissionConstants;"], [11, "import com.luckyframe.common.utils.MessageUtils;"], [12, ""], [13, "/**"], [14, " * permission \u5de5\u5177\u7c7b"], [15, " *"], [16, " * @author ruoyi"], [17, " */"], [18, "public class PermissionUtils"], [19, "{"], [20, "\tprivate static final Logger log = LoggerFactory.getLogger(PermissionUtils.class);"], [21, "    /**"], [22, "     * \u6743\u9650\u9519\u8bef\u6d88\u606f\u63d0\u9192"], [23, "     *"], [24, "     * @param permissionsStr \u9519\u8bef\u4fe1\u606f"], [25, "     * @return"], [26, "     */"], [27, "    public static String getMsg(String permissionsStr)"], [28, "    {"], [29, "        String permission = StringUtils.substringBetween(permissionsStr, \"[\", \"]\");"], [30, "        String msg = MessageUtils.message(\"no.view.permission\", permission);"], [31, "        if (StringUtils.endsWithIgnoreCase(permission, PermissionConstants.ADD_PERMISSION))"], [32, "        {"], [33, "            msg = MessageUtils.message(\"no.create.permission\", permission);"], [34, "        }"], [35, "        else if (StringUtils.endsWithIgnoreCase(permission, PermissionConstants.EDIT_PERMISSION))"], [36, "        {"], [37, "            msg = MessageUtils.message(\"no.update.permission\", permission);"], [38, "        }"], [39, "        else if (StringUtils.endsWithIgnoreCase(permission, PermissionConstants.REMOVE_PERMISSION))"], [40, "        {"], [41, "            msg = MessageUtils.message(\"no.delete.permission\", permission);"], [42, "        }"], [43, "        else if (StringUtils.endsWithIgnoreCase(permission, PermissionConstants.EXPORT_PERMISSION))"], [44, "        {"], [45, "            msg = MessageUtils.message(\"no.export.permission\", permission);"], [46, "        }"], [47, "        else if (StringUtils.endsWithAny(permission, new String[] { PermissionConstants.VIEW_PERMISSION, PermissionConstants.LIST_PERMISSION }))"], [48, "        {"], [49, "            msg = MessageUtils.message(\"no.view.permission\", permission);"], [50, "        }"], [51, "        return msg;"], [52, "    }"], [53, ""], [54, "\t/**"], [55, "\t * \u67e5\u8be2\u7528\u6237\u9879\u76ee\u6743\u9650"], [56, "\t * @param projectId"], [57, "\t * @return"], [58, "\t * @author Seagull"], [59, "\t * @date 2019\u5e744\u670812\u65e5"], [60, "\t */"], [61, "\tpublic static Boolean isProjectPermsPassByProjectId(Integer projectId)"], [62, "\t{"], [63, "\t\tList<Integer> projectIDList = ShiroUtils.getProjectIdForRoles();"], [64, ""], [65, "    \tBoolean result = false;"], [66, "    \t/*\u8d85\u7ea7\u7ba1\u7406\u5458\u6743\u9650*/"], [67, "    \tif(\"admin\".equals(ShiroUtils.getLoginName())){"], [68, "    \t\treturn true;"], [69, "    \t}"], [70, ""], [71, "    \tfor(Integer pId:projectIDList){"], [72, "    \t\tif(projectId==pId){"], [73, "    \t\t\tresult = true;"], [74, "    \t\t\tbreak;"], [75, "    \t\t}"], [76, "    \t}"], [77, ""], [78, "    \tif(!result){"], [79, "    \t\tlog.warn(\"\u9879\u76ee\u8bbf\u95ee\u6743\u9650\u4e0d\u901a\u8fc7\uff0c\u88ab\u8bbf\u9879\u76eeID:{},\u7528\u6237\u9879\u76ee\u6743\u9650\u5217\u8868\uff1a{}\",projectId,JSON.toJSONString(projectIDList));"], [80, "    \t}"], [81, ""], [82, "\t    return result;"], [83, "\t}"], [84, "}"]], "deleted": [[1, "package com.luckyframe.common.utils.security;"], [2, ""], [3, "import java.util.List;"], [4, ""], [5, "import org.apache.commons.lang3.StringUtils;"], [6, ""], [7, "import com.luckyframe.common.constant.PermissionConstants;"], [8, "import com.luckyframe.common.utils.MessageUtils;"], [9, ""], [10, "/**"], [11, " * permission \u5de5\u5177\u7c7b"], [12, " *"], [13, " * @author ruoyi"], [14, " */"], [15, "public class PermissionUtils"], [16, "{"], [17, "    /**"], [18, "     * \u6743\u9650\u9519\u8bef\u6d88\u606f\u63d0\u9192"], [19, "     *"], [20, "     * @param permissionsStr \u9519\u8bef\u4fe1\u606f"], [21, "     * @return"], [22, "     */"], [23, "    public static String getMsg(String permissionsStr)"], [24, "    {"], [25, "        String permission = StringUtils.substringBetween(permissionsStr, \"[\", \"]\");"], [26, "        String msg = MessageUtils.message(\"no.view.permission\", permission);"], [27, "        if (StringUtils.endsWithIgnoreCase(permission, PermissionConstants.ADD_PERMISSION))"], [28, "        {"], [29, "            msg = MessageUtils.message(\"no.create.permission\", permission);"], [30, "        }"], [31, "        else if (StringUtils.endsWithIgnoreCase(permission, PermissionConstants.EDIT_PERMISSION))"], [32, "        {"], [33, "            msg = MessageUtils.message(\"no.update.permission\", permission);"], [34, "        }"], [35, "        else if (StringUtils.endsWithIgnoreCase(permission, PermissionConstants.REMOVE_PERMISSION))"], [36, "        {"], [37, "            msg = MessageUtils.message(\"no.delete.permission\", permission);"], [38, "        }"], [39, "        else if (StringUtils.endsWithIgnoreCase(permission, PermissionConstants.EXPORT_PERMISSION))"], [40, "        {"], [41, "            msg = MessageUtils.message(\"no.export.permission\", permission);"], [42, "        }"], [43, "        else if (StringUtils.endsWithAny(permission, new String[] { PermissionConstants.VIEW_PERMISSION, PermissionConstants.LIST_PERMISSION }))"], [44, "        {"], [45, "            msg = MessageUtils.message(\"no.view.permission\", permission);"], [46, "        }"], [47, "        return msg;"], [48, "    }"], [49, ""], [50, "\t/**"], [51, "\t * \u67e5\u8be2\u7528\u6237\u9879\u76ee\u6743\u9650"], [52, "\t * @param projectId"], [53, "\t * @return"], [54, "\t * @author Seagull"], [55, "\t * @date 2019\u5e744\u670812\u65e5"], [56, "\t */"], [57, "\tpublic static Boolean isProjectPermsPassByProjectId(Integer projectId)"], [58, "\t{"], [59, "\t\tList<Integer> projectIDList = ShiroUtils.getSysUser().getProjectIdForRoles();"], [60, ""], [61, "    \tBoolean result = false;"], [62, "    \t/*\u8d85\u7ea7\u7ba1\u7406\u5458\u6743\u9650*/"], [63, "    \tif(\"admin\".equals(ShiroUtils.getLoginName())){"], [64, "    \t\treturn true;"], [65, "    \t}"], [66, ""], [67, "    \tfor(Integer pId:projectIDList){"], [68, "    \t\tif(projectId==pId){"], [69, "    \t\t\tresult = true;"], [70, "    \t\t\tbreak;"], [71, "    \t\t}"], [72, "    \t}"], [73, ""], [74, "\t    return result;"], [75, "\t}"], [76, "}"]]}, "num_lines_added": 84, "num_lines_removed": 76}