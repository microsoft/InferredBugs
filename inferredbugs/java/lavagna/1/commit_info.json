{"hash": "e88f117f56c20ef1851b58ad772b9a3931f21c0e", "message": "WORK-300 improve card autocomplete search", "file_num_lines": 236, "diff_parsed": {"added": [[35, "import java.util.Set;"], [92, "\t\t\t\t.createNewBoard(\"test-board\", \"TESTBRD\", null, projectService.findByShortName(\"TEST\").getId());"], [93, "\t\tboard = boardRepository.findBoardByShortName(\"TESTBRD\");"], [295, "\t\tMap<String, Integer> res = cardRepository.findCardsIds(Arrays.asList(\"TESTBRD-\" + c1.getSequence(),"], [296, "\t\t\t\t\"TESTBRD-\" + c2.getSequence(), \"TESTBRD-\" + c3.getSequence()));"], [297, "\t\tAssert.assertEquals(res.get(\"TESTBRD-\" + c1.getSequence()).intValue(), c1.getId());"], [298, "\t\tAssert.assertEquals(res.get(\"TESTBRD-\" + c2.getSequence()).intValue(), c2.getId());"], [299, "\t\tAssert.assertEquals(res.get(\"TESTBRD-\" + c3.getSequence()).intValue(), c3.getId());"], [300, "\t}"], [301, ""], [302, "\t@Test"], [303, "\tpublic void testFindCardBy() {"], [304, "\t\tCard c1 = cardService.createCard(\"card1\", col1.getId(), new Date(), user);"], [305, ""], [306, "\t\t// find by card \"title\""], [307, "\t\tAssert.assertEquals(c1.getId(), cardRepository.findCardBy(\"card1\", null).get(0).getId());"], [308, ""], [309, "\t\t// find by card sequenceNr"], [310, "\t\tAssert.assertEquals(c1.getId(), cardRepository.findCardBy(Integer.toString(c1.getSequence()), null).get(0).getId());"], [311, ""], [312, "\t\t// find by board short name"], [313, "\t\tAssert.assertEquals(c1.getId(), cardRepository.findCardBy(\"TESTBRD\", null).get(0).getId());"], [314, "\t\tAssert.assertEquals(c1.getId(), cardRepository.findCardBy(\"TESTBRD-\", null).get(0).getId());"], [315, ""], [316, "\t\t// find by board short name + seq nr"], [317, "\t\tAssert.assertEquals(c1.getId(), cardRepository.findCardBy(\"TESTBRD-\" + c1.getSequence(), null).get(0).getId());"], [318, "\t}"], [319, ""], [320, "\t@Test"], [321, "\tpublic void testFindCardByInProject() {"], [322, "\t\tCard c1 = cardService.createCard(\"card1\", col1.getId(), new Date(), user);"], [323, ""], [324, "\t\tSet<Integer> projects = Collections.singleton(board.getProjectId());"], [325, ""], [326, "\t\t// find by card \"title\""], [327, "\t\tAssert.assertEquals(c1.getId(), cardRepository.findCardBy(\"card1\", projects).get(0).getId());"], [328, ""], [329, "\t\t// find by card sequenceNr"], [330, "\t\tAssert.assertEquals(c1.getId(), cardRepository.findCardBy(Integer.toString(c1.getSequence()), projects).get(0).getId());"], [331, ""], [332, "\t\t// find by board short name"], [333, "\t\tAssert.assertEquals(c1.getId(), cardRepository.findCardBy(\"TESTBRD\", projects).get(0).getId());"], [334, "\t\tAssert.assertEquals(c1.getId(), cardRepository.findCardBy(\"TESTBRD-\", projects).get(0).getId());"], [335, ""], [336, "\t\t// find by board short name + seq nr"], [337, "\t\tAssert.assertEquals(c1.getId(), cardRepository.findCardBy(\"TESTBRD-\" + c1.getSequence(), projects).get(0).getId());"]], "deleted": [[91, "\t\t\t\t.createNewBoard(\"test-board\", \"TEST-BRD\", null, projectService.findByShortName(\"TEST\").getId());"], [92, "\t\tboard = boardRepository.findBoardByShortName(\"TEST-BRD\");"], [294, "\t\tMap<String, Integer> res = cardRepository.findCardsIds(Arrays.asList(\"TEST-BRD-\" + c1.getSequence(),"], [295, "\t\t\t\t\"TEST-BRD-\" + c2.getSequence(), \"TEST-BRD-\" + c3.getSequence()));"], [296, "\t\tAssert.assertEquals(res.get(\"TEST-BRD-\" + c1.getSequence()).intValue(), c1.getId());"], [297, "\t\tAssert.assertEquals(res.get(\"TEST-BRD-\" + c2.getSequence()).intValue(), c2.getId());"], [298, "\t\tAssert.assertEquals(res.get(\"TEST-BRD-\" + c3.getSequence()).intValue(), c3.getId());"]]}, "num_lines_added": 46, "num_lines_removed": 7}