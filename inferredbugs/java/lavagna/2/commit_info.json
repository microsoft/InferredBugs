{"hash": "a7a5b3469dfa03ac5c3c4b85f611a0c6541a556f", "message": "#32: add imap support, clean up", "file_num_lines": 174, "diff_parsed": {"added": [[23, "import org.springframework.integration.mail.ImapMailReceiver;"], [50, "    private final EventEmitter eventEmitter;"], [51, "    private final BoardRepository boardRepository;"], [54, "    private final static String DEFAULT_INBOX = \"inbox\";"], [59, "                             UserRepository userRepository,"], [60, "                             EventEmitter eventEmitter,"], [61, "                             BoardRepository boardRepository) {"], [66, "        this.eventEmitter = eventEmitter;"], [67, "        this.boardRepository = boardRepository;"], [84, "                    String deliveredTo = getDeliveredTo(message);"], [88, "                            String from = getFrom(message);"], [112, ""], [113, "        emitCreateCard(card, user);"], [148, "        String inboxFolder = getInboxFolder(config);"], [153, "            + \"/\" + inboxFolder.toUpperCase();"], [172, "        String sanitizedUsername = sanitizeUsername(config.getInboundUser());"], [173, "        String inboxFolder = getInboxFolder(config);"], [174, ""], [175, "        String url = config.getInboundProtocol() + \"://\""], [176, "            + sanitizedUsername + \":\" + config.getInboundPassword() + \"@\""], [177, "            + config.getInboundServer() + \":\" + config.getInboundPort()"], [178, "            + \"/\" + inboxFolder.toLowerCase();"], [179, ""], [180, "        ImapMailReceiver receiver = new ImapMailReceiver(url);"], [181, "        receiver.setShouldMarkMessagesAsRead(true);"], [182, "        receiver.setShouldDeleteMessages(false);"], [183, ""], [184, "        Properties mailProperties = new Properties();"], [185, "        if(config.getInboundProtocol().equals(\"imaps\")) {"], [186, "            mailProperties.setProperty(\"mail.pop3.socketFactory.class\",\"javax.net.ssl.SSLSocketFactory\");"], [187, "            mailProperties.setProperty(\"mail.pop3.socketFactory.fallback\", \"false\");"], [188, "        }"], [189, "        mailProperties.setProperty(\"mail.store.protocol\", config.getInboundProtocol());"], [190, "        mailProperties.setProperty(\"mail.debug\", \"true\");"], [191, "        mailProperties.putAll(properties);"], [192, "        receiver.setJavaMailProperties(mailProperties);"], [193, ""], [194, "        receiver.afterPropertiesSet();"], [195, ""], [196, "        return receiver;"], [197, "    }"], [198, ""], [199, "    private String getInboxFolder(ProjectMailTicketConfigData config) {"], [200, "        return config.getInboundInboxFolder() != null && config.getInboundInboxFolder().trim().length() > 0 ?"], [201, "            config.getInboundInboxFolder() :"], [202, "            DEFAULT_INBOX;"], [208, ""], [209, "    private String getFrom(MimeMessage message) throws MessagingException {"], [210, "        Address[] froms = message.getFrom();"], [211, "        return froms == null ? null : ((InternetAddress) froms[0]).getAddress();"], [212, "    }"], [213, ""], [214, "    private String getDeliveredTo(MimeMessage message) throws MessagingException {"], [215, "        return message.getHeader(\"Delivered-To\", \"\");"], [216, "    }"], [217, ""], [218, "    private void emitCreateCard(Card createdCard, User user) {"], [219, "        ProjectAndBoard projectAndBoard = boardRepository.findProjectAndBoardByColumnId(createdCard.getColumnId());"], [220, "        eventEmitter.emitCreateCard(projectAndBoard.getProject().getShortName(), projectAndBoard.getBoard()"], [221, "            .getShortName(), createdCard.getColumnId(), createdCard, user);"], [222, "    }"]], "deleted": [[23, "import org.springframework.integration.mail.AbstractMailReceiver;"], [56, "                             UserRepository userRepository) {"], [77, "                    String deliveredTo = message.getHeader(\"Delivered-To\", \"\");"], [81, "                            Address[] froms = message.getFrom();"], [82, "                            String from = froms == null ? null : ((InternetAddress) froms[0]).getAddress();"], [144, "            + \"/INBOX\";"], [163, "        return null;"]]}, "num_lines_added": 61, "num_lines_removed": 7}