{"hash": "d8116281f6b114bd645168a9c236bc7f782413ff", "message": "#32: initial API work, refactoring", "file_num_lines": 68, "diff_parsed": {"added": [[21, "import io.lavagna.model.ProjectMailTicketConfigData;"], [27, "import java.util.*;"], [41, "    public ProjectMailTicketConfig findConfig(final int id) {"], [42, "        return queries.findConfigById(id);"], [43, "    }"], [44, ""], [45, "    public ProjectMailTicket findTicket(final int id) {"], [46, "        return queries.findTicketById(id);"], [47, "    }"], [48, ""], [49, "    @Transactional(readOnly = false)"], [50, "    public int addConfig(final String name, final int projectId, final ProjectMailTicketConfigData config, String properties) {"], [51, "        return queries.addConfig(name, projectId, config.toString(), properties);"], [52, "    }"], [53, ""], [54, "    public ProjectMailTicketConfig findLastCreatedConfig() {"], [55, "        return queries.findLastCreatedConfig();"], [56, "    }"], [57, ""], [58, "    @Transactional(readOnly = false)"], [59, "    public int updateConfig(final int id, final String name, final boolean enabled, final ProjectMailTicketConfigData config, String properties, final int projectId) {"], [60, "        return queries.updateConfig(id, name, enabled, config.toString(), properties, projectId);"], [61, "    }"], [62, ""], [63, "    @Transactional(readOnly = false)"], [64, "    public int addTicket(final String name, final int columnId, final int configId, String metadata) {"], [65, "        return queries.addTicket(name, columnId, configId, metadata);"], [66, "    }"], [67, ""], [68, "    public ProjectMailTicket findLastCreatedTicket() {"], [69, "        return queries.findLastCreatedTicket();"], [70, "    }"], [71, ""], [72, "    @Transactional(readOnly = false)"], [73, "    public int updateTicket(final int id, final String name, final boolean enabled, final int columnId, final int configId, String metadata) {"], [74, "        return queries.updateTicket(id, name, enabled, columnId, configId, metadata);"], [75, "    }"], [76, ""], [78, "        return aggregateByConfig(queries.findAllConfigs(), queries.findAllTickets());"], [79, "    }"], [80, ""], [81, "    public List<ProjectMailTicketConfig> findAllByProject(final int projectId) {"], [82, "        return aggregateByConfig(queries.findConfigsByProject(projectId), queries.findAllByProject(projectId));"], [83, "    }"], [85, "    private List<ProjectMailTicketConfig> aggregateByConfig(List<ProjectMailTicketConfig> configs, List<ProjectMailTicket> tickets) {"], [87, "        for(ProjectMailTicket ticketConfig: tickets) {"]], "deleted": [[26, "import java.util.ArrayList;"], [27, "import java.util.HashMap;"], [28, "import java.util.List;"], [29, "import java.util.Map;"], [44, "        List<ProjectMailTicketConfig> configs = queries.findAllConfigs();"], [45, "        List<ProjectMailTicket> ticketConfigs = queries.findAllTickets();"], [48, "        for(ProjectMailTicket ticketConfig: ticketConfigs) {"]]}, "num_lines_added": 46, "num_lines_removed": 7}