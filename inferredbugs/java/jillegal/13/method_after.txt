 @SuppressWarnings("unchecked")
	@Override
	protected void init() {
		super.init();
		
		int arrayIndexScale = JvmUtil.arrayIndexScale(elementType);
		long arrayIndexStartAddress = arrayStartAddress + JvmUtil.arrayBaseOffset(elementType);

		// All index in object pool array header point to allocated objects 
		for (long l = 0; l < objectCount; l++) {
			directMemoryService.putLong(
					arrayIndexStartAddress + (l * arrayIndexScale), 
					JvmUtil.toJvmAddress((objectsStartAddress + (l * objectSize))));
		}

		long sourceAddress = offHeapSampleObjectAddress + 4;
		long copySize = objectSize - 4;
		// Copy sample object to allocated memory region for each object
		for (long l = 0; l < objectCount; l++) {
			long targetAddress = objectsStartAddress + (l * objectSize);
			directMemoryService.putInt(targetAddress, 0);
			directMemoryService.copyMemory(sourceAddress, targetAddress + 4, copySize);
		}

		this.objectArray = (T[]) directMemoryService.getObject(arrayStartAddress);
	}