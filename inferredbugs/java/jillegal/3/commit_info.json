{"hash": "2a6ab084058b602149ccef4a5cca33d552ba68c4", "message": "jillegal impl for version 2.2-SNAPSHOT", "file_num_lines": 165, "diff_parsed": {"added": [[38, "\tpublic EagerReferencedObjectOffHeapPool(Class<T> elementType, long objectCount,"], [60, "\t\tlong addressMod = diffBetweenArrayAndObjectStartAddresses % JvmUtil.OBJECT_ADDRESS_SENSIVITY;"], [62, "\t\t\tobjectsStartAddress += (JvmUtil.OBJECT_ADDRESS_SENSIVITY - addressMod);"], [107, "\t\treturn takeObject(objectArray[(int) currentIndex]);"], [182, "\tprotected void init(Class<T> elementType, long objectCount,"], [185, "\t\tif (objectCount > Integer.MAX_VALUE) {"], [186, "\t\t\tthrow"], [187, "\t\t\t\tnew IllegalArgumentException("], [188, "\t\t\t\t\t\t\"Maximum \" + Integer.MAX_VALUE + \" object are alloved for \" +"], [189, "\t\t\t\t\t\t\"EagerReferencedObjectOffHeapPool\");"], [190, "\t\t}"], [194, "\t\t\t\tarraySize + (objectCount * objectSize) + JvmUtil.OBJECT_ADDRESS_SENSIVITY; // Extra memory for possible aligning;"]], "deleted": [[29, "\tprotected int currentIndex;"], [39, "\tpublic EagerReferencedObjectOffHeapPool(Class<T> elementType, int objectCount,"], [54, "\t\tthis.currentIndex = 0;"], [55, ""], [63, "\t\tlong addressMod = diffBetweenArrayAndObjectStartAddresses % JvmUtil.getAddressSize();"], [65, "\t\t\tobjectsStartAddress += (JvmUtil.getAddressSize() - addressMod);"], [110, "\t\treturn takeObject(objectArray[currentIndex]);"], [185, "\tprotected void init(Class<T> elementType, int objectCount,"], [191, "\t\t\t\tarraySize + (objectCount * objectSize) + JvmUtil.getAddressSize(); // Extra memory for possible aligning;"]]}, "num_lines_added": 12, "num_lines_removed": 9}