{"hash": "61076952a80ae19b24c5f9935bc1490d8e5047cb", "message": "Fix duplicate tokens on ForStatement & WhileStatement", "file_num_lines": 1129, "diff_parsed": {"added": [[478, "    StatementList body = getStatementListFromSuite(suite);"], [488, "    return new IfStatementImpl(ifToken, expression(condition), colon, suiteNewLine(suite), suiteIndent(suite), body, suiteDedent(suite), elifBranches, elseStatement);"], [496, "    StatementList body = getStatementListFromSuite(suite);"], [498, "    return new IfStatementImpl(elifToken, expression(condition), colonToken, suiteNewLine(suite), suiteIndent(suite), body, suiteDedent(suite));"], [504, "    StatementList body = getStatementListFromSuite(astNode);"], [505, "    return new ElseStatementImpl(elseToken, colon, suiteNewLine(astNode), suiteIndent(astNode), body, suiteDedent(astNode));"], [545, "      returnType, colon, suiteNewLine(suite), suiteIndent(suite), body, suiteDedent(suite),"], [546, "      isMethodDefinition(astNode), toPyToken(DocstringExtractor.extractDocstring(astNode)));"], [588, "      colon, suiteNewLine(suite), suiteIndent(suite), body, suiteDedent(suite), toPyToken(DocstringExtractor.extractDocstring(astNode)));"], [617, "    Token lastIndent = firstSuite == lastSuite ? null : suiteIndent(lastSuite);"], [618, "    Token lastNewLine = firstSuite == lastSuite ? null : suiteNewLine(lastSuite);"], [619, "    Token lastDedent = firstSuite == lastSuite ? null : suiteDedent(lastSuite);"], [620, "    StatementList elseBody = firstSuite == lastSuite ? null : getStatementListFromSuite(lastSuite);"], [621, "    return new ForStatementImpl(forStatementNode, forKeyword, expressions, inKeyword, testExpressions, colon, suiteNewLine(firstSuite), suiteIndent(firstSuite),"], [622, "      body, suiteDedent(firstSuite), elseKeyword, elseColonKeyword, lastNewLine, lastIndent, elseBody, lastDedent, asyncToken);"], [639, "    Token lastIndent = firstSuite == lastSuite ? null : suiteIndent(lastSuite);"], [640, "    Token lastNewLine = firstSuite == lastSuite ? null : suiteNewLine(lastSuite);"], [641, "    Token lastDedent = firstSuite == lastSuite ? null : suiteDedent(lastSuite);"], [642, "    StatementList elseBody = firstSuite == lastSuite ? null : getStatementListFromSuite(lastSuite);"], [643, "    return new WhileStatementImpl(astNode, whileKeyword, condition, colon, suiteNewLine(firstSuite), suiteIndent(firstSuite),"], [644, "      body, suiteDedent(firstSuite), elseKeyword, elseColonKeyword, lastNewLine, lastIndent, elseBody, lastDedent);"], [701, "    StatementList body = getStatementListFromSuite(firstSuite);"], [713, "      StatementList finallyBody = getStatementListFromSuite(finallySuite);"], [714, "      finallyClause = new FinallyClauseImpl(toPyToken(finallyNode.getToken()), finallyColon,"], [715, "        suiteNewLine(finallySuite), suiteIndent(finallySuite), finallyBody, suiteDedent(finallySuite));"], [722, "    return new TryStatementImpl(astNode, tryKeyword, colon, suiteNewLine(firstSuite), suiteIndent(firstSuite), body, suiteDedent(firstSuite),"], [723, "      exceptClauseTrees, finallyClause, elseStatementTree);"], [737, "    StatementList body = getStatementListFromSuite(suite);"], [738, "    return new WithStatementImpl(withStmtNode, withKeyword, withItems, colon, suiteNewLine(suite), suiteIndent(suite), body, suiteDedent(suite), asyncKeyword);"], [1254, ""], [1255, "  private static Token suiteIndent(AstNode suite) {"], [1256, "    return suite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.INDENT).getToken());"], [1257, "  }"], [1258, ""], [1259, "  private static Token suiteNewLine(AstNode suite) {"], [1260, "    return suite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.NEWLINE).getToken());"], [1261, "  }"], [1262, ""], [1263, "  private static Token suiteDedent(AstNode suite) {"], [1264, "    return suite.getFirstChild(PythonTokenType.DEDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.DEDENT).getToken());"], [1265, "  }"]], "deleted": [[478, "    Token indent = suite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.INDENT).getToken());"], [479, "    Token newLine = suite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.NEWLINE).getToken());"], [480, "    Token dedent = suite.getFirstChild(PythonTokenType.DEDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.DEDENT).getToken());"], [481, "    StatementList statements = getStatementListFromSuite(suite);"], [491, "    return new IfStatementImpl(ifToken, expression(condition), colon, newLine, indent, statements, dedent, elifBranches, elseStatement);"], [500, "    Token newLineToken = suite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.NEWLINE).getToken());"], [501, "    Token indentToken = suite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.INDENT).getToken());"], [502, "    Token dedentToken = suite.getFirstChild(PythonTokenType.DEDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.DEDENT).getToken());"], [503, "    StatementList statements = getStatementListFromSuite(suite);"], [504, "    return new IfStatementImpl(elifToken, expression(condition), colonToken, newLineToken, indentToken, statements, dedentToken);"], [510, "    Token indent = astNode.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(astNode.getFirstChild(PythonTokenType.INDENT).getToken());"], [511, "    Token newLine = astNode.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(astNode.getFirstChild(PythonTokenType.NEWLINE).getToken());"], [512, "    Token dedent = astNode.getFirstChild(PythonTokenType.DEDENT) == null ? null : toPyToken(astNode.getFirstChild(PythonTokenType.DEDENT).getToken());"], [513, "    StatementList statements = getStatementListFromSuite(astNode);"], [514, "    return new ElseStatementImpl(elseToken, colon, newLine, indent, statements, dedent);"], [535, "    Token newLine = suite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.NEWLINE).getToken());"], [536, "    Token indent = suite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.INDENT).getToken());"], [537, "    Token dedent = suite.getFirstChild(PythonTokenType.DEDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.DEDENT).getToken());"], [557, "      returnType, colon, newLine, indent, body, dedent, isMethodDefinition(astNode), toPyToken(DocstringExtractor.extractDocstring(astNode)));"], [594, "    Token indent = suite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.INDENT).getToken());"], [595, "    Token newLine = suite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.NEWLINE).getToken());"], [596, "    Token dedent = suite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.DEDENT).getToken());"], [602, "      colon, newLine, indent, body, dedent, toPyToken(DocstringExtractor.extractDocstring(astNode)));"], [622, "    Token firstIndent = firstSuite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(firstSuite.getFirstChild(PythonTokenType.INDENT).getToken());"], [623, "    Token firstNewLine = firstSuite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(firstSuite.getFirstChild(PythonTokenType.NEWLINE).getToken());"], [624, "    Token firstDedent = firstSuite.getFirstChild(PythonTokenType.DEDENT) == null ? null : toPyToken(firstSuite.getFirstChild(PythonTokenType.DEDENT).getToken());"], [627, "    Token lastIndent = lastSuite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(lastSuite.getFirstChild(PythonTokenType.INDENT).getToken());"], [628, "    Token lastNewLine = lastSuite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(lastSuite.getFirstChild(PythonTokenType.NEWLINE).getToken());"], [629, "    Token lastDedent = lastSuite.getFirstChild(PythonTokenType.DEDENT) == null ? null : toPyToken(lastSuite.getFirstChild(PythonTokenType.DEDENT).getToken());"], [637, "    StatementList elseBody = lastSuite == firstSuite ? null : getStatementListFromSuite(lastSuite);"], [638, "    return new ForStatementImpl(forStatementNode, forKeyword, expressions, inKeyword, testExpressions, colon, firstNewLine, firstIndent,"], [639, "      body, firstDedent, elseKeyword, elseColonKeyword, lastNewLine, lastIndent, elseBody, lastDedent, asyncToken);"], [647, "    Token firstIndent = firstSuite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(firstSuite.getFirstChild(PythonTokenType.INDENT).getToken());"], [648, "    Token firstNewLine = firstSuite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(firstSuite.getFirstChild(PythonTokenType.NEWLINE).getToken());"], [649, "    Token firstDedent = firstSuite.getFirstChild(PythonTokenType.DEDENT) == null ? null : toPyToken(firstSuite.getFirstChild(PythonTokenType.DEDENT).getToken());"], [652, "    Token lastIndent = lastSuite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(lastSuite.getFirstChild(PythonTokenType.INDENT).getToken());"], [653, "    Token lastNewLine = lastSuite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(lastSuite.getFirstChild(PythonTokenType.NEWLINE).getToken());"], [654, "    Token lastDedent = lastSuite.getFirstChild(PythonTokenType.DEDENT) == null ? null : toPyToken(lastSuite.getFirstChild(PythonTokenType.DEDENT).getToken());"], [662, "    StatementList elseBody = lastSuite == firstSuite ? null : getStatementListFromSuite(lastSuite);"], [663, "    return new WhileStatementImpl(astNode, whileKeyword, condition, colon, firstNewLine, firstIndent,"], [664, "      body, firstDedent, elseKeyword, elseColonKeyword, lastNewLine, lastIndent, elseBody, lastDedent);"], [721, "    Token indent = firstSuite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(firstSuite.getFirstChild(PythonTokenType.INDENT).getToken());"], [722, "    Token newLine = firstSuite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(firstSuite.getFirstChild(PythonTokenType.NEWLINE).getToken());"], [723, "    Token dedent = firstSuite.getFirstChild(PythonTokenType.DEDENT) == null ? null : toPyToken(firstSuite.getFirstChild(PythonTokenType.DEDENT).getToken());"], [724, "    StatementList tryBody = getStatementListFromSuite(firstSuite);"], [736, "      StatementList body = getStatementListFromSuite(finallySuite);"], [737, "      Token finallyIndent = finallySuite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(finallySuite.getFirstChild(PythonTokenType.INDENT).getToken());"], [738, "      Token finallyNewLine = finallySuite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(finallySuite.getFirstChild(PythonTokenType.NEWLINE).getToken());"], [739, "      Token finallyDedent = finallySuite.getFirstChild(PythonTokenType.DEDENT) == null ? null : toPyToken(finallySuite.getFirstChild(PythonTokenType.DEDENT).getToken());"], [740, "      finallyClause = new FinallyClauseImpl(toPyToken(finallyNode.getToken()), finallyColon, finallyNewLine, finallyIndent, body, finallyDedent);"], [747, "    return new TryStatementImpl(astNode, tryKeyword, colon, newLine, indent, tryBody, dedent, exceptClauseTrees, finallyClause, elseStatementTree);"], [760, "    Token indent = suite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.INDENT).getToken());"], [761, "    Token newLine = suite.getFirstChild(PythonTokenType.INDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.NEWLINE).getToken());"], [762, "    Token dedent = suite.getFirstChild(PythonTokenType.DEDENT) == null ? null : toPyToken(suite.getFirstChild(PythonTokenType.DEDENT).getToken());"], [764, "    StatementList statements = getStatementListFromSuite(suite);"], [765, "    return new WithStatementImpl(withStmtNode, withKeyword, withItems, colon, newLine, indent, statements, dedent, asyncKeyword);"]]}, "num_lines_added": 41, "num_lines_removed": 56}