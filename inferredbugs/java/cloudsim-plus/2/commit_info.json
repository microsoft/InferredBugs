{"hash": "987df4cf518efc55b6c1a9e9fc7471f835d5d02c", "message": "- Added the method void submitCloudletList(List<? extends Cloudlet> list, Vm vm, double submissionDelay) to the DatacenterBroker\n- Added a description field to Vm, which is an optional text that a researcher can use to provide\n  additional information for a VM (such as metadata or debugging information)", "file_num_lines": 196, "diff_parsed": {"added": [[34, "import java.util.Optional;"], [69, "    /**"], [70, "     * @todo The class has multiple responsibilities."], [71, "     * The fault injection mechanism must be separated from"], [72, "     * the fault recovery."], [73, "     * The cloner methods are fault recovery."], [74, "     *"], [75, "     */"], [148, "        Log.printFormattedLine(\"\\t%.2f: Generated %d PEs failures for %s\", getSimulation().clock(), numberOfFailedPes, host);"], [150, "            System.out.printf(\"\\t      Number of VMs: %d\\n\", host.getVmList().size());"], [169, "        Log.printFormattedLine(\"\\t%.2f: %s -> All the %d PEs failed, affecting all its %d VMs.\\n\","], [170, "                getSimulation().clock(), host, host.getNumberOfPes(), host.getVmList().size());"], [180, "                \"\\t%.2f: %s -> Number of failed PEs is less than PEs required by all its %d VMs, thus it doesn't affect any VM.\","], [181, "                getSimulation().clock(), host, host.getVmList().size());"], [182, "        Log.printFormattedLine(\"\\t      %s -> Total PEs: %d | Failed PEs: %d | Working PEs: %d | Current PEs required by VMs: %d.\\n\","], [183, "                host, host.getNumberOfPes(), host.getNumberOfFailedPes(), host.getNumberOfWorkingPes(),"], [190, "        Vm vm = null;"], [196, "                \"\\t%.2f: %s -> %d PEs failed, from a total of %d PEs. There are %d PEs working.\","], [197, "                getSimulation().clock(), host, host.getNumberOfFailedPes(),"], [204, "            vm = host.getVmList().get(i);"], [241, "        broker.submitVm(clone);"], [242, ""], [246, "        Log.printFormattedLine(\"\\n\\t #Vm %d is being destroying...\", vm.getId());"], [247, ""], [249, "        Log.printFormattedLine(\"#Vm %d was destroyed. \\n\", vm.getId());"]], "deleted": [[140, "        Log.printFormattedLine(\"\\t%.2f: Generated %d PEs failures for Host %d\", getSimulation().clock(), numberOfFailedPes, host.getId());"], [142, "            System.out.printf(\"\\t      Number of VMs: %d\\n\", host.getId(), host.getVmList().size());"], [161, "        Log.printFormattedLine(\"\\t%.2f: Host %d -> All the %d PEs failed, affecting all its %d VMs.\\n\","], [162, "                getSimulation().clock(), host.getId(), host.getNumberOfPes(), host.getVmList().size());"], [172, "                \"\\t%.2f: Host %d -> Number of failed PEs is less than PEs required by all its %d VMs, thus it doesn't affect any VM.\","], [173, "                getSimulation().clock(), host.getId(), host.getVmList().size());"], [174, "        Log.printFormattedLine(\"\\t      Host %d -> Total PEs: %d | Failed PEs: %d | Working PEs: %d | Current PEs required by VMs: %d.\\n\","], [175, "                host.getId(), host.getNumberOfPes(), host.getNumberOfFailedPes(), host.getNumberOfWorkingPes(),"], [187, "                \"\\t%.2f: Host %d -> %d PEs failed, from a total of %d PEs. There are %d PEs working.\","], [188, "                getSimulation().clock(), host.getId(), host.getNumberOfFailedPes(),"], [195, "            Vm vm = host.getVmList().get(i);"], [232, "        broker.submitVm(clone);"], [233, ""]]}, "num_lines_added": 25, "num_lines_removed": 13}