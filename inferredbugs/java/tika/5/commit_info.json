{"hash": "7d91d377a95febaaed68252bf7efaa3c2579db6f", "message": "TIKA-40 - Tika needs to support diverse character encodings\n    - Use ICU4J to parse text content\n    - Support Metadata.CONTENT_ENCODING hints in TXTParser\n    - Added specific test cases for TXTParser\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/tika/trunk@583443 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 35, "diff_parsed": {"added": [[19, "import java.io.BufferedInputStream;"], [27, "import com.ibm.icu.text.CharsetDetector;"], [28, "import com.ibm.icu.text.CharsetMatch;"], [29, ""], [37, "        CharsetDetector detector = new CharsetDetector();"], [38, ""], [39, "        // Use the declared character encoding, if available"], [40, "        String encoding = metadata.get(Metadata.CONTENT_ENCODING);"], [41, "        if (encoding != null) {"], [42, "            detector.setDeclaredEncoding(encoding);"], [43, "        }"], [45, "        // CharsetDetector expects a stream to support marks"], [46, "        if (!stream.markSupported()) {"], [47, "            stream = new BufferedInputStream(stream);"], [48, "        }"], [49, ""], [50, "        detector.setText(stream);"], [51, ""], [52, "        CharsetMatch match = detector.detect();"], [53, "        if (match == null) {"], [54, "            throw new TikaException(\"Unable to detect character encoding\");"], [55, "        }"], [57, "        metadata.set(Metadata.CONTENT_TYPE, \"text/plain\");"], [58, "        metadata.set(Metadata.CONTENT_ENCODING, match.getName());"], [59, "        String language = match.getLanguage();"], [60, "        if (language != null) {"], [61, "            metadata.set(Metadata.CONTENT_LANGUAGE, match.getLanguage());"], [62, "            metadata.set(Metadata.LANGUAGE, match.getLanguage());"], [65, "        return match.getString();"]], "deleted": [[19, "import java.io.BufferedReader;"], [22, "import java.io.InputStreamReader;"], [35, "        StringBuilder sb = new StringBuilder();"], [36, "        BufferedReader br = new BufferedReader(new InputStreamReader(stream));"], [38, "        int charAsInt;"], [40, "        while ((charAsInt = br.read()) != -1) {"], [41, "            sb.append((char) charAsInt);"], [44, "        return sb.toString();"]]}, "num_lines_added": 29, "num_lines_removed": 8}