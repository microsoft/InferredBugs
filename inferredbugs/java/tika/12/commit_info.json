{"hash": "0a60ac05ca164097cf5380fc6ae122be55197f35", "message": "TIKA-269: Ease of use -facade for Tika\n\nUse the new facade to simplify some parser tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/tika/trunk@814236 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 103, "diff_parsed": {"added": [[23, "import java.util.HashMap;"], [27, "import org.apache.tika.Tika;"], [40, "        String path = \"/test-documents/testHTML.html\";"], [44, "        InputStream stream = HtmlParserTest.class.getResourceAsStream(path);"], [46, "            ContentHandler link = new DefaultHandler() {"], [47, "                @Override"], [48, "                public void startElement("], [49, "                        String u, String l, String n, Attributes a)"], [50, "                        throws SAXException {"], [51, "                    if (\"a\".equals(l)) {"], [52, "                        href.append(a.getValue(\"href\"));"], [53, "                    }"], [54, "                }"], [55, "            };"], [56, "            new HtmlParser().parse("], [57, "                    stream, new TeeContentHandler(body, link),"], [58, "                    metadata, new HashMap<String, Object>());"], [67, ""], [80, "        String path = \"/test-documents/testXHTML_utf8.html\";"], [82, "        String content = Tika.parseToString("], [83, "                HtmlParserTest.class.getResourceAsStream(path), metadata);"], [98, "        String path = \"/test-documents/testXHTML.html\";"], [100, "        String content = Tika.parseToString("], [101, "                HtmlParserTest.class.getResourceAsStream(path), metadata);"], [105, ""], [114, "        ContentHandler handler = new BodyContentHandler();"], [115, "        new HtmlParser().parse("], [117, "                handler,  new Metadata(), new HashMap<String, Object>());"], [118, "        assertEquals(\"\", handler.toString());"], [127, "        String content = Tika.parseToString("], [128, "                new ByteArrayInputStream(test.getBytes(\"UTF-8\")));"], [139, "        String content = Tika.parseToString("], [140, "                new ByteArrayInputStream(test.getBytes(\"UTF-8\")));"]], "deleted": [[28, "import org.apache.tika.parser.AutoDetectParser;"], [29, "import org.apache.tika.parser.Parser;"], [39, "    private Parser parser = new HtmlParser();"], [40, ""], [41, "    private static InputStream getStream(String name) {"], [42, "        return Thread.currentThread().getContextClassLoader()"], [43, "                .getResourceAsStream(name);"], [44, "    }"], [45, ""], [48, ""], [50, "        ContentHandler link = new DefaultHandler() {"], [51, "            @Override"], [52, "            public void startElement("], [53, "                    String u, String l, String n, Attributes a)"], [54, "                    throws SAXException {"], [55, "                if (\"a\".equals(l)) {"], [56, "                    href.append(a.getValue(\"href\"));"], [57, "                }"], [58, "            }"], [59, "        };"], [61, "        InputStream stream = getStream(\"test-documents/testHTML.html\");"], [63, "            parser.parse(stream, new TeeContentHandler(body, link), metadata);"], [84, "        ContentHandler handler = new BodyContentHandler();"], [86, ""], [87, "        parser.parse("], [88, "                getStream(\"test-documents/testHTML_utf8.html\"),"], [89, "                handler, metadata);"], [90, "        String content = handler.toString();"], [105, "        Parser parser = new AutoDetectParser(); // Should auto-detect!"], [106, "        ContentHandler handler = new BodyContentHandler();"], [108, ""], [109, "        InputStream stream = HtmlParserTest.class.getResourceAsStream("], [110, "                \"/test-documents/testXHTML.html\");"], [111, "        try {"], [112, "            parser.parse(stream, handler, metadata);"], [113, "        } finally {"], [114, "            stream.close();"], [115, "        }"], [119, "        String content = handler.toString();"], [128, "        Metadata metadata = new Metadata();"], [129, "        StringWriter writer = new StringWriter();"], [130, "        parser.parse("], [132, "                new BodyContentHandler(writer), metadata);"], [133, "        String content = writer.toString();"], [134, "        assertEquals(\"\", content);"], [143, "        ContentHandler handler = new BodyContentHandler();"], [144, "        parser.parse("], [145, "                new ByteArrayInputStream(test.getBytes(\"UTF-8\")),"], [146, "                handler, new Metadata());"], [147, "        String content = handler.toString();"], [158, "        ContentHandler handler = new BodyContentHandler();"], [159, "        parser.parse("], [160, "                new ByteArrayInputStream(test.getBytes(\"UTF-8\")),"], [161, "                handler, new Metadata());"], [162, "        String content = handler.toString();"]]}, "num_lines_added": 33, "num_lines_removed": 55}