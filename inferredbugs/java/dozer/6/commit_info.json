{"hash": "44d7bcb739338ea4d21798b4882ac2ddbca9770d", "message": "Moved to AtomicLong in Statistics;\nRemoved double statistics storage from DozerCache;\nGeneral code cleanup in Statistics and Cache areas;", "file_num_lines": 44, "diff_parsed": {"added": [[23, "import java.util.concurrent.atomic.AtomicLong;"], [24, ""], [26, " * Internal class that represents one entry in the statistic. Holds the statistic value and unique key for lookup."], [27, " * Entry counter is based on AtomicLong and is Thread Safe."], [28, " *"], [29, " * Only intended for internal use."], [32, " * @author dmitry.buzdin"], [35, ""], [37, "  private final AtomicLong value = new AtomicLong();"], [48, "    return value.get();"], [55, "  public void increment(long value) {"], [56, "    this.value.addAndGet(value);"], [73, "    return key.hashCode();"], [80, ""]], "deleted": [[24, " * Internal class that represents one entry in the statistic. Holds the statistic value and unique key for lookup. Only"], [25, " * intended for internal use."], [31, "  private long value = 0;"], [42, "    return value;"], [49, "  public synchronized void increment(long value) {"], [50, "    this.value += value;"], [67, "    return new HashCodeBuilder().append(getKey()).toHashCode();"]]}, "num_lines_added": 14, "num_lines_removed": 7}