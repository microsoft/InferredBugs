{"hash": "7c1450fd7d23d45faf7036f9467c820a91d99202", "message": "Changed the implementation of CtClass#toClass() and fixed [Bugs item #993105] Reflection#makeReflective could reject some reflections\n\n\ngit-svn-id: http://anonsvn.jboss.org/repos/javassist/trunk@116 30ef5769-5b8d-40dd-aea6-55b5d6557bb3", "file_num_lines": 401, "diff_parsed": {"added": [[846, "     * allowed any more."], [847, "     * To load the class, this method uses the context class loader"], [848, "     * of the current thread.  If the program is running on some application"], [849, "     * server, the context class loader might be inappropriate to load the"], [850, "     * class."], [855, "     * @see #toClass(java.lang.ClassLoader)"], [858, "        throws CannotCompileException"], [860, "        return toClass(Thread.currentThread().getContextClassLoader());"], [864, "     * Converts this class to a <code>java.lang.Class</code> object."], [865, "     * Once this method is called, further modifications are not allowed"], [866, "     * any more."], [867, "     *"], [868, "     * <p>The class file represented by this <code>CtClass</code> is"], [869, "     * loaded by the given class loader to construct a"], [870, "     * <code>java.lang.Class</code> object.  Since a private method"], [871, "     * on the class loader is invoked through the reflection API,"], [872, "     * the caller must have permissions to do that."], [874, "     * <p>This method is provided for convenience.  If you need more"], [875, "     * complex functionality, you should write your own class loader."], [876, "     *"], [877, "     * @param loader        the class loader used to load this class."], [879, "    public Class toClass(ClassLoader loader)"], [880, "        throws CannotCompileException"], [881, "    {"], [882, "        try {"], [883, "            byte[] b = toBytecode();"], [884, "            Class cl = Class.forName(\"java.lang.ClassLoader\");"], [885, "            java.lang.reflect.Method method"], [886, "                = cl.getDeclaredMethod(\"defineClass\","], [887, "                                new Class[] { String.class, byte[].class,"], [888, "                                              int.class, int.class });"], [889, "            method.setAccessible(true);"], [890, "            Object[] args = new Object[] { getName(), b, new Integer(0),"], [891, "                                           new Integer(b.length)};"], [892, "            Class clazz = (Class)method.invoke(loader, args);"], [893, "            method.setAccessible(false);"], [894, "            return clazz;"], [895, "        }"], [896, "        catch (RuntimeException e) {"], [897, "            throw e;"], [898, "        }"], [899, "        catch (java.lang.reflect.InvocationTargetException e) {"], [900, "            throw new CannotCompileException(e.getTargetException());"], [901, "        }"], [902, "        catch (Exception e) {"], [903, "            throw new CannotCompileException(e);"], [904, "        }"], [932, "        throws IOException, CannotCompileException"]], "deleted": [[846, "     * possible any more."], [851, "     * <p>To load a class file, this method uses an internal class loader,"], [852, "     * which is an instance of <code>ClassPool.SimpleLoader</code>."], [853, "     * Thus, that class file is not loaded by the system class loader,"], [854, "     * which should have loaded this <code>CtClass</code> class."], [855, "     * The internal class loader"], [856, "     * loads only the classes explicitly specified by this method"], [857, "     * <code>toClass()</code>.  The other classes are loaded"], [858, "     * by the parent class loader (usually the sytem class loader)"], [859, "     * by delegation."], [860, "     *"], [861, "     * <p>For example,"], [862, "     *"], [863, "     * <ul><pre>class Line { Point p1, p2; }</pre></ul>"], [864, "     *"], [865, "     * <p>If the class <code>Line</code> is loaded by the internal class"], [866, "     * loader and the class <code>Point</code> has not been loaded yet,"], [867, "     * then the class <code>Point</code> that the class <code>Line</code>"], [868, "     * refers to is loaded by the parent class loader.  There is no"], [869, "     * chance of modifying the definition of <code>Point</code> with"], [870, "     * Javassist."], [871, "     *"], [872, "     * <p>The internal class loader is shared among all the instances"], [873, "     * of <code>ClassPool</code>."], [874, "     *"], [875, "     * @return the <code>Class</code> object representing the loaded class."], [876, "     * @see CtClass#forName(String)"], [877, "     * @see ClassPool.SimpleLoader"], [878, "     * @see Loader"], [881, "        throws NotFoundException, IOException, CannotCompileException"], [883, "        return getClassPool().toClass(this);"], [887, "     * Returns a <code>java.lang.Class</code> object that has been loaded"], [888, "     * by <code>toClass()</code>.  Such an object cannot be"], [889, "     * obtained by <code>java.lang.Class.forName()</code> because it has"], [890, "     * been loaded by an internal class loader of Javassist."], [892, "     * @see CtClass#toClass()"], [893, "     * @see ClassPool.SimpleLoader"], [895, "    public Class forName(String name) throws ClassNotFoundException {"], [896, "        return getClassPool().forName(name);"], [924, "        throws NotFoundException, IOException, CannotCompileException"]]}, "num_lines_added": 48, "num_lines_removed": 40}