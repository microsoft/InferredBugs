{"hash": "1be55050483dc6582856479ce4b43873348b6cd0", "message": "Move submission rate limiting to docker runner", "file_num_lines": 113, "diff_parsed": {"added": [[26, "import com.google.common.util.concurrent.RateLimiter;"], [41, "import java.util.concurrent.ExecutorService;"], [55, "  private final RateLimiter rateLimiter;"], [56, "  private final ExecutorService executor;"], [61, "      Storage storage,"], [62, "      RateLimiter rateLimiter,"], [63, "      ExecutorService executor) {"], [67, "    this.rateLimiter = requireNonNull(rateLimiter, \"rateLimiter\");"], [68, "    this.executor = requireNonNull(executor, \"executor\");"], [75, "        // Perform rate limited submission on a separate thread pool to avoid blocking the caller."], [76, "        executor.submit(() -> {"], [77, "          rateLimiter.acquire();"], [79, "            final String executionId = dockerRunnerStart(state);"], [80, "            // this is racy"], [81, "            final Event submitted = Event.submitted(state.workflowInstance(), executionId);"], [82, "            try {"], [83, "              stateManager.receive(submitted);"], [84, "            } catch (StateManager.IsClosed isClosed) {"], [85, "              LOG.warn(\"Could not send 'created' event\", isClosed);"], [86, "            }"], [87, "          } catch (ResourceNotFoundException e) {"], [88, "            LOG.error(\"Unable to start docker procedure.\", e);"], [89, "            stateManager.receiveIgnoreClosed(Event.halt(state.workflowInstance()));"], [90, "          } catch (Throwable e) {"], [91, "            try {"], [92, "              LOG.error(\"Failed the docker starting procedure for \" + state.workflowInstance().toKey(), e);"], [93, "              stateManager.receive(Event.runError(state.workflowInstance(), e.getMessage()));"], [94, "            } catch (StateManager.IsClosed isClosed) {"], [95, "              LOG.warn(\"Failed to send 'runError' event\", isClosed);"], [96, "            }"], [98, "        });"]], "deleted": [[57, "      Storage storage) {"], [67, "        try {"], [68, "          final String executionId = dockerRunnerStart(state);"], [69, "          // this is racy"], [70, "          final Event submitted = Event.submitted(state.workflowInstance(), executionId);"], [72, "            stateManager.receive(submitted);"], [73, "          } catch (StateManager.IsClosed isClosed) {"], [74, "            LOG.warn(\"Could not send 'created' event\", isClosed);"], [76, "        } catch (ResourceNotFoundException e) {"], [77, "          LOG.error(\"Unable to start docker procedure.\", e);"], [78, "          stateManager.receiveIgnoreClosed(Event.halt(state.workflowInstance()));"], [79, "        } catch (Throwable e) {"], [80, "          try {"], [81, "            LOG.error(\"Failed the docker starting procedure for \" + state.workflowInstance().toKey(), e);"], [82, "            stateManager.receive(Event.runError(state.workflowInstance(), e.getMessage()));"], [83, "          } catch (StateManager.IsClosed isClosed) {"], [84, "            LOG.warn(\"Failed to send 'runError' event\", isClosed);"], [85, "          }"], [86, "        }"]]}, "num_lines_added": 31, "num_lines_removed": 19}