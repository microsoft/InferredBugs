{"hash": "57d2f0b6f4d2ffa5f3fa61e89cc6c3107f86a445", "message": "Guard the result of listFiles against nullness", "file_num_lines": 443, "diff_parsed": {"added": [[688, "\t\tif (path.isDirectory()) {"], [689, "\t\t\tFile[] files = path.listFiles();"], [690, "\t\t\tif (null != files) {"], [691, "\t\t\t\tfor (File file : files) {"], [692, "\t\t\t\t\tif (file.isDirectory()) {"], [693, "\t\t\t\t\t\tif (!deleteFileOrDirectory(file)) {"], [694, "\t\t\t\t\t\t\tthrow new MojoFailureException(\"Can't delete dir \" + file);"], [695, "\t\t\t\t\t\t}"], [696, "\t\t\t\t\t} else {"], [697, "\t\t\t\t\t\tif (!file.delete()) {"], [698, "\t\t\t\t\t\t\tthrow new MojoFailureException(\"Can't delete file \" + file);"], [699, "\t\t\t\t\t\t}"], [700, "\t\t\t\t\t}"], [701, "\t\t\t\t}"], [702, "\t\t\t}"], [703, "\t\t\treturn path.delete();"], [704, "\t\t} else {"], [705, "\t\t\treturn path.delete();"], [706, "\t\t}"], [707, "\t}"]], "deleted": [[688, "        if (path.isDirectory()) {"], [689, "            File[] files = path.listFiles();"], [690, "            for (int i = 0; i < files.length; i++) {"], [691, "                if (files[i].isDirectory()) {"], [692, "                    if (!deleteFileOrDirectory(files[i])) {"], [693, "                        throw new MojoFailureException(\"Can't delete dir \" + files[i]);"], [694, "                    }"], [695, "                } else {"], [696, "                    if (!files[i].delete()) {"], [697, "                        throw new MojoFailureException(\"Can't delete file \" + files[i]);"], [698, "                    }"], [699, "                }"], [700, "            }"], [701, "            return path.delete();"], [702, "        } else {"], [703, "            return path.delete();"], [704, "        }"], [705, "    }"]]}, "num_lines_added": 20, "num_lines_removed": 18}