{"hash": "bc93f95a4ed081ef2f3242d2de8d4e03eff6aa72", "message": "Update to SpringBoot 2.0.x (#65)\n\n* start required refactoring for springboot 2.0\r\n\r\n* finish refactoring Repository methods\r\n\r\n* finish refactoring Repository methods in tests\r\n\r\n* Fix models annotations\r\n\r\n* finish refactoring\r\n\r\n* refactoring configuration files\r\n\r\n* migrate remaining configuration files\r\n\r\n* bump dependency versions\r\n\r\n* Update POM release version to 2.0.0", "file_num_lines": 312, "diff_parsed": {"added": [[66, "import java.util.Optional;"], [138, "            clusterRepository.findById(viewForm.getClusterId()).ifPresent((cluster) -> {"], [149, "            });"], [166, "        final Optional<View> viewOptional = viewRepository.findById(id);"], [167, "        if (!viewOptional.isPresent()) {"], [174, "        final View view = viewOptional.get();"], [255, "            final Optional<View> viewOptional = viewRepository.findById(viewForm.getId());"], [256, "            if (!viewOptional.isPresent()) {"], [263, "            view = viewOptional.get();"], [273, "        final MessageFormat keyMessageFormat = messageFormatRepository.findById(viewForm.getKeyMessageFormatId()).get();"], [274, "        final MessageFormat valueMessageFormat = messageFormatRepository.findById(viewForm.getValueMessageFormatId()).get();"], [275, "        final Cluster cluster = clusterRepository.findById(viewForm.getClusterId()).get();"], [328, "            final Optional<Filter> filterOptional = filterRepository.findById(filterId);"], [329, "            if (!filterOptional.isPresent()) {"], [332, "            final Filter filter = filterOptional.get();"], [390, "            final Optional<Filter> filterOptional = filterRepository.findById(filterId);"], [391, "            if (!filterOptional.isPresent()) {"], [394, "            final Filter filter = filterOptional.get();"], [456, "        if (!viewRepository.existsById(id)) {"], [461, "            viewRepository.deleteById(id);"]], "deleted": [[137, "            final Cluster cluster = clusterRepository.findOne(viewForm.getClusterId());"], [138, "            if (cluster != null) {"], [149, "            }"], [166, "        final View view = viewRepository.findOne(id);"], [167, "        if (view == null) {"], [254, "            view = viewRepository.findOne(viewForm.getId());"], [255, "            if (view == null) {"], [271, "        final MessageFormat keyMessageFormat = messageFormatRepository.findOne(viewForm.getKeyMessageFormatId());"], [272, "        final MessageFormat valueMessageFormat = messageFormatRepository.findOne(viewForm.getValueMessageFormatId());"], [273, "        final Cluster cluster = clusterRepository.findOne(viewForm.getClusterId());"], [326, "            final Filter filter = filterRepository.findOne(filterId);"], [327, "            if (filter == null) {"], [387, "            final Filter filter = filterRepository.findOne(filterId);"], [388, "            if (filter == null) {"], [452, "        final View view = viewRepository.findOne(id);"], [453, "        if (view == null) {"], [458, "            viewRepository.delete(id);"]]}, "num_lines_added": 20, "num_lines_removed": 17}