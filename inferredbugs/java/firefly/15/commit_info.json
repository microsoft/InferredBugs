{"hash": "6e1760501ce7d747314f495ab7a28f4aee2accad", "message": "improve HTTP1.1 parser", "file_num_lines": 1232, "diff_parsed": {"added": [[22, "import com.firefly.codec.http2.model.HttpCompliance;"], [102, "\tpublic void testLineParse1_RFC2616() throws Exception {"], [103, "\t\tByteBuffer buffer = BufferUtils.toBuffer(\"GET /999\\015\\012\");"], [104, ""], [105, "\t\tHttpParser.RequestHandler handler = new Handler();"], [106, "\t\tHttpParser parser = new HttpParser(handler, HttpCompliance.RFC2616);"], [107, "\t\tparseAll(parser, buffer);"], [108, ""], [109, "\t\tassertNull(_bad);"], [110, "\t\tassertEquals(\"GET\", _methodOrVersion);"], [111, "\t\tassertEquals(\"/999\", _uriOrStatus);"], [112, "\t\tassertEquals(\"HTTP/0.9\", _versionOrReason);"], [113, "\t\tassertEquals(-1, _headers);"], [114, "\t}"], [115, ""], [116, "\t@Test"], [127, "\tpublic void testLineParse2_RFC2616() throws Exception {"], [128, "\t\tByteBuffer buffer = BufferUtils.toBuffer(\"POST /222  \\015\\012\");"], [129, ""], [130, "\t\tHttpParser.RequestHandler handler = new Handler();"], [131, "\t\tHttpParser parser = new HttpParser(handler, HttpCompliance.RFC2616);"], [132, "\t\tparseAll(parser, buffer);"], [133, ""], [134, "\t\tassertNull(_bad);"], [135, "\t\tassertEquals(\"POST\", _methodOrVersion);"], [136, "\t\tassertEquals(\"/222\", _uriOrStatus);"], [137, "\t\tassertEquals(\"HTTP/0.9\", _versionOrReason);"], [138, "\t\tassertEquals(-1, _headers);"], [139, "\t}"], [140, ""], [141, "\t@Test"], [231, "\tpublic void test2616Continuations() throws Exception {"], [232, "\t\tByteBuffer buffer = BufferUtils.toBuffer(\"GET / HTTP/1.0\\015\\012\" + \"Host: localhost\\015\\012\""], [233, "\t\t\t\t+ \"Name: value\\015\\012\" + \" extra\\015\\012\" + \"\\015\\012\");"], [234, ""], [235, "\t\tHttpParser.RequestHandler handler = new Handler();"], [236, "\t\tHttpParser parser = new HttpParser(handler, 4096, HttpCompliance.RFC2616);"], [237, "\t\tparseAll(parser, buffer);"], [238, ""], [239, "\t\tAssert.assertThat(_bad, Matchers.nullValue());"], [240, "\t\tassertEquals(\"Host\", _hdr[0]);"], [241, "\t\tassertEquals(\"localhost\", _val[0]);"], [242, "\t\tassertEquals(\"Name\", _hdr[1]);"], [243, "\t\tassertEquals(\"value extra\", _val[1]);"], [244, "\t\tassertEquals(1, _headers);"], [245, "\t}"], [246, ""], [247, "\t@Test"], [253, "\t\tHttpParser parser = new HttpParser(handler, 4096, HttpCompliance.RFC7230);"], [532, "\t\tHttpParser parser = new HttpParser(handler, -1, HttpCompliance.RFC7230);"], [534, "\t\tassertNull(_bad);"], [550, "\t\tHttpParser parser = new HttpParser(handler, -1, HttpCompliance.LEGACY);"], [552, "\t\tassertNull(_bad);"], [684, "\t\t\t\t+ \"\\015\\012\""], [686, "\t\t\t\t+ \"POST /foo HTTP/1.0\\015\\012\" + \"Connection: Keep-Alive\\015\\012\" + \"Header2: value2\\015\\012\""], [689, "\t\t\t\t+ \"PUT /doodle HTTP/1.0\\015\\012\" + \"Connection: close\\015\\012\" + \"Header3: value3\\015\\012\""], [735, "\t\t\t\t\t\t+ \"\\015\\012\""], [737, "\t\t\t\t\t\t+ \"POST /foo HTTP/1.0\\015\\012\" + \"Connection: Keep-Alive\\015\\012\" + \"Header2: value2\\015\\012\""], [740, "\t\t\t\t\t\t+ \"PUT /doodle HTTP/1.0\\015\\012\" + \"Connection: close\\015\\012\" + \"Header3: value3\\015\\012\""], [815, "\t\t\t\t\t\t+ \"HTTP/1.1 200 Correct\\015\\012\" + \"Content-Length: 10\\015\\012\""], [816, "\t\t\t\t\t\t+ \"Content-Type: text/plain\\015\\012\" + \"\\015\\012\" + \"0123456789\\015\\012\");"]], "deleted": [[29, ""], [105, "\t\t_versionOrReason = null;"], [109, ""], [208, "\t\tHttpParser parser = new HttpParser(handler);"], [487, "\t\tHttpParser parser = new HttpParser(handler, -1, false);"], [489, ""], [505, "\t\tHttpParser parser = new HttpParser(handler, -1, true);"], [507, ""], [639, "\t\t+ \"\\015\\012\""], [641, "\t\t+ \"POST /foo HTTP/1.0\\015\\012\" + \"Connection: Keep-Alive\\015\\012\" + \"Header2: value2\\015\\012\""], [644, "\t\t+ \"PUT /doodle HTTP/1.0\\015\\012\" + \"Connection: close\\015\\012\" + \"Header3: value3\\015\\012\""], [690, "\t\t+ \"\\015\\012\""], [692, "\t\t+ \"POST /foo HTTP/1.0\\015\\012\" + \"Connection: Keep-Alive\\015\\012\" + \"Header2: value2\\015\\012\""], [695, "\t\t+ \"PUT /doodle HTTP/1.0\\015\\012\" + \"Connection: close\\015\\012\" + \"Header3: value3\\015\\012\""], [770, "\t\t+ \"HTTP/1.1 200 Correct\\015\\012\" + \"Content-Length: 10\\015\\012\" + \"Content-Type: text/plain\\015\\012\""], [771, "\t\t\t\t\t\t+ \"\\015\\012\" + \"0123456789\\015\\012\");"], [1265, "\tpublic void testFolded() throws Exception {"], [1266, "\t\tByteBuffer buffer = BufferUtils.toBuffer(\"GET / HTTP/1.0\\015\\012\" + \"Host: localhost\\015\\012\""], [1267, "\t\t\t\t+ \"Connection: close\\015\\012\" + \"Content-Type: application/soap+xml; charset=utf-8; \\015\\012\""], [1268, "\t\t\t\t+ \"\\taction=\\\"xxx\\\" \\015\\012\" + \"\\015\\012\");"], [1269, ""], [1270, "\t\tHttpParser.RequestHandler handler = new Handler();"], [1271, "\t\tHttpParser parser = new HttpParser(handler);"], [1272, "\t\tparseAll(parser, buffer);"], [1273, ""], [1274, "\t\tassertFalse(_headerCompleted);"], [1275, "\t\tassertEquals(_bad, \"Bad Continuation\");"], [1276, "\t}"], [1277, ""], [1278, "\t@Test"], [1279, "\tpublic void testParseRequest2() {"], [1280, "\t\tByteBuffer buffer = BufferUtils.toBuffer(\"GET / H\");"], [1281, "\t\tHttpParser.RequestHandler handler = new Handler();"], [1282, "\t\tHttpParser parser = new HttpParser(handler);"], [1283, ""], [1284, "\t\tparser.parseNext(buffer);"], [1285, "\t\tassertEquals(0, buffer.remaining());"], [1286, "\t\tassertNull(_methodOrVersion);"], [1287, "\t\tassertNull(_uriOrStatus);"], [1288, "\t\tassertNull(_versionOrReason);"], [1289, ""], [1290, "\t\tbuffer = BufferUtils.toBuffer(\"TTP/1.1\\r\\n\");"], [1291, "\t\tparser.parseNext(buffer);"], [1292, "\t\tassertEquals(0, buffer.remaining());"], [1293, "\t\tassertEquals(\"GET\", _methodOrVersion);"], [1294, "\t\tassertEquals(\"/\", _uriOrStatus);"], [1295, "\t\tassertEquals(\"HTTP/1.1\", _versionOrReason);"], [1296, "\t}"], [1297, ""], [1298, "\t@Test"]]}, "num_lines_added": 61, "num_lines_removed": 50}