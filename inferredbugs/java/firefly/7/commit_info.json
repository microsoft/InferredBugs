{"hash": "498393cf4e80956c91599f61f1db8fdb91657c77", "message": "add stream test case", "file_num_lines": 133, "diff_parsed": {"added": [[5, "import java.nio.ByteBuffer;"], [6, ""], [15, "import com.firefly.codec.spdy.frames.Version;"], [92, "\t\t\t\tSystem.out.println(\"Server receives data -> \" + dataFrame);"], [93, "\t\t\t\tif(dataFrame.getFlags() == DataFrame.FLAG_FIN) {"], [94, "\t\t\t\t\tFields headers = stream.createFields();"], [95, "\t\t\t\t\theaders.put(\"response\", \"ok\");"], [96, "\t\t\t\t\tstream.reply(Version.V3, (byte)0, headers);"], [97, "\t\t\t\t\tstream.sendLastData(\"the server has received messages\".getBytes());"], [98, "\t\t\t\t}"], [111, "\t\t\t\tSystem.out.println(\"Client receives reply frame -> \" + synReplyFrame);"], [112, "\t\t\t\tAssert.assertThat(synReplyFrame.getHeaders().get(\"response\").getValue(), is(\"ok\"));"], [127, "\t\t\t\tSystem.out.println(\"Client receives data -> \" + dataFrame);"], [128, "\t\t\t\tif(dataFrame.getFlags() == DataFrame.FLAG_FIN) {"], [129, "\t\t\t\t\tAssert.assertThat(new String(dataFrame.getData()), is(\"the server has received messages\"));"], [130, "\t\t\t\t}"], [143, "\t\tclientStream.syn(Version.V3, (byte)0, 0, (byte)0, headers);"], [150, "\t\t// Client sends data frames"], [163, ""], [164, "\t\tdata = \"data3\".getBytes();"], [165, "\t\tclientStream.sendLastData(data);"], [167, "\t\tAssert.assertThat(clientStream.getWindowSize(), is(currentWindowSize));"], [168, "\t\tAssert.assertThat(clientAttachment.getConnection().getWindowSize(), is(currentWindowSize));"], [169, "\t\tAssert.assertThat(clientStream.isOutboundClosed(), is(true));"], [170, "\t\tAssert.assertThat(clientStream.isInboundClosed(), is(false));"], [171, ""], [172, "\t\t// Server receives data"], [173, "\t\tByteBuffer buf = null;"], [174, "\t\twhile( (buf = clientSession.outboundData.poll()) != null ) {"], [175, "\t\t\tserverDecoder.decode(buf, serverSession);"], [176, "\t\t}"], [177, ""], [178, "\t\t// Server sends window update and replies"], [179, "\t\twhile( (buf = serverSession.outboundData.poll()) != null ) {"], [180, "\t\t\tclientDecoder.decode(buf, clientSession);"], [181, "\t\t}"], [182, "\t\tAssert.assertThat(clientStream.isOutboundClosed(), is(true));"], [183, "\t\tAssert.assertThat(clientStream.isInboundClosed(), is(true));"], [184, "\t\tAssert.assertThat(clientAttachment.getConnection().getWindowSize(), is(64 * 1024));"], [186, ""]], "deleted": [[89, ""], [102, ""], [117, ""], [130, "\t\tclientStream.syn((short)3, (byte)0, 0, (byte)0, headers);"], [137, ""], [138, ""], [145, ""], [152, "\t}"], [153, ""], [154, "\tpublic static void main(String[] args) {"], [155, "\t\tint currentWindowSize = 64 * 1024;"], [156, "\t\tSystem.out.println(currentWindowSize);"], [157, "\t\tbyte[] data = \"hello world\".getBytes();"], [159, "\t\tSystem.out.println(currentWindowSize);"]]}, "num_lines_added": 40, "num_lines_removed": 14}