{"hash": "01e52760ebca212af100e137a69f5f348bc9fff2", "message": "Add commands for Create, Update, Release Dataset\n\n..and some other cleanup.", "file_num_lines": 493, "diff_parsed": {"added": [[10, "import edu.harvard.iq.dataverse.engine.command.Command;"], [11, "import edu.harvard.iq.dataverse.engine.command.exception.CommandException;"], [12, "import edu.harvard.iq.dataverse.engine.command.impl.CreateDatasetCommand;"], [13, "import edu.harvard.iq.dataverse.engine.command.impl.ReleaseDatasetCommand;"], [14, "import edu.harvard.iq.dataverse.engine.command.impl.UpdateDatasetCommand;"], [85, "    @EJB"], [86, "    EjbDataverseEngine commandEngine;"], [97, "    private DatasetVersion displayVersion;"], [188, "                displayVersion = dataset.getLatestVersion();"], [190, "                displayVersion = datasetVersionService.find(versionId);"], [193, "            displayVersion.setDatasetFields(displayVersion.initDatasetFields());"], [199, "            datasetVersionUI = new DatasetVersionUI(displayVersion);"], [229, "           return releaseDataset(false);"], [231, "             return releaseDataset(true);"], [232, "        }"], [236, "        return releaseDataset(false);"], [239, "    private String releaseDataset(boolean minor) {"], [240, "        Command<Dataset> cmd;"], [241, "        try {"], [242, "            if (editMode == EditMode.CREATE){"], [243, "                cmd = new ReleaseDatasetCommand(dataset, session.getUser(), minor);"], [244, "            } else {"], [245, "                cmd = new ReleaseDatasetCommand(dataset, session.getUser(), minor);"], [246, "            }"], [247, "           dataset = commandEngine.submit(cmd);"], [248, "        }  catch (CommandException ex) {"], [249, "            FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, \"Dataset Release Failed\", \" - \" + ex.toString()));"], [250, "            Logger.getLogger(DatasetPage.class.getName()).log(Level.SEVERE, null, ex);"], [386, "\tCommand<Dataset> cmd;"], [388, "            if (editMode == EditMode.CREATE){"], [389, "                cmd = new CreateDatasetCommand(dataset, session.getUser());"], [390, "            } else {"], [391, "                cmd = new UpdateDatasetCommand(dataset, session.getUser());"], [392, "            }"], [393, "           dataset = commandEngine.submit(cmd);"], [407, "        } catch (CommandException ex) {"], [408, "            FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, \"Dataset Save Failed\", \" - \" + ex.toString()));"], [409, "            Logger.getLogger(DatasetPage.class.getName()).log(Level.SEVERE, null, ex);"], [410, "        }"]], "deleted": [[8, "import edu.harvard.iq.dataverse.DatasetVersion.VersionState;"], [24, "import java.util.HashMap;"], [27, "import java.util.Map;"], [35, "import javax.faces.model.DataModel;"], [36, "import javax.faces.model.ListDataModel;"], [185, "                editVersion = dataset.getLatestVersion();"], [187, "                editVersion = datasetVersionService.find(versionId);"], [190, "            editVersion.setDatasetFields(editVersion.initDatasetFields());"], [196, "            datasetVersionUI = new DatasetVersionUI(editVersion);"], [204, ""], [205, "            //TODO add call to initDepositFields if it's decided that they are indeed metadata"], [206, "            //initDepositFields();"], [212, "    /*"], [213, "     private void initDepositFields(){"], [214, "     //Special Handling - fill depositor and deposit date if blank"], [215, "     //add initial values for Depositor and Desposit Date"], [216, "     for(DatasetFieldValue dsfv : editVersion.getDatasetFieldValues()){"], [217, "     if (dsfv.getDatasetField().getName().equals(DatasetFieldConstant.depositor) && dsfv.isEmpty()) {"], [218, "     if (session.getUser() != null && session.getUser().getLastName() != null && session.getUser().getFirstName() != null  ){"], [219, "     dsfv.setStrValue(session.getUser().getLastName() + \", \" + session.getUser().getFirstName());"], [220, "     }"], [221, "     }"], [222, "     DateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");"], [223, "     Date date = new Date();"], [224, "     if (dsfv.getDatasetField().getName().equals(DatasetFieldConstant.dateOfDeposit) && dsfv.isEmpty()) {"], [225, "     dsfv.setStrValue(dateFormat.format(date));"], [226, "     }"], [227, ""], [228, "     }"], [229, "     }"], [230, "     */"], [248, "            dataset.getEditVersion().setVersionNumber(new Long(dataset.getReleasedVersion().getVersionNumber().intValue() + 1));"], [249, "            dataset.getEditVersion().setMinorVersionNumber(new Long(0));"], [251, "            dataset.getEditVersion().setVersionNumber(new Long(dataset.getReleasedVersion().getVersionNumber().intValue()));"], [252, "            dataset.getEditVersion().setMinorVersionNumber(new Long(dataset.getReleasedVersion().getMinorVersionNumber().intValue() + 1));"], [253, "        }"], [254, "        return releaseDataset(false);"], [258, "        return releaseDataset(true);"], [261, "    private String releaseDataset(boolean firstRelease) {"], [262, "        if (firstRelease){"], [263, "            dataset.setReleaseDate(new Timestamp(new Date().getTime()));"], [264, "            dataset.setReleaseUser(session.getUser());"], [266, "        dataset.getEditVersion().setReleaseTime(new Timestamp(new Date().getTime()));"], [267, "        dataset.getEditVersion().setVersionState(VersionState.RELEASED);"], [268, "        dataset = datasetService.release(dataset);"], [404, "            dataset = datasetService.save(dataset);"], [418, "        }"]]}, "num_lines_added": 39, "num_lines_removed": 47}