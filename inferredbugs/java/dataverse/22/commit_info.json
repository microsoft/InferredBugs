{"hash": "4ac3e4e5a06fee75dddacb9d65c647c67508afb2", "message": "check for null before operating on released version #600\n\n- deleted some old commented out code too", "file_num_lines": 825, "diff_parsed": {"added": [[294, "        if (releasedVersion != null) {"], [295, "            if (releasedVersion.getVersionState().equals(DatasetVersion.VersionState.DEACCESSIONED)) {"], [296, "                DatasetVersion lookupAttempt2 = releasedVersion.getMostRecentlyReleasedVersion();"], [297, "                String message = \"WARNING: called dataset.getReleasedVersion() but version returned was deaccessioned (database id \""], [298, "                        + releasedVersion.getId()"], [299, "                        + \"). (releasedVersion.getMostRecentlyReleasedVersion() returns database id \""], [300, "                        + lookupAttempt2.getId() + \" so that method may be better?). Look out for strange indexing results.\";"], [301, "                logger.severe(message);"], [302, "                debug.append(message);"], [303, "            }"]], "deleted": [[294, "        if (releasedVersion.getVersionState().equals(DatasetVersion.VersionState.DEACCESSIONED)) {"], [295, "            logger.severe(\"WARNING: called dataset.getReleasedVersion() but version returned was deaccessioned. Look out for strange indexing results.\");"], [650, "                /**"], [651, "                 * @todo: review all code below... commented out old indexing of"], [652, "                 * hard coded fields. Also, should we respect the"], [653, "                 * isAdvancedSearchField boolean?"], [654, "                 */"], [655, "//                if (datasetField.isAdvancedSearchField()) {"], [656, "//                    advancedSearchFields.add(idDashName);"], [657, "//                    logger.info(idDashName + \" is an advanced search field (\" + title + \")\");"], [658, "//                    if (name.equals(DatasetFieldConstant.title)) {"], [659, "//                        String toIndexTitle = datasetFieldValue.getStrValue();"], [660, "//                        if (toIndexTitle != null && !toIndexTitle.isEmpty()) {"], [661, "//                            solrInputDocument.addField(SearchFields.TITLE, toIndexTitle);"], [662, "//                        }"], [663, "//                    } else if (name.equals(DatasetFieldConstant.authorName)) {"], [664, "//                        String toIndexAuthor = datasetFieldValue.getStrValue();"], [665, "//                        if (toIndexAuthor != null && !toIndexAuthor.isEmpty()) {"], [666, "//                            logger.info(\"index this author: \" + toIndexAuthor);"], [667, "//                            solrInputDocument.addField(SearchFields.AUTHOR_STRING, toIndexAuthor);"], [668, "//                        }"], [669, "//                    } else if (name.equals(DatasetFieldConstant.productionDate)) {"], [670, "//                        String toIndexProductionDateString = datasetFieldValue.getStrValue();"], [671, "//                        logger.info(\"production date: \" + toIndexProductionDateString);"], [672, "//                        if (toIndexProductionDateString != null && !toIndexProductionDateString.isEmpty()) {"], [673, "//                            SimpleDateFormat inputDateyyyy = new SimpleDateFormat(\"yyyy\", Locale.ENGLISH);"], [674, "//                            try {"], [675, "//                                logger.info(\"Trying to convert \" + toIndexProductionDateString + \" to a YYYY date from dataset \" + dataset.getId());"], [676, "//                                Date productionDate = inputDateyyyy.parse(toIndexProductionDateString);"], [677, "//                                SimpleDateFormat yearOnly = new SimpleDateFormat(\"yyyy\");"], [678, "//                                String productionYear = yearOnly.format(productionDate);"], [679, "//                                logger.info(\"YYYY only: \" + productionYear);"], [680, "//                                solrInputDocument.addField(SearchFields.PRODUCTION_DATE_YEAR_ONLY, Integer.parseInt(productionYear));"], [681, "//                                solrInputDocument.addField(SearchFields.PRODUCTION_DATE_ORIGINAL, productionDate);"], [682, "//                            } catch (Exception ex) {"], [683, "//                                logger.info(\"unable to convert \" + toIndexProductionDateString + \" into YYYY format\");"], [684, "//                            }"], [685, "//                        }"], [686, "//                        /**"], [687, "//                         * @todo: DRY! this is the same as above!"], [688, "//                         */"], [689, "//                    } else if (name.equals(DatasetFieldConstant.distributionDate)) {"], [690, "//                        String toIndexdistributionDateString = datasetFieldValue.getStrValue();"], [691, "//                        logger.info(\"distribution date: \" + toIndexdistributionDateString);"], [692, "//                        if (toIndexdistributionDateString != null && !toIndexdistributionDateString.isEmpty()) {"], [693, "//                            SimpleDateFormat inputDateyyyy = new SimpleDateFormat(\"yyyy\", Locale.ENGLISH);"], [694, "//                            try {"], [695, "//                                logger.info(\"Trying to convert \" + toIndexdistributionDateString + \" to a YYYY date from dataset \" + dataset.getId());"], [696, "//                                Date distributionDate = inputDateyyyy.parse(toIndexdistributionDateString);"], [697, "//                                SimpleDateFormat yearOnly = new SimpleDateFormat(\"yyyy\");"], [698, "//                                String distributionYear = yearOnly.format(distributionDate);"], [699, "//                                logger.info(\"YYYY only: \" + distributionYear);"], [700, "//                                solrInputDocument.addField(SearchFields.DISTRIBUTION_DATE_YEAR_ONLY, Integer.parseInt(distributionYear));"], [701, "//                                solrInputDocument.addField(SearchFields.DISTRIBUTION_DATE_ORIGINAL, distributionDate);"], [702, "//                            } catch (Exception ex) {"], [703, "//                                logger.info(\"unable to convert \" + toIndexdistributionDateString + \" into YYYY format\");"], [704, "//                            }"], [705, "//                        }"], [706, "//                    } else if (name.equals(DatasetFieldConstant.keywordValue)) {"], [707, "//                        String toIndexKeyword = datasetFieldValue.getStrValue();"], [708, "//                        if (toIndexKeyword != null && !toIndexKeyword.isEmpty()) {"], [709, "//                            solrInputDocument.addField(SearchFields.KEYWORD, toIndexKeyword);"], [710, "//                        }"], [711, "//                    } else if (name.equals(DatasetFieldConstant.distributorName)) {"], [712, "//                        String toIndexDistributor = datasetFieldValue.getStrValue();"], [713, "//                        if (toIndexDistributor != null && !toIndexDistributor.isEmpty()) {"], [714, "//                            solrInputDocument.addField(SearchFields.DISTRIBUTOR, toIndexDistributor);"], [715, "//                        }"], [716, "//                    } else if (name.equals(DatasetFieldConstant.description)) {"], [717, "//                        String toIndexDescription = datasetFieldValue.getStrValue();"], [718, "//                        if (toIndexDescription != null && !toIndexDescription.isEmpty()) {"], [719, "//                            solrInputDocument.addField(SearchFields.DESCRIPTION, toIndexDescription);"], [720, "//                        }"], [721, "//                    }"], [722, "//                } else {"], [723, "//                    notAdvancedSearchFields.add(idDashName);"], [724, "//                    logger.info(idDashName + \" is not an advanced search field (\" + title + \")\");"], [725, "//                }"]]}, "num_lines_added": 10, "num_lines_removed": 78}