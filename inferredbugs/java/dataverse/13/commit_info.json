{"hash": "42aeafbfd4f91989ec3e0a1caf8b9696043be44e", "message": "no change but add logic and tests for indexing dataset versions #3795", "file_num_lines": 547, "diff_parsed": {"added": [[224, "        String solrIdDraftStudy = \"dataset_\" + dataset.getId() + \"_draft\";"], [225, "        String solrIdPublishedStudy = \"dataset_\" + dataset.getId();"], [226, "        StringBuilder sb = new StringBuilder();"], [227, "        sb.append(\"rationale:\\n\");"], [228, "        List<DatasetVersion> versions = dataset.getVersions();"], [229, "        for (DatasetVersion datasetVersion : versions) {"], [230, "            Long versionDatabaseId = datasetVersion.getId();"], [231, "            String versionTitle = datasetVersion.getTitle();"], [232, "            String semanticVersion = datasetVersion.getSemanticVersion();"], [233, "            String versionState = datasetVersion.getVersionState().name();"], [234, "            boolean versionIsReleased = datasetVersion.isReleased();"], [235, "            boolean versionIsWorkingCopy = datasetVersion.isWorkingCopy();"], [236, "            sb.append(\"version found with database id \" + versionDatabaseId + \"\\n\");"], [237, "            sb.append(\"- title: \" + versionTitle + \"\\n\");"], [238, "            sb.append(\"- semanticVersion-STATE: \" + semanticVersion + \"-\" + versionState + \"\\n\");"], [239, "            sb.append(\"- isWorkingCopy: \" + versionIsWorkingCopy + \"\\n\");"], [240, "            sb.append(\"- isReleased: \" + versionIsReleased + \"\\n\");"], [241, "        }"], [242, "        DatasetVersion latestVersion = dataset.getLatestVersion();"], [243, "        String latestVersionState = latestVersion.getVersionState().name();"], [244, "        DatasetVersion releasedVersion = dataset.getReleasedVersion();"], [245, "        if (latestVersion.isWorkingCopy()) {"], [246, "            sb.append(\"The latest version is a working copy (latestVersionState: \" + latestVersionState + \") and will be indexed as \" + solrIdDraftStudy + \" (only visible by creator)\\n\");"], [247, "            if (releasedVersion != null) {"], [248, "                String releasedVersionState = releasedVersion.getVersionState().name();"], [249, "                String semanticVersion = releasedVersion.getSemanticVersion();"], [250, "                sb.append(\"The released version is \" + semanticVersion + \" (releasedVersionState: \" + releasedVersionState + \") and will be indexed as \" + solrIdPublishedStudy + \" (visible by anonymous)\");"], [251, "                /**"], [252, "                 * The latest version is a working copy (latestVersionState:"], [253, "                 * DRAFT) and will be indexed as dataset_17_draft (only visible"], [254, "                 * by creator)"], [255, "                 *"], [256, "                 * The released version is 1.0 (releasedVersionState: RELEASED)"], [257, "                 * and will be indexed as dataset_17 (visible by anonymous)"], [258, "                 */"], [259, "                logger.info(sb.toString());"], [260, "                String indexDraftResult = indexDatasetAddOrUpdate(dataset);"], [261, "                String indexReleasedVersionResult = indexDatasetAddOrUpdate(dataset);"], [262, "                return \"indexDraftResult:\" + indexDraftResult + \", indexReleasedVersionResult:\" + indexReleasedVersionResult + \", \" + sb.toString();"], [263, "            } else {"], [264, "                sb.append(\"There is no released version yet so nothing will be indexed as \" + solrIdPublishedStudy);"], [265, "                /**"], [266, "                 * The latest version is a working copy (latestVersionState:"], [267, "                 * DRAFT) and will be indexed as dataset_33_draft (only visible"], [268, "                 * by creator)"], [269, "                 *"], [270, "                 * There is no released version yet so nothing will be indexed"], [271, "                 * as dataset_33"], [272, "                 */"], [273, "                logger.info(sb.toString());"], [274, "                String indexDraftResult = indexDatasetAddOrUpdate(dataset);"], [275, "                return \"indexDraftResult:\" + indexDraftResult + \", \" + sb.toString();"], [276, "            }"], [277, "        } else {"], [278, "            sb.append(\"The latest version is not a working copy (latestVersionState: \" + latestVersionState + \") and will be indexed as \" + solrIdPublishedStudy + \" (visible by anonymous) and we will be deleting \" + solrIdDraftStudy + \"\\n\");"], [279, "            if (releasedVersion != null) {"], [280, "                String releasedVersionState = releasedVersion.getVersionState().name();"], [281, "                String semanticVersion = releasedVersion.getSemanticVersion();"], [282, "                sb.append(\"The released version is \" + semanticVersion + \" (releasedVersionState: \" + releasedVersionState + \") and will be (again) indexed as \" + solrIdPublishedStudy + \" (visible by anonymous)\");"], [283, "                /**"], [284, "                 * The latest version is not a working copy (latestVersionState:"], [285, "                 * RELEASED) and will be indexed as dataset_34 (visible by"], [286, "                 * anonymous) and we will be deleting dataset_34_draft"], [287, "                 *"], [288, "                 * The released version is 1.0 (releasedVersionState: RELEASED)"], [289, "                 * and will be  (again) indexed as dataset_34 (visible by anonymous)"], [290, "                 */"], [291, "                logger.info(sb.toString());"], [292, "                String deleteDraftVersionResult = removeDatasetDraftFromIndex(solrIdDraftStudy);"], [293, "                String indexReleasedVersionResult = indexDatasetAddOrUpdate(dataset);"], [294, "                return \"deleteDraftVersionResult: \" + deleteDraftVersionResult + \", indexReleasedVersionResult:\" + indexReleasedVersionResult + \", \" + sb.toString();"], [295, "            } else {"], [296, "                sb.append(\"We don't ever expect to ever get here. Why is there no released version if the latest version is not a working copy? The latestVersionState is \" + latestVersionState + \" and we don't know what to do with it. Nothing will be added or deleted from the index.\");"], [297, "                logger.info(sb.toString());"], [298, "                return sb.toString();"], [299, "            }"], [300, "        }"], [301, "    }"], [302, ""], [303, "    public String indexDatasetAddOrUpdate(Dataset dataset) {"], [304, "        logger.info(\"adding or updating Solr document for dataset id \" + dataset.getId());"], [846, "    public String removeDatasetDraftFromIndex(String doomed) {"], [847, "        if (true) {"], [848, "            return \"FIXME: remove this 'if true' to actually delete dataset draft \" + doomed;"], [849, "        }"], [850, "        /**"], [851, "         * @todo allow for configuration of hostname and port"], [852, "         */"], [853, "        SolrServer server = new HttpSolrServer(\"http://localhost:8983/solr/\");"], [854, "        logger.info(\"deleting Solr document for dataset draft: \" + doomed);"], [855, "        UpdateResponse updateResponse;"], [856, "        try {"], [857, "            updateResponse = server.deleteById(doomed);"], [858, "        } catch (SolrServerException | IOException ex) {"], [859, "            return ex.toString();"], [860, "        }"], [861, "        try {"], [862, "            server.commit();"], [863, "        } catch (SolrServerException | IOException ex) {"], [864, "            return ex.toString();"], [865, "        }"], [866, "        String response = \"Successfully deleted dataset draft \" + doomed + \" from Solr index. updateReponse was: \" + updateResponse.toString();"], [867, "        logger.info(response);"], [868, "        return response;"], [869, "    }"], [870, ""]], "deleted": []}, "num_lines_added": 106, "num_lines_removed": 0}