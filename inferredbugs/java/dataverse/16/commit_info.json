{"hash": "e302f5a01b7939911909c919b7917de058a0a8d8", "message": "Add Validation for Date, Float, Int, Url, Email, etc.\n\nAlso latest \u0010citation and add create date and pub date for datafiles", "file_num_lines": 546, "diff_parsed": {"added": [[30, "import java.util.Set;"], [47, "import javax.validation.ConstraintViolation;"], [48, "import javax.validation.Validation;"], [49, "import javax.validation.Validator;"], [50, "import javax.validation.ValidatorFactory;"], [81, "    PermissionServiceBean permissionServiceBean;"], [208, "                if (canIssueUpdateCommand()) {"], [209, "                    displayVersion = dataset.getLatestVersion();"], [211, "                    displayVersion = dataset.getReleasedVersion();"], [212, "                }"], [215, "            }"], [223, ""], [225, "                datasetVersionUI = new DatasetVersionUI(displayVersion);"], [226, "            } catch (NullPointerException npe) {"], [230, ""], [231, "            displayCitation = dataset.getCitation(false, displayVersion);"], [341, ""], [342, "        // Validate"], [343, "        boolean dontSave = false;"], [344, "        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();"], [345, "        Validator validator = factory.getValidator();"], [346, "        for (DatasetField dsf : editVersion.getFlatDatasetFields()) {"], [347, "            for (DatasetFieldValue dsfv : dsf.getDatasetFieldValues()) {"], [348, "                // dsfv.setValidationMessage(null); // clear out any existing validation message"], [349, "                Set<ConstraintViolation<DatasetFieldValue>> constraintViolations = validator.validate(dsfv);"], [350, "                for (ConstraintViolation<DatasetFieldValue> constraintViolation : constraintViolations) {"], [351, "                    FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, \"Validation Error\", constraintViolation.getMessage()));"], [352, "                    //  dsfv.setValidationMessage(constraintViolation.getMessage());"], [353, "                    dontSave = true;"], [354, "                }"], [355, "            }"], [356, "        }"], [357, "        if (dontSave) {"], [358, "            return \"\";"], [359, "        }"], [360, ""], [387, ""], [395, "                    String fileName = fileMetadata.getLabel();"], [634, ""], [694, ""], [695, "    private boolean canIssueUpdateCommand() {"], [707, ""], [709, "        List<DatasetVersion> retList = new ArrayList();"], [711, "        if (canIssueUpdateCommand()) {"], [712, "            return dataset.getVersions();"], [713, "        } else {"], [714, "            for (DatasetVersion version : dataset.getVersions()) {"], [715, "                if (version.isReleased()) {"], [716, "                    retList.add(version);"], [719, "            return retList;"], [720, ""], [721, "        }"], [723, ""]], "deleted": [[29, "import java.util.Iterator;"], [77, "    PermissionServiceBean permissionServiceBean;"], [204, "                if (canIssueUpdateCommand()){"], [205, "                   displayVersion = dataset.getLatestVersion();"], [207, "                   displayVersion = dataset.getReleasedVersion();"], [208, "                }"], [211, "            }"], [214, "            //displayVersion.setDatasetFields(displayVersion.initDatasetFields());"], [220, ""], [221, ""], [222, "            /*"], [223, "            if (!dataset.isReleased() || (dataset.isReleased() && displayVersion.equals(dataset.getLatestVersion()) && !displayVersion.isDraft())) {"], [224, "                displayCitation = dataset.getCitation(false, displayVersion);"], [225, "            } else if (dataset.isReleased() && displayVersion.isDraft()) {"], [226, "                displayCitation = dataset.getCitation(false, displayVersion.getMostRecentlyReleasedVersion());"], [227, "            } else if (dataset.isReleased() && !displayVersion.equals(dataset.getLatestVersion())) {"], [228, "                displayCitation = dataset.getCitation(false, displayVersion.getLargestMinorRelease());"], [229, "            } else {"], [230, "                displayCitation = \"\";"], [231, "            }"], [232, "            */"], [233, "            // show citation for current display version if draft note it on page"], [235, "                 datasetVersionUI = new DatasetVersionUI(displayVersion);"], [236, "                 displayCitation = dataset.getCitation(false, displayVersion);"], [237, "            } catch (NullPointerException npe){"], [241, ""], [377, ""], [385, "                    String fileName = fileMetadata.getLabel();"], [624, ""], [684, ""], [685, "    private boolean canIssueUpdateCommand(){"], [697, ""], [699, "        List <DatasetVersion> retList = new ArrayList();"], [701, "            if (canIssueUpdateCommand()) {"], [702, "                return dataset.getVersions();"], [703, "            } else {"], [704, "                for(DatasetVersion version: dataset.getVersions()){"], [705, "                    if (version.isReleased()){"], [706, "                        retList.add(version);"], [707, "                    }"], [709, "                return retList;"], [710, ""], [713, ""]]}, "num_lines_added": 53, "num_lines_removed": 43}