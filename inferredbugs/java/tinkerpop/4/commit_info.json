{"hash": "a5cef42dea8bd862a13de226749def1fc5a2f1b6", "message": "Fixed bug in setting hidden properties.\n\nAdded serialization tests for hidden properties.", "file_num_lines": 212, "diff_parsed": {"added": [[5, "import com.tinkerpop.blueprints.Property;"], [188, "    public void serializedHiddenProperties() throws Exception {"], [189, "        final Graph g = TinkerGraph.open();"], [190, "        final Vertex v = g.addVertex();"], [191, "        v.setProperty(\"abc\", 123);"], [192, "        final Property withHidden = v.setProperty(\"xyz\", 321);"], [193, "        withHidden.setProperty(\"audit\", \"stephen\");"], [194, ""], [195, "        final Iterator iterable = g.query().vertices().iterator();"], [196, "        final String results = ResultSerializer.JSON_RESULT_SERIALIZER.serialize(iterable, new Context(msg, null, null, null, null));"], [197, "        final JSONObject json = new JSONObject(results);"], [198, ""], [199, "        assertNotNull(json);"], [200, "        assertEquals(msg.requestId.toString(), json.getString(ResultSerializer.JsonResultSerializer.TOKEN_REQUEST));"], [201, "        final JSONArray converted = json.getJSONArray(ResultSerializer.JsonResultSerializer.TOKEN_RESULT);"], [202, ""], [203, "        assertNotNull(converted);"], [204, "        assertEquals(1, converted.length());"], [205, ""], [206, "        final JSONObject vertexAsJson = converted.optJSONObject(0);"], [207, "        assertNotNull(vertexAsJson);"], [208, ""], [209, "        final JSONObject properties = vertexAsJson.optJSONObject(ResultSerializer.JsonResultSerializer.TOKEN_PROPERTIES);"], [210, "        assertNotNull(properties);"], [211, ""], [212, "        final JSONObject valAbcProperty = properties.optJSONObject(\"abc\");"], [213, "        assertNotNull(valAbcProperty);"], [214, "        assertEquals(123, valAbcProperty.getInt(ResultSerializer.JsonResultSerializer.TOKEN_VALUE));"], [215, ""], [216, "        final JSONObject valXyzProperty = properties.optJSONObject(\"xyz\");"], [217, "        assertNotNull(valXyzProperty);"], [218, "        assertEquals(321, valXyzProperty.getInt(ResultSerializer.JsonResultSerializer.TOKEN_VALUE));"], [219, ""], [220, "        final JSONObject hiddenProperties = valXyzProperty.getJSONObject(ResultSerializer.JsonResultSerializer.TOKEN_HIDDEN);"], [221, "        assertNotNull(hiddenProperties);"], [222, "        assertEquals(\"stephen\", hiddenProperties.getJSONObject(\"audit\").getString(ResultSerializer.JsonResultSerializer.TOKEN_VALUE));"], [223, "    }"], [224, ""], [225, "    @Test"], [227, "        final Graph g = TinkerGraph.open();"], [257, "        final JSONArray friendsProperty = properties.optJSONObject(\"friends\").optJSONArray(ResultSerializer.JsonResultSerializer.TOKEN_VALUE);"]], "deleted": [[188, "        Graph g = TinkerGraph.open(Optional.empty());"], [218, "        final JSONArray friendsProperty = properties.optJSONArray(\"friends\");"]]}, "num_lines_added": 41, "num_lines_removed": 2}