{"hash": "693ddf13c6c849bd2877f7058c10fc6590107270", "message": "reorganizing, small bug fix for bill views", "file_num_lines": 605, "diff_parsed": {"added": [[57, "\tpublic enum IngestType {"], [58, "\t\tBILL(\"bill\", Bill.class),"], [59, "\t\tCALENDAR(\"calendar\", Calendar.class),"], [60, "\t\tAGENDA(\"meeting\", Agenda.class),"], [61, "\t\tTRANSCRIPT(\"transcript\", Transcript.class);"], [62, ""], [63, "\t\tprivate String type;"], [64, "\t\tprivate Class<? extends ISenateObject> clazz;"], [65, ""], [66, "\t\tprivate IngestType(String type, Class<? extends ISenateObject> clazz) {"], [67, "\t\t\tthis.type = type;"], [68, "\t\t\tthis.clazz = clazz;"], [70, ""], [71, "\t\tpublic String type() {"], [72, "\t\t\treturn type;"], [73, "\t\t}"], [74, ""], [75, "\t\tpublic Class<? extends ISenateObject> clazz() {"], [76, "\t\t\treturn clazz;"], [77, "\t\t}"], [78, "\t}"], [79, ""], [80, "\tpublic IngestType getIngestType(String type) {"], [81, "\t\tfor(IngestType ingestType:IngestType.values()) {"], [82, "\t\t\tif(ingestType.type().equalsIgnoreCase(type))"], [83, "\t\t\t\treturn ingestType;"], [85, "\t\treturn null;"], [107, ""], [148, "\t\t\t\telse if(command.equals(\"-bulk\")) {"], [149, "\t\t\t\t\tir.bulkIndexJsonDirectory(ir.getIngestType(args[1]).clazz(),args[2]);"], [150, "\t\t\t\t}"], [172, "\t\t\t\t\t\"\\t-pull <sobi directory> <output directory> <id> <year> (get an objects referencing sobis)\" +"], [173, "\t\t\t\t\t\"\\t-bulk <object type> <json directory> (bulk index directory ofjson objects)\");"], [174, "\t\t}"], [175, "\t}"], [176, ""], [177, "\tpublic void bulkIndexJsonDirectory(Class<? extends ISenateObject> clazz, String directory) throws IOException {"], [178, "\t\tluceneObjects = new ArrayList<ILuceneObject>();"], [179, ""], [180, "\t\tlong start = System.currentTimeMillis();"], [181, "\t\tdoBulk(clazz, directory);"], [182, "\t\tlogger.warn(((System.currentTimeMillis()-start))/1000.0+\" - Read \" + luceneObjects.size() + \" Objects\");"], [183, ""], [184, "\t\tstart = System.currentTimeMillis();"], [185, "\t\tthis.searchEngine.indexSenateObjects("], [186, "\t\t\t\tluceneObjects,"], [187, "\t\t\t\tnew LuceneSerializer[]{\tnew XmlSerializer(), new JsonSerializer()});"], [188, "\t\tluceneObjects.clear();"], [189, "\t\tlogger.warn(((System.currentTimeMillis()-start))/1000.0+\" - Indexed Objects\");"], [190, "\t}"], [191, ""], [192, "\tprivate void doBulk(Class<? extends ISenateObject> clazz, String directory) {"], [193, "\t\tFile file = new File(directory);"], [194, "\t\tif(file.isDirectory()) {"], [195, "\t\t\tfor(File f:file.listFiles()) {"], [196, "\t\t\t\tdoBulk(clazz, f.getAbsolutePath());"], [197, "\t\t\t}"], [198, "\t\t}"], [199, "\t\telse {"], [200, "\t\t\tluceneObjects.add(loadObject(directory, clazz));"], [404, "\t\tlogger.warn(\"Indexing object \" + obj.luceneOid());"], [515, "\t@SuppressWarnings(\"serial\")"], [516, "\tpublic static class IngestException extends Exception {"], [517, "\t\tpublic IngestException() {"], [518, "\t\t\tsuper();"], [519, "\t\t}"], [520, ""], [521, "\t\tpublic IngestException(String message) {"], [522, "\t\t\tsuper(message);"], [523, "\t\t}"], [524, "\t}"], [525, ""]], "deleted": [[57, "\t@SuppressWarnings(\"serial\")"], [58, "\tpublic static class IngestException extends Exception {"], [59, "\t\tpublic IngestException() {"], [60, "\t\t\tsuper();"], [62, ""], [63, "\t\tpublic IngestException(String message) {"], [64, "\t\t\tsuper(message);"], [87, ""], [114, ""], [150, "\t\t\t\t\t\"\\t-pull <sobi directory> <output directory> <id> <year> (get an objects referencing sobis)\");"]]}, "num_lines_added": 72, "num_lines_removed": 10}