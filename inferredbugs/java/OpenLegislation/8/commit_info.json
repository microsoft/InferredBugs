{"hash": "58ee98a539c4dd793f4a2766a5ff5f8e47d362ac", "message": "more work on lbdc pulling, small bug fix in basic parser", "file_num_lines": 263, "diff_parsed": {"added": [[9, "import java.io.File;"], [10, "import java.io.FileOutputStream;"], [11, "import java.io.FileReader;"], [14, "import java.net.InetSocketAddress;"], [15, "import java.net.SocketAddress;"], [17, "import java.nio.ByteBuffer;"], [18, "import java.nio.channels.FileChannel;"], [19, "import java.nio.channels.SocketChannel;"], [20, "import java.nio.charset.Charset;"], [23, "import java.util.Arrays;"], [24, "import java.util.TreeSet;"], [31, "\tprivate static final int PORT = 80;"], [33, "\tprivate static final String TEMP_FILE_NAME = \"lbdc.bill.temp\";"], [34, ""], [35, "\tpublic static void main(String[] args) throws IOException, org.apache.lucene.queryParser.ParseException, InterruptedException {"], [36, ""], [37, "\t\tTreeSet<String> set = new TreeSet<String>();"], [38, ""], [39, "\t\tset.addAll(Arrays.asList(\"summary\",\"billno\",\"year\",\"sponsor\",\"cosponsors\",\"when\",\"sameas\",\"committee\",\"status\",\"location\",\"session-type\",\"chair\"));"], [41, ""], [42, "\t\tfor(String s:set) {"], [43, "\t\t\tSystem.out.print(\"\\\"\" + s + \"\\\", \");"], [44, "\t\t}"], [45, "//"], [46, "//\t\tReportBuilder reportBuilder = new ReportBuilder();"], [47, "//\t\tTreeSet<ReportBill> bills = reportBuilder.getBillReportSet(\"2011\");"], [48, "//"], [49, "//\t\tLRSConnect l = LRSConnect.getInstance();"], [50, "//"], [51, "//\t\tfor(ReportBill bill:bills) {"], [52, "//\t\t\tif(bill.getHeat() < 7)"], [53, "//\t\t\t\tbreak;"], [54, "//"], [55, "//\t\t\tSystem.out.print(\"testing bill \" + bill.getBill());"], [56, "//"], [57, "//\t\t\tif(l.getBillFromLbdc(bill.getBill()) == null)"], [58, "//\t\t\t\tSystem.out.println(\" -- delete \" + bill.getMissingFields());"], [59, "//\t\t\telse"], [60, "//\t\t\t\tSystem.out.println(\" -- keep \" + bill.getMissingFields());"], [61, "//"], [62, "//"], [63, "//\t\t\tThread.currentThread().sleep(3600);"], [64, "//\t\t}"], [68, "\tprivate static final String BASE_URL = \"http://public.leginfo.state.ny.us\";"], [69, "\tprivate static final String APPLICATION = \"/bstfrmef.cgi?\";"], [101, "\tprivate String constructUrlFile(String billNumber, String year) {"], [102, "\t\treturn APPLICATION + QUERY_TYPE + SESSION_YEAR + year"], [108, "\tpublic Bill getBillFromLbdc(String bill) {"], [109, "\t\tif(bill.indexOf(\"0\") == -1)"], [110, "\t\t\treturn getBillFromLbdc(bill, SessionYear.getSessionYear()+\"\");"], [112, "\t\t\tString[] strings = bill.split(\"-\");"], [113, "\t\t\treturn getBillFromLbdc(strings[0], strings[1]);"], [117, "\tpublic Bill getBillFromLbdc(String billNumber, String year) {"], [118, "\t\tBill bill = new Bill();"], [119, "\t\tFile file = new File(TEMP_FILE_NAME);"], [120, "\t\ttry {"], [121, "\t\t\twriteDataFromLbdc(billNumber, year);"], [122, ""], [123, "\t\t\tBufferedReader br = new BufferedReader(new FileReader(file));"], [124, ""], [125, "\t\t\t//skip past http header"], [126, "\t\t\twhile(!br.readLine().equals(\"Content-type: text/html\"));"], [127, "\t\t\tbr.readLine();"], [128, ""], [129, "\t\t\tString in = null;"], [130, ""], [131, "\t\t\tString status = null;"], [132, "\t\t\tString summary = null;"], [133, "\t\t\tString text = null;"], [134, "\t\t\tString memo = null;"], [135, ""], [136, "\t\t\twhile((in = br.readLine()) != null) {"], [137, "\t\t\t\tif(in.contains(\"<B>STATUS:</B>\")) {"], [138, "\t\t\t\t\tstatus = \"\";"], [139, "\t\t\t\t}"], [140, "\t\t\t\telse if(in.contains(\"<B>SUMMARY:</B>\")) {"], [141, "\t\t\t\t\tsummary = \"\";"], [142, "\t\t\t\t}"], [143, "\t\t\t\telse if(in.contains(\"<B>BILL TEXT:</B>\")) {"], [144, "\t\t\t\t\ttext = \"\";"], [145, "\t\t\t\t}"], [146, "\t\t\t\telse if(in.contains(\"<B>SPONSORS MEMO:</B>\")) {"], [147, "\t\t\t\t\tmemo = \"\";"], [148, "\t\t\t\t}"], [150, "\t\t\t\tif(memo != null) {"], [151, "\t\t\t\t\tmemo += in;"], [152, "\t\t\t\t}"], [153, "\t\t\t\telse if(text != null) {"], [154, "\t\t\t\t\ttext += in;"], [155, "\t\t\t\t}"], [156, "\t\t\t\telse if(summary != null) {"], [157, "\t\t\t\t\tsummary += in;"], [158, "\t\t\t\t}"], [159, "\t\t\t\telse if(status != null) {"], [160, "\t\t\t\t\tstatus += in;"], [161, "\t\t\t\t}"], [163, "\t\t\tbr.close();"], [164, ""], [165, "\t\t\tbill.setSenateBillNo(bill + \"-\" + year);"], [167, "\t\t\tif(parseStatus(status, bill)"], [168, "\t\t\t\t\t&& parseSummary(summary, bill)"], [169, "\t\t\t\t\t&& parseText(text, bill)"], [170, "\t\t\t\t\t&& parseMemo(memo, bill)) {"], [171, "\t\t\t\t//success"], [172, ""], [174, "\t\t\telse {"], [175, "\t\t\t\tbill = null;"], [178, "\t\t} catch (IOException e) {"], [179, "\t\t\te.printStackTrace();"], [180, "\t\t\tlogger.error(e);"], [182, "\t\tcatch (Exception e) {"], [183, "\t\t\te.printStackTrace();"], [184, "\t\t\tlogger.error(e);"], [185, "\t\t}"], [186, "\t\tfinally {"], [187, "\t\t\tif(file.exists())"], [188, "\t\t\t\tfile.delete();"], [190, ""], [191, "\t\treturn bill;"], [263, ""], [266, "\t\tif(strings.length == 3) {"], [267, "\t\t\tbill.setSummary(strings[2]);"], [268, "\t\t}"], [269, "\t\telse {"], [270, "\t\t\tbill.setSummary(strings[3]);"], [271, "\t\t}"], [272, ""], [273, ""], [296, "\t\t/*memo = memo.replaceAll(\"&nbsp;\", \"\").replaceAll(\"(?i)<br>\",\"\\n\")"], [305, "\t\tbill.setMemo(strings[5]);*/"], [337, ""], [338, "\tprivate SocketChannel getSocketChannel(String url, String file) throws IOException {"], [339, "\t\tURL connectUrl = new URL(url);"], [340, "\t\tString host = connectUrl.getHost();"], [341, ""], [342, "\t\tSocketAddress remote = new InetSocketAddress(host, PORT);"], [343, "\t\tSocketChannel channel = SocketChannel.open(remote);"], [344, ""], [345, "\t\tString request = \"GET \" + file + \" HTTP/1.1\\r\\n\" + \"User-Agent: HTTPGrab\\r\\n\" +"], [346, "\t\t\t\"Accept: text/*\\r\\nConnection: close\\r\\nHost: \" + host + \"\\r\\n\\r\\n\";"], [347, ""], [348, "\t\tByteBuffer header = ByteBuffer.wrap(request.getBytes(\"US-ASCII\"));"], [349, "\t\tchannel.write(header);"], [350, ""], [351, "\t\treturn channel;"], [352, "\t}"], [353, ""], [354, "\tprivate void writeDataFromLbdc(String billNumber, String year) throws IOException {"], [355, "\t\tSocketChannel channel = getSocketChannel(BASE_URL, this.constructUrlFile(billNumber, year));"], [356, ""], [357, "\t\tFileOutputStream out = new FileOutputStream(TEMP_FILE_NAME);"], [358, "\t\tFileChannel local = out.getChannel();"], [359, ""], [360, "\t\tByteBuffer buffer = ByteBuffer.allocate(131072);"], [361, "\t\twhile(channel.read(buffer) != -1) {"], [362, "\t\t\tbuffer.flip();"], [363, "\t\t\tlocal.write(ByteBuffer.wrap(Charset.forName(\"ISO-8859-1\").decode(buffer).toString().getBytes()));"], [364, "\t\t\tbuffer.clear();"], [365, "\t\t}"], [366, ""], [367, "\t\tlocal.close();"], [368, "\t\tchannel.close();"], [369, "\t}"]], "deleted": [[21, "\tpublic static void main(String[] args) throws IOException {"], [22, "\t\tLRSConnect l = LRSConnect.getInstance();"], [24, "\t\tSystem.out.println(l.getLbdcBill(\"s1234-2011\").getSummary());"], [25, "\t\tSystem.out.println(l.getLbdcBill(\"s2008-2011\").getSummary());"], [26, "\t\tSystem.out.println(l.getLbdcBill(\"s1-2011\"));"], [30, "\tprivate static final String BASE_URL = \"http://public.leginfo.state.ny.us/bstfrmef.cgi?\";"], [62, "\tpublic String queryBill(String billNumber) {"], [63, "\t\tif(billNumber.indexOf(\"-\") != -1) {"], [64, "\t\t\tString[] parts = billNumber.split(\"-\");"], [65, "\t\t\treturn constructUrl(parts[0], parts[1]);"], [66, "\t\t}"], [67, "\t\treturn constructUrl(billNumber, SessionYear.getSessionYear() + \"\");"], [68, "\t}"], [69, ""], [70, "\tpublic String queryBill(String billNumber, String year) {"], [71, "\t\treturn constructUrl(billNumber, year);"], [72, "\t}"], [73, ""], [74, "\tprivate String constructUrl(String billNumber, String year) {"], [75, "\t\treturn BASE_URL + QUERY_TYPE + SESSION_YEAR + year"], [81, "\tpublic Bill getLbdcBill(String billNumber) throws IOException {"], [82, "\t\tif(billNumber.indexOf(\"0\") == -1)"], [83, "\t\t\treturn getLbdcBill(billNumber, SessionYear.getSessionYear()+\"\");"], [85, "\t\t\tString[] strings = billNumber.split(\"-\");"], [86, "\t\t\treturn getLbdcBill(strings[0], strings[1]);"], [90, "\tpublic Bill getLbdcBill(String billNo, String year) throws IOException {"], [91, "\t\tBufferedReader br = new BufferedReader("], [92, "\t\t\t\tnew InputStreamReader("], [93, "\t\t\t\t\t\tnew URL(this.constructUrl(billNo, year)).openStream()));"], [94, ""], [95, "\t\tString in = null;"], [96, ""], [97, "\t\tString status = null;"], [98, "\t\tString summary = null;"], [99, "\t\tString text = null;"], [100, "\t\tString memo = null;"], [102, "\t\twhile((in = br.readLine()) != null) {"], [103, "\t\t\tif(in.contains(\"<B>STATUS:</B>\")) {"], [104, "\t\t\t\tstatus = \"\";"], [105, "\t\t\t}"], [106, "\t\t\telse if(in.contains(\"<B>SUMMARY:</B>\")) {"], [107, "\t\t\t\tsummary = \"\";"], [108, "\t\t\t}"], [109, "\t\t\telse if(in.contains(\"<B>BILL TEXT:</B>\")) {"], [110, "\t\t\t\ttext = \"\";"], [111, "\t\t\t}"], [112, "\t\t\telse if(in.contains(\"<B>SPONSORS MEMO:</B>\")) {"], [113, "\t\t\t\tmemo = \"\";"], [116, "\t\t\tif(memo != null) {"], [117, "\t\t\t\tmemo += in;"], [118, "\t\t\t}"], [119, "\t\t\telse if(text != null) {"], [120, "\t\t\t\ttext += in;"], [121, "\t\t\t}"], [122, "\t\t\telse if(summary != null) {"], [123, "\t\t\t\tsummary += in;"], [125, "\t\t\telse if(status != null) {"], [126, "\t\t\t\tstatus += in;"], [128, "\t\t}"], [129, "\t\tbr.close();"], [130, ""], [131, "\t\tBill bill = new Bill();"], [132, "\t\tbill.setSenateBillNo(bill + \"-\" + year);"], [133, ""], [134, "\t\tif(parseStatus(status, bill)"], [135, "\t\t\t\t&& parseSummary(summary, bill)"], [136, "\t\t\t\t&& parseText(text, bill)"], [137, "\t\t\t\t&& parseMemo(memo, bill)) {"], [138, "\t\t\t//success"], [140, "\t\t\treturn bill;"], [142, "\t\telse {"], [143, "\t\t\treturn null;"], [216, ""], [219, "\t\tbill.setSummary(strings[3]);"], [242, "\t\tmemo = memo.replaceAll(\"&nbsp;\", \"\").replaceAll(\"(?i)<br>\",\"\\n\")"], [251, "\t\tbill.setMemo(strings[5]);"]]}, "num_lines_added": 163, "num_lines_removed": 76}