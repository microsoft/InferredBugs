{"hash": "c9dedff12e98a34ab4225bc65f810c0954207f11", "message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 378, "diff_parsed": {"added": [[286, "        CSVFormat format = new CSVFormat(',', '\\'', CSVFormat.DISABLED, '/', false, false, true, \"\\r\\n\", null);"], [315, "        CSVFormat format = new CSVFormat(',',  CSVFormat.DISABLED,  CSVFormat.DISABLED, '/', false, false, true, \"\\r\\n\", null);"]], "deleted": [[286, "        CSVFormat format = new CSVFormat(',', '\\'', CSVFormat.DISABLED, '/', false, false, true, true, \"\\r\\n\", null);"], [315, "        CSVFormat format = new CSVFormat(',',  CSVFormat.DISABLED,  CSVFormat.DISABLED, '/', false, false, true, true, \"\\r\\n\", null);"], [360, "    public void testUnicodeEscape() throws Exception {"], [361, "        String code = \"abc,\\\\u0070\\\\u0075\\\\u0062\\\\u006C\\\\u0069\\\\u0063\";"], [362, "        CSVParser parser = new CSVParser(code, CSVFormat.DEFAULT.withUnicodeEscapesInterpreted(true));"], [363, "        final Iterator<CSVRecord> iterator = parser.iterator();"], [364, "        CSVRecord record = iterator.next();"], [365, "        assertEquals(2, record.size());"], [366, "        assertEquals(\"abc\", record.get(0));"], [367, "        assertEquals(\"public\", record.get(1));"], [368, "        assertFalse(\"Should not have any more records\", iterator.hasNext());"], [369, "    }"], [370, ""], [371, "    @Test"], [372, "    public void testUnicodeEscapeMySQL() throws Exception {"], [373, "        String code = \"abc\\t\\\\u0070\\\\u0075\\\\u0062\\\\u006C\\\\u0069\\\\u0063\";"], [374, "        CSVParser parser = new CSVParser(code, CSVFormat.MYSQL.withUnicodeEscapesInterpreted(true));"], [375, "        final Iterator<CSVRecord> iterator = parser.iterator();"], [376, "        CSVRecord record = iterator.next();"], [377, "        assertEquals(2, record.size());"], [378, "        assertEquals(\"abc\", record.get(0));"], [379, "        assertEquals(\"public\", record.get(1));"], [380, "        assertFalse(\"Should not have any more records\", iterator.hasNext());"], [381, "    }"], [382, ""], [383, "    @Test"]]}, "num_lines_added": 2, "num_lines_removed": 26}