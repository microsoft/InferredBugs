{"hash": "152d50c4f7204c5620277e18c9ab032aac03416d", "message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 603, "diff_parsed": {"added": [[73, "        final CSVParser parser = CSVParser.parse(CSVINPUT, CSVFormat.DEFAULT.withIgnoreSurroundingSpaces(true));"], [83, "        final CSVParser parser = CSVParser.parse(CSVINPUT, CSVFormat.DEFAULT.withIgnoreSurroundingSpaces(true));"], [104, "        final CSVParser parser = CSVParser.parse(code, CSVFormat.EXCEL);"], [123, "        final CSVParser parser = CSVParser.parse(code, CSVFormat.EXCEL);"], [151, "            final CSVParser parser = CSVParser.parse(code, CSVFormat.EXCEL);"], [178, "            final CSVParser parser = CSVParser.parse(code, CSVFormat.DEFAULT);"], [202, "            final CSVParser parser = CSVParser.parse(code, CSVFormat.EXCEL);"], [224, "            final CSVParser parser = CSVParser.parse(code, CSVFormat.DEFAULT);"], [236, "        final CSVParser parser = CSVParser.parse(\"\", CSVFormat.DEFAULT);"], [242, "        final CSVParser parser = CSVParser.parse(\"\", CSVFormat.DEFAULT);"], [272, "        final CSVParser parser = CSVParser.parse(code, CSVFormat.DEFAULT);"], [317, "        final CSVParser parser = CSVParser.parse(code, format);"], [346, "        final CSVParser parser = CSVParser.parse(code, format);"], [371, "        CSVParser parser = CSVParser.parse(code, format);"], [383, "        parser = CSVParser.parse(code, format);"], [392, "        final CSVParser parser = CSVParser.parse(code, CSVFormat.DEFAULT);"], [411, "        final CSVParser parser = CSVParser.parse(code, CSVFormat.DEFAULT);"], [419, "        final CSVParser parser = CSVParser.parse(code, CSVFormat.DEFAULT);"], [429, "        final CSVParser parser = CSVParser.parse(code, CSVFormat.DEFAULT);"], [455, "        for (final CSVRecord record : CSVParser.parse(input, CSVFormat.DEFAULT)) {"], [625, "        final CSVParser parser = CSVParser.parse(\"a,b,c\\n1,2,3\\nx,y,z\", CSVFormat.DEFAULT.withHeader(\"A\", \"B\", \"C\"));"], [668, "        final CSVParser parser = CSVParser.parse(\"\\\"a\\r\\n1\\\",\\\"a\\r\\n2\\\"\" + CRLF + \"\\\"b\\r\\n1\\\",\\\"b\\r\\n2\\\"\" + CRLF + \"\\\"c\\r\\n1\\\",\\\"c\\r\\n2\\\"\","], [707, "        final CSVParser parser = CSVParser.parse(\"a\" + lineSeparator + \"b\" + lineSeparator + \"c\", CSVFormat.DEFAULT.withRecordSeparator(lineSeparator));"], [724, "        final CSVParser parser = CSVParser.parse(\"a\" + lineSeparator + \"b\" + lineSeparator + \"c\", CSVFormat.DEFAULT.withRecordSeparator(lineSeparator));"]], "deleted": [[73, "        final CSVParser parser = CSVParser.parseString(CSVINPUT, CSVFormat.DEFAULT.withIgnoreSurroundingSpaces(true));"], [83, "        final CSVParser parser = CSVParser.parseString(CSVINPUT, CSVFormat.DEFAULT.withIgnoreSurroundingSpaces(true));"], [104, "        final CSVParser parser = CSVParser.parseString(code, CSVFormat.EXCEL);"], [123, "        final CSVParser parser = CSVParser.parseString(code, CSVFormat.EXCEL);"], [151, "            final CSVParser parser = CSVParser.parseString(code, CSVFormat.EXCEL);"], [178, "            final CSVParser parser = CSVParser.parseString(code, CSVFormat.DEFAULT);"], [202, "            final CSVParser parser = CSVParser.parseString(code, CSVFormat.EXCEL);"], [224, "            final CSVParser parser = CSVParser.parseString(code, CSVFormat.DEFAULT);"], [236, "        final CSVParser parser = CSVParser.parseString(\"\", CSVFormat.DEFAULT);"], [242, "        final CSVParser parser = CSVParser.parseString(\"\", CSVFormat.DEFAULT);"], [272, "        final CSVParser parser = CSVParser.parseString(code, CSVFormat.DEFAULT);"], [317, "        final CSVParser parser = CSVParser.parseString(code, format);"], [346, "        final CSVParser parser = CSVParser.parseString(code, format);"], [371, "        CSVParser parser = CSVParser.parseString(code, format);"], [383, "        parser = CSVParser.parseString(code, format);"], [392, "        final CSVParser parser = CSVParser.parseString(code, CSVFormat.DEFAULT);"], [411, "        final CSVParser parser = CSVParser.parseString(code, CSVFormat.DEFAULT);"], [419, "        final CSVParser parser = CSVParser.parseString(code, CSVFormat.DEFAULT);"], [429, "        final CSVParser parser = CSVParser.parseString(code, CSVFormat.DEFAULT);"], [455, "        for (final CSVRecord record : CSVParser.parseString(input, CSVFormat.DEFAULT)) {"], [625, "        final CSVParser parser = CSVParser.parseString(\"a,b,c\\n1,2,3\\nx,y,z\", CSVFormat.DEFAULT.withHeader(\"A\", \"B\", \"C\"));"], [668, "        final CSVParser parser = CSVParser.parseString(\"\\\"a\\r\\n1\\\",\\\"a\\r\\n2\\\"\" + CRLF + \"\\\"b\\r\\n1\\\",\\\"b\\r\\n2\\\"\" + CRLF + \"\\\"c\\r\\n1\\\",\\\"c\\r\\n2\\\"\","], [707, "        final CSVParser parser = CSVParser.parseString(\"a\" + lineSeparator + \"b\" + lineSeparator + \"c\", CSVFormat.DEFAULT.withRecordSeparator(lineSeparator));"], [724, "        final CSVParser parser = CSVParser.parseString(\"a\" + lineSeparator + \"b\" + lineSeparator + \"c\", CSVFormat.DEFAULT.withRecordSeparator(lineSeparator));"]]}, "num_lines_added": 24, "num_lines_removed": 24}