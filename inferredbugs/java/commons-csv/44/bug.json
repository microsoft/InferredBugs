{"bug_class": "PROVER", "kind": "ERROR", "bug_type": "RESOURCE_LEAK", "qualifier": "resource of type `org.apache.commons.csv.ExtendedBufferedReader` acquired by call to `getLexer(...)` at line 181 is not released after line 189.", "severity": "HIGH", "visibility": "user", "line": 189, "column": -1, "procedure": "void CSVLexerTest.testNextToken3Escaping()", "procedure_id": "org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping():void.2aaf449b9dabdb78057193b428c290e7", "procedure_start_line": 174, "file": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "bug_trace": [{"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 174, "column_number": -1, "description": "start of procedure testNextToken3Escaping()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 178, "column_number": -1, "description": ""}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 179, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 310, "column_number": -1, "description": "start of procedure withEscape(...)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 311, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 174, "column_number": -1, "description": "start of procedure isLineBreak(...)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 175, "column_number": -1, "description": "Taking true branch"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 175, "column_number": -1, "description": "Taking false branch"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 175, "column_number": -1, "description": "return from a call to boolean CSVFormat.isLineBreak(char)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 311, "column_number": -1, "description": "Taking false branch"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 315, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 145, "column_number": -1, "description": "start of procedure CSVFormat(...)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 153, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 154, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 155, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 156, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 157, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 158, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 159, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 160, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 161, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 162, "column_number": -1, "description": "Taking false branch"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 163, "column_number": -1, "description": "Taking false branch"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 164, "column_number": -1, "description": "Taking true branch"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 165, "column_number": -1, "description": "return from a call to CSVFormat.<init>(char,char,char,char,boolean,boolean,String,java.lang.String[])"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 315, "column_number": -1, "description": "return from a call to CSVFormat CSVFormat.withEscape(char)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 180, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 319, "column_number": -1, "description": "start of procedure isEscaping()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 319, "column_number": -1, "description": "return from a call to boolean CSVFormat.isEscaping()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 180, "column_number": -1, "description": "Skipping assertTrue(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 181, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 30, "column_number": -1, "description": "start of procedure getLexer(...)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 31, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java", "line_number": 51, "column_number": -1, "description": "start of procedure ExtendedBufferedReader(...)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java", "line_number": 52, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java", "line_number": 43, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java", "line_number": 46, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java", "line_number": 53, "column_number": -1, "description": "return from a call to ExtendedBufferedReader.<init>(StringReader)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 31, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 27, "column_number": -1, "description": "start of procedure CSVLexer(...)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 28, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 45, "column_number": -1, "description": "start of procedure Lexer(...)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 46, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 47, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 48, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 252, "column_number": -1, "description": "start of procedure isEncapsulating()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 252, "column_number": -1, "description": "return from a call to boolean CSVFormat.isEncapsulating()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 48, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 49, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 319, "column_number": -1, "description": "start of procedure isEscaping()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 319, "column_number": -1, "description": "return from a call to boolean CSVFormat.isEscaping()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 49, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 50, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 291, "column_number": -1, "description": "start of procedure isCommentingEnabled()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 291, "column_number": -1, "description": "return from a call to boolean CSVFormat.isCommentingEnabled()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 50, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 51, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 208, "column_number": -1, "description": "start of procedure getDelimiter()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 209, "column_number": -1, "description": "return from a call to char CSVFormat.getDelimiter()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 51, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 52, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 299, "column_number": -1, "description": "start of procedure getEscape()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 300, "column_number": -1, "description": "return from a call to char CSVFormat.getEscape()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 52, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 53, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 232, "column_number": -1, "description": "start of procedure getEncapsulator()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 233, "column_number": -1, "description": "return from a call to char CSVFormat.getEncapsulator()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 53, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 54, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 260, "column_number": -1, "description": "start of procedure getCommentStart()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 261, "column_number": -1, "description": "return from a call to char CSVFormat.getCommentStart()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 54, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 55, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 327, "column_number": -1, "description": "start of procedure isSurroundingSpacesIgnored()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 328, "column_number": -1, "description": "return from a call to boolean CSVFormat.isSurroundingSpacesIgnored()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 55, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 56, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 347, "column_number": -1, "description": "start of procedure isEmptyLinesIgnored()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 348, "column_number": -1, "description": "return from a call to boolean CSVFormat.isEmptyLinesIgnored()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 56, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 57, "column_number": -1, "description": "return from a call to Lexer.<init>(CSVFormat,ExtendedBufferedReader)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 29, "column_number": -1, "description": "return from a call to CSVLexer.<init>(CSVFormat,ExtendedBufferedReader)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 31, "column_number": -1, "description": "return from a call to Lexer CSVLexerTest.getLexer(String,CSVFormat)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 183, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 28, "column_number": -1, "description": "start of procedure Token()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 51, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 54, "column_number": -1, "description": "return from a call to Token.<init>()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 183, "column_number": -1, "description": "Skipping nextToken(...): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 41, "column_number": -1, "description": "Definition of nextToken(...)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 183, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 34, "column_number": -1, "description": "start of procedure assertTokenEquals(...)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 35, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 36, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 37, "column_number": -1, "description": "return from a call to void CSVLexerTest.assertTokenEquals(Token$Type,String,Token)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 184, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 28, "column_number": -1, "description": "start of procedure Token()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 51, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 54, "column_number": -1, "description": "return from a call to Token.<init>()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 184, "column_number": -1, "description": "Skipping nextToken(...): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 41, "column_number": -1, "description": "Definition of nextToken(...)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 184, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 34, "column_number": -1, "description": "start of procedure assertTokenEquals(...)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 35, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 36, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 37, "column_number": -1, "description": "return from a call to void CSVLexerTest.assertTokenEquals(Token$Type,String,Token)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 185, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 28, "column_number": -1, "description": "start of procedure Token()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 51, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 54, "column_number": -1, "description": "return from a call to Token.<init>()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 185, "column_number": -1, "description": "Skipping nextToken(...): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 41, "column_number": -1, "description": "Definition of nextToken(...)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 185, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 34, "column_number": -1, "description": "start of procedure assertTokenEquals(...)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 35, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 36, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 37, "column_number": -1, "description": "return from a call to void CSVLexerTest.assertTokenEquals(Token$Type,String,Token)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 186, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 28, "column_number": -1, "description": "start of procedure Token()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 51, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 54, "column_number": -1, "description": "return from a call to Token.<init>()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 186, "column_number": -1, "description": "Skipping nextToken(...): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 41, "column_number": -1, "description": "Definition of nextToken(...)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 186, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 34, "column_number": -1, "description": "start of procedure assertTokenEquals(...)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 35, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 36, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 37, "column_number": -1, "description": "return from a call to void CSVLexerTest.assertTokenEquals(Token$Type,String,Token)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 187, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 28, "column_number": -1, "description": "start of procedure Token()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 51, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 54, "column_number": -1, "description": "return from a call to Token.<init>()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 187, "column_number": -1, "description": "Skipping nextToken(...): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 41, "column_number": -1, "description": "Definition of nextToken(...)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 187, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 34, "column_number": -1, "description": "start of procedure assertTokenEquals(...)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 35, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 36, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 37, "column_number": -1, "description": "return from a call to void CSVLexerTest.assertTokenEquals(Token$Type,String,Token)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 188, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 28, "column_number": -1, "description": "start of procedure Token()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 51, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 54, "column_number": -1, "description": "return from a call to Token.<init>()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 188, "column_number": -1, "description": "Skipping nextToken(...): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 41, "column_number": -1, "description": "Definition of nextToken(...)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 188, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 34, "column_number": -1, "description": "start of procedure assertTokenEquals(...)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 35, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 36, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 37, "column_number": -1, "description": "return from a call to void CSVLexerTest.assertTokenEquals(Token$Type,String,Token)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 189, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 28, "column_number": -1, "description": "start of procedure Token()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 51, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 54, "column_number": -1, "description": "return from a call to Token.<init>()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 189, "column_number": -1, "description": "Skipping nextToken(...): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 41, "column_number": -1, "description": "Definition of nextToken(...)"}], "key": "CSVLexerTest.java|testNextToken3Escaping|RESOURCE_LEAK", "node_key": "7a10da8b4e13d0f73a85b910e94df544", "hash": "79eb1874698801f20e6aa1dc716bb0cc", "bug_type_hum": "Resource Leak", "censored_reason": ""}