{"hash": "045dbbbe4ab84618cee8ba27d00b9283ce0a2715", "message": "Made CSVParser iterable to simplify the iteration over the records\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200024 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 452, "diff_parsed": {"added": [[23, "import java.util.ArrayList;"], [25, "import java.util.Iterator;"], [26, "import java.util.List;"], [27, "import java.util.NoSuchElementException;"], [226, "    public void testGetRecords() throws IOException {"], [525, "        String[] data = parser.iterator().next();"], [572, ""], [573, "    public void testForEach() {"], [574, "        List<String[]> records = new ArrayList<String[]>();"], [575, ""], [576, "        String code = \"a,b,c\\n1,2,3\\nx,y,z\";"], [577, "        Reader in = new StringReader(code);"], [578, ""], [579, "        for (String[] record : new CSVParser(in)) {"], [580, "            records.add(record);"], [581, "        }"], [582, ""], [583, "        assertEquals(3, records.size());"], [584, "        assertTrue(Arrays.equals(new String[] {\"a\", \"b\", \"c\"}, records.get(0)));"], [585, "        assertTrue(Arrays.equals(new String[]{\"1\", \"2\", \"3\"}, records.get(1)));"], [586, "        assertTrue(Arrays.equals(new String[] {\"x\", \"y\", \"z\"}, records.get(2)));"], [587, "    }"], [588, ""], [589, "    public void testIterator() {"], [590, "        String code = \"a,b,c\\n1,2,3\\nx,y,z\";"], [591, "        Iterator<String[]> iterator = new CSVParser(new StringReader(code)).iterator();"], [592, ""], [593, "        assertTrue(iterator.hasNext());"], [594, "        iterator.remove();"], [595, "        assertTrue(Arrays.equals(new String[]{\"a\", \"b\", \"c\"}, iterator.next()));"], [596, "        assertTrue(Arrays.equals(new String[]{\"1\", \"2\", \"3\"}, iterator.next()));"], [597, "        assertTrue(iterator.hasNext());"], [598, "        assertTrue(iterator.hasNext());"], [599, "        assertTrue(iterator.hasNext());"], [600, "        assertTrue(Arrays.equals(new String[]{\"x\", \"y\", \"z\"}, iterator.next()));"], [601, "        assertFalse(iterator.hasNext());"], [602, ""], [603, "        try {"], [604, "            iterator.next();"], [605, "            fail(\"NoSuchElementException expected\");"], [606, "        } catch (NoSuchElementException e) {"], [607, "            // expected"], [608, "        }"], [609, "    }"]], "deleted": [[222, "    public void testGetAllValues() throws IOException {"], [521, "        String[] data = parser.getLine();"]]}, "num_lines_added": 44, "num_lines_removed": 2}