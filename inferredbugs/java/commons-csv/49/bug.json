{"bug_class": "PROVER", "kind": "ERROR", "bug_type": "RESOURCE_LEAK", "qualifier": "resource of type `org.apache.commons.csv.ExtendedBufferedReader` acquired by call to `getLexer(...)` at line 198 is not released after line 206.", "severity": "HIGH", "visibility": "user", "line": 206, "column": -1, "procedure": "void CSVLexerTest.testNextToken3Escaping()", "procedure_id": "org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping():void.2aaf449b9dabdb78057193b428c290e7", "procedure_start_line": 191, "file": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "bug_trace": [{"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 191, "column_number": -1, "description": "start of procedure testNextToken3Escaping()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 195, "column_number": -1, "description": ""}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 196, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 163, "column_number": -1, "description": "start of procedure newBuilder()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 164, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 521, "column_number": -1, "description": "start of procedure CSVFormat$CSVFormatBuilder(...)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 525, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 526, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 232, "column_number": -1, "description": "start of procedure isLineBreak(...)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 233, "column_number": -1, "description": "Taking true branch"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 233, "column_number": -1, "description": "Taking false branch"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 233, "column_number": -1, "description": "return from a call to boolean CSVFormat.isLineBreak(char)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 526, "column_number": -1, "description": "Taking false branch"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 529, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 530, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 531, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 532, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 533, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 534, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 535, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 536, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 537, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 538, "column_number": -1, "description": "return from a call to CSVFormat$CSVFormatBuilder.<init>(char,Character,Quote,Character,Character,boolean,boolean,String,java.lang.String[])"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 164, "column_number": -1, "description": "return from a call to CSVFormat$CSVFormatBuilder CSVFormat.newBuilder()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 196, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 705, "column_number": -1, "description": "start of procedure withEscape(...)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 717, "column_number": -1, "description": "start of procedure withEscape(...)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 718, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 220, "column_number": -1, "description": "start of procedure isLineBreak(...)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 220, "column_number": -1, "description": "Taking true branch"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 232, "column_number": -1, "description": "start of procedure isLineBreak(...)"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 233, "column_number": -1, "description": "Taking true branch"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 233, "column_number": -1, "description": "Taking true branch"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 233, "column_number": -1, "description": "return from a call to boolean CSVFormat.isLineBreak(char)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 220, "column_number": -1, "description": "Taking true branch"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 220, "column_number": -1, "description": "return from a call to boolean CSVFormat.isLineBreak(Character)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 718, "column_number": -1, "description": "Taking false branch"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 721, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 722, "column_number": -1, "description": "return from a call to CSVFormat$CSVFormatBuilder CSVFormat$CSVFormatBuilder.withEscape(Character)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 705, "column_number": -1, "description": "return from a call to CSVFormat$CSVFormatBuilder CSVFormat$CSVFormatBuilder.withEscape(char)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 196, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 770, "column_number": -1, "description": "start of procedure withIgnoreEmptyLines(...)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 771, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 772, "column_number": -1, "description": "return from a call to CSVFormat$CSVFormatBuilder CSVFormat$CSVFormatBuilder.withIgnoreEmptyLines(boolean)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 196, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 572, "column_number": -1, "description": "start of procedure build()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 573, "column_number": -1, "description": "Skipping validate(): empty list of specs"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 583, "column_number": -1, "description": "Definition of validate()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 574, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 191, "column_number": -1, "description": "start of procedure CSVFormat(...)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 195, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 196, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 232, "column_number": -1, "description": "start of procedure isLineBreak(...)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 233, "column_number": -1, "description": "Taking true branch"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 233, "column_number": -1, "description": "Taking false branch"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 233, "column_number": -1, "description": "return from a call to boolean CSVFormat.isLineBreak(char)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 196, "column_number": -1, "description": "Taking false branch"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 199, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 200, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 201, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 202, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 203, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 204, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 205, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 206, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 207, "column_number": -1, "description": "Taking true branch"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 208, "column_number": -1, "description": "return from a call to CSVFormat.<init>(char,Character,Quote,Character,Character,boolean,boolean,String,java.lang.String[])"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 574, "column_number": -1, "description": "return from a call to CSVFormat CSVFormat$CSVFormatBuilder.build()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 197, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 297, "column_number": -1, "description": "start of procedure isEscaping()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 298, "column_number": -1, "description": "Taking true branch"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 298, "column_number": -1, "description": "return from a call to boolean CSVFormat.isEscaping()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 197, "column_number": -1, "description": "Skipping assertTrue(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 198, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 47, "column_number": -1, "description": "start of procedure getLexer(...)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 48, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java", "line_number": 48, "column_number": -1, "description": "start of procedure ExtendedBufferedReader(...)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java", "line_number": 49, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java", "line_number": 40, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java", "line_number": 50, "column_number": -1, "description": "return from a call to ExtendedBufferedReader.<init>(StringReader)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 48, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 36, "column_number": -1, "description": "start of procedure CSVLexer(...)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 37, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 57, "column_number": -1, "description": "start of procedure Lexer(...)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 58, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 59, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 60, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 241, "column_number": -1, "description": "start of procedure getDelimiter()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 242, "column_number": -1, "description": "return from a call to char CSVFormat.getDelimiter()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 60, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 61, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 288, "column_number": -1, "description": "start of procedure getEscape()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 289, "column_number": -1, "description": "return from a call to Character CSVFormat.getEscape()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 61, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 68, "column_number": -1, "description": "start of procedure mapNullToDisabled(...)"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 69, "column_number": -1, "description": "Taking false branch"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 69, "column_number": -1, "description": "return from a call to char Lexer.mapNullToDisabled(Character)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 61, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 62, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 250, "column_number": -1, "description": "start of procedure getQuoteChar()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 251, "column_number": -1, "description": "return from a call to Character CSVFormat.getQuoteChar()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 62, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 68, "column_number": -1, "description": "start of procedure mapNullToDisabled(...)"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 69, "column_number": -1, "description": "Taking false branch"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 69, "column_number": -1, "description": "return from a call to char Lexer.mapNullToDisabled(Character)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 62, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 63, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 268, "column_number": -1, "description": "start of procedure getCommentStart()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 269, "column_number": -1, "description": "return from a call to Character CSVFormat.getCommentStart()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 63, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 68, "column_number": -1, "description": "start of procedure mapNullToDisabled(...)"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 69, "column_number": -1, "description": "Taking true branch"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 69, "column_number": -1, "description": "return from a call to char Lexer.mapNullToDisabled(Character)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 63, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 64, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 307, "column_number": -1, "description": "start of procedure getIgnoreSurroundingSpaces()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 308, "column_number": -1, "description": "return from a call to boolean CSVFormat.getIgnoreSurroundingSpaces()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 64, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 65, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 317, "column_number": -1, "description": "start of procedure getIgnoreEmptyLines()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 318, "column_number": -1, "description": "return from a call to boolean CSVFormat.getIgnoreEmptyLines()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 65, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 66, "column_number": -1, "description": "return from a call to Lexer.<init>(CSVFormat,ExtendedBufferedReader)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 38, "column_number": -1, "description": "return from a call to CSVLexer.<init>(CSVFormat,ExtendedBufferedReader)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 48, "column_number": -1, "description": "return from a call to Lexer CSVLexerTest.getLexer(String,CSVFormat)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 200, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 29, "column_number": -1, "description": "start of procedure Token()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 52, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 55, "column_number": -1, "description": "return from a call to Token.<init>()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 200, "column_number": -1, "description": "Skipping nextToken(...): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 52, "column_number": -1, "description": "Definition of nextToken(...)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 200, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 51, "column_number": -1, "description": "start of procedure assertTokenEquals(...)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 52, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 53, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 54, "column_number": -1, "description": "return from a call to void CSVLexerTest.assertTokenEquals(Token$Type,String,Token)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 201, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 29, "column_number": -1, "description": "start of procedure Token()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 52, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 55, "column_number": -1, "description": "return from a call to Token.<init>()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 201, "column_number": -1, "description": "Skipping nextToken(...): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 52, "column_number": -1, "description": "Definition of nextToken(...)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 201, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 51, "column_number": -1, "description": "start of procedure assertTokenEquals(...)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 52, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 53, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 54, "column_number": -1, "description": "return from a call to void CSVLexerTest.assertTokenEquals(Token$Type,String,Token)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 202, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 29, "column_number": -1, "description": "start of procedure Token()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 52, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 55, "column_number": -1, "description": "return from a call to Token.<init>()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 202, "column_number": -1, "description": "Skipping nextToken(...): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 52, "column_number": -1, "description": "Definition of nextToken(...)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 202, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 51, "column_number": -1, "description": "start of procedure assertTokenEquals(...)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 52, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 53, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 54, "column_number": -1, "description": "return from a call to void CSVLexerTest.assertTokenEquals(Token$Type,String,Token)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 203, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 29, "column_number": -1, "description": "start of procedure Token()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 52, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 55, "column_number": -1, "description": "return from a call to Token.<init>()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 203, "column_number": -1, "description": "Skipping nextToken(...): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 52, "column_number": -1, "description": "Definition of nextToken(...)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 203, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 51, "column_number": -1, "description": "start of procedure assertTokenEquals(...)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 52, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 53, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 54, "column_number": -1, "description": "return from a call to void CSVLexerTest.assertTokenEquals(Token$Type,String,Token)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 204, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 29, "column_number": -1, "description": "start of procedure Token()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 52, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 55, "column_number": -1, "description": "return from a call to Token.<init>()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 204, "column_number": -1, "description": "Skipping nextToken(...): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 52, "column_number": -1, "description": "Definition of nextToken(...)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 204, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 51, "column_number": -1, "description": "start of procedure assertTokenEquals(...)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 52, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 53, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 54, "column_number": -1, "description": "return from a call to void CSVLexerTest.assertTokenEquals(Token$Type,String,Token)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 205, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 29, "column_number": -1, "description": "start of procedure Token()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 52, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 55, "column_number": -1, "description": "return from a call to Token.<init>()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 205, "column_number": -1, "description": "Skipping nextToken(...): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 52, "column_number": -1, "description": "Definition of nextToken(...)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 205, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 51, "column_number": -1, "description": "start of procedure assertTokenEquals(...)"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 52, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 53, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 1, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 54, "column_number": -1, "description": "return from a call to void CSVLexerTest.assertTokenEquals(Token$Type,String,Token)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 206, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 29, "column_number": -1, "description": "start of procedure Token()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 52, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 55, "column_number": -1, "description": "return from a call to Token.<init>()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVLexerTest.java", "line_number": 206, "column_number": -1, "description": "Skipping nextToken(...): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVLexer.java", "line_number": 52, "column_number": -1, "description": "Definition of nextToken(...)"}], "key": "CSVLexerTest.java|testNextToken3Escaping|RESOURCE_LEAK", "node_key": "7a10da8b4e13d0f73a85b910e94df544", "hash": "79eb1874698801f20e6aa1dc716bb0cc", "bug_type_hum": "Resource Leak", "censored_reason": ""}