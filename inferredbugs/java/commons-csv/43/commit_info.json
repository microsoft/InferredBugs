{"hash": "72e830c08c39665a64da9e295cbe4b99e5c1b5e6", "message": "Allow testing of dynamically loaded CSVLexers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303878 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 212, "diff_parsed": {"added": [[23, "import java.lang.reflect.Constructor;"], [24, "import java.lang.reflect.InvocationTargetException;"], [91, "            } else if (test.startsWith(\"CSVLexer\")) {"], [92, "                testCSVLexer(false, test);"], [97, "            } else {"], [98, "                System.out.println(\"Invalid test name: \"+test);"], [207, ""], [208, "   private static Constructor<Lexer> getLexerCtor(String clazz) throws Exception {"], [209, "       @SuppressWarnings(\"unchecked\")"], [210, "       Class<Lexer> lexer = (Class<Lexer>) Class.forName(\"org.apache.commons.csv.\"+clazz);"], [211, "       Constructor<Lexer> ctor = lexer.getConstructor(new Class<?>[]{CSVFormat.class, ExtendedBufferedReader.class});"], [212, "       return ctor;"], [213, "   }"], [214, ""], [217, "       String dynamic = \"\";"], [219, "           final ExtendedBufferedReader input = new ExtendedBufferedReader(getReader());"], [220, "           Lexer lexer = null;"], [221, "           if (test.startsWith(\"CSVLexer\")) {"], [222, "               dynamic=\"!\";"], [223, "               lexer = getLexerCtor(test).newInstance(new Object[]{format, input});"], [224, "           } else {"], [225, "               lexer = new CSVLexer(format, input);"], [226, "           }"], [253, "           input.close();"], [254, "           show(lexer.getClass().getSimpleName()+dynamic+\" \"+(newToken ? \"new\" : \"reset\"), s, t0);"]], "deleted": [[204, "           final BufferedReader reader = getReader();"], [205, "           Lexer lexer = new CSVLexer(format, new ExtendedBufferedReader(reader));"], [232, "           reader.close();"], [233, "           show(test, s, t0);"]]}, "num_lines_added": 25, "num_lines_removed": 4}