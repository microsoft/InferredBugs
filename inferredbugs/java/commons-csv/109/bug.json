{"bug_class": "PROVER", "kind": "ERROR", "bug_type": "RESOURCE_LEAK", "qualifier": "resource of type `org.apache.commons.csv.CSVParser` acquired to `parser` by call to `parseString(...)` at line 707 is not released after line 720.", "severity": "HIGH", "visibility": "user", "line": 720, "column": -1, "procedure": "void CSVParserTest.validateRecordNumbers(String)", "procedure_id": "org.apache.commons.csv.CSVParserTest.validateRecordNumbers(java.lang.String):void.de8019dbe2325ac4baa4252daac00653", "procedure_start_line": 706, "file": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "bug_trace": [{"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 706, "column_number": -1, "description": "start of procedure validateRecordNumbers(...)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 707, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 799, "column_number": -1, "description": "start of procedure withRecordSeparator(...)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 800, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 247, "column_number": -1, "description": "start of procedure CSVFormat(...)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 251, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 252, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 204, "column_number": -1, "description": "start of procedure isLineBreak(...)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 205, "column_number": -1, "description": "Taking true branch"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 205, "column_number": -1, "description": "Taking false branch"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 205, "column_number": -1, "description": "return from a call to boolean CSVFormat.isLineBreak(char)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 252, "column_number": -1, "description": "Taking false branch"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 255, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 256, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 257, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 258, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 259, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 260, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 261, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 262, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 263, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 264, "column_number": -1, "description": "Taking true branch"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 265, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 266, "column_number": -1, "description": "return from a call to CSVFormat.<init>(char,Character,Quote,Character,Character,boolean,boolean,String,String,java.lang.String[],boolean)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 800, "column_number": -1, "description": "return from a call to CSVFormat CSVFormat.withRecordSeparator(String)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 707, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 174, "column_number": -1, "description": "start of procedure parseString(...)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 175, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 252, "column_number": -1, "description": "start of procedure CSVParser(...)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 210, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 214, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 29, "column_number": -1, "description": "start of procedure Token()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 52, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Token.java", "line_number": 55, "column_number": -1, "description": "return from a call to Token.<init>()"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 214, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 253, "column_number": -1, "description": "Skipping validate(): empty list of specs"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 548, "column_number": -1, "description": "Definition of validate()"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 254, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 255, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java", "line_number": 50, "column_number": -1, "description": "start of procedure ExtendedBufferedReader(...)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java", "line_number": 51, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java", "line_number": 40, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java", "line_number": 43, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java", "line_number": 52, "column_number": -1, "description": "return from a call to ExtendedBufferedReader.<init>(Reader)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 255, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 61, "column_number": -1, "description": "start of procedure Lexer(...)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 62, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 63, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 359, "column_number": -1, "description": "start of procedure getDelimiter()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 360, "column_number": -1, "description": "return from a call to char CSVFormat.getDelimiter()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 63, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 64, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 368, "column_number": -1, "description": "start of procedure getEscape()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 369, "column_number": -1, "description": "return from a call to Character CSVFormat.getEscape()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 64, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 290, "column_number": -1, "description": "start of procedure mapNullToDisabled(...)"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 291, "column_number": -1, "description": "Taking false branch"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 291, "column_number": -1, "description": "return from a call to char Lexer.mapNullToDisabled(Character)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 64, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 65, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 423, "column_number": -1, "description": "start of procedure getQuoteChar()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 424, "column_number": -1, "description": "return from a call to Character CSVFormat.getQuoteChar()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 65, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 290, "column_number": -1, "description": "start of procedure mapNullToDisabled(...)"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 291, "column_number": -1, "description": "Taking false branch"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 291, "column_number": -1, "description": "return from a call to char Lexer.mapNullToDisabled(Character)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 65, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 66, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 350, "column_number": -1, "description": "start of procedure getCommentStart()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 351, "column_number": -1, "description": "return from a call to Character CSVFormat.getCommentStart()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 66, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 290, "column_number": -1, "description": "start of procedure mapNullToDisabled(...)"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 291, "column_number": -1, "description": "Taking false branch"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 291, "column_number": -1, "description": "return from a call to char Lexer.mapNullToDisabled(Character)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 66, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 67, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 397, "column_number": -1, "description": "start of procedure getIgnoreSurroundingSpaces()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 398, "column_number": -1, "description": "return from a call to boolean CSVFormat.getIgnoreSurroundingSpaces()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 67, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 68, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 387, "column_number": -1, "description": "start of procedure getIgnoreEmptyLines()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 388, "column_number": -1, "description": "return from a call to boolean CSVFormat.getIgnoreEmptyLines()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 68, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/Lexer.java", "line_number": 69, "column_number": -1, "description": "return from a call to Lexer.<init>(CSVFormat,ExtendedBufferedReader)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 255, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 256, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 336, "column_number": -1, "description": "start of procedure initializeHeader()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 337, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 338, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 377, "column_number": -1, "description": "start of procedure getHeader()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 378, "column_number": -1, "description": "Taking false branch"}, {"level": 4, "filename": "src/main/java/org/apache/commons/csv/CSVFormat.java", "line_number": 378, "column_number": -1, "description": "return from a call to java.lang.String[] CSVFormat.getHeader()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 339, "column_number": -1, "description": "Taking false branch"}, {"level": 3, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 363, "column_number": -1, "description": "return from a call to Map CSVParser.initializeHeader()"}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 256, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 257, "column_number": -1, "description": "return from a call to CSVParser.<init>(StringReader,CSVFormat)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 175, "column_number": -1, "description": "return from a call to CSVParser CSVParser.parseString(String,CSVFormat)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 709, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 310, "column_number": -1, "description": "start of procedure getRecordNumber()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 311, "column_number": -1, "description": "return from a call to long CSVParser.getRecordNumber()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 709, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 710, "column_number": -1, "description": "Skipping nextRecord(): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 433, "column_number": -1, "description": "Definition of nextRecord()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 710, "column_number": -1, "description": "Skipping assertNotNull(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 711, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVRecord.java", "line_number": 125, "column_number": -1, "description": "start of procedure getRecordNumber()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVRecord.java", "line_number": 126, "column_number": -1, "description": "return from a call to long CSVRecord.getRecordNumber()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 711, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 712, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 310, "column_number": -1, "description": "start of procedure getRecordNumber()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 311, "column_number": -1, "description": "return from a call to long CSVParser.getRecordNumber()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 712, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 713, "column_number": -1, "description": "Skipping nextRecord(): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 433, "column_number": -1, "description": "Definition of nextRecord()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 713, "column_number": -1, "description": "Skipping assertNotNull(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 714, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVRecord.java", "line_number": 125, "column_number": -1, "description": "start of procedure getRecordNumber()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVRecord.java", "line_number": 126, "column_number": -1, "description": "return from a call to long CSVRecord.getRecordNumber()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 714, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 715, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 310, "column_number": -1, "description": "start of procedure getRecordNumber()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 311, "column_number": -1, "description": "return from a call to long CSVParser.getRecordNumber()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 715, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 716, "column_number": -1, "description": "Skipping nextRecord(): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 433, "column_number": -1, "description": "Definition of nextRecord()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 716, "column_number": -1, "description": "Skipping assertNotNull(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 717, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVRecord.java", "line_number": 125, "column_number": -1, "description": "start of procedure getRecordNumber()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVRecord.java", "line_number": 126, "column_number": -1, "description": "return from a call to long CSVRecord.getRecordNumber()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 717, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 718, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 310, "column_number": -1, "description": "start of procedure getRecordNumber()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 311, "column_number": -1, "description": "return from a call to long CSVParser.getRecordNumber()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 718, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 719, "column_number": -1, "description": "Skipping nextRecord(): empty list of specs"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 433, "column_number": -1, "description": "Definition of nextRecord()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 719, "column_number": -1, "description": "Skipping assertNull(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/csv/CSVParserTest.java", "line_number": 720, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 310, "column_number": -1, "description": "start of procedure getRecordNumber()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/csv/CSVParser.java", "line_number": 311, "column_number": -1, "description": "return from a call to long CSVParser.getRecordNumber()"}], "key": "CSVParserTest.java|validateRecordNumbers|RESOURCE_LEAK", "node_key": "032299521a58ea574b18a1357a739565", "hash": "8209a0ee146ce7cb330f4e56677b377e", "bug_type_hum": "Resource Leak", "censored_reason": ""}