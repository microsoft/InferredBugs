{"bug_class": "PROVER", "kind": "ERROR", "bug_type": "THREAD_SAFETY_VIOLATION", "qualifier": "Unprotected write. Non-private method `io.helidon.microprofile.faulttolerance.FaultToleranceCommand.execute` indirectly writes to field `n$1.io.helidon.microprofile.faulttolerance.CircuitBreakerHelper$CommandData.results.[_]` outside of synchronization.\n Reporting because this access may occur on a background thread.\n\nNote that the prefix path n$1 has been contaminated during the execution, so the reported race on n$1.io.helidon.microprofile.faulttolerance.CircuitBreakerHelper$CommandData.results.[_] might be a false positive.", "severity": "HIGH", "visibility": "user", "line": 260, "column": -1, "procedure": "Object FaultToleranceCommand.execute()", "procedure_id": "io.helidon.microprofile.faulttolerance.FaultToleranceCommand.execute():java.lang.Object.6f91f033edc2673e231ef5e0cdf97018", "procedure_start_line": 225, "file": "microprofile/fault-tolerance/src/main/java/io/helidon/microprofile/faulttolerance/FaultToleranceCommand.java", "bug_trace": [{"level": 0, "filename": "microprofile/fault-tolerance/src/main/java/io/helidon/microprofile/faulttolerance/FaultToleranceCommand.java", "line_number": 260, "column_number": -1, "description": "call to void CircuitBreakerHelper.pushResult(boolean)"}, {"level": 1, "filename": "microprofile/fault-tolerance/src/main/java/io/helidon/microprofile/faulttolerance/CircuitBreakerHelper.java", "line_number": 180, "column_number": -1, "description": "call to void CircuitBreakerHelper$CommandData.pushResult(boolean)"}, {"level": 2, "filename": "microprofile/fault-tolerance/src/main/java/io/helidon/microprofile/faulttolerance/CircuitBreakerHelper.java", "line_number": 115, "column_number": -1, "description": "call to void CircuitBreakerHelper$CommandData.shift()"}, {"level": 3, "filename": "microprofile/fault-tolerance/src/main/java/io/helidon/microprofile/faulttolerance/CircuitBreakerHelper.java", "line_number": 139, "column_number": -1, "description": "access to `this.io.helidon.microprofile.faulttolerance.CircuitBreakerHelper$CommandData.results.[_]`"}], "key": "FaultToleranceCommand.java|execute|THREAD_SAFETY_VIOLATION", "node_key": "9c5d6d9028928346cc4fb44cced5dea1", "hash": "156d0cb2a70fbede2b34cf53aa941a21", "bug_type_hum": "Thread Safety Violation", "censored_reason": ""}