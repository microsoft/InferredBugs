{"hash": "22f24427314b28194e19a9c4e740e932d58b6acb", "message": "Add executeShellRaw method. Avoids buffering issues\n\nThe buffering used in executeShell causes issues when using shell:logcat,\nthe character per character implementation of the InputStream handling in AdbFilterInputStream together with the BufferedInputStream class\ncause that the caller only gets result once either the process ends or 8k of output is avilable. The executeShellRaw method bypasses\nthe custom buffer handling, allowing the caller to receive the output without delay.\nNote that the issue is only apparent when using a long running commamd with little output.", "file_num_lines": 161, "diff_parsed": {"added": [[74, "    /** Execute a shell command with raw output."], [75, "     *"], [76, "     * This function differs from executeShell in that no buffering and newline filtering is performed."], [77, "     *"], [78, "     * Especially the buffering may be an issue if the output of an ongoing command should be displayed,"], [79, "     * e.g. the output of running logcat."], [80, "     *"], [81, "     * @param command main command."], [82, "     * @param args arguments to the commands"], [83, "     * @return combined stdout/stderr stream."], [84, "     * @throws IOException"], [85, "     * @throws JadbException"], [86, "     */"], [87, "    public InputStream executeShellRaw(String command, String... args) throws IOException, JadbException {"], [95, "        return transport.getInputStream();"], [96, "    }"], [97, ""], [98, "    /** Execute a shell command."], [99, "     *"], [100, "     * @param command main command."], [101, "     * @param args arguments to the commands"], [102, "     * @return combined stdout/stderr stream."], [103, "     * @throws IOException"], [104, "     * @throws JadbException"], [105, "     */"], [106, "    public InputStream executeShell(String command, String... args) throws IOException, JadbException {"], [107, "        InputStream inputStream = executeShellRaw(command, args);"], [108, "    \treturn new AdbFilterInputStream(new BufferedInputStream(inputStream));"], [126, "        \tAdbFilterOutputStream out = new AdbFilterOutputStream(output);"], [127, "        \ttry {"], [128, "        \t\ttransport.readResponseTo(out);"], [129, "        \t} finally {"], [130, "        \t\tout.close();"], [131, "        \t}"]], "deleted": [[7, "import java.util.HashMap;"], [9, "import java.util.Map;"], [10, "import java.util.regex.Matcher;"], [11, "import java.util.regex.Pattern;"], [78, "    public InputStream executeShell(String command, String... args) throws IOException, JadbException {"], [86, "        return new AdbFilterInputStream(new BufferedInputStream(transport.getInputStream()));"], [104, "            transport.readResponseTo(new AdbFilterOutputStream(output));"]]}, "num_lines_added": 34, "num_lines_removed": 7}