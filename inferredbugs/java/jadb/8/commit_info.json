{"hash": "bc2c76486acf1bcddfe512f7c9a68d3d4d5d081e", "message": "AdbProtocolHandler: extract loop body to new method", "file_num_lines": 159, "diff_parsed": {"added": [[43, "        while (processCommand(input, output)) {"], [44, "                // nothing to do here"], [45, "        }"], [46, "    }"], [48, "    private boolean processCommand(DataInput input, DataOutputStream output) throws IOException {"], [49, "        byte[] buffer = new byte[4];"], [50, "        input.readFully(buffer);"], [51, "        String encodedLength = new String(buffer, StandardCharsets.UTF_8);"], [52, "        int length = Integer.parseInt(encodedLength, 16);"], [53, ""], [54, "        buffer = new byte[length];"], [55, "        input.readFully(buffer);"], [56, "        String command = new String(buffer, StandardCharsets.UTF_8);"], [57, ""], [58, "        responder.onCommand(command);"], [60, "        try {"], [61, "            if (\"host:version\".equals(command)) {"], [62, "                output.writeBytes(\"OKAY\");"], [63, "                send(output, String.format(\"%04x\", responder.getVersion()));"], [64, "            } else if (\"host:transport-any\".equals(command)) {"], [65, "                // TODO: Check so that exactly one device is selected."], [66, "                selected = responder.getDevices().get(0);"], [67, "                output.writeBytes(\"OKAY\");"], [68, "            } else if (\"host:devices\".equals(command)) {"], [69, "                ByteArrayOutputStream tmp = new ByteArrayOutputStream();"], [70, "                DataOutputStream writer = new DataOutputStream(tmp);"], [71, "                for (AdbDeviceResponder d : responder.getDevices()) {"], [72, "                    writer.writeBytes(d.getSerial() + \"\\t\" + d.getType() + \"\\n\");"], [73, "                }"], [74, "                output.writeBytes(\"OKAY\");"], [75, "                send(output, new String(tmp.toByteArray(), StandardCharsets.UTF_8));"], [76, "            } else if (command.startsWith(\"host:transport:\")) {"], [77, "                String serial = command.substring(\"host:transport:\".length());"], [78, "                selected = findDevice(serial);"], [79, "                output.writeBytes(\"OKAY\");"], [80, "            } else if (\"sync:\".equals(command)) {"], [81, "                output.writeBytes(\"OKAY\");"], [82, "                try {"], [83, "                    sync(output, input);"], [84, "                } catch (JadbException e) { // sync response with a different type of fail message"], [85, "                    SyncTransport sync = getSyncTransport(output, input);"], [86, "                    sync.send(\"FAIL\", e.getMessage());"], [87, "                }"], [88, "            } else if (command.startsWith(\"shell:\")) {"], [89, "                String shellCommand = command.substring(\"shell:\".length());"], [90, "                output.writeBytes(\"OKAY\");"], [91, "                shell(shellCommand, output, input);"], [92, "                output.close();"], [93, "                return false;"], [94, "            } else if (\"host:get-state\".equals(command)) {"], [95, "                // TODO: Check so that exactly one device is selected."], [96, "                AdbDeviceResponder device = responder.getDevices().get(0);"], [97, "                output.writeBytes(\"OKAY\");"], [98, "                send(output, device.getType());"], [99, "            } else if (command.startsWith(\"host-serial:\")) {"], [100, "                String[] strs = command.split(\":\",0);"], [101, "                if (strs.length != 3) {"], [102, "                    throw new ProtocolException(\"Invalid command: \" + command);"], [103, "                }"], [104, ""], [105, "                String serial = strs[1];"], [106, "                boolean found = false;"], [107, "                output.writeBytes(\"OKAY\");"], [108, "                for (AdbDeviceResponder d : responder.getDevices()) {"], [109, "                    if (d.getSerial().equals(serial)) {"], [110, "                        send(output, d.getType());"], [111, "                        found = true;"], [112, "                        break;"], [115, ""], [116, "                if (!found) {"], [117, "                    send(output, \"unknown\");"], [118, "                }"], [119, "            } else {"], [120, "                throw new ProtocolException(\"Unknown command: \" + command);"], [122, "        } catch (ProtocolException e) {"], [123, "            output.writeBytes(\"FAIL\");"], [124, "            send(output, e.getMessage());"], [126, "        output.flush();"], [127, "        return true;"]], "deleted": [[43, "        while (true) {"], [44, "            byte[] buffer = new byte[4];"], [45, "            input.readFully(buffer);"], [46, "            String encodedLength = new String(buffer, StandardCharsets.UTF_8);"], [47, "            int length = Integer.parseInt(encodedLength, 16);"], [48, ""], [49, "            buffer = new byte[length];"], [50, "            input.readFully(buffer);"], [51, "            String command = new String(buffer, StandardCharsets.UTF_8);"], [52, ""], [53, "            responder.onCommand(command);"], [54, ""], [55, "            try {"], [56, "                if (\"host:version\".equals(command)) {"], [57, "                    output.writeBytes(\"OKAY\");"], [58, "                    send(output, String.format(\"%04x\", responder.getVersion()));"], [59, "                } else if (\"host:transport-any\".equals(command)) {"], [60, "                    // TODO: Check so that exactly one device is selected."], [61, "                    selected = responder.getDevices().get(0);"], [62, "                    output.writeBytes(\"OKAY\");"], [63, "                } else if (\"host:devices\".equals(command)) {"], [64, "                    ByteArrayOutputStream tmp = new ByteArrayOutputStream();"], [65, "                    DataOutputStream writer = new DataOutputStream(tmp);"], [66, "                    for (AdbDeviceResponder d : responder.getDevices()) {"], [67, "                        writer.writeBytes(d.getSerial() + \"\\t\" + d.getType() + \"\\n\");"], [68, "                    }"], [69, "                    output.writeBytes(\"OKAY\");"], [70, "                    send(output, new String(tmp.toByteArray(), StandardCharsets.UTF_8));"], [71, "                } else if (command.startsWith(\"host:transport:\")) {"], [72, "                    String serial = command.substring(\"host:transport:\".length());"], [73, "                    selected = findDevice(serial);"], [74, "                    output.writeBytes(\"OKAY\");"], [75, "                } else if (\"sync:\".equals(command)) {"], [76, "                    output.writeBytes(\"OKAY\");"], [77, "                    try {"], [78, "                        sync(output, input);"], [79, "                    } catch (JadbException e) { // sync response with a different type of fail message"], [80, "                        SyncTransport sync = getSyncTransport(output, input);"], [81, "                        sync.send(\"FAIL\", e.getMessage());"], [82, "                    }"], [83, "                } else if (command.startsWith(\"shell:\")) {"], [84, "                    String shellCommand = command.substring(\"shell:\".length());"], [85, "                    output.writeBytes(\"OKAY\");"], [86, "                    shell(shellCommand, output, input);"], [87, "                    output.close();"], [88, "                    return;"], [89, "                } else if (\"host:get-state\".equals(command)) {"], [90, "                    // TODO: Check so that exactly one device is selected."], [91, "                    AdbDeviceResponder device = responder.getDevices().get(0);"], [92, "                    output.writeBytes(\"OKAY\");"], [93, "                    send(output, device.getType());"], [94, "                } else if (command.startsWith(\"host-serial:\")) {"], [95, "                    String[] strs = command.split(\":\",0);"], [96, "                    if (strs.length != 3) {"], [97, "                        throw new ProtocolException(\"Invalid command: \" + command);"], [98, "                    }"], [100, "                    String serial = strs[1];"], [101, "                    boolean found = false;"], [102, "                    output.writeBytes(\"OKAY\");"], [103, "                    for (AdbDeviceResponder d : responder.getDevices()) {"], [104, "                        if (d.getSerial().equals(serial)) {"], [105, "                            send(output, d.getType());"], [106, "                            found = true;"], [107, "                            break;"], [108, "                        }"], [109, "                    }"], [111, "                    if (!found) {"], [112, "                        send(output, \"unknown\");"], [114, "                } else {"], [115, "                    throw new ProtocolException(\"Unknown command: \" + command);"], [117, "            } catch (ProtocolException e) {"], [118, "                output.writeBytes(\"FAIL\");"], [119, "                send(output, e.getMessage());"], [121, "            output.flush();"]]}, "num_lines_added": 79, "num_lines_removed": 74}