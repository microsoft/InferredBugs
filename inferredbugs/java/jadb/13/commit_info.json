{"hash": "9d7f4f784681f2fbcaab5e2beb7829528a10933f", "message": "Add try-with-resources for Transport", "file_num_lines": 154, "diff_parsed": {"added": [[50, "        // Do not use try-with-resources here. We want to return unclosed Transport and it is up to caller"], [51, "        // to close it. Here we close it only in case of exception."], [52, "        try {"], [53, "            send(transport, serial == null ? \"host:transport-any\" : \"host:transport:\" + serial );"], [54, "        } catch (IOException|JadbException e) {"], [55, "            transport.close();"], [56, "            throw e;"], [57, "        }"], [66, "        try (Transport transport = transportFactory.createTransport()) {"], [67, "            send(transport, serial == null ? \"host:get-state\" : \"host-serial:\" + serial + \":get-state\");"], [68, "            return convertState(transport.readString());"], [69, "        }"], [96, "        try (Transport transport = getTransport()) {"], [97, "            StringBuilder shellLine = buildCmdLine(command, args);"], [98, "            send(transport, \"shell:\" + shellLine.toString());"], [99, "            if (output == null)"], [100, "                return;"], [101, ""], [102, "            AdbFilterOutputStream out = new AdbFilterOutputStream(output);"], [103, "            transport.readResponseTo(out);"], [143, "        try (Transport transport = getTransport()) {"], [144, "            SyncTransport sync = transport.startSync();"], [145, "            sync.send(\"LIST\", remotePath);"], [146, ""], [147, "            List<RemoteFile> result = new ArrayList<>();"], [148, "            for (RemoteFileRecord dent = sync.readDirectoryEntry(); dent != RemoteFileRecord.DONE; dent = sync.readDirectoryEntry()) {"], [149, "                result.add(dent);"], [150, "            }"], [151, "            return result;"], [156, "        try (Transport transport = getTransport()) {"], [157, "            SyncTransport sync = transport.startSync();"], [158, "            sync.send(\"SEND\", remote.getPath() + \",\" + Integer.toString(mode));"], [160, "            sync.sendStream(source);"], [162, "            sync.sendStatus(\"DONE\", (int) lastModified);"], [163, "            sync.verifyStatus();"], [164, "        }"], [174, "        try (Transport transport = getTransport()) {"], [175, "            SyncTransport sync = transport.startSync();"], [176, "            sync.send(\"RECV\", remote.getPath());"], [178, "            sync.readChunksTo(destination);"], [179, "        }"]], "deleted": [[50, "        send(transport, serial == null ? \"host:transport-any\" : \"host:transport:\" + serial );"], [59, "        Transport transport = transportFactory.createTransport();"], [60, "        send(transport, serial == null ? \"host:get-state\" : \"host-serial:\" + serial + \":get-state\");"], [61, ""], [62, "        State state = convertState(transport.readString());"], [63, "        transport.close();"], [64, "        return state;"], [91, "        Transport transport = getTransport();"], [92, "        StringBuilder shellLine = buildCmdLine(command, args);"], [93, "        send(transport, \"shell:\" + shellLine.toString());"], [94, "        if (output != null) {"], [95, "        \tAdbFilterOutputStream out = new AdbFilterOutputStream(output);"], [96, "        \ttry {"], [97, "        \t\ttransport.readResponseTo(out);"], [98, "        \t} finally {"], [99, "        \t\tout.close();"], [100, "        \t}"], [140, "        Transport transport = getTransport();"], [141, "        SyncTransport sync = transport.startSync();"], [142, "        sync.send(\"LIST\", remotePath);"], [143, ""], [144, "        List<RemoteFile> result = new ArrayList<>();"], [145, "        for (RemoteFileRecord dent = sync.readDirectoryEntry(); dent != RemoteFileRecord.DONE; dent = sync.readDirectoryEntry()) {"], [146, "            result.add(dent);"], [148, "        return result;"], [152, "        Transport transport = getTransport();"], [153, "        SyncTransport sync = transport.startSync();"], [154, "        sync.send(\"SEND\", remote.getPath() + \",\" + Integer.toString(mode));"], [156, "        sync.sendStream(source);"], [158, "        sync.sendStatus(\"DONE\", (int) lastModified);"], [159, "        sync.verifyStatus();"], [169, "        Transport transport = getTransport();"], [170, "        SyncTransport sync = transport.startSync();"], [171, "        sync.send(\"RECV\", remote.getPath());"], [173, "        sync.readChunksTo(destination);"]]}, "num_lines_added": 41, "num_lines_removed": 35}