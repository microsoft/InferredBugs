{"hash": "216608949d924bbc6a5b28176acbc4500115c540", "message": "Added parameter to functions fileReader and timeCategory", "file_num_lines": 31, "diff_parsed": {"added": [[26, "public class MinizincBasedTestUpTo30Seconds extends MinizincBasedTestsHelper{"], [28, "    protected static final String timeCategory = \"upTo30sec/\";"], [38, ""], [39, "        return fileReader(timeCategory);"], [44, "        testExecution(timeCategory);"]], "deleted": [[26, "public class MinizincBasedTestUpTo30Seconds{"], [28, "    private String testFilename;"], [30, "    private static Fz2jacop fz2jacop;"], [31, "    private static final String relativePath = \"src/test/fz/\";"], [32, "    private static final String timeCategory = \"upTo30sec/\";"], [33, "    private static final String listFileName = \"list.txt\";"], [34, "    private static final boolean printInfo = true;"], [35, ""], [36, "    @BeforeClass"], [37, "    public static void initialize() {"], [38, "        fz2jacop = new Fz2jacop();"], [39, "    }"], [48, "        FileReader file = new FileReader(relativePath + timeCategory + listFileName);"], [49, "        BufferedReader br = new BufferedReader(file);"], [50, "        String line = \"\";"], [51, "        List<String> list = new ArrayList<String>();"], [52, "        int i = 0;"], [53, "        while ((line = br.readLine())!=null) {"], [54, "            list.add(i, line);"], [55, "            i++;"], [56, "        }"], [57, "        return list;"], [62, "        List<String> expectedResult = new ArrayList<>();"], [63, "        List<String> result = new ArrayList<>();"], [64, ""], [65, "        System.out.println(\"Test file: \" + timeCategory + testFilename);"], [66, "        expectedResult = expected(timeCategory + testFilename + \".out\");"], [67, "        result = result(timeCategory + testFilename + \".fzn\");"], [68, ""], [69, "        for (int i = 0, j = 0; i < result.size() || j < expectedResult.size();) {"], [70, "            if (i < result.size() && result.get(i).trim().isEmpty() )"], [71, "            { i++; continue;}"], [72, "            if (j < expectedResult.size() && expectedResult.get(j).trim().isEmpty() )"], [73, "            { j++; continue;}"], [74, "            if (result.size() == i)"], [75, "                fail(\"\\n\" + \"File path: \" + timeCategory + testFilename + \".out \" + \" gave as a result less textlines that was expected. Expected line \" + (j+1) + \" not found.\");"], [76, "            if (expectedResult.size() == j)"], [77, "                fail(\"\\n\" + \"File path: \" + timeCategory + testFilename + \".out \" + \" gave as a result more textlines that was expected. Actual line \" + (i + 1) + \"not found in expected result\");"], [78, ""], [79, "            assertEquals(\"\\n\" + \"File path: \" + timeCategory + testFilename + \".out \" + \"\\nError line number (expected, actual): (\" + (j + 1) + \",\" + (i + 1) + \")\\n\","], [80, "                    expectedResult.get(j).trim(), result.get(i).trim());"], [81, "            i++; j++;"], [82, "        }"], [85, "    public static List<String> result(String filename) {"], [86, ""], [87, "        ByteArrayOutputStream baos = new ByteArrayOutputStream();"], [88, "        PrintStream old = System.out;"], [89, "        System.setOut(new PrintStream(baos));"], [90, ""], [91, ""], [92, "        fz2jacop.main(new String[]{relativePath + filename });"], [93, ""], [94, "        System.out.flush();"], [95, "        System.setOut(old);"], [96, ""], [97, "        String result = baos.toString();"], [98, "        if(printInfo) {"], [99, "            System.out.println(filename+\"\\n\" + result);"], [100, "        }"], [101, ""], [102, "        return Arrays.asList(result.split(\"\\n\"));"], [103, "    }"], [104, ""], [105, ""], [106, "    public static List<String> expected(String filename) throws IOException {"], [107, ""], [108, "        String filePath = new File(relativePath + filename ).getAbsolutePath();"], [109, "        return Files.readAllLines(Paths.get(filePath), StandardCharsets.UTF_8);"], [110, "    }"]]}, "num_lines_added": 5, "num_lines_removed": 69}