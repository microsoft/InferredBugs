    void prepareTreeHeader() {

        OutputStreamWriter printWriter;

        try {
            printWriter = new OutputStreamWriter(
                new FileOutputStream(treeFilename),
                Charset.forName("UTF-8").newEncoder()
            );
        } catch (FileNotFoundException e) {
            e.printStackTrace();
            printWriter = new OutputStreamWriter(
                System.out,
                Charset.forName("UTF-8").newEncoder()
            );
        }

        StreamResult streamResult = new StreamResult(printWriter);
        SAXTransformerFactory tf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();

        try {

            hdTree = tf.newTransformerHandler();

            Transformer serializer = hdTree.getTransformer();
            serializer.setOutputProperty(OutputKeys.ENCODING, "UTF-8"); // "ISO-8859-1");
            serializer.setOutputProperty(OutputKeys.INDENT, "yes");
            serializer.setOutputProperty(OutputKeys.STANDALONE, "yes");
            serializer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "4");

            hdTree.setResult(streamResult);

            hdTree.startDocument();

            AttributesImpl atts = new AttributesImpl();
            atts.addAttribute("", "", "version", "CDATA", "1.0");
            atts.addAttribute("", "", "xmln:xsi", "CDATA", "http://www.w3.org/2001/XMLSchema-instance");
            atts.addAttribute("", "", "xsi:noNamespaceSchemaLocation", "CDATA", "tree.xsd");

            String ourText = " Generated by JaCoP solver; " + getDateTime() + " ";
            char[] comm = ourText.toCharArray();
            hdTree.comment(comm, 0, comm.length);

            hdTree.startElement("", "", "tree", atts);

            atts = new AttributesImpl();
            atts.addAttribute("", "", "id", "CDATA", "0");
            hdTree.startElement("", "", "root", atts);
            hdTree.endElement("", "", "root");

        } catch (TransformerConfigurationException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (SAXException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }