{"hash": "62d5e39455f104244478609b7a6791345f105475", "message": "Changing LexOrder constraints to work correctly when the same variable can appear at the list several times.", "file_num_lines": 311, "diff_parsed": {"added": [[89, "    HashMap<IntVar, ArrayList<Integer>> varXToIndex = new HashMap<IntVar, ArrayList<Integer>>();"], [90, "    HashMap<IntVar, ArrayList<Integer>> varYToIndex = new HashMap<IntVar, ArrayList<Integer>>();"], [153, "\t    ArrayList<Integer> varPositions = varXToIndex.get(x[i]);"], [154, "\t    if (varPositions == null) {"], [155, "\t\tArrayList<Integer> p = new ArrayList<Integer>();"], [156, "\t\tp.add(i);"], [157, "\t\tvarXToIndex.put(x[i], p);"], [158, "\t    }"], [159, "\t    else {"], [160, "\t\tvarPositions.add(i);"], [161, "\t\tvarXToIndex.put(x[i], varPositions);"], [165, ""], [167, "\t    ArrayList<Integer> varPositions = varYToIndex.get(y[i]);"], [168, "\t    if (varPositions == null) {"], [169, "\t\tArrayList<Integer> p = new ArrayList<Integer>();"], [170, "\t\tp.add(i);"], [171, "\t\tvarYToIndex.put(y[i], p);"], [172, "\t    }"], [173, "\t    else {"], [174, "\t\tvarPositions.add(i);"], [175, "\t\tvarXToIndex.put(y[i], varPositions);"], [179, "\t// System.out.println(\"varXToIndex = \" + varXToIndex + \"\\nvarYToIndex = \" + varYToIndex);"], [276, "\tArrayList<Integer> iValX = varXToIndex.get(var);"], [277, "\tArrayList<Integer> iValY = varYToIndex.get(var);"], [279, "\tif (iValX != null)"], [280, "\t    for (int i : iValX)"], [281, "\t\tindexQueue.add(i);"], [282, "\tif (iValY != null)"], [283, "\t    for (int i : iValY)"], [284, "\t\tindexQueue.add(i);"], [285, ""]], "deleted": [[89, "    HashMap<IntVar, Integer> varXToIndex = new HashMap<IntVar, Integer>();"], [90, "    HashMap<IntVar, Integer> varYToIndex = new HashMap<IntVar, Integer>();"], [153, "\t    Integer varPosition = varXToIndex.put(x[i], i);"], [154, "\t    if (!x[i].singleton() && varPosition != null) {"], [155, "\t\tthrow new java.lang.RuntimeException(\"ERROR: Constraint \" + toString() + \" must have different non ground variables on the list; variable \" + x[i]);"], [160, "\t    Integer varPosition = varYToIndex.put(y[i], i);"], [161, "\t    if (!x[i].singleton() && varPosition != null) {"], [162, "\t\tthrow new java.lang.RuntimeException(\"ERROR: Constraint \" + toString() + \" must have different non ground variables on the list; variable \" + y[i]);"], [262, "\tInteger iVal = varXToIndex.get(var);"], [263, "\tif (iVal == null)"], [264, "\t    iVal = varYToIndex.get(var);"], [265, "\tint i = iVal.intValue();"], [266, ""], [267, "\tindexQueue.add(i);"]]}, "num_lines_added": 31, "num_lines_removed": 14}