    private void commonInitialization(IntVar[] list, int[] weights, int sum) {

        queueIndex = 4;

        assert (list.length == weights.length) : "\nLength of two vectors different in SumWeightDom";

        numberArgs = (short) (list.length + 1);

        numberId = idNumber.incrementAndGet();

        this.sum = sum;

        HashMap<IntVar, Integer> parameters = new HashMap<IntVar, Integer>();

        for (int i = 0; i < list.length; i++) {

            assert (list[i] != null) : i + "-th element of list in SumWeightDom constraint is null";

            if (weights[i] == 0)
                continue;

            if (parameters.get(list[i]) != null) {
                // variable ordered in the scope of the Sum Weight constraint.
                Integer coeff = parameters.get(list[i]);
                Integer sumOfCoeff = coeff + weights[i];
                parameters.put(list[i], sumOfCoeff);
            } else
                parameters.put(list[i], weights[i]);

        }

        this.list = new IntVar[parameters.size()];
        this.weights = new int[parameters.size()];

        int i = 0;
        for (IntVar var : parameters.keySet()) {
            this.list[i] = var;
            this.weights[i] = parameters.get(var);
            i++;
        }

        checkForOverflow();
    }