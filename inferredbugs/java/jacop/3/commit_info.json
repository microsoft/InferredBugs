{"hash": "ae0f79571b00e39b34951470b41628e0ef933a4b", "message": "Improving duplicate detection at LexOrder constraints. Duplicates cannot be present on list x or list y but can be the same variable between lists x and y. If there are the same variables on one of the lists, the decomposed version of the constraint is imposed.", "file_num_lines": 296, "diff_parsed": {"added": [[89, "    HashMap<IntVar, Integer> varXToIndex = new HashMap<IntVar, Integer>();"], [90, "    HashMap<IntVar, Integer> varYToIndex = new HashMap<IntVar, Integer>();"], [153, "\t    Integer varPosition = varXToIndex.put(x[i], i);"], [155, "\t\tthrow new java.lang.RuntimeException(\"ERROR: Constraint \" + toString() + \" must have different non ground variables on the list; variable \" + x[i]);"], [160, "\t    Integer varPosition = varYToIndex.put(y[i], i);"], [162, "\t\tthrow new java.lang.RuntimeException(\"ERROR: Constraint \" + toString() + \" must have different non ground variables on the list; variable \" + y[i]);"], [167, "\tstore.registerRemoveLevelLateListener(this);"], [168, ""], [262, "\tInteger iVal = varXToIndex.get(var);"], [263, "\tif (iVal == null)"], [264, "\t    iVal = varYToIndex.get(var);"], [265, "\tint i = iVal.intValue();"]], "deleted": [[89, "    HashMap<IntVar, Integer> varToIndex = new HashMap<IntVar, Integer>();"], [151, "\tstore.registerRemoveLevelLateListener(this);"], [152, ""], [154, "\t    Integer varPosition = varToIndex.put(x[i], i);"], [156, "\t\tSystem.err.println(\"ERROR: Constraint \" + toString() + \" must have different non ground variables on the list\");"], [157, "\t\tSystem.exit(0);"], [162, "\t    Integer varPosition = varToIndex.put(y[i], i);"], [164, "\t\tSystem.err.println(\"ERROR: Constraint \" + toString() + \" must have different non ground variables on the list\");"], [165, "\t\tSystem.exit(0);"], [263, "\tint i = varToIndex.get(var);"]]}, "num_lines_added": 12, "num_lines_removed": 10}