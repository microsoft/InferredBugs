{"hash": "1c9de67289fcae1aeaf1bcb355969f41f8d31c19", "message": "New format for printing search classes (DepthFirstSearch and PrioritySearch). Including search in debug print-out for flatzinc.", "file_num_lines": 1354, "diff_parsed": {"added": [[489, "\t\t\t    if (options.debug()) {"], [490, "\t\t\t\tSystem.out.print(\"% RestartSearch(\" + restartCalculator + \"), \");"], [491, "\t\t\t\tlabel.setSelectChoicePoint(variable_selection);"], [492, "\t\t\t\tSystem.out.print(\" satisfy \");"], [493, "\t\t\t\tprintSearch(label);"], [494, "\t\t\t    }"], [495, ""], [502, "\t\t\telse {"], [503, "\t\t\t    if (options.debug()) {"], [504, "\t\t\t\tlabel.setSelectChoicePoint(variable_selection);"], [505, "\t\t\t\tSystem.out.print(\"% satisfy \");"], [506, "\t\t\t\tprintSearch(label);"], [507, "\t\t\t    }"], [508, ""], [510, "\t\t\t}"], [534, "\t\t\t    if (options.debug()) {"], [535, "\t\t\t\tSystem.out.print(\"% RestartSearch(\" + restartCalculator + \"), \");"], [536, "\t\t\t\tlabel.setSelectChoicePoint(variable_selection);"], [537, "\t\t\t\tSystem.out.print(\" minimize (\" + cost +\") \");"], [538, "\t\t\t\tprintSearch(label);"], [539, "\t\t\t    }"], [540, ""], [547, "\t\t\telse {"], [548, "\t\t\t    if (options.debug()) {"], [549, "\t\t\t\tlabel.setSelectChoicePoint(variable_selection);"], [550, "\t\t\t\tSystem.out.print(\"% minimize (\" + cost +\") \");"], [551, "\t\t\t\tprintSearch(label);"], [552, "\t\t\t    }"], [554, "\t\t\t}"], [582, "\t\t\t    if (options.debug()) {"], [583, "\t\t\t\tSystem.out.print(\"% RestartSearch(\" + restartCalculator + \"), \");"], [584, "\t\t\t\tlabel.setSelectChoicePoint(variable_selection);"], [585, "\t\t\t\tSystem.out.print(\"% maximize (\" + cost +\") \");"], [586, "\t\t\t\tprintSearch(label);"], [587, "\t\t\t    }"], [588, ""], [595, "\t\t\telse {"], [596, "\t\t\t    if (options.debug()) {"], [597, "\t\t\t\tlabel.setSelectChoicePoint(variable_selection);"], [598, "\t\t\t\tSystem.out.print(\"% maximize (\" + cost +\") \");"], [599, "\t\t\t\tprintSearch(label);"], [600, "\t\t\t    }"], [601, ""], [603, "\t\t\t}"], [1065, "\t\t\t    if (options.debug()) {"], [1066, "\t\t\t\tSystem.out.print(\"% RestartSearch(\" + restartCalculator + \"), \");"], [1067, "\t\t\t\tlabel.setSelectChoicePoint(masterSelect);"], [1068, "\t\t\t\tSystem.out.print(\" satisfy \");"], [1069, "\t\t\t\tprintSearch(label);"], [1070, "\t\t\t    }"], [1071, ""], [1077, "\t\t\t    if (options.debug()) {"], [1078, "\t\t\t\tmasterLabel.setSelectChoicePoint(masterSelect);"], [1079, "\t\t\t\tSystem.out.print(\"% satisfy \");"], [1080, "\t\t\t\tprintSearch(masterLabel);"], [1081, "\t\t\t    }"], [1082, ""], [1125, "\t\t\t    if (options.debug()) {"], [1126, "\t\t\t\tSystem.out.print(\"% RestartSearch(\" + restartCalculator + \"), \");"], [1127, "\t\t\t\tlabel.setSelectChoicePoint(masterSelect);"], [1128, "\t\t\t\tSystem.out.print(\" minimize (\" + cost +\") \");"], [1129, "\t\t\t\tprintSearch(label);"], [1130, "\t\t\t    }"], [1131, ""], [1137, "\t\t\t    if (options.debug()) {"], [1138, "\t\t\t\tmasterLabel.setSelectChoicePoint(masterSelect);"], [1139, "\t\t\t\tSystem.out.print(\"% minimize (\" + cost + \") \");"], [1140, "\t\t\t\tprintSearch(masterLabel);"], [1141, "\t\t\t    }"], [1142, ""], [1187, "\t\t\t    if (options.debug()) {"], [1188, "\t\t\t\tSystem.out.print(\"% RestartSearch(\" + restartCalculator + \"), \");"], [1189, "\t\t\t\tlabel.setSelectChoicePoint(masterSelect);"], [1190, "\t\t\t\tSystem.out.print(\" maximize (\" + cost +\") \");"], [1191, "\t\t\t\tprintSearch(label);"], [1192, "\t\t\t    }"], [1193, ""], [1199, "\t\t\t    if (options.debug()) {"], [1200, "\t\t\t\tmasterLabel.setSelectChoicePoint(masterSelect);"], [1201, "\t\t\t\tSystem.out.print(\"% maximize (\" + cost + \") \");"], [1202, "\t\t\t\tprintSearch(masterLabel);"], [1203, "\t\t\t    }"], [1204, ""], [1250, ""], [1758, "    @SuppressWarnings(\"unchecked\") void printSearch(DepthFirstSearch<Var> s) {"], [1760, "\tdo {"], [1762, "\t    System.out.print(s);"], [1764, "\t    // find next search"], [1765, "\t    if (s.childSearches == null)"], [1766, "\t\ts = null;"], [1767, "\t    else {"], [1768, "\t\ts = (DepthFirstSearch<Var>)s.childSearches[0];"], [1769, "\t\tSystem.out.print(\", \");"], [1771, "\t    }"], [1772, "\t} while (s != null);"], [1773, "\tSystem.out.println();"]], "deleted": [[495, "\t\t\telse"], [526, "\t\t\telse"], [561, "\t\t\telse"], [1677, "    @SuppressWarnings(\"unchecked\") void printSearch(Search<? extends Var> label) {"], [1679, "        int N = 1;"], [1680, "        System.out.println(N++ + \". \" + label);"], [1682, "        java.util.LinkedHashSet<Search<? extends Var>> l = new java.util.LinkedHashSet<Search<? extends Var>>();"], [1683, "        l.add(label);"], [1685, "        while (l.size() != 0) {"], [1686, "            java.util.LinkedHashSet<Search<? extends Var>> ns = new java.util.LinkedHashSet<Search<? extends Var>>();"], [1687, "            for (Search s1 : l) {"], [1688, "                Search<? extends Var>[] child = ((DepthFirstSearch) s1).childSearches;"], [1689, "                if (child != null)"], [1690, "                    for (Search s : child) {"], [1691, "                        System.out.println(N + \". \" + s);"], [1692, "                        ns.add(s);"], [1693, "                    }"], [1694, "            }"], [1695, "            N++;"], [1697, "            l = ns;"], [1698, "        }"]]}, "num_lines_added": 96, "num_lines_removed": 21}