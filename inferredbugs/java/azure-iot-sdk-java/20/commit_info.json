{"hash": "36192ad21ab9333a9be689f58521e495a393e0fc", "message": "refactor(samples): Refactor device client manager locking", "file_num_lines": 142, "diff_parsed": {"added": [[4, "import com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeCallback;"], [5, "import com.microsoft.azure.sdk.iot.device.IotHubConnectionStatusChangeReason;"], [6, "import com.microsoft.azure.sdk.iot.device.transport.IotHubConnectionStatus;"], [13, "public class DeviceClientManager implements IotHubConnectionStatusChangeCallback {"], [14, "    private enum ConnectionStatus {"], [15, "        DISCONNECTED, CONNECTING, CONNECTED"], [16, "    }"], [17, ""], [20, "    private final boolean autoReconnectOnDisconnected;"], [21, "    private ConnectionStatus connectionStatus;"], [25, "    DeviceClientManager(DeviceClient deviceClient, boolean autoReconnectOnDisconnected) {"], [26, "        this.connectionStatus = ConnectionStatus.DISCONNECTED;"], [28, "        this.client.registerConnectionStatusChangeCallback(this, this);"], [29, "        this.autoReconnectOnDisconnected = autoReconnectOnDisconnected;"], [32, "    public void connect() {"], [33, "        synchronized (lock) {"], [34, "            if(connectionStatus == ConnectionStatus.DISCONNECTED) {"], [35, "                connectionStatus = ConnectionStatus.CONNECTING;"], [36, "            } else {"], [37, "                return;"], [39, "        }"], [40, "        doConnect();"], [41, "    }"], [42, ""], [43, "    public void disconnect() {"], [44, "        synchronized (lock) {"], [46, "                log.debug(\"[disconnect] - Closing the device client instance...\");"], [47, "                client.closeNow();"], [49, "            catch (IOException e) {"], [50, "                log.error(\"[disconnect] - Exception thrown while closing DeviceClient instance: \", e);"], [51, "            } finally {"], [52, "                connectionStatus = ConnectionStatus.DISCONNECTED;"], [55, ""], [58, "    @Override"], [59, "    public void execute(IotHubConnectionStatus status, IotHubConnectionStatusChangeReason statusChangeReason, Throwable throwable, Object callbackContext) {"], [60, "        log.debug(\"### Connection status change reported: status={}, reason={}, throwable={}\", status, statusChangeReason, throwable);"], [61, ""], [62, "        switch (status) {"], [63, "            case CONNECTED: {"], [64, "                log.debug(\"### The DeviceClient is CONNECTED; all operations will be carried out as normal.\");"], [65, "                break;"], [66, "            }"], [67, "            case DISCONNECTED_RETRYING: {"], [68, "                log.debug(\"### The DeviceClient is retrying based on the retry policy. Do NOT close or open the DeviceClient instance\");"], [69, "                log.debug(\"### The DeviceClient can still queue messages and report properties, but they won't be sent until the connection is established.\");"], [70, "                break;"], [71, "            }"], [72, "            case DISCONNECTED: {"], [73, "                handleDisconnection(statusChangeReason);"], [76, "    }"], [78, "    private void handleDisconnection(IotHubConnectionStatusChangeReason statusChangeReason) {"], [79, "        switch (statusChangeReason) {"], [80, "            case CLIENT_CLOSE:"], [81, "                log.debug(\"### The DeviceClient has been closed gracefully. You can reopen by calling open() on this client.\");"], [82, "                break;"], [83, "            case BAD_CREDENTIAL:"], [84, "            case EXPIRED_SAS_TOKEN:"], [85, "                log.warn(\"### The supplied credentials were invalid. Fix the input and create a new device client instance.\");"], [86, "                break;"], [87, "            case RETRY_EXPIRED:"], [88, "                log.warn(\"### The DeviceClient has been disconnected because the retry policy expired. Can be reopened by closing and then opening the instance.\");"], [89, "                handleRecoverableDisconnection();"], [90, "                break;"], [91, "            case COMMUNICATION_ERROR:"], [92, "                log.warn(\"### The DeviceClient has been disconnected due to a non-retryable exception. Inspect the throwable for details.\");"], [93, "                log.warn(\"### The DeviceClient can be reopened by closing and then opening the instance.\");"], [94, "                handleRecoverableDisconnection();"], [95, "                break;"], [96, "            default:"], [97, "                log.error(\"### [dead code] DeviceClient cannot be disconnected with reason {}\", statusChangeReason);"], [101, "    void handleRecoverableDisconnection() {"], [102, "        synchronized (lock) {"], [103, "            if (connectionStatus == ConnectionStatus.CONNECTED && autoReconnectOnDisconnected) {"], [104, "                new Thread(new Runnable() {"], [105, "                    @Override"], [106, "                    public void run() {"], [107, "                        log.debug(\"[reconnect] - Attempting reconnect for device client...\");"], [108, "                        synchronized (lock) {"], [109, "                            if (connectionStatus == ConnectionStatus.CONNECTED) {"], [110, "                                try {"], [111, "                                    client.closeNow();"], [112, "                                } catch (Exception e) {"], [113, "                                    log.warn(\"[reconnect] - DeviceClient closeNow failed.\", e);"], [114, "                                } finally {"], [115, "                                    connectionStatus = ConnectionStatus.CONNECTING;"], [116, "                                }"], [117, "                            } else {"], [118, "                                log.debug(\"[reconnect] - DeviceClient is currently connecting, or already connected; skipping...\");"], [119, "                                return;"], [120, "                            }"], [121, "                        }"], [122, "                        doConnect();"], [123, "                    }"], [124, "                }).start();"], [125, "            } else {"], [126, "                connectionStatus = ConnectionStatus.DISCONNECTED;"], [127, "            }"], [129, "    }"], [130, ""], [131, "    void doConnect() {"], [132, "        // Device client does not have retry on the initial open() call. Will need to be re-opened by the calling application"], [133, "        while (connectionStatus == ConnectionStatus.CONNECTING) {"], [134, "            synchronized (lock) {"], [135, "                if(connectionStatus == ConnectionStatus.CONNECTING) {"], [136, "                    try {"], [137, "                        log.debug(\"[connect] - Opening the device client instance...\");"], [138, "                        client.open();"], [139, "                        connectionStatus = ConnectionStatus.CONNECTED;"], [140, "                        break;"], [141, "                    }"], [142, "                    catch (Exception ex) {"], [143, "                        log.error(\"[connect] - Exception thrown while opening DeviceClient instance: \", ex);"], [144, "                    }"], [145, "                }"], [146, "            }"], [147, ""], [148, "            try {"], [149, "                log.debug(\"[connect] - Sleeping for 10 secs before attempting another open()\");"], [150, "                Thread.sleep(SLEEP_TIME_BEFORE_RECONNECTING_IN_SECONDS * 1000);"], [151, "            }"], [152, "            catch (InterruptedException ex) {"], [153, "                log.error(\"[connect] - Exception in thread sleep: \", ex);"], [154, "            }"]], "deleted": [[10, "public class DeviceClientManager {"], [13, "    private static boolean connecting;"], [17, "    DeviceClientManager(DeviceClient deviceClient) {"], [19, "        this.client.registerConnectionStatusChangeCallback(new IotHubConnectionStatusChangeCallbackHandler(), this);"], [22, "    void connect() {"], [23, "        // Device client does not have retry on the initial open() call. Will need to be re-opened by the calling application"], [24, "        while (true) {"], [25, "            try {"], [26, "                log.debug(\"[connect] - Opening the device client instance...\");"], [27, "                client.open();"], [28, "                break;"], [29, "            }"], [30, "            catch (Exception ex) {"], [31, "                log.error(\"[connect] - Exception thrown while opening DeviceClient instance: \", ex);"], [34, "                log.debug(\"[connect] - Sleeping for 10 secs before attempting another open()\");"], [35, "                Thread.sleep(SLEEP_TIME_BEFORE_RECONNECTING_IN_SECONDS * 1000);"], [37, "            catch (InterruptedException ex) {"], [38, "                log.error(\"[connect] - Exception in thread sleep: \", ex);"], [43, "    void reconnect() {"], [44, "        log.debug(\"[reconnect] - Attempting reconnect for device client...\");"], [45, "        synchronized (lock) {"], [46, "            if (connecting) {"], [47, "                log.debug(\"[reconnect] - DeviceClient is currently connecting, or already connected; skipping...\");"], [48, "                return;"], [50, "            disconnect();"], [51, "            log.debug(\"[reconnect] - DeviceClient Disconnected\");"], [52, "            connecting = true;"], [55, "        connect();"], [56, "        synchronized (lock) {"], [57, "            connecting = false;"], [61, "    void disconnect() {"], [62, "        try {"], [63, "            log.debug(\"[disconnect] - Closing the device client instance...\");"], [64, "            client.closeNow();"], [66, "        catch (IOException e) {"], [67, "            log.error(\"[disconnect] - Exception thrown while closing DeviceClient instance: \", e);"]]}, "num_lines_added": 123, "num_lines_removed": 36}