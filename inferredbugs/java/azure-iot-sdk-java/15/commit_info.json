{"hash": "283104b20ad6028936e56b807884b8fbe38d8d14", "message": "Fix AMQP reconnection issue for CBS connection (single and multiplex)", "file_num_lines": 1396, "diff_parsed": {"added": [[88, ""], [92, "    @Mocked"], [93, "    List<DeviceClient> mockDeviceClientList;"], [94, ""], [168, "                new AmqpsIotHubConnection(mockConfig, 1);"], [194, "                new AmqpsIotHubConnection(mockConfig, 1);"], [214, "                new AmqpsIotHubConnection(mockConfig, 1);"], [240, "                new AmqpsIotHubConnection(mockConfig, 1);"], [327, "                new AmqpsIotHubConnection(mockConfig, 1);"], [668, "                new AmqpsIotHubConnection(mockConfig, 1);"], [705, "                new AmqpsIotHubConnection(mockConfig, 1);"], [760, "                new AmqpsIotHubConnection(mockConfig, 1);"], [831, "                new AmqpsIotHubConnection(mockConfig, 1);"], [869, "                new AmqpsIotHubConnection(mockConfig, 1);"], [912, "                new AmqpsIotHubConnection(mockConfig, 1);"], [971, "                new AmqpsIotHubConnection(mockConfig, 1);"], [1035, "                new AmqpsIotHubConnection(mockConfig, 1);"], [1133, "                new AmqpsIotHubConnection(mockConfig, 1);"], [1180, "                new AmqpsIotHubConnection(mockConfig, 1);"], [1284, "                new AmqpsIotHubConnection(mockConfig, 1);"], [1335, "                new AmqpsIotHubConnection(mockConfig, 1);"], [1385, "                new AmqpsIotHubConnection(mockConfig, 1);"], [1419, "                new AmqpsIotHubConnection(mockConfig, 1);"], [1461, "                new AmqpsIotHubConnection(mockConfig, 1);"], [1504, "                new AmqpsIotHubConnection(mockConfig, 1);"], [1540, "                new AmqpsIotHubConnection(mockConfig, 1);"], [1585, "                new AmqpsIotHubConnection(mockConfig, 1);"], [1609, "    // Tests_SRS_AMQPSTRANSPORT_12_019: [**Reconnect uses single device open if the device list is null.]"], [1610, "    @Test"], [1611, "    public void reconnectCallsOpenIfSingleDevice() throws IOException"], [1612, "    {"], [1613, "        final AmqpsTransport transport = new AmqpsTransport(mockConfig);"], [1614, "        Deencapsulation.setField(transport, \"state\", State.OPEN);"], [1615, ""], [1616, "        transport.reconnect();"], [1617, ""], [1618, "        new Verifications()"], [1619, "        {"], [1620, "            {"], [1621, "                mockConnection.addDeviceOperationSession(mockConfig);"], [1622, "                times = 0;"], [1623, "            }"], [1624, "        };"], [1625, "    }"], [1626, ""], [1627, "    // Tests_SRS_AMQPSTRANSPORT_12_020: [**Reconnect uses multiplexOpen if the device list is not null.]"], [1628, "    @Test"], [1629, "    public void reconnectCallsMultiplexOpenIfMultiplexing() throws IOException"], [1630, "    {"], [1631, "        new NonStrictExpectations()"], [1632, "        {"], [1633, "            {"], [1634, "                mockDeviceClientList.size();"], [1635, "                result = 2;"], [1636, "                mockDeviceClientList.get(0).getConfig();"], [1637, "                result = mockConfig;"], [1638, "                mockDeviceClientList.get(1).getConfig();"], [1639, "                result = mockConfig;"], [1640, "            }"], [1641, "        };"], [1642, ""], [1643, "        final AmqpsTransport transport = new AmqpsTransport(mockConfig);"], [1644, "        Deencapsulation.setField(transport, \"state\", State.OPEN);"], [1645, "        Deencapsulation.setField(transport, \"deviceClientList\", mockDeviceClientList);"], [1646, ""], [1647, "        transport.reconnect();"], [1648, ""], [1649, "        new Verifications()"], [1650, "        {"], [1651, "            {"], [1652, "                mockConnection.addDeviceOperationSession(mockConfig);"], [1653, "                times = 1;"], [1654, "            }"], [1655, "        };"], [1656, "    }"], [1657, ""], [1666, "                new AmqpsIotHubConnection(mockConfig, 1);"]], "deleted": [[164, "                new AmqpsIotHubConnection(mockConfig);"], [190, "                new AmqpsIotHubConnection(mockConfig);"], [210, "                new AmqpsIotHubConnection(mockConfig);"], [236, "                new AmqpsIotHubConnection(mockConfig);"], [323, "                new AmqpsIotHubConnection(mockConfig);"], [664, "                new AmqpsIotHubConnection(mockConfig);"], [701, "                new AmqpsIotHubConnection(mockConfig);"], [756, "                new AmqpsIotHubConnection(mockConfig);"], [827, "                new AmqpsIotHubConnection(mockConfig);"], [865, "                new AmqpsIotHubConnection(mockConfig);"], [908, "                new AmqpsIotHubConnection(mockConfig);"], [967, "                new AmqpsIotHubConnection(mockConfig);"], [1031, "                new AmqpsIotHubConnection(mockConfig);"], [1129, "                new AmqpsIotHubConnection(mockConfig);"], [1168, "    // Tests_SRS_AMQPSTRANSPORT_15_021: [If the transport is closed, the function shall throw an IllegalStateException.]"], [1169, "    @Test(expected = IllegalStateException.class)"], [1170, "    public void handleMessageFailsIfTransportNeverOpened() throws IOException"], [1171, "    {"], [1172, ""], [1173, "        new NonStrictExpectations()"], [1174, "        {"], [1175, "            {"], [1176, "                mockConfig.getDeviceId();"], [1177, "                result = \"deviceId\";"], [1178, "            }"], [1179, "        };"], [1180, "        AmqpsTransport transport = new AmqpsTransport(mockConfig);"], [1181, ""], [1182, "        transport.handleMessage();"], [1183, "    }"], [1184, ""], [1185, "    // Tests_SRS_AMQPSTRANSPORT_15_021: [If the transport is closed, the function shall throw an IllegalStateException.]"], [1186, "    @Test(expected = IllegalStateException.class)"], [1187, "    public void handleMessageFailsIfTransportAlreadyClosed() throws IOException"], [1188, "    {"], [1189, "        AmqpsTransport transport = new AmqpsTransport(mockConfig);"], [1190, "        transport.open();"], [1191, "        transport.close();"], [1192, "        transport.handleMessage();"], [1193, "    }"], [1194, ""], [1203, "                new AmqpsIotHubConnection(mockConfig);"], [1307, "                new AmqpsIotHubConnection(mockConfig);"], [1358, "                new AmqpsIotHubConnection(mockConfig);"], [1408, "                new AmqpsIotHubConnection(mockConfig);"], [1442, "                new AmqpsIotHubConnection(mockConfig);"], [1484, "                new AmqpsIotHubConnection(mockConfig);"], [1527, "                new AmqpsIotHubConnection(mockConfig);"], [1563, "                new AmqpsIotHubConnection(mockConfig);"], [1608, "                new AmqpsIotHubConnection(mockConfig);"], [1640, "                new AmqpsIotHubConnection(mockConfig);"]]}, "num_lines_added": 77, "num_lines_removed": 51}