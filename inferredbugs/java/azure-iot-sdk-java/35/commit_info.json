{"hash": "11f1ea95ff47838b9fe42b106ebce3d28e2743cd", "message": "refactor(sample): Make file upload samples use the granular APIs instead of the deprecated APIs (#909)", "file_num_lines": 129, "diff_parsed": {"added": [[6, "import com.microsoft.azure.sdk.iot.deps.serializer.FileUploadCompletionNotification;"], [7, "import com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriRequest;"], [8, "import com.microsoft.azure.sdk.iot.deps.serializer.FileUploadSasUriResponse;"], [13, "import com.microsoft.azure.storage.blob.CloudBlockBlob;"], [94, "    private static void uploadFileOrDirectory(DeviceClient client, String fullFileName) throws FileNotFoundException, IOException, URISyntaxException {"], [106, "    private static void uploadFileOrDirectoryRecursive(DeviceClient client, String baseDirectory, String relativePath) throws FileNotFoundException, IOException, URISyntaxException {"], [128, "    private static void uploadFile(DeviceClient client, String baseDirectory, String relativeFileName) throws FileNotFoundException, IOException, URISyntaxException {"], [130, "        try (InputStream inputStream = new FileInputStream(file))"], [132, "            long streamLength = file.length();"], [134, "            if(relativeFileName.startsWith(\"\\\\\"))"], [135, "            {"], [136, "                relativeFileName = relativeFileName.substring(1);"], [137, "            }"], [138, ""], [139, "            int index = fileNameList.size();"], [140, "            fileNameList.add(relativeFileName);"], [141, ""], [142, "            System.out.println(\"Getting SAS URI for upload file \" + fileNameList.get(index));"], [143, "            FileUploadSasUriResponse sasUriResponse = client.getFileUploadSasUri(new FileUploadSasUriRequest(file.getName()));"], [144, ""], [145, "            try"], [146, "            {"], [147, "                // Note that other versions of the Azure Storage SDK can be used here instead. The latest can be found here:"], [148, "                // https://github.com/Azure/azure-sdk-for-java/tree/master/sdk/storage#azure-storage-sdk-client-library-for-java"], [149, "                System.out.println(\"Uploading file \" + fileNameList.get(index) + \" with the retrieved SAS URI...\");"], [150, "                CloudBlockBlob blob = new CloudBlockBlob(sasUriResponse.getBlobUri());"], [151, "                blob.upload(inputStream, streamLength);"], [152, "            }"], [153, "            catch (Exception e)"], [154, "            {"], [155, "                // Note that this is done even when the file upload fails. IoT Hub has a fixed number of SAS URIs allowed active"], [156, "                // at any given time. Once you are done with the file upload, you should free your SAS URI so that other"], [157, "                // SAS URIs can be generated. If a SAS URI is not freed through this API, then it will free itself eventually"], [158, "                // based on how long SAS URIs are configured to live on your IoT Hub."], [159, "                FileUploadCompletionNotification completionNotification = new FileUploadCompletionNotification(sasUriResponse.getCorrelationId(), false);"], [160, "                client.completeFileUploadAsync(completionNotification);"], [161, "                System.out.println(\"Failed to upload file \" + fileNameList.get(index));"], [162, "                e.printStackTrace();"], [163, "                return;"], [164, "            }"], [165, "            finally"], [166, "            {"], [167, "                inputStream.close();"], [168, "            }"], [169, ""], [170, "            FileUploadCompletionNotification completionNotification = new FileUploadCompletionNotification(sasUriResponse.getCorrelationId(), true);"], [171, "            client.completeFileUploadAsync(completionNotification);"], [172, ""], [173, "            System.out.println(\"Finished file upload for file \" + fileNameList.get(index));"], [174, "        }"]], "deleted": [[26, "    protected static class FileUploadStatusCallBack implements IotHubEventCallback"], [27, "    {"], [28, "        public void execute(IotHubStatusCode status, Object context)"], [29, "        {"], [30, "            System.out.println(\"IoT Hub responded to file upload for \" + fileNameList.get((int)context) + \" operation with status \" + status.name());"], [31, "        }"], [32, "    }"], [33, ""], [81, ""], [83, ""], [84, "            System.out.println(\"File upload started with success\");"], [85, ""], [86, "            System.out.println(\"Waiting for file upload callback with the status...\");"], [103, "    private static void uploadFileOrDirectory(DeviceClient client, String fullFileName) throws FileNotFoundException, IOException"], [104, "    {"], [116, "    private static void uploadFileOrDirectoryRecursive(DeviceClient client, String baseDirectory, String relativePath) throws FileNotFoundException, IOException"], [117, "    {"], [139, "    private static void uploadFile(DeviceClient client, String baseDirectory, String relativeFileName) throws FileNotFoundException, IOException"], [140, "    {"], [142, "        InputStream inputStream = new FileInputStream(file);"], [143, "        long streamLength = file.length();"], [144, ""], [145, "        if(relativeFileName.startsWith(\"\\\\\"))"], [147, "            relativeFileName = relativeFileName.substring(1);"], [148, "        }"], [150, "        int index = fileNameList.size();"], [151, "        fileNameList.add(relativeFileName);"], [152, "        client.uploadToBlobAsync(relativeFileName, inputStream, streamLength, new FileUploadStatusCallBack(), index);"]]}, "num_lines_added": 50, "num_lines_removed": 28}