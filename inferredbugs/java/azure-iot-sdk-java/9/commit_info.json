{"hash": "fbc7bbce8cb4646a834cab9b53f7ffc3000f9c96", "message": "Remove MQTT lock that prevents close from closing", "file_num_lines": 306, "diff_parsed": {"added": [[243, "        try"], [245, "            /*"], [246, "            **Codes_SRS_Mqtt_25_010: [**If the MQTT connection is closed, the function shall do nothing.**]**"], [247, "            */"], [248, "            if (Mqtt.info.mqttAsyncClient.isConnected())"], [251, "                ** Codes_SRS_Mqtt_25_009: [**The function shall close the MQTT connection.**]**"], [252, "                */"], [253, "                IMqttToken disconnectToken = Mqtt.info.mqttAsyncClient.disconnect();"], [254, "                disconnectToken.waitForCompletion();"], [256, "                Mqtt.info.mqttAsyncClient = null;"], [257, "        }"], [258, ""], [259, "        catch (MqttException e)"], [260, "        {"], [261, "            /*"], [262, "            ** SRS_Mqtt_25_011: [**If an MQTT connection is unable to be closed for any reason, the function shall throw an IOException.**]**"], [263, "            */"], [264, "            throw new IOException(\"Unable to disconnect\" + \"because \" + e.getMessage() );"]], "deleted": [[243, "        synchronized (Mqtt.MQTT_LOCK)"], [245, "            try"], [246, "            {"], [247, "                /*"], [248, "                **Codes_SRS_Mqtt_25_010: [**If the MQTT connection is closed, the function shall do nothing.**]**"], [249, "                 */"], [250, "                if (Mqtt.info.mqttAsyncClient.isConnected())"], [251, "                {"], [252, "                    /*"], [253, "                    ** Codes_SRS_Mqtt_25_009: [**The function shall close the MQTT connection.**]**"], [254, "                     */"], [255, "                    IMqttToken disconnectToken = Mqtt.info.mqttAsyncClient.disconnect();"], [256, "                    disconnectToken.waitForCompletion();"], [257, "                }"], [258, "                Mqtt.info.mqttAsyncClient = null;"], [259, "            }"], [260, "            catch (MqttException e)"], [263, "                ** SRS_Mqtt_25_011: [**If an MQTT connection is unable to be closed for any reason, the function shall throw an IOException.**]**"], [264, "                 */"], [265, "                throw new IOException(\"Unable to disconnect\" + \"because \" + e.getMessage() );"]]}, "num_lines_added": 18, "num_lines_removed": 20}