{"hash": "666971fe569bffe47bbbb7e4258432398fce2a31", "message": "fix:zk\u9501\u5de5\u5177\u7c7b\u91ca\u653e\u9501\u8d44\u6e90\u6539\u7528remove\uff08ConcurrentHashMap value\u4e0d\u5141\u8bb8\u4f7f\u7528null\uff09", "file_num_lines": 68, "diff_parsed": {"added": [[30, "    private ThreadLocal<Map<Long, InterProcessMutex>> threadLock = ThreadLocal.withInitial(ConcurrentHashMap::new);"], [43, "            Map<Long, InterProcessMutex> processMutexMap = threadLock.get();"], [44, "            if (processMutexMap.get(seckillId) == null) {"], [45, "                processMutexMap.put(seckillId, new InterProcessMutex(client, rootLockPath + \"/\" + seckillId));"], [47, "            boolean acquire = processMutexMap.get(seckillId).acquire(5000L, TimeUnit.MILLISECONDS);"], [66, "            Map<Long, InterProcessMutex> processMutexMap = threadLock.get();"], [67, "            processMutexMap.get(seckillId).release();"], [69, "            processMutexMap.remove(seckillId);"], [92, "        log.info(\"zk\u9501\u8d44\u6e90\u5df2\u91ca\u653e\uff01\");"]], "deleted": [[30, "    private ThreadLocal<Map<Long, InterProcessMutex>> threadLock = new ThreadLocal<>();"], [43, "            if (threadLock.get() == null) {"], [44, "                map = new ConcurrentHashMap();"], [45, "                map.put(seckillId, new InterProcessMutex(client, rootLockPath + \"/\" + seckillId));"], [46, "                threadLock.set(map);"], [47, "            } else {"], [48, "                if (threadLock.get().get(seckillId) == null) {"], [49, "                    map = threadLock.get();"], [50, "                    map.put(seckillId, new InterProcessMutex(client, rootLockPath + \"/\" + seckillId));"], [51, "                }"], [53, "            boolean acquire = threadLock.get().get(seckillId).acquire(5000L, TimeUnit.MILLISECONDS);"], [72, "            threadLock.get().get(seckillId).release();"], [74, "            threadLock.get().put(seckillId, null);"]]}, "num_lines_added": 9, "num_lines_removed": 13}