{"hash": "8817bed5b181c097f250bfd2eb2254a4fee08f0f", "message": "Changed the `diffClock` logic", "file_num_lines": 63, "diff_parsed": {"added": [[23, "import hivemall.utils.math.MathUtils;"], [33, "    protected short globalClock;"], [36, "        this.globalClock = 0;"], [48, "    public abstract void add(float localWeight, float covar, @Nonnegative int deltaUpdates, float scale);"], [57, "        return globalClock;"], [60, "    protected final void incrClock(int deltaUpdates) {"], [61, "        globalClock += deltaUpdates;"], [64, "    public final short diffClock(short localClock) {"], [65, "        int dist = globalClock - localClock;"], [66, "        if(dist < 0) {"], [67, "            dist = -dist;"], [68, "        }"], [69, "        final short ret;"], [70, "        if(MathUtils.sign(globalClock) == MathUtils.sign(localClock)) {"], [71, "            ret = (short) dist;"], [72, "        } else {"], [73, "            int diff;"], [74, "            if(globalClock < 0) {"], [75, "                diff = globalClock - Short.MIN_VALUE;"], [76, "                assert (diff >= 0) : \"diff: \" + diff + \", globalClock: \" + globalClock;"], [77, "            } else {"], [78, "                diff = Short.MAX_VALUE - globalClock;"], [79, "            }"], [80, "            if(localClock < 0) {"], [81, "                int tmp = localClock - Short.MIN_VALUE;"], [82, "                assert (tmp >= 0) : \"diff localCkicj: \" + tmp + \", localClock: \" + localClock;"], [83, "                diff += tmp;"], [84, "            } else {"], [85, "                diff += Short.MAX_VALUE - localClock;"], [86, "            }"], [87, "            assert (diff >= 0) : diff;"], [88, "            if(dist < diff) {"], [89, "                ret = (short) dist;"], [90, "            } else {"], [91, "                ret = (short) diff;"], [92, "            }"], [93, "        }"], [94, "        return ret;"]], "deleted": [[32, "    protected short totalClock;"], [35, "        this.totalClock = 0;"], [47, "    public abstract void add(float localWeight, float covar, short clock, @Nonnegative int deltaUpdates, float scale);"], [56, "        return totalClock;"], [59, "    protected final void incrClock(short clock) {"], [60, "        totalClock += clock;"], [63, "    public final int diffClock(short clock) {"], [64, "        short diff = (short) (totalClock - clock);"], [65, "        return diff < 0 ? -diff : diff;"]]}, "num_lines_added": 38, "num_lines_removed": 9}