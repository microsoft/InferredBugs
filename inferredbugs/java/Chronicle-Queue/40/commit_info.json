{"hash": "18b91627dbea75185921489c9fcd45f09e60591b", "message": "fixed https://github.com/ChronicleEnterprise/Chronicle-Queue-Enterprise/issues/141", "file_num_lines": 34, "diff_parsed": {"added": [[55, "        final TableStore<?> store = SingleTableBuilder.binary(storeFilePath, Metadata.NoMeta.INSTANCE).readOnly(false).build();"], [57, "        // appender lock"], [58, "        (new TableStoreWriteLock(store, BusyTimedPauser::new, 0L, \"chronicle.append.lock\")).forceUnlockLockAndDontWarn();"], [59, ""], [60, "        // write lock"], [61, "        (new TableStoreWriteLock(store, BusyTimedPauser::new, 0L)).forceUnlockLockAndDontWarn();"], [67, ""]], "deleted": [[20, "import net.openhft.chronicle.core.Jvm;"], [23, "import net.openhft.chronicle.queue.impl.single.TSQueueLock;"], [25, "import net.openhft.chronicle.queue.impl.table.AbstractTSQueueLock;"], [32, "import java.lang.reflect.InvocationTargetException;"], [33, "import java.lang.reflect.Method;"], [60, "        TableStore store = SingleTableBuilder.binary(storeFilePath, Metadata.NoMeta.INSTANCE).readOnly(false).build();"], [61, "        TSQueueLock queueLock = new TSQueueLock(store, BusyTimedPauser::new, 0L);"], [62, "        // writeLock AKA appendLock"], [63, "        TableStoreWriteLock writeLock = new TableStoreWriteLock(store, BusyTimedPauser::new, 0L);"], [65, "        forceUnlock(queueLock);"], [66, "        forceUnlock(writeLock);"], [71, "    private static void forceUnlock(AbstractTSQueueLock lock) {"], [72, "        try {"], [73, "            Method forceUnlock = AbstractTSQueueLock.class.getDeclaredMethod(\"forceUnlock\");"], [74, "            Jvm.setAccessible(forceUnlock);"], [75, "            forceUnlock.invoke(lock);"], [76, "        } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {"], [77, "            e.printStackTrace();"], [78, "            System.exit(2);"], [79, "        }"], [80, "    }"]]}, "num_lines_added": 7, "num_lines_removed": 21}