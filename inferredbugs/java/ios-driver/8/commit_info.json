{"hash": "0ccbed84e6c042e344e247c191604179755a535b", "message": "batch commands for sendKeys", "file_num_lines": 534, "diff_parsed": {"added": [[18, "import java.util.logging.Logger;"], [24, "import org.openqa.selenium.JavascriptExecutor;"], [29, "import org.openqa.selenium.WebDriverException;"], [30, "import org.openqa.selenium.WebElement;"], [53, "import org.uiautomation.ios.server.application.AppleLocale;"], [54, "import org.uiautomation.ios.server.application.ContentResult;"], [58, "  private static final Logger log = Logger.getLogger(RemoteWebElement.class.getName());"], [59, ""], [108, "    WebElement el = getNativeElement();"], [112, "      el.click();"], [180, "  private String getNativeElementClickOnItAndTypeUsingKeyboardScript(String value) throws Exception {"], [181, "    // web stuff."], [182, "    Point po = findPosition();"], [183, "    Dimension dim = inspector.getSize();"], [184, "    int webPageWidth = inspector.getInnerWidth();"], [185, "    if (dim.getWidth() != webPageWidth) {"], [186, "      log.warning(\"BUG : dim.getWidth()!=webPageWidth\");"], [187, "    }"], [188, ""], [189, "    Criteria c = new TypeCriteria(UIAWebView.class);"], [190, "    String json = c.stringify().toString();"], [191, "    StringBuilder script = new StringBuilder();"], [192, "    script.append(\"var root = UIAutomation.cache.get('1');\");"], [193, "    script.append(\"var webview = root.element(-1,\"+json+\");\");"], [194, "    script.append(\"var webviewSize = webview.rect2();\");"], [195, "    script.append(\"var ratio = webviewSize.size.width / \"+dim.getWidth()+\";\");"], [196, "    int top = po.getY();"], [197, "    int left = po.getX();"], [198, "    script.append(\"var top = (\"+top+\"*ratio )+1;\");"], [199, "    script.append(\"var left = (\"+left+\"*ratio)+1;\");"], [200, ""], [201, "    script.append(\"var x = left;\");"], [202, "    boolean ipad = session.getCapabilities().getDevice() == Device.ipad;"], [203, "    if (ipad) {"], [204, "      // for ipad, the adress bar h is fixed @ 96px."], [205, "      script.append(\"var y = top+96;\");"], [206, "    }else{"], [207, "      AppleLocale current = session.getApplication().getCurrentLanguage();"], [208, "      List<ContentResult> results = session.getApplication().getDictionary(current).getPotentialMatches(\"Address\");"], [209, "      if (results.size()!=1){"], [210, "        log.warning(\"translation returned \"+results.size());"], [211, "      }"], [212, "      ContentResult result = results.get(0);"], [213, "      String addressL10ned = result.getL10nFormatted();"], [214, "      Criteria c2 = new AndCriteria(new TypeCriteria(UIAElement.class), new NameCriteria(addressL10ned), new LabelCriteria(addressL10ned));"], [215, "      script.append(\"var addressBar = root.element(-1,\"+c2.stringify().toString()+\");\");"], [216, "      script.append(\"var addressBarSize = addressBar.rect2();\");"], [217, "      script.append(\"var delta = addressBarSize.origin.y +39;\");"], [218, "      script.append(\"if (delta<20){delta=20;};\");"], [219, "      script.append(\"var y = top+delta;\");"], [220, "    }"], [221, ""], [222, "    script.append(\"var nativeElement = root.element(-1,{'x':x,'y':y});\");"], [223, "    // scroll into view."], [224, "    script.append(\"nativeElement.isStale();\");"], [225, "    script.append(\"nativeElement.tap2();\");"], [226, "    script.append(\"var keyboard = UIAutomation.cache.get('1').keyboard2();\");"], [227, "    script.append(\"keyboard.typeString('\"+value+\"');\");"], [228, "    Criteria iPhone = new NameCriteria(\"Done\");"], [229, "    Criteria iPad = new NameCriteria(\"Hide keyboard\");"], [230, ""], [231, "    Criteria c3 =  new OrCriteria(iPad, iPhone);"], [232, ""], [233, "    script.append(\"root.element(-1,\"+c3.stringify().toString()+\").tap2();\");"], [234, ""], [235, "    return script.toString();"], [236, ""], [237, "  }"], [239, ""], [240, ""], [260, "        // TODO freynaud : should save the current value, and reset to that at"], [261, "        // the end. Not to false."], [265, "        UIAElement addressBar = nativeDriver"], [266, "            .findElement(new AndCriteria(new TypeCriteria(UIAElement.class), new NameCriteria(\"Address\","], [267, "                L10NStrategy.serverL10N), new LabelCriteria(\"Address\", L10NStrategy.serverL10N)));"], [278, "      float ratio = ((float) rect.getWidth()) / ((float) (webPageWidth));"], [290, "      if (ipad) {"], [371, "    return (Boolean) inspector.cast(response);"], [389, "    return (Boolean) inspector.cast(response);"], [590, "    boolean equal = (Boolean) inspector.cast(response);"], [677, "    inspector.getProtocol().sendCommand(cmd);"], [681, "    /*WebElement el = getNativeElement();"], [685, "      el.click();"], [701, "    }*/"], [702, "    WorkingMode origin = session.getMode();"], [703, "    session.setMode(WorkingMode.Native);"], [704, "    ((JavascriptExecutor) nativeDriver).executeScript(getNativeElementClickOnItAndTypeUsingKeyboardScript(value));"], [705, "    session.setMode(origin);"]], "deleted": [[49, "import org.uiautomation.ios.server.command.uiautomation.GetSessionsNHandler;"], [101, "    UIAElement el = getNativeElement();"], [105, "      el.tap();"], [184, ""], [185, ""], [195, "        // TODO freynaud : should save the current value, and reset to that at the end. Not to false."], [199, "        UIAElement addressBar = nativeDriver.findElement(new AndCriteria(new TypeCriteria(UIAElement.class),"], [200, "            new NameCriteria(\"Address\",L10NStrategy.serverL10N), new LabelCriteria(\"Address\",L10NStrategy.serverL10N)));"], [211, "         float ratio = ((float) rect.getWidth()) / ((float) (webPageWidth));"], [223, "      if (ipad ){"], [304, "    return (Boolean)inspector.cast(response);"], [322, "    return (Boolean)inspector.cast(response);"], [523, "    boolean equal = (Boolean)inspector.cast(response);"], [596, ""], [611, "     inspector.getProtocol().sendCommand(cmd);"], [615, "    UIAElement el = getNativeElement();"], [619, "      UIARect rect = el.getRect();"], [620, "      int x = rect.getX() + rect.getWidth() - 1;"], [621, "      int y = rect.getY() + rect.getHeight() / 2;"], [622, "      // TODO freynaud : tap() should take a param like middle, topLeft,"], [623, "      // bottomRight to save 1 call."], [624, "      session.getNativeDriver().tap(x, y);"], [640, "    }"], [641, ""]]}, "num_lines_added": 88, "num_lines_removed": 24}