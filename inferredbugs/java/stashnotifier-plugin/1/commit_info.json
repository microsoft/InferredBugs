{"hash": "5a1848f9c1dc4eddfe67027fb4225508c44e44f7", "message": "[FIXED JENKINS-24967] Fix proxy exclusions not working\nAlso support proxy authentication\n\nFixes #41", "file_num_lines": 478, "diff_parsed": {"added": [[64, "import java.net.InetSocketAddress;"], [65, "import java.net.Proxy;"], [66, "import java.net.SocketAddress;"], [76, "import org.apache.http.auth.AuthScope;"], [77, "import org.apache.http.client.CredentialsProvider;"], [78, "import org.apache.http.impl.client.BasicCredentialsProvider;"], [79, "import org.apache.http.impl.client.ProxyAuthenticationStrategy;"], [289, "\tprivate HttpClient getHttpClient(PrintStream logger) throws Exception {"], [291, "        String stashServer = stashServerBaseUrl;"], [293, "        if (\"\".equals(stashServer) || stashServer == null) {"], [294, "            stashServer = descriptor.getStashRootUrl();"], [299, ""], [300, "        URL url = new URL(stashServer);"], [301, "        HttpClientBuilder builder = HttpClientBuilder.create();"], [302, "        if (url.getProtocol().equals(\"https\")"], [341, "        }"], [342, ""], [343, "        // Configure the proxy, if needed"], [344, "        // Using the Jenkins methods handles the noProxyHost settings"], [345, "        ProxyConfiguration proxyConfig = Jenkins.getInstance().proxy;"], [346, "        if (proxyConfig != null) {"], [347, "            Proxy proxy = proxyConfig.createProxy(url.getHost());"], [348, "            if (proxy != null && proxy.type() == Proxy.Type.HTTP) {"], [349, "                SocketAddress addr = proxy.address();"], [350, "                if (addr != null && addr instanceof InetSocketAddress) {"], [351, "                    InetSocketAddress proxyAddr = (InetSocketAddress) addr;"], [352, "                    HttpHost proxyHost = new HttpHost(proxyAddr.getAddress().getHostAddress(), proxyAddr.getPort());"], [353, "                    builder = builder.setProxy(proxyHost);"], [354, ""], [355, "                    String proxyUser = proxyConfig.getUserName();"], [356, "                    if (proxyUser != null) {"], [357, "                        String proxyPass = proxyConfig.getPassword();"], [358, "                        CredentialsProvider cred = new BasicCredentialsProvider();"], [359, "                        cred.setCredentials(new AuthScope(proxyHost),"], [360, "                                new UsernamePasswordCredentials(proxyUser, proxyPass));"], [361, "                        builder = builder"], [362, "                                .setDefaultCredentialsProvider(cred)"], [363, "                                .setProxyAuthenticationStrategy(new ProxyAuthenticationStrategy());"], [364, "                    }"], [367, "        }"], [368, ""], [369, "        return builder.build();"], [370, "    }"]], "deleted": [[44, "import org.apache.http.conn.ClientConnectionManager;"], [46, "import org.apache.http.conn.params.ConnRoutePNames;"], [47, "import org.apache.http.conn.scheme.PlainSocketFactory;"], [48, "import org.apache.http.conn.scheme.Scheme;"], [49, "import org.apache.http.conn.scheme.SchemeRegistry;"], [53, "import org.apache.http.conn.ssl.SSLSocketFactory;"], [57, "import org.apache.http.impl.client.DefaultHttpClient;"], [60, "import org.apache.http.impl.conn.SingleClientConnManager;"], [76, "import java.security.UnrecoverableKeyException;"], [82, "import java.util.regex.Pattern;"], [292, "\tprivate HttpClient getHttpClient(PrintStream logger) {"], [293, "\t\tHttpClient client = null;"], [295, "        String url = stashServerBaseUrl;"], [297, "        if (\"\".equals(url) || url == null) {"], [298, "            url = descriptor.getStashRootUrl();"], [303, "        if (url.startsWith(\"https\")"], [308, "\t\t\t\tHttpClientBuilder builder = HttpClientBuilder.create();"], [333, "\t\t\t\tclient = builder.build();"], [343, "\t\t\t} finally {"], [344, "\t\t\t\tif (client == null) {"], [345, "\t\t\t\t\tlogger.println(\"Trying with safe trust manager, instead!\");"], [346, "\t\t\t\t\tclient = HttpClientBuilder.create().build();"], [347, "\t\t\t\t}"], [349, "\t\t} else {"], [350, "\t\t\tclient = HttpClientBuilder.create().build();"], [351, "\t\t}"], [352, ""], [353, "\t\tProxyConfiguration proxy = Jenkins.getInstance().proxy;"], [354, "\t\tif(proxy != null && !proxy.name.isEmpty() && !proxy.name.startsWith(\"http\") && !isHostOnNoProxyList(proxy)){"], [355, "\t\t\tSchemeRegistry schemeRegistry = client.getConnectionManager().getSchemeRegistry();"], [356, "\t\t\tschemeRegistry.register(new Scheme(\"http\", proxy.port, new PlainSocketFactory()));"], [357, "\t\t\tclient.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, new HttpHost(proxy.name, proxy.port));"], [358, "\t\t}"], [359, ""], [360, "\t\treturn client;"], [361, "\t}"], [362, ""], [363, "\t/**"], [364, "\t * Returns whether or not the stash host is on the noProxy list"], [365, "\t * as defined in the Jenkins proxy settings"], [366, "\t *"], [367, "\t * @param host     the stash URL"], [368, "\t * @param proxy    the ProxyConfiguration"], [369, "\t * @return         whether or not the host is on the noProxy list"], [370, "\t */"], [371, "\tprivate boolean isHostOnNoProxyList(ProxyConfiguration proxy) {"], [372, "\t    String host = getStashServerBaseUrl();"], [373, "\t    if (\"\".equals(host) || host == null) {"], [374, "\t        DescriptorImpl descriptor = getDescriptor();"], [375, "\t        host = descriptor.getStashRootUrl();"], [376, "\t    }"], [377, "\t    if (host != null && proxy.noProxyHost != null) {"], [378, "            for (Pattern p : ProxyConfiguration.getNoProxyHostPatterns(proxy.noProxyHost)) {"], [379, "                if (p.matcher(host).matches()) {"], [380, "                    return true;"], [383, "\t    }"], [384, "\t    return false;"], [385, "\t}"]]}, "num_lines_added": 43, "num_lines_removed": 58}