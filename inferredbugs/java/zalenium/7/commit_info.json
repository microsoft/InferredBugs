{"hash": "53e481d4386750ace597401a200f144db1dcad44", "message": "Adapt SwarmContainerClient wait for task status", "file_num_lines": 562, "diff_parsed": {"added": [[223, "                            .autoRemove(true)"], [391, "        int attemptsLimit = 1000;"], [392, "        Thread.sleep(100);"], [394, "        String serviceName = dockerClient.inspectService(serviceId).spec().name();"], [395, "        Task.Criteria criteria = Task.Criteria.builder().serviceName(serviceName).build();"], [396, "        List<Task> tasks = dockerClient.listTasks(criteria);"], [397, "        Task task = tasks.get(0);"], [399, "        String taskId = task == null ? null : task.id();"], [400, "//        logger.debug(String.format(\"[VBN] ServiceID: %s, Tries: %s/%s, Task: %s\","], [401, "//                serviceId,"], [402, "//                attempts,"], [403, "//                attemptsLimit,"], [404, "//                taskId));"], [406, ""], [407, "        if (task == null && attempts < attemptsLimit) {"], [410, "            ContainerStatus containerStatus = task.status().containerStatus();"], [411, "            if (containerStatus == null) {"], [412, "                return waitForTaskStatus(serviceId, attempts + 1);"], [413, "//            } else {"], [414, "//                logger.debug(String.format(\"[VBN] Retrieved container id %s after %s ms.\","], [415, "//                        containerStatus.containerId(),"], [416, "//                        attempts * 100));"], [417, "            }"], [418, "            return task.status();"], [667, "                ContainerStatus containerStatus = taskStatus.containerStatus();"], [668, "                if (containerStatus != null && containerStatus.containerId().equals(containerId)) {"], [669, "                    String state = taskStatus.state();"], [670, "                    return termStates.contains(state);"]], "deleted": [[386, "        logger.debug(\"--------------Waiting for Task to be ready--------------------------------\");"], [391, "        int attemptsLimit = 50;"], [392, "        Thread.sleep(2000);"], [394, "        List<Task> tasks = dockerClient.listTasks();"], [396, "        for (Task task : tasks) {"], [397, "            String currentId = task.serviceId();"], [398, "            if (currentId.equals(serviceId) && task.status().state().equals(\"running\")) {"], [399, "                taskStatus = task.status();"], [400, "            }"], [401, "        }"], [403, "        if (taskStatus == null && attempts < attemptsLimit) {"], [406, "            return taskStatus;"], [655, "                String state = taskStatus.state();"], [656, "                if (termStates.contains(state)) {"], [657, "                    return taskStatus.containerStatus().containerId().equals(containerId);"]]}, "num_lines_added": 28, "num_lines_removed": 15}