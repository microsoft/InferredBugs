{"hash": "a9fcea654fbc2b9f7a611c525211ca2630909bf0", "message": "adds some integration tests\nfixes key bug\nupdates version to v0.3.0", "file_num_lines": 130, "diff_parsed": {"added": [[6, "import at.favre.tools.apksigner.util.FileUtil;"], [16, "import java.util.Collections;"], [56, "        testAndCheck(cmd, outFolder, uApks);"], [62, "        System.out.println(\"found \" + uApks.size() + \" apks in out folder\");"], [64, "        testAndCheck(cmd, outFolder, uApks);"], [72, "        testAndCheck(cmd, outFolder, uApks);"], [73, "    }"], [74, ""], [75, "    @Test"], [76, "    public void testNoApksGiven() throws Exception {"], [77, "        copyToTestPath(originalFolder, Collections.singletonList(testReleaseKs));"], [78, ""], [79, "        String cmd = \"-\" + CLIParser.ARG_APK_FILE + \" \" + originalFolder.getAbsolutePath() + \" -\" + CLIParser.ARG_APK_OUT + \" \" + outFolder.getAbsolutePath() + \" --\" + CLIParser.ARG_SKIP_ZIPALIGN;"], [80, "        testAndCheck(cmd, outFolder, Collections.emptyList());"], [81, "    }"], [82, ""], [83, "    @Test"], [84, "    public void testSignMultiApkWithZipalign() throws Exception {"], [85, "        List<File> uApks = copyToTestPath(originalFolder, unsingedApks);"], [86, ""], [87, "        String cmd = \"-\" + CLIParser.ARG_APK_FILE + \" \" + originalFolder.getAbsolutePath() + \" -\" + CLIParser.ARG_APK_OUT + \" \" + outFolder.getAbsolutePath();"], [88, "        testAndCheck(cmd, outFolder, uApks);"], [89, "    }"], [90, ""], [91, "    @Test"], [92, "    public void testVerify() throws Exception {"], [93, "        copyToTestPath(originalFolder, singedApks);"], [94, "        String cmd = \"-\" + CLIParser.ARG_APK_FILE + \" \" + originalFolder.getAbsolutePath() + \" --\" + CLIParser.ARG_VERIFY + \" --\" + CLIParser.ARG_SKIP_ZIPALIGN;"], [95, "        System.out.println(cmd);"], [96, "        SignTool.Result result = SignTool.mainExecute(CLIParserTest.asArgArray(cmd));"], [97, ""], [98, "        assertNotNull(result);"], [99, "        assertEquals(0, result.unsuccessful);"], [100, "        assertEquals(singedApks.size(), result.success);"], [101, "    }"], [102, ""], [103, "    @Test"], [104, "    public void testVerifySingleApk() throws Exception {"], [105, "        copyToTestPath(originalFolder, singedApks.subList(0, 1));"], [106, "        String cmd = \"-\" + CLIParser.ARG_APK_FILE + \" \" + originalFolder.listFiles()[0].getAbsolutePath() + \" --\" + CLIParser.ARG_VERIFY + \" --\" + CLIParser.ARG_SKIP_ZIPALIGN;"], [109, "        SignTool.Result result = SignTool.mainExecute(CLIParserTest.asArgArray(cmd));"], [110, "        assertNotNull(result);"], [111, "        assertEquals(0, result.unsuccessful);"], [112, "        assertEquals(1, result.success);"], [113, "    }"], [114, ""], [115, "    @Test"], [116, "    public void testVerifyShouldNotBe() throws Exception {"], [117, "        copyToTestPath(originalFolder, unsingedApks);"], [118, "        String cmd = \"-\" + CLIParser.ARG_APK_FILE + \" \" + originalFolder.getAbsolutePath() + \" --\" + CLIParser.ARG_VERIFY + \" --\" + CLIParser.ARG_SKIP_ZIPALIGN;"], [119, "        System.out.println(cmd);"], [120, ""], [121, "        SignTool.Result result = SignTool.mainExecute(CLIParserTest.asArgArray(cmd));"], [122, "        assertNotNull(result);"], [123, "        assertEquals(unsingedApks.size(), result.unsuccessful);"], [124, "        assertEquals(0, result.success);"], [125, "    }"], [126, ""], [127, "    private static void testAndCheck(String cmd, File outFolder, List<File> copyApks) throws Exception {"], [128, "        System.out.println(cmd);"], [129, "        SignTool.Result result = SignTool.mainExecute(CLIParserTest.asArgArray(cmd));"], [130, "        assertNotNull(result);"], [131, "        assertEquals(0, result.unsuccessful);"], [132, "        assertEquals(copyApks.size(), result.success);"], [133, "        assertSigned(outFolder, copyApks);"], [138, "        File[] outFiles = outFolder.listFiles(pathname -> FileUtil.getFileExtension(pathname).toLowerCase().equals(\"apk\"));"], [139, "        System.out.println(\"Found \" + outFiles.length + \" apks in out dir\");"]], "deleted": [[54, "        System.out.println(cmd);"], [55, ""], [56, "        SignTool.main(CLIParserTest.asArgArray(cmd));"], [57, "        assertSigned(outFolder, uApks);"], [63, ""], [65, ""], [66, "        System.out.println(cmd);"], [67, ""], [68, "        SignTool.main(CLIParserTest.asArgArray(cmd));"], [69, "        assertSigned(outFolder, uApks);"], [79, "        SignTool.main(CLIParserTest.asArgArray(cmd));"], [80, "        assertSigned(outFolder, uApks);"], [85, "        File[] outFiles = outFolder.listFiles();"]]}, "num_lines_added": 67, "num_lines_removed": 13}