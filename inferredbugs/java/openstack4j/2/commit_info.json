{"hash": "5851e2c09bce08b0cd0c2a07a9e828cbf245a768", "message": "handle unscoped token catalog", "file_num_lines": 183, "diff_parsed": {"added": [[129, "            } else {"], [130, "                return null;"], [142, "                    if (matches(ep, p))"], [143, "                        return ep.getUrl().toString();"]], "deleted": [[140, "                    if (matches(ep, p)) {"], [141, "                        //some installation have v2.0 url in catalog for v3 identity api"], [142, "                        //some other the url does not have version in it"], [143, "                        //so we do an additional check here for identity service only"], [144, "                        if (ServiceType.IDENTITY.equals(ServiceType.forName(service.getType()))) {"], [145, "                            String v3Url = ep.getUrl().toString();"], [146, "                            if (v3Url.endsWith(\"/v3\") || v3Url.endsWith(\"/v3/\") ) {"], [147, "                            } else if (v3Url.endsWith(\"/v2.0\") || v3Url.endsWith(\"/v2.0/\") ) {"], [148, "                                v3Url =  v3Url.replace(\"v2.0\", \"v3\");"], [149, "                            } else {"], [150, "                                v3Url = v3Url + \"/v3\";"], [151, "                            }"], [152, "                            LOG.trace(\"resolved v3 endpoint for identity service: {}\", v3Url);"], [153, "                            return v3Url;"], [154, "                        } else {"], [155, "                            return ep.getUrl().toString();"], [156, "                        }"], [157, "                    }"]]}, "num_lines_added": 4, "num_lines_removed": 18}