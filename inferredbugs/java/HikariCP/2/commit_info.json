{"hash": "a2485dfa26f50ecaee7dfcdf7d1fe413fe9b42dd", "message": "Add more connection pools for testing.", "file_num_lines": 334, "diff_parsed": {"added": [[13, "import snaq.db.DBPoolDataSource;"], [14, ""], [17, "import com.mchange.v2.c3p0.ComboPooledDataSource;"], [59, "        else if (args[0].equals(\"dbpool\"))"], [60, "        {"], [61, "            benchmarks.ds = benchmarks.setupDbPool();"], [62, "            System.out.printf(\"Benchmarking DbPool - %d threads, %d connections\", THREADS, POOL_MAX);"], [63, "        }"], [64, "        else if (args[0].equals(\"c3p0\"))"], [65, "        {"], [66, "            benchmarks.ds = benchmarks.setupC3P0();"], [67, "            System.out.printf(\"Benchmarking C3P0 - %d threads, %d connections\", THREADS, POOL_MAX);"], [68, "        }"], [162, "    private DataSource setupHikari()"], [163, "    {"], [164, "        HikariConfig config = new HikariConfig();"], [165, "        config.setAcquireIncrement(5);"], [166, "        config.setMinimumPoolSize(POOL_MAX / 2);"], [167, "        config.setMaximumPoolSize(POOL_MAX);"], [168, "        config.setConnectionTimeout(8000);"], [169, "        config.setIdleTimeout(TimeUnit.MINUTES.toMillis(30));"], [170, "        config.setJdbc4ConnectionTest(true);"], [171, "        config.setDataSourceClassName(\"com.zaxxer.hikari.mocks.StubDataSource\");"], [172, ""], [173, "        HikariDataSource ds = new HikariDataSource(config);"], [174, "        return ds;"], [175, "    }"], [176, ""], [177, "    private DataSource setupBone()"], [178, "    {"], [179, "        try"], [180, "        {"], [181, "            Class.forName(\"com.zaxxer.hikari.mocks.StubDriver\");"], [182, "        }"], [183, "        catch (ClassNotFoundException e)"], [184, "        {"], [185, "            throw new RuntimeException(e);"], [186, "        }"], [187, ""], [188, "        BoneCPConfig config = new BoneCPConfig();"], [189, "        config.setAcquireIncrement(5);"], [190, "        config.setMinConnectionsPerPartition(POOL_MAX / 2);"], [191, "        config.setMaxConnectionsPerPartition(POOL_MAX);"], [192, "        config.setConnectionTimeoutInMs(8000);"], [193, "        config.setIdleMaxAgeInMinutes(30);"], [194, "        config.setConnectionTestStatement(\"VALUES 1\");"], [195, "        config.setCloseOpenStatements(true);"], [196, "        config.setDisableConnectionTracking(true);"], [197, "        config.setJdbcUrl(\"jdbc:stub\");"], [198, "        config.setUsername(\"nobody\");"], [199, "        config.setPassword(\"nopass\");"], [200, ""], [201, "        BoneCPDataSource ds = new BoneCPDataSource(config);"], [202, "        return ds;"], [203, "    }"], [204, ""], [205, "    private DataSource setupDbPool()"], [206, "    {"], [207, "        DBPoolDataSource ds = new DBPoolDataSource();"], [208, "        ds.setDriverClassName(\"com.zaxxer.hikari.mocks.StubDriver\");"], [209, "        ds.setUrl(\"jdbc:stub\");"], [210, "        ds.setMinPool(POOL_MAX / 2);"], [211, "        ds.setMaxPool(POOL_MAX);"], [212, "        ds.setMaxSize(POOL_MAX);"], [213, "        ds.setIdleTimeout(180);"], [214, "        ds.setLoginTimeout(8);"], [215, "        ds.setValidationQuery(\"VALUES 1\");"], [216, ""], [217, "        return ds;"], [218, "    }"], [219, ""], [220, "    private DataSource setupC3P0()"], [221, "    {"], [222, "        try"], [223, "        {"], [224, "            ComboPooledDataSource cpds = new ComboPooledDataSource();"], [225, "            cpds.setDriverClass( \"com.zaxxer.hikari.mocks.StubDriver\" );"], [226, "            cpds.setJdbcUrl( \"jdbc:stub\" );"], [227, "            cpds.setMinPoolSize(POOL_MAX / 2);"], [228, "            cpds.setMaxPoolSize(POOL_MAX);"], [229, "            cpds.setCheckoutTimeout(8000);"], [230, "            cpds.setLoginTimeout(8);"], [231, "            cpds.setTestConnectionOnCheckout(true);"], [232, "            cpds.setPreferredTestQuery(\"VALUES 1\");"], [233, ""], [234, "            return cpds;"], [235, "        }"], [236, "        catch (Exception e)"], [237, "        {"], [238, "            throw new RuntimeException(e);"], [239, "        }"], [240, "    }"], [241, ""]], "deleted": [[83, "    private DataSource setupHikari()"], [84, "    {"], [85, "        HikariConfig config = new HikariConfig();"], [86, "        config.setAcquireIncrement(5);"], [87, "        config.setMinimumPoolSize(POOL_MAX / 2);"], [88, "        config.setMaximumPoolSize(POOL_MAX);"], [89, "        config.setConnectionTimeout(8000);"], [90, "        config.setIdleTimeout(TimeUnit.MINUTES.toMillis(30));"], [91, "        config.setJdbc4ConnectionTest(true);"], [92, "        config.setDataSourceClassName(\"com.zaxxer.hikari.mocks.StubDataSource\");"], [93, ""], [94, "        HikariDataSource ds = new HikariDataSource(config);"], [95, "        return ds;"], [96, "    }"], [97, ""], [98, "    private DataSource setupBone()"], [99, "    {"], [100, "        try"], [101, "        {"], [102, "            Class.forName(\"com.zaxxer.hikari.mocks.StubDriver\");"], [103, "        }"], [104, "        catch (ClassNotFoundException e)"], [105, "        {"], [106, "            throw new RuntimeException(e);"], [107, "        }"], [108, ""], [109, "        BoneCPConfig config = new BoneCPConfig();"], [110, "        config.setAcquireIncrement(5);"], [111, "        config.setMinConnectionsPerPartition(POOL_MAX / 2);"], [112, "        config.setMaxConnectionsPerPartition(POOL_MAX);"], [113, "        config.setConnectionTimeoutInMs(8000);"], [114, "        config.setIdleMaxAgeInMinutes(30);"], [115, "        config.setConnectionTestStatement(\"VALUES 1\");"], [116, "        config.setCloseOpenStatements(true);"], [117, "        config.setDisableConnectionTracking(true);"], [118, "        config.setJdbcUrl(\"jdbc:stub\");"], [119, "        config.setUsername(\"nobody\");"], [120, "        config.setPassword(\"nopass\");"], [121, ""], [122, "        BoneCPDataSource ds = new BoneCPDataSource(config);"], [123, "        return ds;"], [124, "    }"], [125, ""]]}, "num_lines_added": 93, "num_lines_removed": 43}