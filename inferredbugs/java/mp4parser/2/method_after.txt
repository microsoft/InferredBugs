    public void parseMdat(MediaDataBox<TrackBox> mdat) {
        mdat.getTrackMap().clear();

        TreeMap<Long, Track<TrackBox>> trackIdsToTracksWithChunks = new TreeMap<Long, Track<TrackBox>>();

        long[] trackNumbers = getTrackNumbers();
        Map<Long, Long> trackToSampleCount = new HashMap<Long, Long>(trackNumbers.length);
        Map<Long, List<Long>> trackToSyncSamples = new HashMap<Long, List<Long>>();

        for (long trackNumber : trackNumbers) {
            TrackMetaData<TrackBox> trackMetaData = getTrackMetaData(trackNumber);
            trackIdsToTracksWithChunks.put(trackNumber, new Track<TrackBox>(trackNumber, trackMetaData, mdat));
            SyncSampleBox syncSampleBox = trackMetaData.getSyncSampleBox();
            if (syncSampleBox != null) {
                long[] sampleNumbers = syncSampleBox.getSampleNumber();
                ArrayList<Long> sampleNumberList = new ArrayList<Long>(sampleNumbers.length);
                for (long sampleNumber : sampleNumbers) {
                    sampleNumberList.add(sampleNumber);
                }
                trackToSyncSamples.put(trackNumber, sampleNumberList);
            }
            trackToSampleCount.put(trackNumber, 1L);
        }


        long[] chunkOffsets = getChunkOffsets();

        for (long chunkOffset : chunkOffsets) {
            //chunk inside this mdat?
            if (mdat.getStartOffset() > chunkOffset || chunkOffset > mdat.getStartOffset() + mdat.getSizeIfNotParsed()) {
                System.out.println("Chunk offset " + chunkOffset + " not contained in " + this);
                continue;
            }

            long track = getTrackIdForChunk(chunkOffset);

            long[] sampleOffsets = getSampleOffsetsForChunk(chunkOffset);
            long[] sampleSizes = getSampleSizesForChunk(chunkOffset);

            for (int i = 1; i < sampleSizes.length; i++) {
                assert sampleOffsets[i] == sampleSizes[i - 1] + sampleOffsets[i - 1];
            }

            Track<TrackBox> parentTrack = trackIdsToTracksWithChunks.get(track);
            Chunk<TrackBox> chunk = new Chunk<TrackBox>(parentTrack, mdat, sampleSizes.length);
            parentTrack.addChunk(chunk);

            long trackId = parentTrack.getTrackId();
            mdat.getTrackMap().put(trackId, parentTrack);

            for (int i = 0; i < sampleOffsets.length; i++) {
                Long currentSample = trackToSampleCount.get(trackId);
                List<Long> syncSamples = trackToSyncSamples.get(trackId);
                boolean syncSample = syncSamples != null && syncSamples.contains(currentSample);

                SampleImpl<TrackBox> sample = createSample(isoBufferWrapper, chunkOffset + sampleOffsets[i], sampleOffsets[i], sampleSizes[i], parentTrack, chunk, currentSample, syncSample);
                MediaDataBox.SampleHolder<TrackBox> sh = new MediaDataBox.SampleHolder<TrackBox>(sample);
                mdat.getSampleList().add(sh);
                chunk.addSample(sh);
                trackToSampleCount.put(trackId, currentSample + 1);
            }
        }
    }