{"hash": "f747229c221521145b6d6fb4fc70d34d1effa0d2", "message": "close potential resource leaks", "file_num_lines": 207, "diff_parsed": {"added": [[21, "import java.io.IOException;"], [46, "import org.slf4j.Logger;"], [47, "import org.slf4j.LoggerFactory;"], [53, "    private final Logger LOG = LoggerFactory.getLogger(NinjaTestBrowser.class);"], [131, "        BufferedReader br = null;"], [147, "            br = new BufferedReader(new InputStreamReader(response.getEntity().getContent(), \"UTF-8\"));"], [158, "        } finally {"], [159, "            if (br != null) {"], [160, "                try {"], [161, "                    br.close();"], [162, "                } catch (IOException e) {"], [163, "                    LOG.error(\"Failed to close resource\", e);"], [164, "                }"], [165, "            }"], [177, "        BufferedReader br = null;"], [210, "            br = new BufferedReader(new InputStreamReader(response.getEntity().getContent(), \"UTF-8\"));"], [221, "        } finally {"], [222, "            if (br != null) {"], [223, "                try {"], [224, "                    br.close();"], [225, "                } catch (IOException e) {"], [226, "                    LOG.error(\"Failed to close resource\", e);"], [227, "                }"], [228, "            }"]], "deleted": [[50, ""], [143, "            BufferedReader br = new BufferedReader(new InputStreamReader("], [144, "                    response.getEntity().getContent(), \"UTF-8\"));"], [166, ""], [199, "            BufferedReader br = new BufferedReader(new InputStreamReader("], [200, "                    response.getEntity().getContent(), \"UTF-8\"));"]]}, "num_lines_added": 24, "num_lines_removed": 6}