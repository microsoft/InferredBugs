{"hash": "9dde1f9150146d954535447e3f5007a92eb9b53e", "message": "Source line numbers logically start from one not zero; additional unit tests; line number of error highlighted in output", "file_num_lines": 90, "diff_parsed": {"added": [[88, "        // did the user provide a strange range (e.g. negative values)?"], [89, "        // this sometimes may happen when a range is provided like an error"], [90, "        // on line 3 and you want 5 before and 5 after"], [91, "        if (lineFrom < 1 && lineTo > 0) {"], [92, "            // calculate intended range"], [93, "            int intendedRange = lineTo - lineFrom;"], [94, "            lineFrom = 1;"], [95, "            lineTo = lineFrom + intendedRange;"], [97, "        else if (lineFrom < 0 && lineTo < 0) {"], [98, "            if (lineFrom < lineTo) {"], [99, "                int intendedRange = -1 * (lineFrom - lineTo);"], [100, "                lineFrom = 1;"], [101, "                lineTo = lineFrom + intendedRange;"], [102, "            }"], [103, "            else {"], [104, "                // giving up"], [105, "                return null;"], [106, "            }"], [132, "        // we caclulate the actual range here by number read \"from\" line"], [133, "        // since we are inclusive and not zero based we adjust the \"from\" by 1"], [134, "        return new SourceSnippet(source, lines, lineFrom, lineFrom + lines.size() - 1);"]], "deleted": [[88, "        if (lineTo <= 0) {"], [89, "            throw new IllegalArgumentException(\"lineTo was <= 0\");"], [91, ""], [92, "        // just zero this out"], [93, "        if (lineFrom < 0) {"], [94, "            lineFrom = 0;"], [95, "        }"], [96, ""], [97, "        if (lineTo < lineFrom) {"], [98, "            throw new IllegalArgumentException(\"lineTo was < lineFrom\");"], [124, "        // we caclulate the actual range here by number read \"from\" line."], [125, "        return new SourceSnippet(source, lines, lineFrom, lineFrom + lines.size());"]]}, "num_lines_added": 21, "num_lines_removed": 12}