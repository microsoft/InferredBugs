{"bug_class": "PROVER", "kind": "ERROR", "bug_type": "RESOURCE_LEAK", "qualifier": "resource of type `org.apache.commons.codec.binary.Base32InputStream` acquired to `b32stream` by call to `Base32InputStream(...)` at line 155 is not released after line 162.", "severity": "HIGH", "visibility": "user", "line": 162, "column": -1, "procedure": "void Base32InputStreamTest.testAvailable()", "procedure_id": "org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable():void.430bb0748e7d99d8e4beb746bcc44e55", "procedure_start_line": 153, "file": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "bug_trace": [{"level": 0, "filename": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "line_number": 153, "column_number": -1, "description": "start of procedure testAvailable()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "line_number": 154, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/StringUtils.java", "line_number": 70, "column_number": -1, "description": "start of procedure getBytesIso8859_1(...)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/StringUtils.java", "line_number": 71, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/codec/binary/StringUtils.java", "line_number": 49, "column_number": -1, "description": "start of procedure getBytes(...)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/codec/binary/StringUtils.java", "line_number": 50, "column_number": -1, "description": "Taking false branch"}, {"level": 2, "filename": "src/main/java/org/apache/commons/codec/binary/StringUtils.java", "line_number": 53, "column_number": -1, "description": "return from a call to byte[] StringUtils.getBytes(String,Charset)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/StringUtils.java", "line_number": 71, "column_number": -1, "description": "return from a call to byte[] StringUtils.getBytesIso8859_1(String)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "line_number": 154, "column_number": -1, "description": "Skipping ByteArrayInputStream(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "line_number": 155, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java", "line_number": 47, "column_number": -1, "description": "start of procedure Base32InputStream(...)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java", "line_number": 48, "column_number": -1, "description": ""}, {"level": 2, "filename": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java", "line_number": 60, "column_number": -1, "description": "start of procedure Base32InputStream(...)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java", "line_number": 61, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/codec/binary/Base32.java", "line_number": 169, "column_number": -1, "description": "start of procedure Base32(...)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/codec/binary/Base32.java", "line_number": 170, "column_number": -1, "description": "Skipping Base32(...): empty list of specs"}, {"level": 4, "filename": "src/main/java/org/apache/commons/codec/binary/Base32.java", "line_number": 231, "column_number": -1, "description": "Definition of Base32(...)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/codec/binary/Base32.java", "line_number": 171, "column_number": -1, "description": "return from a call to Base32.<init>(boolean)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java", "line_number": 61, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 44, "column_number": -1, "description": "start of procedure BaseNCodecInputStream(...)"}, {"level": 3, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 45, "column_number": -1, "description": "Skipping FilterInputStream(...): unknown method"}, {"level": 3, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 40, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 42, "column_number": -1, "description": ""}, {"level": 4, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java", "line_number": 90, "column_number": -1, "description": "start of procedure BaseNCodec$Context()"}, {"level": 4, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java", "line_number": 91, "column_number": -1, "description": "return from a call to BaseNCodec$Context.<init>()"}, {"level": 3, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 42, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 46, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 47, "column_number": -1, "description": ""}, {"level": 3, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 48, "column_number": -1, "description": "return from a call to BaseNCodecInputStream.<init>(InputStream,Base32,boolean)"}, {"level": 2, "filename": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java", "line_number": 62, "column_number": -1, "description": "return from a call to Base32InputStream.<init>(InputStream,boolean)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java", "line_number": 49, "column_number": -1, "description": "return from a call to Base32InputStream.<init>(ByteArrayInputStream)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "line_number": 156, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 61, "column_number": -1, "description": "start of procedure available()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 64, "column_number": -1, "description": "Taking false branch"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 64, "column_number": -1, "description": "return from a call to int BaseNCodecInputStream.available()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "line_number": 156, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "line_number": 157, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 191, "column_number": -1, "description": "start of procedure skip(...)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 192, "column_number": -1, "description": "Taking false branch"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 197, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 198, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 200, "column_number": -1, "description": "Taking true branch"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 201, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 202, "column_number": -1, "description": "Skipping read(...): empty list of specs"}, {"level": 2, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 128, "column_number": -1, "description": "Definition of read(...)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 202, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 203, "column_number": -1, "description": "Taking false branch"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 206, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 200, "column_number": -1, "description": "Taking false branch"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 209, "column_number": -1, "description": "return from a call to long BaseNCodecInputStream.skip(long)"}, {"level": 0, "filename": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "line_number": 157, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "line_number": 159, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 61, "column_number": -1, "description": "start of procedure available()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 64, "column_number": -1, "description": "Taking false branch"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 64, "column_number": -1, "description": "return from a call to int BaseNCodecInputStream.available()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "line_number": 159, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "line_number": 160, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 97, "column_number": -1, "description": "start of procedure read()"}, {"level": 2, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 128, "column_number": -1, "description": "Definition of read(...)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 98, "column_number": -1, "description": "Taking false branch"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 101, "column_number": -1, "description": "Taking false branch"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 105, "column_number": -1, "description": "return from a call to int BaseNCodecInputStream.read()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "line_number": 160, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "line_number": 161, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 97, "column_number": -1, "description": "start of procedure read()"}, {"level": 2, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 128, "column_number": -1, "description": "Definition of read(...)"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 98, "column_number": -1, "description": "Taking false branch"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 101, "column_number": -1, "description": "Taking false branch"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 105, "column_number": -1, "description": "return from a call to int BaseNCodecInputStream.read()"}, {"level": 0, "filename": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "line_number": 161, "column_number": -1, "description": "Skipping assertEquals(...): unknown method"}, {"level": 0, "filename": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java", "line_number": 162, "column_number": -1, "description": ""}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 61, "column_number": -1, "description": "start of procedure available()"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 64, "column_number": -1, "description": "Taking false branch"}, {"level": 1, "filename": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java", "line_number": 64, "column_number": -1, "description": "return from a call to int BaseNCodecInputStream.available()"}], "key": "Base32InputStreamTest.java|testAvailable|RESOURCE_LEAK", "node_key": "032299521a58ea574b18a1357a739565", "hash": "4d5fb40680da08bdf4ecea3a1bd55ef2", "bug_type_hum": "Resource Leak", "censored_reason": ""}