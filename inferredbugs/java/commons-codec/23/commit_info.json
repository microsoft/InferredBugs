{"hash": "622088ba07b5b9452b73e2b2867549540e431732", "message": "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1308111 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 952, "diff_parsed": {"added": [[31, "import org.apache.commons.codec.Charsets;"], [131, "        assertEquals(bigInt1, Base64.decodeInteger(encodedInt1.getBytes(Charsets.UTF_8)));"], [140, "        assertEquals(bigInt2, Base64.decodeInteger(encodedInt2.getBytes(Charsets.UTF_8)));"], [151, "        assertEquals(bigInt3, Base64.decodeInteger(encodedInt3.getBytes(Charsets.UTF_8)));"], [168, "        assertEquals(bigInt4, Base64.decodeInteger(encodedInt4.getBytes(Charsets.UTF_8)));"], [253, "        assertEquals(\"A\", new String(Base64.decodeBase64(\"QQ==\".getBytes(Charsets.UTF_8))));"], [261, "        assertEquals(\"AA\", new String(Base64.decodeBase64(\"QUE=\".getBytes(Charsets.UTF_8))));"], [262, "        assertEquals(\"AAA\", new String(Base64.decodeBase64(\"QUFB\".getBytes(Charsets.UTF_8))));"], [267, "        assertEquals(0, Base64.decodeBase64(\"====\".getBytes(Charsets.UTF_8)).length);"], [268, "        assertEquals(\"\", new String(Base64.decodeBase64(\"====\".getBytes(Charsets.UTF_8))));"], [270, "        assertEquals(0, Base64.decodeBase64(\"===\".getBytes(Charsets.UTF_8)).length);"], [271, "        assertEquals(0, Base64.decodeBase64(\"==\".getBytes(Charsets.UTF_8)).length);"], [272, "        assertEquals(0, Base64.decodeBase64(\"=\".getBytes(Charsets.UTF_8)).length);"], [273, "        assertEquals(0, Base64.decodeBase64(\"\".getBytes(Charsets.UTF_8)).length);"], [278, "        assertEquals(0, Base64.decodeBase64(\"====\\n\".getBytes(Charsets.UTF_8)).length);"], [279, "        assertEquals(\"\", new String(Base64.decodeBase64(\"====\\n\".getBytes(Charsets.UTF_8))));"], [281, "        assertEquals(0, Base64.decodeBase64(\"===\\n\".getBytes(Charsets.UTF_8)).length);"], [282, "        assertEquals(0, Base64.decodeBase64(\"==\\n\".getBytes(Charsets.UTF_8)).length);"], [283, "        assertEquals(0, Base64.decodeBase64(\"=\\n\".getBytes(Charsets.UTF_8)).length);"], [284, "        assertEquals(0, Base64.decodeBase64(\"\\n\".getBytes(Charsets.UTF_8)).length);"], [292, "        byte[] encodedArray = Base64.encodeBase64(orig.getBytes(Charsets.UTF_8));"], [300, "        byte[] encodedWithWS = intermediate.toString().getBytes(Charsets.UTF_8);"], [377, "                .decodeBase64(\"VGhlIH@$#$@%F1aWN@#@#@@rIGJyb3duIGZve\\n\\r\\t%#%#%#%CBqd##$#$W1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg==\".getBytes(Charsets.UTF_8))));"], [413, "                .decodeBase64(\"VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg==\".getBytes(Charsets.UTF_8))));"], [415, "                .decodeBase64(\"SXQgd2FzIHRoZSBiZXN0IG9mIHRpbWVzLCBpdCB3YXMgdGhlIHdvcnN0IG9mIHRpbWVzLg==\".getBytes(Charsets.UTF_8))));"], [417, "                .decodeBase64(\"aHR0cDovL2pha2FydGEuYXBhY2hlLm9yZy9jb21tbW9ucw==\".getBytes(Charsets.UTF_8))));"], [419, "                .decodeBase64(\"QWFCYkNjRGRFZUZmR2dIaElpSmpLa0xsTW1Obk9vUHBRcVJyU3NUdFV1VnZXd1h4WXlaeg==\".getBytes(Charsets.UTF_8))));"], [421, "                .getBytes(Charsets.UTF_8))));"], [422, "        assertEquals(\"xyzzy!\", new String(Base64.decodeBase64(\"eHl6enkh\".getBytes(Charsets.UTF_8))));"], [428, "                .encodeBase64(\"The quick brown fox jumped over the lazy dogs.\".getBytes(Charsets.UTF_8))));"], [434, "                                        .getBytes(Charsets.UTF_8))));"], [436, "                .encodeBase64(\"It was the best of times, it was the worst of times.\".getBytes(Charsets.UTF_8))));"], [438, "                .encodeBase64(\"http://jakarta.apache.org/commmons\".getBytes(Charsets.UTF_8))));"], [440, "                .encodeBase64(\"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\".getBytes(Charsets.UTF_8))));"], [442, "                .getBytes(Charsets.UTF_8))));"], [443, "        assertEquals(\"eHl6enkh\", new String(Base64.encodeBase64(\"xyzzy!\".getBytes(Charsets.UTF_8))));"], [485, "        Object o = Base64.encodeBase64(original.getBytes(Charsets.UTF_8));"], [510, "        Object origObj = original.getBytes(Charsets.UTF_8);"], [523, "        assertEquals(\"SGVsbG8gV29ybGQ=\", new String(b64.encode(\"Hello World\".getBytes(Charsets.UTF_8))));"]], "deleted": [[130, "        assertEquals(bigInt1, Base64.decodeInteger(encodedInt1.getBytes(\"UTF-8\")));"], [139, "        assertEquals(bigInt2, Base64.decodeInteger(encodedInt2.getBytes(\"UTF-8\")));"], [150, "        assertEquals(bigInt3, Base64.decodeInteger(encodedInt3.getBytes(\"UTF-8\")));"], [167, "        assertEquals(bigInt4, Base64.decodeInteger(encodedInt4.getBytes(\"UTF-8\")));"], [252, "        assertEquals(\"A\", new String(Base64.decodeBase64(\"QQ==\".getBytes(\"UTF-8\"))));"], [260, "        assertEquals(\"AA\", new String(Base64.decodeBase64(\"QUE=\".getBytes(\"UTF-8\"))));"], [261, "        assertEquals(\"AAA\", new String(Base64.decodeBase64(\"QUFB\".getBytes(\"UTF-8\"))));"], [266, "        assertEquals(0, Base64.decodeBase64(\"====\".getBytes(\"UTF-8\")).length);"], [267, "        assertEquals(\"\", new String(Base64.decodeBase64(\"====\".getBytes(\"UTF-8\"))));"], [269, "        assertEquals(0, Base64.decodeBase64(\"===\".getBytes(\"UTF-8\")).length);"], [270, "        assertEquals(0, Base64.decodeBase64(\"==\".getBytes(\"UTF-8\")).length);"], [271, "        assertEquals(0, Base64.decodeBase64(\"=\".getBytes(\"UTF-8\")).length);"], [272, "        assertEquals(0, Base64.decodeBase64(\"\".getBytes(\"UTF-8\")).length);"], [277, "        assertEquals(0, Base64.decodeBase64(\"====\\n\".getBytes(\"UTF-8\")).length);"], [278, "        assertEquals(\"\", new String(Base64.decodeBase64(\"====\\n\".getBytes(\"UTF-8\"))));"], [280, "        assertEquals(0, Base64.decodeBase64(\"===\\n\".getBytes(\"UTF-8\")).length);"], [281, "        assertEquals(0, Base64.decodeBase64(\"==\\n\".getBytes(\"UTF-8\")).length);"], [282, "        assertEquals(0, Base64.decodeBase64(\"=\\n\".getBytes(\"UTF-8\")).length);"], [283, "        assertEquals(0, Base64.decodeBase64(\"\\n\".getBytes(\"UTF-8\")).length);"], [291, "        byte[] encodedArray = Base64.encodeBase64(orig.getBytes(\"UTF-8\"));"], [299, "        byte[] encodedWithWS = intermediate.toString().getBytes(\"UTF-8\");"], [376, "                .decodeBase64(\"VGhlIH@$#$@%F1aWN@#@#@@rIGJyb3duIGZve\\n\\r\\t%#%#%#%CBqd##$#$W1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg==\".getBytes(\"UTF-8\"))));"], [412, "                .decodeBase64(\"VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg==\".getBytes(\"UTF-8\"))));"], [414, "                .decodeBase64(\"SXQgd2FzIHRoZSBiZXN0IG9mIHRpbWVzLCBpdCB3YXMgdGhlIHdvcnN0IG9mIHRpbWVzLg==\".getBytes(\"UTF-8\"))));"], [416, "                .decodeBase64(\"aHR0cDovL2pha2FydGEuYXBhY2hlLm9yZy9jb21tbW9ucw==\".getBytes(\"UTF-8\"))));"], [418, "                .decodeBase64(\"QWFCYkNjRGRFZUZmR2dIaElpSmpLa0xsTW1Obk9vUHBRcVJyU3NUdFV1VnZXd1h4WXlaeg==\".getBytes(\"UTF-8\"))));"], [420, "                .getBytes(\"UTF-8\"))));"], [421, "        assertEquals(\"xyzzy!\", new String(Base64.decodeBase64(\"eHl6enkh\".getBytes(\"UTF-8\"))));"], [427, "                .encodeBase64(\"The quick brown fox jumped over the lazy dogs.\".getBytes(\"UTF-8\"))));"], [433, "                                        .getBytes(\"UTF-8\"))));"], [435, "                .encodeBase64(\"It was the best of times, it was the worst of times.\".getBytes(\"UTF-8\"))));"], [437, "                .encodeBase64(\"http://jakarta.apache.org/commmons\".getBytes(\"UTF-8\"))));"], [439, "                .encodeBase64(\"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\".getBytes(\"UTF-8\"))));"], [441, "                .getBytes(\"UTF-8\"))));"], [442, "        assertEquals(\"eHl6enkh\", new String(Base64.encodeBase64(\"xyzzy!\".getBytes(\"UTF-8\"))));"], [484, "        Object o = Base64.encodeBase64(original.getBytes(\"UTF-8\"));"], [509, "        Object origObj = original.getBytes(\"UTF-8\");"], [522, "        assertEquals(\"SGVsbG8gV29ybGQ=\", new String(b64.encode(\"Hello World\".getBytes(\"UTF-8\"))));"]]}, "num_lines_added": 39, "num_lines_removed": 38}