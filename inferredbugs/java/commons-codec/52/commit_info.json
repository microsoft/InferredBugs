{"hash": "2ae03e1633ec0a79761b215e8eae2574106bec99", "message": "Reduce deprecation warning noise in test cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1683555 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 967, "diff_parsed": {"added": [[27, "import java.nio.charset.Charset;"], [45, "    @SuppressWarnings(\"deprecation\") // TODO remove when Java 7 is minimum and Charsets constants can be replaced"], [46, "    private static final Charset CHARSET_UTF8 = Charsets.UTF_8;"], [47, ""], [154, "        assertEquals(bigInt1, Base64.decodeInteger(encodedInt1.getBytes(CHARSET_UTF8)));"], [163, "        assertEquals(bigInt2, Base64.decodeInteger(encodedInt2.getBytes(CHARSET_UTF8)));"], [174, "        assertEquals(bigInt3, Base64.decodeInteger(encodedInt3.getBytes(CHARSET_UTF8)));"], [191, "        assertEquals(bigInt4, Base64.decodeInteger(encodedInt4.getBytes(CHARSET_UTF8)));"], [276, "        assertEquals(\"A\", new String(Base64.decodeBase64(\"QQ==\".getBytes(CHARSET_UTF8))));"], [284, "        assertEquals(\"AA\", new String(Base64.decodeBase64(\"QUE=\".getBytes(CHARSET_UTF8))));"], [285, "        assertEquals(\"AAA\", new String(Base64.decodeBase64(\"QUFB\".getBytes(CHARSET_UTF8))));"], [290, "        assertEquals(0, Base64.decodeBase64(\"====\".getBytes(CHARSET_UTF8)).length);"], [291, "        assertEquals(\"\", new String(Base64.decodeBase64(\"====\".getBytes(CHARSET_UTF8))));"], [293, "        assertEquals(0, Base64.decodeBase64(\"===\".getBytes(CHARSET_UTF8)).length);"], [294, "        assertEquals(0, Base64.decodeBase64(\"==\".getBytes(CHARSET_UTF8)).length);"], [295, "        assertEquals(0, Base64.decodeBase64(\"=\".getBytes(CHARSET_UTF8)).length);"], [296, "        assertEquals(0, Base64.decodeBase64(\"\".getBytes(CHARSET_UTF8)).length);"], [301, "        assertEquals(0, Base64.decodeBase64(\"====\\n\".getBytes(CHARSET_UTF8)).length);"], [302, "        assertEquals(\"\", new String(Base64.decodeBase64(\"====\\n\".getBytes(CHARSET_UTF8))));"], [304, "        assertEquals(0, Base64.decodeBase64(\"===\\n\".getBytes(CHARSET_UTF8)).length);"], [305, "        assertEquals(0, Base64.decodeBase64(\"==\\n\".getBytes(CHARSET_UTF8)).length);"], [306, "        assertEquals(0, Base64.decodeBase64(\"=\\n\".getBytes(CHARSET_UTF8)).length);"], [307, "        assertEquals(0, Base64.decodeBase64(\"\\n\".getBytes(CHARSET_UTF8)).length);"], [315, "        final byte[] encodedArray = Base64.encodeBase64(orig.getBytes(CHARSET_UTF8));"], [323, "        final byte[] encodedWithWS = intermediate.toString().getBytes(CHARSET_UTF8);"], [400, "                .decodeBase64(\"VGhlIH@$#$@%F1aWN@#@#@@rIGJyb3duIGZve\\n\\r\\t%#%#%#%CBqd##$#$W1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg==\".getBytes(CHARSET_UTF8))));"], [436, "                .decodeBase64(\"VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg==\".getBytes(CHARSET_UTF8))));"], [438, "                .decodeBase64(\"SXQgd2FzIHRoZSBiZXN0IG9mIHRpbWVzLCBpdCB3YXMgdGhlIHdvcnN0IG9mIHRpbWVzLg==\".getBytes(CHARSET_UTF8))));"], [440, "                .decodeBase64(\"aHR0cDovL2pha2FydGEuYXBhY2hlLm9yZy9jb21tbW9ucw==\".getBytes(CHARSET_UTF8))));"], [442, "                .decodeBase64(\"QWFCYkNjRGRFZUZmR2dIaElpSmpLa0xsTW1Obk9vUHBRcVJyU3NUdFV1VnZXd1h4WXlaeg==\".getBytes(CHARSET_UTF8))));"], [444, "                .getBytes(CHARSET_UTF8))));"], [445, "        assertEquals(\"xyzzy!\", new String(Base64.decodeBase64(\"eHl6enkh\".getBytes(CHARSET_UTF8))));"], [451, "                .encodeBase64(\"The quick brown fox jumped over the lazy dogs.\".getBytes(CHARSET_UTF8))));"], [457, "                                        .getBytes(CHARSET_UTF8))));"], [459, "                .encodeBase64(\"It was the best of times, it was the worst of times.\".getBytes(CHARSET_UTF8))));"], [461, "                .encodeBase64(\"http://jakarta.apache.org/commmons\".getBytes(CHARSET_UTF8))));"], [463, "                .encodeBase64(\"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\".getBytes(CHARSET_UTF8))));"], [465, "                .getBytes(CHARSET_UTF8))));"], [466, "        assertEquals(\"eHl6enkh\", new String(Base64.encodeBase64(\"xyzzy!\".getBytes(CHARSET_UTF8))));"], [508, "        final Object o = Base64.encodeBase64(original.getBytes(CHARSET_UTF8));"], [533, "        final Object origObj = original.getBytes(CHARSET_UTF8);"], [546, "        assertEquals(\"SGVsbG8gV29ybGQ=\", new String(b64.encode(\"Hello World\".getBytes(CHARSET_UTF8))));"]], "deleted": [[150, "        assertEquals(bigInt1, Base64.decodeInteger(encodedInt1.getBytes(Charsets.UTF_8)));"], [159, "        assertEquals(bigInt2, Base64.decodeInteger(encodedInt2.getBytes(Charsets.UTF_8)));"], [170, "        assertEquals(bigInt3, Base64.decodeInteger(encodedInt3.getBytes(Charsets.UTF_8)));"], [187, "        assertEquals(bigInt4, Base64.decodeInteger(encodedInt4.getBytes(Charsets.UTF_8)));"], [272, "        assertEquals(\"A\", new String(Base64.decodeBase64(\"QQ==\".getBytes(Charsets.UTF_8))));"], [280, "        assertEquals(\"AA\", new String(Base64.decodeBase64(\"QUE=\".getBytes(Charsets.UTF_8))));"], [281, "        assertEquals(\"AAA\", new String(Base64.decodeBase64(\"QUFB\".getBytes(Charsets.UTF_8))));"], [286, "        assertEquals(0, Base64.decodeBase64(\"====\".getBytes(Charsets.UTF_8)).length);"], [287, "        assertEquals(\"\", new String(Base64.decodeBase64(\"====\".getBytes(Charsets.UTF_8))));"], [289, "        assertEquals(0, Base64.decodeBase64(\"===\".getBytes(Charsets.UTF_8)).length);"], [290, "        assertEquals(0, Base64.decodeBase64(\"==\".getBytes(Charsets.UTF_8)).length);"], [291, "        assertEquals(0, Base64.decodeBase64(\"=\".getBytes(Charsets.UTF_8)).length);"], [292, "        assertEquals(0, Base64.decodeBase64(\"\".getBytes(Charsets.UTF_8)).length);"], [297, "        assertEquals(0, Base64.decodeBase64(\"====\\n\".getBytes(Charsets.UTF_8)).length);"], [298, "        assertEquals(\"\", new String(Base64.decodeBase64(\"====\\n\".getBytes(Charsets.UTF_8))));"], [300, "        assertEquals(0, Base64.decodeBase64(\"===\\n\".getBytes(Charsets.UTF_8)).length);"], [301, "        assertEquals(0, Base64.decodeBase64(\"==\\n\".getBytes(Charsets.UTF_8)).length);"], [302, "        assertEquals(0, Base64.decodeBase64(\"=\\n\".getBytes(Charsets.UTF_8)).length);"], [303, "        assertEquals(0, Base64.decodeBase64(\"\\n\".getBytes(Charsets.UTF_8)).length);"], [311, "        final byte[] encodedArray = Base64.encodeBase64(orig.getBytes(Charsets.UTF_8));"], [319, "        final byte[] encodedWithWS = intermediate.toString().getBytes(Charsets.UTF_8);"], [396, "                .decodeBase64(\"VGhlIH@$#$@%F1aWN@#@#@@rIGJyb3duIGZve\\n\\r\\t%#%#%#%CBqd##$#$W1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg==\".getBytes(Charsets.UTF_8))));"], [432, "                .decodeBase64(\"VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg==\".getBytes(Charsets.UTF_8))));"], [434, "                .decodeBase64(\"SXQgd2FzIHRoZSBiZXN0IG9mIHRpbWVzLCBpdCB3YXMgdGhlIHdvcnN0IG9mIHRpbWVzLg==\".getBytes(Charsets.UTF_8))));"], [436, "                .decodeBase64(\"aHR0cDovL2pha2FydGEuYXBhY2hlLm9yZy9jb21tbW9ucw==\".getBytes(Charsets.UTF_8))));"], [438, "                .decodeBase64(\"QWFCYkNjRGRFZUZmR2dIaElpSmpLa0xsTW1Obk9vUHBRcVJyU3NUdFV1VnZXd1h4WXlaeg==\".getBytes(Charsets.UTF_8))));"], [440, "                .getBytes(Charsets.UTF_8))));"], [441, "        assertEquals(\"xyzzy!\", new String(Base64.decodeBase64(\"eHl6enkh\".getBytes(Charsets.UTF_8))));"], [447, "                .encodeBase64(\"The quick brown fox jumped over the lazy dogs.\".getBytes(Charsets.UTF_8))));"], [453, "                                        .getBytes(Charsets.UTF_8))));"], [455, "                .encodeBase64(\"It was the best of times, it was the worst of times.\".getBytes(Charsets.UTF_8))));"], [457, "                .encodeBase64(\"http://jakarta.apache.org/commmons\".getBytes(Charsets.UTF_8))));"], [459, "                .encodeBase64(\"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\".getBytes(Charsets.UTF_8))));"], [461, "                .getBytes(Charsets.UTF_8))));"], [462, "        assertEquals(\"eHl6enkh\", new String(Base64.encodeBase64(\"xyzzy!\".getBytes(Charsets.UTF_8))));"], [504, "        final Object o = Base64.encodeBase64(original.getBytes(Charsets.UTF_8));"], [529, "        final Object origObj = original.getBytes(Charsets.UTF_8);"], [542, "        assertEquals(\"SGVsbG8gV29ybGQ=\", new String(b64.encode(\"Hello World\".getBytes(Charsets.UTF_8))));"]]}, "num_lines_added": 42, "num_lines_removed": 38}