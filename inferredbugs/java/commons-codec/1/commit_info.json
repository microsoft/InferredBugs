{"hash": "6a43ce7aa8fb6be26fd0559b189dce704a0a32f5", "message": "[CODEC-78] Base64 classes: Improve Code Coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@795228 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 159, "diff_parsed": {"added": [[37, "    private static final String STRING_FIXTURE = \"Hello World\";"], [38, ""], [39, "    private static final String UTF_8_NAME = \"UTF-8\";"], [40, ""], [72, "        byte[] encoded = \"SGVsbG8gV29ybGQ=\\r\\n\".getBytes(UTF_8_NAME);"], [73, "        byte[] decoded = STRING_FIXTURE.getBytes(UTF_8_NAME);"], [77, "        encoded = \"AA==\\r\\n\".getBytes(UTF_8_NAME);"], [82, "        encoded = Base64TestData.ENCODED.getBytes(UTF_8_NAME);"], [88, "        encoded = singleLine.getBytes(UTF_8_NAME);"], [109, "        byte[] encoded = \"SGVsbG8gV29ybGQ=\\r\\n\".getBytes(UTF_8_NAME);"], [110, "        byte[] decoded = STRING_FIXTURE.getBytes(UTF_8_NAME);"], [119, "        encoded = Base64TestData.ENCODED.getBytes(UTF_8_NAME);"], [125, "        encoded = singleLine.getBytes(UTF_8_NAME);"], [164, "        assertTrue(\"Streaming chunked base64 encode\", Arrays.equals(output, encoded));"], [172, "        assertTrue(\"Streaming chunked base64 decode\", Arrays.equals(output, decoded));"], [185, "        assertTrue(\"Streaming chunked base64 wrap-wrap-wrap!\", Arrays.equals(output, decoded));"], [216, "        assertTrue(\"Streaming byte-by-byte base64 encode\", Arrays.equals(output, encoded));"], [226, "        assertTrue(\"Streaming byte-by-byte base64 decode\", Arrays.equals(output, decoded));"], [227, ""], [228, "        // Now let's try decode with tonnes of flushes."], [229, "        byteOut = new ByteArrayOutputStream();"], [230, "        out = new Base64OutputStream(byteOut, false);"], [231, "        for (int i = 0; i < encoded.length; i++) {"], [232, "            out.write(encoded[i]);"], [233, "            out.flush();"], [234, "        }"], [235, "        out.close();"], [236, "        output = byteOut.toByteArray();"], [237, "        assertTrue(\"Streaming byte-by-byte flush() base64 decode\", Arrays.equals(output, decoded));"], [252, "        assertTrue(\"Streaming byte-by-byte base64 wrap-wrap-wrap!\", Arrays.equals(output, decoded));"], [267, "            out.write(buf, -1, 1);"], [268, "            fail(\"Expected Base64OutputStream.write(buf, -1, 1) to throw a IndexOutOfBoundsException\");"], [269, "        } catch (IndexOutOfBoundsException ioobe) {"], [270, "            // Expected"], [271, "        }"], [272, ""], [273, "        try {"], [274, "            out.write(buf, 1, -1);"], [275, "            fail(\"Expected Base64OutputStream.write(buf, 1, -1) to throw a IndexOutOfBoundsException\");"], [286, ""], [287, "        try {"], [288, "            out.write(buf, buf.length - 1, 2);"], [289, "            fail(\"Expected Base64OutputStream.write(buf, buf.length - 1, 2) to throw a IndexOutOfBoundsException\");"], [290, "        } catch (IndexOutOfBoundsException ioobe) {"], [291, "            // Expected"], [292, "        }"]], "deleted": [[68, "        byte[] encoded = \"SGVsbG8gV29ybGQ=\\r\\n\".getBytes(\"UTF-8\");"], [69, "        byte[] decoded = \"Hello World\".getBytes(\"UTF-8\");"], [73, "        encoded = \"AA==\\r\\n\".getBytes(\"UTF-8\");"], [78, "        encoded = Base64TestData.ENCODED.getBytes(\"UTF-8\");"], [84, "        encoded = singleLine.getBytes(\"UTF-8\");"], [105, "        byte[] encoded = \"SGVsbG8gV29ybGQ=\\r\\n\".getBytes(\"UTF-8\");"], [106, "        byte[] decoded = \"Hello World\".getBytes(\"UTF-8\");"], [115, "        encoded = Base64TestData.ENCODED.getBytes(\"UTF-8\");"], [121, "        encoded = singleLine.getBytes(\"UTF-8\");"], [160, "        assertTrue(\"Streaming base64 encode\", Arrays.equals(output, encoded));"], [168, "        assertTrue(\"Streaming base64 decode\", Arrays.equals(output, decoded));"], [181, "        assertTrue(\"Streaming base64 wrap-wrap-wrap!\", Arrays.equals(output, decoded));"], [212, "        assertTrue(\"Streaming base64 encode\", Arrays.equals(output, encoded));"], [222, "        assertTrue(\"Streaming base64 decode\", Arrays.equals(output, decoded));"], [237, "        assertTrue(\"Streaming base64 wrap-wrap-wrap!\", Arrays.equals(output, decoded));"], [252, "            out.write(buf, -1, 0);"], [253, "            fail(\"Expected Base64OutputStream.write(buf, -1, 0) to throw a IndexOutOfBoundsException\");"]]}, "num_lines_added": 46, "num_lines_removed": 17}