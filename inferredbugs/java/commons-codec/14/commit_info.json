{"hash": "1fc451c79779bdbf788e8bfbec6dc031a47495d8", "message": "[CODEC-130] Provided implementation of skip and available for BaseNCodecInputStream, added unit tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1302585 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 249, "diff_parsed": {"added": [[148, "     * Tests skipping past the end of a stream."], [149, "     *"], [150, "     * @throws Throwable"], [151, "     */"], [152, "    @Test"], [153, "    public void testAvailable() throws Throwable {"], [154, "        InputStream ins = new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_FOO));"], [155, "        Base32InputStream b32stream = new Base32InputStream(ins);"], [156, "        assertEquals(1, b32stream.available());"], [157, "        assertEquals(3, b32stream.skip(10));"], [158, "        // End of stream reached"], [159, "        assertEquals(0, b32stream.available());"], [160, "        assertEquals(-1, b32stream.read());"], [161, "        assertEquals(-1, b32stream.read());"], [162, "        assertEquals(0, b32stream.available());"], [163, "    }"], [164, ""], [165, "    /**"], [486, "     * Tests skipping number of characters larger than the internal buffer."], [487, "     *"], [488, "     * @throws Throwable"], [489, "     */"], [490, "    @Test"], [491, "    public void testSkipBig() throws Throwable {"], [492, "        InputStream ins = new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_FOO));"], [493, "        Base32InputStream b32stream = new Base32InputStream(ins);"], [494, "        assertEquals(3, b32stream.skip(1024));"], [495, "        // End of stream reached"], [496, "        assertEquals(-1, b32stream.read());"], [497, "        assertEquals(-1, b32stream.read());"], [498, "    }"], [499, ""], [500, "    /**"], [509, "        // due to CODEC-130, skip now skips correctly decoded characters rather than encoded"], [510, "        assertEquals(3, b32stream.skip(10));"], [525, "        // due to CODEC-130, skip now skips correctly decoded characters rather than encoded"], [526, "        assertEquals(3, b32stream.skip(3));"], [531, ""], [532, "    /**"], [533, "     * Tests if negative arguments to skip are handled correctly."], [534, "     *"], [535, "     * @throws Throwable"], [536, "     */"], [537, "    @Test(expected=IllegalArgumentException.class)"], [538, "    public void testSkipWrongArgument() throws Throwable {"], [539, "        InputStream ins = new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_FOO));"], [540, "        Base32InputStream b32stream = new Base32InputStream(ins);"], [541, "        b32stream.skip(-10);"], [542, "    }"]], "deleted": [[32, "import org.junit.Ignore;"], [49, "    @Ignore"], [478, "        assertEquals(8, b32stream.skip(10));"], [493, "        assertEquals(8, b32stream.skip(8));"]]}, "num_lines_added": 49, "num_lines_removed": 4}