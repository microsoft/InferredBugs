    public MatrixStore<N> getInverse() {

        if (myInverse == null) {

            final MatrixStore<N> tmpQ1 = this.getQ1();
            final MatrixStore<N> tmpD = this.getD();

            final int tmpRowDim = (int) tmpD.countRows();
            final int tmpColDim = (int) tmpQ1.countRows();
            final PhysicalStore<N> tmpMtrx = this.makeZero(tmpRowDim, tmpColDim);

            double tmpSingularValue;
            final int rank = this.getRank();
            for (int i = 0; i < rank; i++) {
                tmpSingularValue = tmpD.doubleValue(i, i);
                for (int j = 0; j < tmpColDim; j++) {
                    tmpMtrx.set(i, j, tmpQ1.toScalar(j, i).conjugate().divide(tmpSingularValue).getNumber());
                }
            }

            myInverse = this.getQ2().multiply(tmpMtrx);
        }

        return myInverse;
    }