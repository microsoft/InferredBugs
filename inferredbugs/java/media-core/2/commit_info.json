{"hash": "e9b3b89e831218b083b2316418c625e0e52013e6", "message": "The service executor of the UDPManager now initializes with no delay. This fixes failing unit tests that relied on the UDP Manager.\n\nRemoved unnecessary synchronized blocks from the PacketHandlerPipeline to speed up code execution.\n\nFixed testsuite. All tests are passing.", "file_num_lines": 52, "diff_parsed": {"added": [[29, " * Pipeline that selects a capable {@link PacketHandler} to process incoming packets."], [36, "    private static final Comparator<PacketHandler> REVERSE_COMPARATOR = new Comparator<PacketHandler>() {"], [38, "        @Override"], [39, "        public int compare(PacketHandler o1, PacketHandler o2) {"], [40, "            return o2.compareTo(o1);"], [41, "        }"], [42, "    };"], [44, "    private final List<PacketHandler> handlers;"], [45, "    private int count;"], [47, "    public PacketHandlerPipeline() {"], [48, "        this.handlers = new ArrayList<PacketHandler>(5);"], [49, "        this.count = 0;"], [50, "    }"], [52, "    /**"], [53, "     * Registers a new packet handler in the pipeline.<br>"], [54, "     * Cannot register same handler twice."], [55, "     *"], [56, "     * @param handler The handler to be registered."], [57, "     * @return Whether the handler was successfully registered or not."], [58, "     */"], [59, "    public boolean addHandler(PacketHandler handler) {"], [60, "        if (!handlers.contains(handler)) {"], [61, "            handlers.add(handler);"], [62, "            this.count++;"], [63, "            Collections.sort(this.handlers, REVERSE_COMPARATOR);"], [64, "            return true;"], [65, "        }"], [66, "        return false;"], [67, "    }"], [69, "    /**"], [70, "     * Removes an existing packet handler from the pipeline."], [71, "     *"], [72, "     * @param handler The handler to be removed"], [73, "     * @return Returns true if the handler is removed successfully. Returns false, if the handler is not registered in the"], [74, "     *         pipeline."], [75, "     */"], [76, "    public boolean removeHandler(PacketHandler handler) {"], [77, "        boolean removed = this.handlers.remove(handler);"], [78, "        if (removed) {"], [79, "            this.count--;"], [80, "        }"], [81, "        return removed;"], [82, "    }"], [84, "    /**"], [85, "     * Gets the number of handlers registered in the pipeline."], [86, "     *"], [87, "     * @return The number of registered handlers."], [88, "     */"], [89, "    public int count() {"], [90, "        return this.count;"], [91, "    }"], [92, ""], [93, "    /**"], [94, "     * Checks whether a certain handler is already registered in the pipeline."], [95, "     *"], [96, "     * @param handler The handler to look for"], [97, "     * @return <code>true</code> if the handler is registered. Returns <code>false</code>, otherwise."], [98, "     */"], [99, "    public boolean contains(PacketHandler handler) {"], [100, "        return this.handlers.contains(handler);"], [101, "    }"], [102, ""], [103, "    /**"], [104, "     * Gets the protocol handler capable of processing the packet."], [105, "     *"], [106, "     * @param packet The packet to be processed"], [107, "     * @return The protocol handler capable of processing the packet.<br>"], [108, "     *         Returns null in case no capable handler exists."], [109, "     */"], [110, "    public PacketHandler getHandler(byte[] packet) {"], [111, "        // Search for the first handler capable of processing the packet"], [112, "        for (PacketHandler protocolHandler : this.handlers) {"], [113, "            if (protocolHandler.canHandle(packet)) {"], [114, "                return protocolHandler;"], [115, "            }"], [116, "        }"], [117, ""], [118, "        // Return null in case no handler is capable of decoding the packet"], [119, "        return null;"], [120, "    }"], [121, ""], [122, "    /**"], [123, "     * Gets a <b>copy</b> of the handlers registered in the pipeline."], [124, "     *"], [125, "     * @return The list of handlers registered."], [126, "     */"], [127, "    protected List<PacketHandler> getHandlers() {"], [128, "        return this.handlers;"], [129, "    }"]], "deleted": [[29, " * Pipeline that selects a capable {@link PacketHandler} to process incoming"], [30, " * packets."], [37, "\tprivate static final Comparator<PacketHandler> REVERSE_COMPARATOR = new Comparator<PacketHandler>() {"], [38, ""], [39, "\t\t@Override"], [40, "\t\tpublic int compare(PacketHandler o1, PacketHandler o2) {"], [41, "\t\t\treturn o2.compareTo(o1);"], [42, "\t\t}"], [43, "\t};"], [44, ""], [45, "\tprivate final List<PacketHandler> handlers;"], [46, "\tprivate int count;"], [48, "\tpublic PacketHandlerPipeline() {"], [49, "\t\tthis.handlers = new ArrayList<PacketHandler>(5);"], [50, "\t\tthis.count = 0;"], [51, "\t}"], [53, "\t/**"], [54, "\t * Registers a new packet handler in the pipeline.<br>"], [55, "\t * Cannot register same handler twice."], [56, "\t *"], [57, "\t * @param handler"], [58, "\t *            The handler to be registered."], [59, "\t * @return Whether the handler was successfully registered or not."], [60, "\t */"], [61, "\tpublic boolean addHandler(PacketHandler handler) {"], [62, "\t\tsynchronized (this.handlers) {"], [63, "\t\t\tif (!handlers.contains(handler)) {"], [64, "\t\t\t\thandlers.add(handler);"], [65, "\t\t\t\tthis.count++;"], [66, "\t\t\t\tCollections.sort(this.handlers, REVERSE_COMPARATOR);"], [67, "\t\t\t\treturn true;"], [68, "\t\t\t}"], [69, "\t\t\treturn false;"], [70, "\t\t}"], [71, "\t}"], [72, ""], [73, "\t/**"], [74, "\t * Removes an existing packet handler from the pipeline."], [75, "\t *"], [76, "\t * @param handler"], [77, "\t *            The handler to be removed"], [78, "\t * @return Returns true if the handler is removed successfully. Returns"], [79, "\t *         false, if the handler is not registered in the pipeline."], [80, "\t */"], [81, "\tpublic boolean removeHandler(PacketHandler handler) {"], [82, "\t\tsynchronized (this.handlers) {"], [83, "\t\t\tboolean removed = this.handlers.remove(handler);"], [84, "\t\t\tif(removed) {"], [85, "\t\t\t\tthis.count--;"], [86, "\t\t\t}"], [87, "\t\t\treturn removed;"], [88, "\t\t}"], [89, "\t}"], [91, "\t/**"], [92, "\t * Gets the number of handlers registered in the pipeline."], [93, "\t *"], [94, "\t * @return The number of registered handlers."], [95, "\t */"], [96, "\tpublic int count() {"], [97, "\t\treturn this.count;"], [98, "\t}"], [100, "\t/**"], [101, "\t * Checks whether a certain handler is already registered in the pipeline."], [102, "\t *"], [103, "\t * @param handler"], [104, "\t *            The handler to look for"], [105, "\t * @return <code>true</code> if the handler is registered. Returns"], [106, "\t *         <code>false</code>, otherwise."], [107, "\t */"], [108, "\tpublic boolean contains(PacketHandler handler) {"], [109, "\t\tsynchronized (this.handlers) {"], [110, "\t\t\treturn this.handlers.contains(handler);"], [111, "\t\t}"], [112, "\t}"], [114, "\t/**"], [115, "\t * Gets the protocol handler capable of processing the packet."], [116, "\t *"], [117, "\t * @param packet"], [118, "\t *            The packet to be processed"], [119, "\t * @return The protocol handler capable of processing the packet.<br>"], [120, "\t *         Returns null in case no capable handler exists."], [121, "\t */"], [122, "\tpublic PacketHandler getHandler(byte[] packet) {"], [123, "\t\t// Copy the current handlers for thread safety"], [124, "\t\tList<PacketHandler> handlersCopy;"], [125, "\t\tsynchronized (this.handlers) {"], [126, "\t\t\thandlersCopy = new ArrayList<PacketHandler>(this.handlers);"], [127, "\t\t}"], [129, "\t\t// Search for the first handler capable of processing the packet"], [130, "\t\tfor (PacketHandler protocolHandler : handlersCopy) {"], [131, "\t\t\tif (protocolHandler.canHandle(packet)) {"], [132, "\t\t\t\treturn protocolHandler;"], [133, "\t\t\t}"], [134, "\t\t}"], [136, "\t\t// Return null in case no handler is capable of decoding the packet"], [137, "\t\treturn null;"], [138, "\t}"], [139, ""], [140, "\t/**"], [141, "\t * Gets a <b>copy</b> of the handlers registered in the pipeline."], [142, "\t *"], [143, "\t * @return The list of handlers registered."], [144, "\t */"], [145, "\tpublic List<PacketHandler> getHandlers() {"], [146, "\t\tsynchronized (this.handlers) {"], [147, "\t\t\treturn new ArrayList<PacketHandler>(this.handlers);"], [148, "\t\t}"], [149, "\t}"], [150, ""]]}, "num_lines_added": 89, "num_lines_removed": 109}