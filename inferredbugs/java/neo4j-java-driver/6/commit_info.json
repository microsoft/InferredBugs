{"hash": "791295a3508f61e945ee14e855a4b22e888ab3bf", "message": "Drop connection/session peacefully on protocol violation error\n\nScenario:\n\nC->S: RUN (&*()&&*%&^%I,\n      PULL_ALL,...                   // Client sends to server a RUN message that cannot be understood by the server (unable to dechunk or unpack) and a PULL_ALL\n\nS->C: Neo.ClientError.Request, RST   // Server sends back an error for RUN message and the wish to close this connection, without a reply to PULL_ALL\n\nThis PR makes sure that the client should close the connection/session immediately if the connection would be broken afterwards without waiting for any reply for PULL_ALL.", "file_num_lines": 83, "diff_parsed": {"added": [[32, "import static org.mockito.Mockito.when;"], [44, "        when( mock.isOpen() ).thenReturn( true );"], [59, "        when( mock.isOpen() ).thenReturn( true );"], [75, "        when( mock.isOpen() ).thenReturn( true );"], [91, "        when( mock.isOpen() ).thenReturn( true );"], [107, "        when( mock.isOpen() ).thenReturn( true );"], [117, ""], [118, "    @Test"], [119, "    public void shouldNotAllowMoreStatementsInSessionWhileConnectionClosed() throws Throwable"], [120, "    {"], [121, "        // Given"], [122, "        Connection mock = mock( Connection.class );"], [123, "        when( mock.isOpen() ).thenReturn( false );"], [124, "        InternalSession sess = new InternalSession( mock );"], [125, ""], [126, "        // Expect"], [127, "        exception.expect( ClientException.class );"], [128, ""], [129, "        // When"], [130, "        sess.run( \"whatever\" );"], [131, "    }"], [132, ""], [133, "    @Test"], [134, "    public void shouldNotAllowMoreTransactionsInSessionWhileConnectionClosed() throws Throwable"], [135, "    {"], [136, "        // Given"], [137, "        Connection mock = mock( Connection.class );"], [138, "        when( mock.isOpen() ).thenReturn( false );"], [139, "        InternalSession sess = new InternalSession( mock );"], [140, ""], [141, "        // Expect"], [142, "        exception.expect( ClientException.class );"], [143, ""], [144, "        // When"], [145, "        sess.beginTransaction();"], [146, "    }"]], "deleted": []}, "num_lines_added": 36, "num_lines_removed": 0}