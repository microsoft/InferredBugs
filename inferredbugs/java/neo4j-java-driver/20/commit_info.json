{"hash": "b5fbefb9a8c561fbb0e772c5f126eebdddc41937", "message": "Fix session leak in tests", "file_num_lines": 212, "diff_parsed": {"added": [[47, "        try( Driver driver = GraphDatabase.driver( neo4j.address() );"], [48, "             Session session = driver.session() )"], [49, "        {"], [50, "            String csvFileUrl = createLocalIrisData( session );"], [51, ""], [52, "            // When"], [53, "            StatementResult result = session.run("], [54, "                    \"USING PERIODIC COMMIT 40\\n\" +"], [55, "                    \"LOAD CSV WITH HEADERS FROM {csvFileUrl} AS l\\n\" +"], [56, "                    \"MATCH (c:Class {name: l.class_name})\\n\" +"], [57, "                    \"CREATE (s:Sample {sepal_length: l.sepal_length, sepal_width: l.sepal_width, petal_length: l.petal_length, petal_width: l.petal_width})\\n\" +"], [58, ""], [59, "                    \"CREATE (c)<-[:HAS_CLASS]-(s) \" +"], [60, "                    \"RETURN count(*) AS c\","], [61, "                    parameters( \"csvFileUrl\", csvFileUrl ) );"], [62, ""], [63, ""], [64, "            // Then"], [65, "            assertThat( result.next().get( \"c\" ).asInt(), equalTo( 150 ) );"], [66, "            assertFalse( result.hasNext() );"], [67, "        }"]], "deleted": [[47, "        Driver driver = GraphDatabase.driver( neo4j.address() );"], [48, "        Session session = driver.session();"], [49, "        String csvFileUrl = createLocalIrisData( session );"], [50, ""], [51, "        // When"], [52, "        StatementResult result = session.run("], [53, "            \"USING PERIODIC COMMIT 40\\n\" +"], [54, "            \"LOAD CSV WITH HEADERS FROM {csvFileUrl} AS l\\n\" +"], [55, "            \"MATCH (c:Class {name: l.class_name})\\n\" +"], [56, "            \"CREATE (s:Sample {sepal_length: l.sepal_length, sepal_width: l.sepal_width, petal_length: l.petal_length, petal_width: l.petal_width})\\n\" +"], [57, "            \"CREATE (c)<-[:HAS_CLASS]-(s) \" +"], [58, "            \"RETURN count(*) AS c\","], [59, "        parameters( \"csvFileUrl\", csvFileUrl ) );"], [60, ""], [61, ""], [62, "        // Then"], [63, "        assertThat( result.next().get( \"c\" ).asInt(), equalTo( 150 ) );"], [64, "        assertFalse( result.hasNext() );"]]}, "num_lines_added": 21, "num_lines_removed": 18}