{"hash": "b5fbefb9a8c561fbb0e772c5f126eebdddc41937", "message": "Fix session leak in tests", "file_num_lines": 47, "diff_parsed": {"added": [[42, "        try( Driver driver = GraphDatabase.driver( neo4j.address() ) )"], [43, "        {"], [44, "            Session session = driver.session();"], [46, "            // When"], [47, "            session.close();"], [49, "            // Then"], [50, "            assertFalse( session.isOpen() );"], [51, "        }"], [58, "        try( Driver driver = GraphDatabase.driver( neo4j.address(), AuthTokens.none(), null ) )"], [59, "        {"], [60, "            Session session = driver.session();"], [62, "            // When"], [63, "            session.close();"], [65, "            // Then"], [66, "            assertFalse( session.isOpen() );"], [67, "        }"], [76, "        try ( Driver driver = GraphDatabase.driver( neo4j.address(), token ) )"], [77, "        {"], [78, "            Session session = driver.session();"], [80, "            // When"], [81, "            session.close();"], [83, "            // Then"], [84, "            assertFalse( session.isOpen() );"], [85, "        }"]], "deleted": [[42, "        Driver driver = GraphDatabase.driver( neo4j.address() );"], [43, "        Session session = driver.session();"], [45, "        // When"], [46, "        session.close();"], [48, "        // Then"], [49, "        assertFalse( session.isOpen() );"], [56, "        Driver driver = GraphDatabase.driver( neo4j.address(), AuthTokens.none(), null );"], [57, "        Session session = driver.session();"], [59, "        // When"], [60, "        session.close();"], [62, "        // Then"], [63, "        assertFalse( session.isOpen() );"], [72, "        Driver driver = GraphDatabase.driver( neo4j.address(), token);"], [73, "        Session session = driver.session();"], [75, "        // When"], [76, "        session.close();"], [78, "        // Then"], [79, "        assertFalse( session.isOpen() );"]]}, "num_lines_added": 24, "num_lines_removed": 18}