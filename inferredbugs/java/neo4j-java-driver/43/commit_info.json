{"hash": "ca608aeb90fc94678cb82736772d692ec3c880cb", "message": "Improve closing of file streams used for certificates", "file_num_lines": 85, "diff_parsed": {"added": [[51, "        try ( BufferedWriter writer = new BufferedWriter( new FileWriter( certFile ) ) )"], [52, "        {"], [53, "            writer.write( BEGIN_CERT );"], [54, "            writer.newLine();"], [56, "            writer.write( certStr );"], [57, "            writer.newLine();"], [59, "            writer.write( END_CERT );"], [60, "            writer.newLine();"], [61, "        }"], [87, "        try ( BufferedWriter writer = new BufferedWriter( new FileWriter( certFile ) ) )"], [89, "            for ( Certificate cert : certs )"], [90, "            {"], [91, "                String certStr = Base64.getEncoder().encodeToString( cert.getEncoded() ).replaceAll( \"(.{64})\", \"$1\\n\" );"], [93, "                writer.write( BEGIN_CERT );"], [94, "                writer.newLine();"], [96, "                writer.write( certStr );"], [97, "                writer.newLine();"], [99, "                writer.write( END_CERT );"], [100, "                writer.newLine();"], [101, "            }"], [115, "        try ( BufferedInputStream inputStream = new BufferedInputStream( new FileInputStream( certFile ) ) )"], [117, "            CertificateFactory certFactory = CertificateFactory.getInstance( \"X.509\" );"], [118, ""], [119, "            int certCount = 0; // The file might contain multiple certs"], [120, "            while ( inputStream.available() > 0 )"], [122, "                try"], [123, "                {"], [124, "                    Certificate cert = certFactory.generateCertificate( inputStream );"], [125, "                    certCount++;"], [126, "                    loadX509Cert( cert, \"neo4j.javadriver.trustedcert.\" + certCount, keyStore );"], [127, "                }"], [128, "                catch ( CertificateException e )"], [130, "                    if ( e.getCause() != null && e.getCause().getMessage().equals( \"Empty input\" ) )"], [131, "                    {"], [132, "                        // This happens if there is whitespace at the end of the certificate - we load one cert, and then try and load a"], [133, "                        // second cert, at which point we fail"], [134, "                        return;"], [135, "                    }"], [136, "                    throw new IOException( \"Failed to load certificate from `\" + certFile.getAbsolutePath() + \"`: \" + certCount + \" : \" + e.getMessage(), e );"]], "deleted": [[51, "        BufferedWriter writer = new BufferedWriter( new FileWriter( certFile ) );"], [52, ""], [53, "        writer.write( BEGIN_CERT );"], [54, "        writer.newLine();"], [55, ""], [56, "        writer.write( certStr );"], [57, "        writer.newLine();"], [59, "        writer.write( END_CERT );"], [60, "        writer.newLine();"], [62, "        writer.close();"], [88, "        BufferedWriter writer = new BufferedWriter( new FileWriter( certFile ) );"], [89, ""], [90, "        for ( Certificate cert : certs )"], [92, "            String certStr = Base64.getEncoder().encodeToString( cert.getEncoded() ).replaceAll( \"(.{64})\", \"$1\\n\" );"], [94, "            writer.write( BEGIN_CERT );"], [95, "            writer.newLine();"], [97, "            writer.write( certStr );"], [98, "            writer.newLine();"], [100, "            writer.write( END_CERT );"], [101, "            writer.newLine();"], [103, ""], [104, "        writer.close();"], [117, "        BufferedInputStream inputStream = new BufferedInputStream( new FileInputStream( certFile ) );"], [118, "        CertificateFactory certFactory = CertificateFactory.getInstance( \"X.509\" );"], [119, ""], [120, "        int certCount = 0; // The file might contain multiple certs"], [121, "        while ( inputStream.available() > 0 )"], [123, "            try"], [124, "            {"], [125, "                Certificate cert = certFactory.generateCertificate( inputStream );"], [126, "                certCount++;"], [127, "                loadX509Cert( cert, \"neo4j.javadriver.trustedcert.\" + certCount, keyStore );"], [128, "            }"], [129, "            catch ( CertificateException e )"], [131, "                if ( e.getCause() != null && e.getCause().getMessage().equals( \"Empty input\" ) )"], [133, "                    // This happens if there is whitespace at the end of the certificate - we load one cert, and then try and load a"], [134, "                    // second cert, at which point we fail"], [135, "                    return;"], [137, "                throw new IOException( \"Failed to load certificate from `\" + certFile.getAbsolutePath() + \"`: \" + certCount + \" : \" + e.getMessage(), e );"]]}, "num_lines_added": 39, "num_lines_removed": 39}