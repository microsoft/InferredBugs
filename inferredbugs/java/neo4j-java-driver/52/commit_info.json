{"hash": "5d335cbc9f22d7d9d3e6403870e72baf41bb7efc", "message": "Driver should suppress subsequent connection errors into existing errors if any.\nWhen a server is shutting down, it is possible that a transaction is killed in the middle, followed by the termination of connection. Before the connection is shutting down, the server might send an error message if there is at least one pending message sent by client. However the server will also ignore any further messages that are queued in the server inbound message queue. Thus when the client trying to send or reading more with the closed connection, the client will receive a connection terminated error.\n\nThis PR makes sure when the above situation happens, the client will throw the original error first.", "file_num_lines": 283, "diff_parsed": {"added": [[152, "        try ( Driver driver = GraphDatabase.driver( \"bolt://localhost:9001\", INSECURE_CONFIG );"], [169, "        try ( Driver driver = GraphDatabase.driver( \"bolt://localhost:9001\", INSECURE_CONFIG );"], [235, "    @Test"], [236, "    void shouldThrowCorrectErrorOnRunFailure() throws Throwable"], [237, "    {"], [238, "        StubServer server = StubServer.start( \"database_shutdown.script\", 9001 );"], [239, ""], [240, "        try ( Driver driver = GraphDatabase.driver( \"bolt://localhost:9001\", INSECURE_CONFIG );"], [241, "                Session session = driver.session( \"neo4j:bookmark:v1:tx0\" );"], [242, "                // has to enforce to flush BEGIN to have tx started."], [243, "                Transaction transaction = session.beginTransaction() )"], [244, "        {"], [245, "            TransientException error = assertThrows( TransientException.class, () -> {"], [246, "                StatementResult result = transaction.run( \"RETURN 1\" );"], [247, "                result.consume();"], [248, "            } );"], [249, "            assertThat( error.code(), equalTo( \"Neo.TransientError.General.DatabaseUnavailable\" ) );"], [250, "        }"], [251, "        finally"], [252, "        {"], [253, "            assertEquals( 0, server.exitStatus() );"], [254, "        }"], [255, "    }"], [256, ""], [257, "    @Test"], [258, "    void shouldThrowCorrectErrorOnCommitFailure() throws Throwable"], [259, "    {"], [260, "        StubServer server = StubServer.start( \"database_shutdown_at_commit.script\", 9001 );"], [261, ""], [262, "        try ( Driver driver = GraphDatabase.driver( \"bolt://localhost:9001\", INSECURE_CONFIG );"], [263, "                Session session = driver.session() )"], [264, "        {"], [265, "            Transaction transaction = session.beginTransaction();"], [266, "            StatementResult result = transaction.run( \"CREATE (n {name:'Bob'})\" );"], [267, "            result.consume();"], [268, "            transaction.success();"], [269, ""], [270, "            TransientException error = assertThrows( TransientException.class, transaction::close );"], [271, "            assertThat( error.code(), equalTo( \"Neo.TransientError.General.DatabaseUnavailable\" ) );"], [272, "        }"], [273, "        finally"], [274, "        {"], [275, "            assertEquals( 0, server.exitStatus() );"], [276, "        }"], [277, "    }"], [278, ""]], "deleted": [[152, "        Config config = Config.builder()"], [153, "                .withoutEncryption()"], [154, "                .build();"], [155, ""], [156, "        try ( Driver driver = GraphDatabase.driver( \"bolt://localhost:9001\", config );"], [173, "        Config config = Config.builder()"], [174, "                .withoutEncryption()"], [175, "                .build();"], [176, ""], [177, "        try ( Driver driver = GraphDatabase.driver( \"bolt://localhost:9001\", config );"]]}, "num_lines_added": 46, "num_lines_removed": 10}