{"hash": "10bf41a5456e0fbfff2a78bc4e428df195e0c18b", "message": "[FABJ-491] Default grpc/grpcs based on discovery peer\n\nCurrently grpcs is used for all discovered peers and\norderers. This is a bad assumption to make when the\nnetwork is not using TLS. If the discovery peer is\nusing TLS, then use grpcs, else use grpc. You cannot\nhave mixed TLS and non-TLS networks, so we don't need\nto support discovery peer using TLS and discovered peer\nnot using TLS.\n\nChange-Id: I94fa69bb3d93840f9cdb7dcf762313d47f86ad78\nSigned-off-by: Simon Stone <sstone1@uk.ibm.com>", "file_num_lines": 1095, "diff_parsed": {"added": [[19, "import java.net.URI;"], [224, "                URI serviceDiscoveryPeerURI = URI.create(serviceDiscoveryPeer.getUrl());"], [225, "                boolean isTLS = serviceDiscoveryPeerURI.getScheme().equals(\"grpcs\");"], [226, "                logger.trace(format(\"Service discovery peer %s using TLS: %b\", serviceDiscoveryPeerURI.toString(), isTLS));"], [227, ""], [333, "                        final SDOrderer sdOrderer = new SDOrderer(mspid, endpoint, lsdNetwork.getTlsCerts(mspid), lsdNetwork.getTlsIntermediateCerts(mspid), properties, isTLS);"], [349, "                        SDEndorser ppp = new SDEndorser(pp, lsdNetwork.getTlsCerts(mspId), lsdNetwork.getTlsIntermediateCerts(mspId), asLocalhost, isTLS);"], [387, "        private final boolean tls;"], [389, "        SDOrderer(String mspid, String endPoint, Collection<byte[]> tlsCerts, Collection<byte[]> tlsIntermediateCerts, Properties properties, boolean tls) {"], [395, "            this.tls = tls;"], [417, ""], [418, "        public boolean isTLS() {"], [419, "            return tls;"], [420, "        }"], [455, "                URI serviceDiscoveryPeerURI = URI.create(serviceDiscoveryPeer.getUrl());"], [456, "                boolean isTLS = serviceDiscoveryPeerURI.getScheme().equals(\"grpcs\");"], [457, "                logger.trace(format(\"Service discovery peer %s using TLS: %b\", serviceDiscoveryPeerURI.toString(), isTLS));"], [458, ""], [552, "                                    SDEndorser ppp = new SDEndorser(pp, null, null, asLocalhost, isTLS);"], [1134, "        private final boolean tls;"], [1140, "            tls = false;"], [1143, "        SDEndorser(Protocol.Peer peerRet, Collection<byte[]> tlsCerts, Collection<byte[]> tlsIntermediateCerts, boolean asLocalhost, boolean tls) {"], [1147, "            this.tls = tls;"], [1263, "        public boolean isTLS() {"], [1264, "            return this.tls;"], [1265, "        }"], [1266, ""]], "deleted": [[328, "                        final SDOrderer sdOrderer = new SDOrderer(mspid, endpoint, lsdNetwork.getTlsCerts(mspid), lsdNetwork.getTlsIntermediateCerts(mspid), properties);"], [344, "                        SDEndorser ppp = new SDEndorser(pp, lsdNetwork.getTlsCerts(mspId), lsdNetwork.getTlsIntermediateCerts(mspId), asLocalhost);"], [383, "        SDOrderer(String mspid, String endPoint, Collection<byte[]> tlsCerts, Collection<byte[]> tlsIntermediateCerts, Properties properties) {"], [537, "                                    SDEndorser ppp = new SDEndorser(pp, null, null, asLocalhost);"], [1126, "        SDEndorser(Protocol.Peer peerRet, Collection<byte[]> tlsCerts, Collection<byte[]> tlsIntermediateCerts, boolean asLocalhost) {"]]}, "num_lines_added": 27, "num_lines_removed": 5}