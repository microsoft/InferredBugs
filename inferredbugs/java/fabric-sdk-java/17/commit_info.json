{"hash": "e71d54fd4f75ef6a6bc16285e289e7b70430d291", "message": "FABJ-356 Peer eventing services too many reconnects\n\nChange-Id: I45590320d6e8aa60e64c09b7c115283b749d0f81\nSigned-off-by: rickr <cr22rc@gmail.com>", "file_num_lines": 286, "diff_parsed": {"added": [[24, "import java.util.concurrent.atomic.AtomicBoolean;"], [39, "import org.hyperledger.fabric.sdk.exception.PeerEventingServiceException;"], [151, ""], [174, "        final AtomicBoolean retry = new AtomicBoolean(true); // make sure we only retry connection once for each connection attempt."], [175, ""], [215, "                            final long rec = peer.getReconnectCount();"], [216, ""], [217, "                            PeerEventingServiceException peerEventingServiceException = new PeerEventingServiceException(format(\"Channel %s peer %s attempts %s Status returned failure code %d (%s) during peer service event registration\","], [218, "                                    channelName, peer.getName(), rec, resp.getStatusValue(), resp.getStatus().name()));"], [219, "                            peerEventingServiceException.setResponse(resp);"], [220, "                            if (rec % 10 == 0) {"], [221, "                                logger.warn(peerEventingServiceException.getMessage());"], [222, "                            }"], [223, ""], [224, "                            throwableList.add(peerEventingServiceException);"], [252, "                        PeerEventingServiceException peerEventingServiceException = new PeerEventingServiceException(format(\"Channel %s peer %s got event block with unknown type: %s, %d\","], [253, "                                channelName, peer.getName(), typeCase.name(), typeCase.getNumber()));"], [254, "                        peerEventingServiceException.setResponse(resp);"], [255, ""], [256, "                        throwableList.add(peerEventingServiceException);"], [267, "                        try {"], [268, "                            llmanagedChannel.shutdownNow();"], [269, "                        } catch (Exception e) {"], [270, "                            logger.warn(format(\"Received error on peer eventing service on channel %s, peer %s, url %s, attempts %d. %s shut down of grpc channel.\","], [271, "                                    channelName, name, url, peer == null ? -1 : peer.getReconnectCount(), e.getMessage()), e);"], [272, "                        }"], [287, "                        if (retry.getAndSet(false)) {"], [288, "                            peer.reconnectPeerEventServiceClient(PeerEventServiceClient.this, t);"], [289, "                        }"], [311, "                PeerEventingServiceException ex = new PeerEventingServiceException(format("], [313, "                ex.setTimedOut(peerEventRegistrationWaitTimeMilliSecs);"], [326, "                if (retry.getAndSet(false)) {"], [327, "                    peer.reconnectPeerEventServiceClient(this, throwable);"], [328, "                }"], [340, "            if (retry.getAndSet(false)) {"], [341, "                peer.reconnectPeerEventServiceClient(this, e);"], [342, "            }"]], "deleted": [[149, "        peer = null;"], [211, "                            throwableList.add(new TransactionException(format(\"Channel %s peer %s Status returned failure code %d (%s) during peer service event registration\","], [212, "                                    channelName, peer.getName(), resp.getStatusValue(), resp.getStatus().name())));"], [227, ""], [230, ""], [242, "                        throwableList.add(new TransactionException(format(\"Channel %s peer %s Status got unknown type %s, %d\","], [243, "                                channelName, peer.getName(), typeCase.name(), typeCase.getNumber())));"], [254, "                        llmanagedChannel.shutdownNow();"], [269, "                        peer.reconnectPeerEventServiceClient(PeerEventServiceClient.this, t);"], [291, "                TransactionException ex = new TransactionException(format("], [305, "                peer.reconnectPeerEventServiceClient(this, throwable);"], [317, "            peer.reconnectPeerEventServiceClient(this, e);"]]}, "num_lines_added": 37, "num_lines_removed": 12}