{"hash": "3cbdd4918765c9a707d3c5a7ed4ae5ae462ecae2", "message": "updated Jacoco dependency version, improved tree of exceptions, covered some areas not-covered by tests before", "file_num_lines": 1039, "diff_parsed": {"added": [[18, "import com.igormaznitsa.jbbp.exceptions.JBBPIllegalArgumentException;"], [40, "    final ByteArrayOutputStream buffer1 = new ByteArrayOutputStream();"], [41, "    assertSame(buffer1, BeginBin(buffer1).End());"], [42, ""], [43, "    final ByteArrayOutputStream buffer2 = new ByteArrayOutputStream();"], [44, "    BeginBin(buffer2,JBBPByteOrder.LITTLE_ENDIAN, JBBPBitOrder.MSB0).Short(1234).End();"], [45, "    assertArrayEquals(new byte[]{(byte)0x4b, (byte)0x20}, buffer2.toByteArray());"], [728, "  @Test"], [729, "  public void testBin_Byte_StringAsByteArray() throws Exception {"], [730, "    assertArrayEquals(new byte[0], JBBPOut.BeginBin().Byte(\"\", JBBPBitOrder.LSB0).End().toByteArray());"], [731, "    assertArrayEquals(new byte[0], JBBPOut.BeginBin().Byte(\"\", JBBPBitOrder.MSB0).End().toByteArray());"], [732, "    assertArrayEquals(new byte[]{65,66,67,68}, JBBPOut.BeginBin().Byte(\"ABCD\", JBBPBitOrder.LSB0).End().toByteArray());"], [733, "    assertArrayEquals(new byte[]{(byte)130,66,(byte)194,34}, JBBPOut.BeginBin().Byte(\"ABCD\", JBBPBitOrder.MSB0).End().toByteArray());"], [734, "  }"], [735, ""], [736, "  @Test"], [737, "  public void testBin_Byte_StringAsShortArray() throws Exception {"], [738, "    assertArrayEquals(new byte[0], JBBPOut.BeginBin().Short(\"\", JBBPBitOrder.LSB0).End().toByteArray());"], [739, "    assertArrayEquals(new byte[0], JBBPOut.BeginBin().Short(\"\", JBBPBitOrder.MSB0).End().toByteArray());"], [740, "    assertArrayEquals(new byte[]{0x04, 0x10, 0x04, 0x11, 0x04, 0x12, 0x04, 0x13, 0x04, 0x14}, JBBPOut.BeginBin().Short(\"\u0410\u0411\u0412\u0413\u0414\", JBBPBitOrder.LSB0).End().toByteArray());"], [741, "    assertArrayEquals(new byte[]{0x08, 0x20, (byte)0x88, 0x20, (byte)0x48, 0x20, (byte)0xC8, 0x20, (byte)0x28, 0x20}, JBBPOut.BeginBin().Short(\"\u0410\u0411\u0412\u0413\u0414\", JBBPBitOrder.MSB0).End().toByteArray());"], [742, "  }"], [1203, "  @Test(expected = JBBPIllegalArgumentException.class)"]], "deleted": [[39, "    final ByteArrayOutputStream buffer = new ByteArrayOutputStream();"], [40, "    assertSame(buffer, BeginBin(buffer).End());"], [1183, "  @Test(expected = IllegalArgumentException.class)"]]}, "num_lines_added": 23, "num_lines_removed": 3}