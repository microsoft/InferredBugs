{"hash": "9a61cfca25f43dfb7a29effe6490bdab1bbbc1d0", "message": "Added: NSGAIIBinaryRealSettingsTest.java", "file_num_lines": 55, "diff_parsed": {"added": [[23, "import org.junit.Before;"], [24, "import org.junit.Test;"], [28, "import org.uma.jmetal.metaheuristic.nsgaII.NSGAII;"], [62, "    NSGAII algorithm = (NSGAII)nsgaIISettings.configure() ;"], [65, "    SinglePointCrossover crossover =  (SinglePointCrossover) algorithm.getCrossoverOperator() ;"], [66, "    double pc = crossover.getCrossoverProbability() ;"], [67, "    BitFlipMutation mutation = (BitFlipMutation)algorithm.getMutationOperator() ;"], [68, "    double pm = mutation.getMutationProbability() ;"], [70, "    assertEquals(\"NSGAIIBinary_SettingsTest\", 100, algorithm.getPopulationSize());"], [71, "    assertEquals(\"NSGAIIBinary_SettingsTest\", 25000, algorithm.getMaxEvaluations()) ;"], [81, "    NSGAII algorithm = (NSGAII)nsgaIISettings.configure(configuration_) ;"], [84, "    SinglePointCrossover crossover =  (SinglePointCrossover) algorithm.getCrossoverOperator() ;"], [85, "    double pc = crossover.getCrossoverProbability() ;"], [86, "    BitFlipMutation mutation = (BitFlipMutation)algorithm.getMutationOperator() ;"], [87, "    double pm = mutation.getMutationProbability() ;"], [89, "    assertEquals(\"NSGAIIBinary_SettingsTest\", 100, algorithm.getPopulationSize());"], [90, "    assertEquals(\"NSGAIIBinary_SettingsTest\", 25000, algorithm.getMaxEvaluations()) ;"]], "deleted": [[23, "import org.uma.jmetal.core.Algorithm;"], [31, "import org.junit.Before;"], [32, "import org.junit.Test;"], [33, ""], [63, "    Algorithm algorithm = nsgaIISettings.configure() ;"], [66, "    SinglePointCrossover crossover = (SinglePointCrossover)algorithm.getOperator(\"crossover\") ;"], [67, "    double pc = (Double)crossover.getParameter(\"probability\") ;"], [68, "    BitFlipMutation mutation = (BitFlipMutation)algorithm.getOperator(\"mutation\") ;"], [69, "    double pm = (Double)mutation.getParameter(\"probability\") ;"], [71, "    assertEquals(\"NSGAIIBinary_SettingsTest\", 100, ((Integer)algorithm.getInputParameter(\"populationSize\")).intValue());"], [72, "    assertEquals(\"NSGAIIBinary_SettingsTest\", 25000, ((Integer)algorithm.getInputParameter(\"maxEvaluations\")).intValue());"], [82, "    Algorithm algorithm = nsgaIISettings.configure(configuration_) ;"], [85, "    SinglePointCrossover crossover = (SinglePointCrossover)algorithm.getOperator(\"crossover\") ;"], [86, "    double pc = (Double)crossover.getParameter(\"probability\") ;"], [87, "    BitFlipMutation mutation = (BitFlipMutation)algorithm.getOperator(\"mutation\") ;"], [88, "    double pm = (Double)mutation.getParameter(\"probability\") ;"], [90, "    assertEquals(\"NSGAIIBinary_SettingsTest\", 100, ((Integer)algorithm.getInputParameter(\"populationSize\")).intValue());"], [91, "    assertEquals(\"NSGAIIBinary_SettingsTest\", 25000, ((Integer)algorithm.getInputParameter(\"maxEvaluations\")).intValue());"]]}, "num_lines_added": 17, "num_lines_removed": 18}