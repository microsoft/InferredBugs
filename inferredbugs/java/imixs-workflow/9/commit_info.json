{"hash": "183ca215d05c59e34964fe306bfd145a6648df69", "message": "issue #124 - solved JDK8 Nashorn support added", "file_num_lines": 206, "diff_parsed": {"added": [[132, "\tpublic int run(ItemCollection adocumentContext, ItemCollection adocumentActivity) throws PluginException {"], [134, "\t\tScriptEngine engine = evaluateBusinessRule(adocumentContext, adocumentActivity);"], [152, "\t\t\t\tthrow new PluginException(RulePlugin.class.getName(), sErrorCode,"], [153, "\t\t\t\t\t\t\"BusinessRule: validation failed - ErrorCode=\" + sErrorCode, params);"], [167, "\t\t\t\t\tadocumentActivity.replaceItemValue(\"numNextActivityID\", followUpActivity);"], [171, ""], [179, "\t\t\t\t\tadocumentActivity.replaceItemValue(\"numNextProcessID\", nextTask);"], [209, "\tpublic boolean isValid(ItemCollection documentContext, ItemCollection activity) throws PluginException {"], [233, "\tpublic ScriptEngine evaluateBusinessRule(ItemCollection documentContext, ItemCollection activity)"], [234, "\t\t\tthrows PluginException {"], [243, "\t\tString sEngineType = activity.getItemValueString(\"txtBusinessRuleEngine\");"], [274, "\t\t\tthrow new PluginException(RulePlugin.class.getSimpleName(), INVALID_SCRIPT,"], [275, "\t\t\t\t\t\"BusinessRule contains invalid script:\" + e.getMessage(), e);"], [312, "\t\t\t// Nashorn: check for importClass function and then load if missing"], [313, "\t\t\t// See: issue #124"], [314, "\t\t\tString jsNashorn = \" if (typeof importClass != 'function') { load('nashorn:mozilla_compat.js');}\";"], [315, ""], [316, "\t\t\tString jsCode = \"importPackage(java.util);\" + \"var _evaluateScriptParam = Arrays.asList(\" + expression"], [319, "\t\t\tengine.eval(jsNashorn + jsCode);"], [322, "\t\t\tList<Object> resultList = (List<Object>) engine.get(\"_evaluateScriptParam\");"], [323, "\t\t\tif (resultList==null) {"], [324, "\t\t\t\treturn null;"], [325, "\t\t\t}"], [326, "\t\t\tif (\"[undefined]\".equals(resultList.toString())) {"], [327, "\t\t\t\treturn null;"], [328, "\t\t\t}"], [341, "\t\t\tlogger.fine(\"[RulePlugin] error evaluating \" + expression + \" - \" + se.getMessage());"], [358, "\tprivate void updateActivityEntity(ScriptEngine engine, ItemCollection adocumentActivity) {"], [370, "\t\t\tif (oScript == null) {"], [374, "\t\t\tif (oActivity == null) {"], [380, "\t\t\t\tlogger.fine(\"[RulePlugin] update activity proeperty \" + entry.getKey());"]], "deleted": [[132, "\tpublic int run(ItemCollection adocumentContext,"], [133, "\t\t\tItemCollection adocumentActivity) throws PluginException {"], [135, "\t\tScriptEngine engine = evaluateBusinessRule(adocumentContext,"], [136, "\t\t\t\tadocumentActivity);"], [154, "\t\t\t\tthrow new PluginException(RulePlugin.class.getName(),"], [155, "\t\t\t\t\t\tsErrorCode,"], [156, "\t\t\t\t\t\t\"BusinessRule: validation failed - ErrorCode=\""], [157, "\t\t\t\t\t\t\t\t+ sErrorCode, params);"], [171, "\t\t\t\t\tadocumentActivity.replaceItemValue(\"numNextActivityID\","], [172, "\t\t\t\t\t\t\tfollowUpActivity);"], [176, ""], [177, ""], [185, "\t\t\t\t\tadocumentActivity.replaceItemValue(\"numNextProcessID\","], [186, "\t\t\t\t\t\t\tnextTask);"], [190, ""], [217, "\tpublic boolean isValid(ItemCollection documentContext,"], [218, "\t\t\tItemCollection activity) throws PluginException {"], [242, "\tpublic ScriptEngine evaluateBusinessRule(ItemCollection documentContext,"], [243, "\t\t\tItemCollection activity) throws PluginException {"], [252, "\t\tString sEngineType = activity"], [253, "\t\t\t\t.getItemValueString(\"txtBusinessRuleEngine\");"], [284, "\t\t\tthrow new PluginException(RulePlugin.class.getSimpleName(),"], [285, "\t\t\t\t\tINVALID_SCRIPT, \"BusinessRule contains invalid script:\""], [286, "\t\t\t\t\t\t\t+ e.getMessage(), e);"], [323, "\t\t\tString jsCode = \"importPackage(java.util);\""], [324, "\t\t\t\t\t+ \"var _evaluateScriptParam = Arrays.asList(\" + expression"], [327, "\t\t\tengine.eval(jsCode);"], [330, "\t\t\tList<Object> resultList = (List<Object>) engine"], [331, "\t\t\t\t\t.get(\"_evaluateScriptParam\");"], [344, "\t\t\tlogger.fine(\"[RulePlugin] error evaluating \" + expression + \" - \""], [345, "\t\t\t\t\t+ se.getMessage());"], [362, "\tprivate void updateActivityEntity(ScriptEngine engine,"], [363, "\t\t\tItemCollection adocumentActivity) {"], [375, "\t\t\tif (oScript==null) {"], [379, "\t\t\tif (oActivity==null) {"], [385, "\t\t\t\tlogger.fine(\"[RulePlugin] update activity proeperty \""], [386, "\t\t\t\t\t\t+ entry.getKey());"]]}, "num_lines_added": 31, "num_lines_removed": 37}