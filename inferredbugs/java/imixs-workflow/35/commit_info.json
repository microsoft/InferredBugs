{"hash": "aea90753acf8b1b0ce68be49b48bc991548fd0f5", "message": "refactoring - static public methods\n\nremoved static public methods from EJBs\n\n\nIssue #510", "file_num_lines": 138, "diff_parsed": {"added": [[24, ""], [25, "\tWorkflowSchedulerService workflowSchedulerService;"], [29, "\t\tworkflowSchedulerService=new WorkflowSchedulerService();"], [58, "\t\tAssert.assertTrue(workflowSchedulerService.workItemInDue(doc, activity));"], [67, "\t\tAssert.assertFalse(workflowSchedulerService.workItemInDue(doc, activity));"], [88, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 1).get(Calendar.DAY_OF_WEEK));"], [90, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 2).get(Calendar.DAY_OF_WEEK));"], [92, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 4).get(Calendar.DAY_OF_WEEK));"], [96, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 5).get(Calendar.DAY_OF_WEEK));"], [103, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 9).get(Calendar.DAY_OF_WEEK));"], [105, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 10).get(Calendar.DAY_OF_WEEK));"], [124, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 2).get(Calendar.DAY_OF_WEEK));"], [127, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 8).get(Calendar.DAY_OF_WEEK));"], [130, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 10).get(Calendar.DAY_OF_WEEK));"], [133, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 14).get(Calendar.DAY_OF_WEEK));"], [151, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, -1).get(Calendar.DAY_OF_WEEK));"], [153, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, -2).get(Calendar.DAY_OF_WEEK));"], [155, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, -4).get(Calendar.DAY_OF_WEEK));"], [158, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, -5).get(Calendar.DAY_OF_WEEK));"], [160, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, -9).get(Calendar.DAY_OF_WEEK));"], [162, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, -10).get(Calendar.DAY_OF_WEEK));"], [181, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, -2).get(Calendar.DAY_OF_WEEK));"], [201, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, -1).get(Calendar.DAY_OF_WEEK));"], [203, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, -5).get(Calendar.DAY_OF_WEEK));"], [222, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 1).get(Calendar.DAY_OF_WEEK));"], [225, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 4).get(Calendar.DAY_OF_WEEK));"], [229, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 5).get(Calendar.DAY_OF_WEEK));"], [247, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, -1).get(Calendar.DAY_OF_WEEK));"], [249, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, -5).get(Calendar.DAY_OF_WEEK));"], [267, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 1).get(Calendar.DAY_OF_WEEK));"], [270, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 4).get(Calendar.DAY_OF_WEEK));"], [274, "\t\t\t\tworkflowSchedulerService.addWorkDays(startDate, 5).get(Calendar.DAY_OF_WEEK));"]], "deleted": [[27, ""], [56, "\t\tAssert.assertTrue(WorkflowSchedulerService.workItemInDue(doc, activity));"], [65, "\t\tAssert.assertFalse(WorkflowSchedulerService.workItemInDue(doc, activity));"], [86, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 1).get(Calendar.DAY_OF_WEEK));"], [88, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 2).get(Calendar.DAY_OF_WEEK));"], [90, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 4).get(Calendar.DAY_OF_WEEK));"], [94, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 5).get(Calendar.DAY_OF_WEEK));"], [101, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 9).get(Calendar.DAY_OF_WEEK));"], [103, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 10).get(Calendar.DAY_OF_WEEK));"], [122, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 2).get(Calendar.DAY_OF_WEEK));"], [125, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 8).get(Calendar.DAY_OF_WEEK));"], [128, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 10).get(Calendar.DAY_OF_WEEK));"], [131, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 14).get(Calendar.DAY_OF_WEEK));"], [149, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, -1).get(Calendar.DAY_OF_WEEK));"], [151, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, -2).get(Calendar.DAY_OF_WEEK));"], [153, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, -4).get(Calendar.DAY_OF_WEEK));"], [156, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, -5).get(Calendar.DAY_OF_WEEK));"], [158, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, -9).get(Calendar.DAY_OF_WEEK));"], [160, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, -10).get(Calendar.DAY_OF_WEEK));"], [179, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, -2).get(Calendar.DAY_OF_WEEK));"], [199, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, -1).get(Calendar.DAY_OF_WEEK));"], [201, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, -5).get(Calendar.DAY_OF_WEEK));"], [220, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 1).get(Calendar.DAY_OF_WEEK));"], [223, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 4).get(Calendar.DAY_OF_WEEK));"], [227, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 5).get(Calendar.DAY_OF_WEEK));"], [245, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, -1).get(Calendar.DAY_OF_WEEK));"], [247, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, -5).get(Calendar.DAY_OF_WEEK));"], [265, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 1).get(Calendar.DAY_OF_WEEK));"], [268, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 4).get(Calendar.DAY_OF_WEEK));"], [272, "\t\t\t\tWorkflowSchedulerService.addWorkDays(startDate, 5).get(Calendar.DAY_OF_WEEK));"]]}, "num_lines_added": 32, "num_lines_removed": 30}