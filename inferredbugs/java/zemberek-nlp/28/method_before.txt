    List<Pair> predict(int[] input,
                 int k,
                 Vector hidden,
                 Vector output) {
        assert (k > 0);
        computeHidden(input, hidden);
        PriorityQueue<Pair> heap = new PriorityQueue<>(k+1, PAIR_COMPARATOR);
        if (args_.loss == Args.loss_name.hs) {
            dfs(k, 2 * osz_ - 2, 0.0f, heap, hidden);
        } else {
            findKBest(k, heap, hidden, output);
        }
        List<Pair> result = new ArrayList<>(heap);
        Collections.sort(result);
        return  result;
    }