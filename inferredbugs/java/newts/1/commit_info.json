{"hash": "cdf4f11a91948ef2fd8b9100a79ee170bc8f0053", "message": "remove metric type from accumulations", "file_num_lines": 151, "diff_parsed": {"added": [[24, "        private long known, unknown;"], [27, "        private Accumulation() {"], [28, "            reset();"], [35, "        private Double average() {"], [36, "            return isValid() ? value.divideBy(known).doubleValue() : Double.NaN;"], [45, "            value = ValueType.compose(0, MetricType.GAUGE);"], [112, "                    accumulation.average()));"], [168, "            Accumulation accumulation = getOrCreateAccumulation(current.getName());"], [185, "    public Accumulation getOrCreateAccumulation(String name) {"], [189, "            result = new Accumulation();"]], "deleted": [[24, "        private long known = 0, unknown = 0;"], [26, "        private MetricType type;"], [28, "        private Accumulation(MetricType type) {"], [29, "            value = ValueType.compose(0, type);"], [30, "            this.type = type;"], [37, "        private ValueType<?> average() {"], [38, "            return isValid() ? value.divideBy(known) : null;"], [47, "            value = ValueType.compose(0, type);"], [114, "                    accumulation.average().doubleValue()));"], [170, "            Accumulation accumulation = getOrCreateAccumulation(current.getName(), current.getType());"], [171, ""], [172, "            // FIXME: what happens if metric type changes mid-stream?"], [189, "    public Accumulation getOrCreateAccumulation(String name, MetricType type) {"], [193, "            result = new Accumulation(type);"]]}, "num_lines_added": 10, "num_lines_removed": 14}