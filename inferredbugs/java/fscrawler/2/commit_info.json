{"hash": "bbddb9e7dc42b02aeb0c41e006b386a99acf0139", "message": "Create fscrawler-rest module (#506)\n\nMore and more modules.\r\n\r\nRelated to #502.", "file_num_lines": 530, "diff_parsed": {"added": [[31, "import fr.pilato.elasticsearch.crawler.fs.framework.SignTool;"], [37, "import fr.pilato.elasticsearch.crawler.fs.settings.Server;"], [73, "import static fr.pilato.elasticsearch.crawler.fs.settings.FsCrawlerValidator.validateSettings;"], [390, "            if (fsSettings.getServer() == null || Server.PROTOCOL.LOCAL.equals(fsSettings.getServer().getProtocol())) {"], [393, "            } else if (Server.PROTOCOL.SSH.equals(fsSettings.getServer().getProtocol())) {"], [400, "                    Server.PROTOCOL.LOCAL + \" or \" + Server.PROTOCOL.SSH);"]], "deleted": [[34, "import fr.pilato.elasticsearch.crawler.fs.rest.RestServer;"], [65, "import java.util.Properties;"], [69, "import static fr.pilato.elasticsearch.crawler.fs.FsCrawlerValidator.validateSettings;"], [86, "    public static final class PROTOCOL {"], [87, "        public static final String LOCAL = \"local\";"], [88, "        public static final String SSH = \"ssh\";"], [89, "        public static final int SSH_PORT = 22;"], [90, "    }"], [91, ""], [99, "    private final static String FSCRAWLER_PROPERTIES = \"fscrawler.properties\";"], [100, "    public static final Properties properties;"], [101, ""], [102, "    static {"], [103, "        properties = new Properties();"], [104, "        try {"], [105, "            properties.load(FsCrawlerImpl.class.getClassLoader().getResourceAsStream(FSCRAWLER_PROPERTIES));"], [106, "        } catch (IOException e) {"], [107, "            logger.error(\"Can not find [{}] resource in the class loader\", FSCRAWLER_PROPERTIES);"], [108, "            throw new RuntimeException(e);"], [109, "        }"], [110, "    }"], [111, ""], [247, "        // Start the REST Server if needed"], [248, "        if (rest) {"], [249, "            RestServer.start(settings, esClientManager);"], [250, "            logger.info(\"FS crawler Rest service started on [{}]\", settings.getRest().url());"], [251, "        }"], [252, ""], [278, "        // Stop the REST Server if needed"], [279, "        RestServer.close();"], [280, "        logger.debug(\"FS crawler Rest service stopped\");"], [281, ""], [419, "            if (fsSettings.getServer() == null || PROTOCOL.LOCAL.equals(fsSettings.getServer().getProtocol())) {"], [422, "            } else if (PROTOCOL.SSH.equals(fsSettings.getServer().getProtocol())) {"], [429, "                    PROTOCOL.LOCAL + \" or \" + PROTOCOL.SSH);"], [785, "    /**"], [786, "     * Check whether the given CharSequence has actual text."], [787, "     * More specifically, returns <code>true</code> if the string not <code>null</code>,"], [788, "     * its length is greater than 0, and it contains at least one non-whitespace character."], [789, "     * <p><pre>"], [790, "     * StringUtils.hasText(null) = false"], [791, "     * StringUtils.hasText(\"\") = false"], [792, "     * StringUtils.hasText(\" \") = false"], [793, "     * StringUtils.hasText(\"12345\") = true"], [794, "     * StringUtils.hasText(\" 12345 \") = true"], [795, "     * </pre>"], [796, "     *"], [797, "     * @param str the CharSequence to check (may be <code>null</code>)"], [798, "     * @return <code>true</code> if the CharSequence is not <code>null</code>,"], [799, "     *         its length is greater than 0, and it does not contain whitespace only"], [800, "     * @see java.lang.Character#isWhitespace"], [801, "     */"], [802, "    public static boolean hasText(CharSequence str) {"], [803, "        if (!hasLength(str)) {"], [804, "            return false;"], [805, "        }"], [806, "        int strLen = str.length();"], [807, "        for (int i = 0; i < strLen; i++) {"], [808, "            if (!Character.isWhitespace(str.charAt(i))) {"], [809, "                return true;"], [810, "            }"], [811, "        }"], [812, "        return false;"], [813, "    }"], [814, ""], [815, "    private static boolean hasLength(CharSequence str) {"], [816, "        return str != null && str.length() > 0;"], [817, "    }"], [818, ""]]}, "num_lines_added": 6, "num_lines_removed": 69}