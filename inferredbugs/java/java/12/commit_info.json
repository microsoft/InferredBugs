{"hash": "66bba511a23204242a686d282c92759633d5e093", "message": "Exec: Add builder-style mechanism to configure execution", "file_num_lines": 318, "diff_parsed": {"added": [[82, "  /**"], [83, "   * Setup a Builder for the given namespace, name and command"], [84, "   *"], [85, "   * @param namespace The namespace of the Pod"], [86, "   * @param name The name of the Pod"], [87, "   * @param command The command to run"], [88, "   */"], [89, "  public ExecutionBuilder newExecutionBuilder(String namespace, String name, String[] command) {"], [90, "    return new ExecutionBuilder(namespace, name, command);"], [186, "    return newExecutionBuilder(namespace, name, command)"], [187, "        .setContainer(container)"], [188, "        .setStdin(stdin)"], [189, "        .setTty(tty)"], [190, "        .execute();"], [191, "  }"], [192, ""], [193, "  public final class ExecutionBuilder {"], [194, "    private final String namespace;"], [195, "    private final String name;"], [196, "    private final String[] command;"], [197, ""], [198, "    private String container;"], [199, ""], [200, "    private boolean stdin;"], [201, "    private boolean stdout;"], [202, "    private boolean stderr;"], [203, "    private boolean tty;"], [204, ""], [205, "    private ExecutionBuilder(String namespace, String name, String[] command) {"], [206, "      this.namespace = namespace;"], [207, "      this.name = name;"], [208, "      this.command = command;"], [209, "      this.stdin = true;"], [210, "      this.stdout = true;"], [211, "      this.stderr = true;"], [212, "    }"], [213, ""], [214, "    public String getName() {"], [215, "      return name;"], [216, "    }"], [217, ""], [218, "    public String getNamespace() {"], [219, "      return namespace;"], [220, "    }"], [221, ""], [222, "    public String[] getCommand() {"], [223, "      return command;"], [224, "    }"], [225, ""], [226, "    public String getContainer() {"], [227, "      return container;"], [228, "    }"], [229, ""], [230, "    public ExecutionBuilder setContainer(String container) {"], [231, "      this.container = container;"], [232, "      return this;"], [233, "    }"], [234, ""], [235, "    public boolean getStdin() {"], [236, "      return stdin;"], [237, "    }"], [238, ""], [239, "    public ExecutionBuilder setStdin(boolean stdin) {"], [240, "      this.stdin = stdin;"], [241, "      return this;"], [242, "    }"], [243, ""], [244, "    public boolean getStdout() {"], [245, "      return stdout;"], [246, "    }"], [247, ""], [248, "    public ExecutionBuilder setStdout(boolean stdout) {"], [249, "      this.stdout = stdout;"], [250, "      return this;"], [251, "    }"], [252, ""], [253, "    public boolean getStderr() {"], [254, "      return stderr;"], [257, "    public ExecutionBuilder setStderr(boolean stderr) {"], [258, "      this.stderr = stderr;"], [259, "      return this;"], [260, "    }"], [261, ""], [262, "    public boolean getTty() {"], [263, "      return tty;"], [264, "    }"], [266, "    public ExecutionBuilder setTty(boolean tty) {"], [267, "      this.tty = tty;"], [268, "      return this;"], [269, "    }"], [270, ""], [271, "    private String makePath() {"], [272, "      String[] encodedCommand = new String[command.length];"], [273, "      for (int i = 0; i < command.length; i++) {"], [274, "        try {"], [275, "          encodedCommand[i] = URLEncoder.encode(command[i], \"UTF-8\");"], [276, "        } catch (UnsupportedEncodingException ex) {"], [277, "          throw new RuntimeException(\"some thing wrong happend: \" + ex.getMessage());"], [278, "        }"], [279, "      }"], [280, "      return \"/api/v1/namespaces/\""], [281, "          + namespace"], [282, "          + \"/pods/\""], [283, "          + name"], [284, "          + \"/exec?\""], [285, "          + \"stdin=\""], [286, "          + stdin"], [287, "          + \"&stdout=\""], [288, "          + stdout"], [289, "          + \"&stderr=\""], [290, "          + stderr"], [291, "          + \"&tty=\""], [292, "          + tty"], [293, "          + (container != null ? \"&container=\" + container : \"\")"], [294, "          + \"&command=\""], [295, "          + StringUtils.join(encodedCommand, \"&command=\");"], [296, "    }"], [297, ""], [298, "    public Process execute() throws ApiException, IOException {"], [299, "      if (container == null) {"], [300, "        CoreV1Api api = new CoreV1Api(apiClient);"], [301, "        V1Pod pod = api.readNamespacedPod(name, namespace, \"false\", null, null);"], [302, "        container = pod.getSpec().getContainers().get(0).getName();"], [303, "      }"], [304, ""], [305, "      ExecProcess exec = new ExecProcess(apiClient);"], [306, "      WebSocketStreamHandler handler = exec.getHandler();"], [307, "      WebSockets.stream(makePath(), \"GET\", apiClient, handler);"], [308, ""], [309, "      return exec;"], [310, "    }"]], "deleted": [[82, "  private String makePath("], [83, "      String namespace,"], [84, "      String name,"], [85, "      String[] command,"], [86, "      String container,"], [87, "      boolean stdin,"], [88, "      boolean tty) {"], [89, "    for (int i = 0; i < command.length; i++) {"], [90, "      try {"], [91, "        command[i] = URLEncoder.encode(command[i], \"UTF-8\");"], [92, "      } catch (UnsupportedEncodingException ex) {"], [93, "        throw new RuntimeException(\"some thing wrong happend: \" + ex.getMessage());"], [94, "      }"], [95, "    }"], [96, "    String path ="], [97, "        \"/api/v1/namespaces/\""], [98, "            + namespace"], [99, "            + \"/pods/\""], [100, "            + name"], [101, "            + \"/exec?\""], [102, "            + \"stdin=\""], [103, "            + stdin"], [104, "            + \"&stdout=true\""], [105, "            + \"&stderr=true\""], [106, "            + \"&tty=\""], [107, "            + tty"], [108, "            + (container != null ? \"&container=\" + container : \"\")"], [109, "            + \"&command=\""], [110, "            + StringUtils.join(command, \"&command=\");"], [111, "    return path;"], [207, "    if (container == null) {"], [208, "      CoreV1Api api = new CoreV1Api(apiClient);"], [209, "      V1Pod pod = api.readNamespacedPod(name, namespace, \"false\", null, null);"], [210, "      container = pod.getSpec().getContainers().get(0).getName();"], [212, "    String path = makePath(namespace, name, command, container, stdin, tty);"], [214, "    ExecProcess exec = new ExecProcess(apiClient);"], [215, "    WebSocketStreamHandler handler = exec.getHandler();"], [216, "    WebSockets.stream(path, \"GET\", apiClient, handler);"], [218, "    return exec;"]]}, "num_lines_added": 131, "num_lines_removed": 39}