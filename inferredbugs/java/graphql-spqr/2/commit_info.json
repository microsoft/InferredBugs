{"hash": "bd9bc34d9a54bd7f013b83aa43bf246fa685f307", "message": "Enable the use of Connections for non spec-compliant queries\n\nCloses #152", "file_num_lines": 478, "diff_parsed": {"added": [[36, "import io.leangen.graphql.metadata.exceptions.MappingException;"], [51, "import static io.leangen.graphql.support.LogAssertions.assertWarningsLogged;"], [203, "            assertWarningsLogged(log.getEvents(), Urls.Errors.NON_UNIQUE_TYPE_NAME);"], [207, "    @Test(expected = MappingException.class)"], [208, "    public void testInvalidPaginationArgumentTypes() {"], [210, "                .withOperationsFromSingleton(new InvalidArgsPagingService())"], [211, "                .generate();"], [212, "    }"], [213, ""], [214, "    @Test(expected = MappingException.class)"], [215, "    public void testMissingPaginationArguments() {"], [216, "        new TestSchemaGenerator()"], [217, "                .withOperationsFromSingleton(new MissingArgsPagingService())"], [218, "                .generate();"], [219, "    }"], [220, ""], [221, "    @Test"], [222, "    public void testAllowedInvalidPaginationArguments() {"], [223, "        new TestSchemaGenerator()"], [224, "                .withRelayConnectionCheckRelaxed()"], [225, "                .withOperationsFromSingleton(new InvalidArgsPagingService())"], [226, "                .generate();"], [227, ""], [228, "        new TestSchemaGenerator()"], [229, "                .withRelayConnectionCheckRelaxed()"], [230, "                .withOperationsFromSingleton(new MissingArgsPagingService())"], [456, "    private static class InvalidArgsPagingService {"], [457, ""], [458, "        @GraphQLQuery(name = \"streets\")"], [459, "        public Page<Street> streets(@GraphQLArgument(name = \"first\") String first, @GraphQLArgument(name = \"after\") String after) {"], [460, "            return null;"], [461, "        }"], [462, "    }"], [463, ""], [464, "    private static class MissingArgsPagingService {"], [467, "        public Page<Street> streets(@GraphQLArgument(name = \"first\") int first) {"]], "deleted": [[3, "import ch.qos.logback.classic.Level;"], [4, "import ch.qos.logback.classic.spi.ILoggingEvent;"], [38, "import io.leangen.graphql.metadata.exceptions.TypeMappingException;"], [55, "import static org.hamcrest.core.Is.is;"], [56, "import static org.hamcrest.core.StringContains.containsString;"], [60, "import static org.junit.Assert.assertThat;"], [207, "            assertEquals(1, log.getEvents().size());"], [208, "            ILoggingEvent event = log.getEvents().get(0);"], [209, "            assertThat(event.getLevel(), is(Level.WARN));"], [210, "            assertThat(event.getMessage(), containsString(Urls.Errors.NON_UNIQUE_TYPE_NAME));"], [214, "    @Test(expected = TypeMappingException.class)"], [215, "    public void testInvalidPaginationArguments() {"], [217, "                .withOperationsFromSingleton(new InvalidPagingService())"], [443, "    private static class InvalidPagingService {"], [446, "        public Page<Street> streets(@GraphQLArgument(name = \"first\") String first) {"]]}, "num_lines_added": 36, "num_lines_removed": 15}