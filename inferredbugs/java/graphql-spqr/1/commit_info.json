{"hash": "f19f2baf8d4fd5d480a752b441d3bdf7dcc7f9f0", "message": "Make AnnotatedArgumentBuilder easier to extend", "file_num_lines": 83, "diff_parsed": {"added": [[42, "            operationArguments.add(buildResolverArgument(parameter, parameterType, params.getInclusionStrategy()));"], [47, "    protected OperationArgument buildResolverArgument(Parameter parameter, AnnotatedType parameterType, InclusionStrategy inclusionStrategy) {"], [48, "        return new OperationArgument("], [49, "                parameterType,"], [50, "                getArgumentName(parameter, parameterType, inclusionStrategy),"], [51, "                getArgumentDescription(parameter, parameterType),"], [52, "                defaultValue(parameter, parameterType),"], [53, "                parameter,"], [54, "                parameter.isAnnotationPresent(GraphQLContext.class),"], [55, "                inclusionStrategy.includeArgument(parameter, parameterType)"], [56, "        );"], [57, "    }"], [58, ""]], "deleted": [[42, "            operationArguments.add(new OperationArgument("], [43, "                    parameterType,"], [44, "                    getArgumentName(parameter, parameterType, params.getInclusionStrategy()),"], [45, "                    getArgumentDescription(parameter, parameterType),"], [46, "                    defaultValue(parameter, parameterType),"], [47, "                    parameter,"], [48, "                    parameter.isAnnotationPresent(GraphQLContext.class),"], [49, "                    params.getInclusionStrategy().includeArgument(parameter, parameterType)"], [50, "            ));"]]}, "num_lines_added": 13, "num_lines_removed": 9}