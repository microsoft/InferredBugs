{"hash": "7a51fb3a2d5d22ae430702a9e358ff65e912a740", "message": "added pretty printing support to JsonWriter", "file_num_lines": 758, "diff_parsed": {"added": [[102, "\tprivate final String indentation;"], [111, "\t\t\t\t_default.withClassMetadata, _default.strictDoubleParse, _default.indentation);"], [144, "\t * @param indentation"], [145, "\t *            the characters to use for indentation, for example \"  \" will use an indentation of"], [146, "\t *            two spaces."], [150, "\t\t\tMap<String, Class<?>> classAliases, boolean withClassMetadata,"], [151, "\t\t\tboolean strictDoubleParse, String indentation) {"], [164, "\t\tthis.indentation = indentation;"], [198, "\t\tStringWriter sw = new StringWriter();"], [199, "\t\tObjectWriter writer = createWriter(sw);"], [205, "\t\treturn sw.toString();"], [221, "\t\tStringWriter sw = new StringWriter();"], [222, "\t\tObjectWriter writer = createWriter(sw);"], [228, "\t\treturn sw.toString();"], [244, "\t\tStringWriter sw = new StringWriter();"], [245, "\t\tObjectWriter writer = createWriter(sw);"], [251, "\t\treturn sw.toString();"], [349, "\t\treturn new JsonWriter(new OutputStreamWriter(os), skipNull, htmlSafe, indentation);"], [357, "\t\treturn new JsonWriter(writer, skipNull, htmlSafe, indentation);"], [419, "\t\tprivate String indentation = null;"], [683, ""], [687, ""], [691, ""], [695, ""], [699, ""], [703, ""], [707, ""], [711, ""], [715, ""], [716, "\t\tprivate Builder filter(final String field, final Class<?> declaringClass,"], [717, "\t\t\t\tfinal Class<?> ofType, final boolean exclude) {"], [723, ""], [728, ""], [743, ""], [754, ""], [755, "\t\t\t\tprivate Trilean filter(String actualName, Class<?> fromClass,"], [756, "\t\t\t\t\t\tClass<?> propertyType, boolean exclude) {"], [758, "\t\t\t\t\t\t\t&& (declaringClass == null || declaringClass"], [759, "\t\t\t\t\t\t\t\t\t.isAssignableFrom(fromClass))"], [1057, "\t\tpublic String getIndentation() {"], [1058, "\t\t\treturn indentation;"], [1059, "\t\t}"], [1060, ""], [1061, "\t\tpublic Builder setIndentation(String indentation) {"], [1062, "\t\t\tthis.indentation = indentation; return this;"], [1063, "\t\t}"], [1064, ""], [1148, "\t\t\t\t\tisStrictDoubleParse(), getIndentation());"]], "deleted": [[110, "\t\t\t\t_default.withClassMetadata, _default.strictDoubleParse);"], [146, "\t\t\tMap<String, Class<?>> classAliases, boolean withClassMetadata, boolean strictDoubleParse) {"], [192, "\t\tJsonWriter writer = new JsonWriter(new StringWriter(), skipNull, htmlSafe);"], [198, "\t\treturn writer.unwrap().toString();"], [214, "\t\tJsonWriter writer = new JsonWriter(new StringWriter(), skipNull, htmlSafe);"], [220, "\t\treturn writer.unwrap().toString();"], [236, "\t\tJsonWriter writer = new JsonWriter(new StringWriter(), skipNull, htmlSafe);"], [242, "\t\treturn writer.unwrap().toString();"], [340, "\t\treturn new JsonWriter(new OutputStreamWriter(os), skipNull, htmlSafe);"], [348, "\t\treturn new JsonWriter(writer, skipNull, htmlSafe);"], [673, ""], [677, ""], [681, ""], [685, ""], [689, ""], [693, ""], [697, ""], [701, ""], [705, ""], [706, "\t\tprivate Builder filter(final String field, final Class<?> declaringClass, final Class<?> ofType, final boolean exclude) {"], [712, ""], [717, ""], [732, ""], [743, ""], [744, "\t\t\t\tprivate Trilean filter(String actualName, Class<?> fromClass, Class<?> propertyType, boolean exclude) {"], [746, "\t\t\t\t\t\t\t&& (declaringClass == null || declaringClass.isAssignableFrom(fromClass))"], [1127, "\t\t\t\t\tisStrictDoubleParse());"]]}, "num_lines_added": 48, "num_lines_removed": 27}