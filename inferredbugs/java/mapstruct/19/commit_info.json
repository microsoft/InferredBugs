{"hash": "6f68512406d71d194a925629ee507ccd15a5c43e", "message": "#157 moving duplicated code  from MapperCreationProcessor (PropertyMapping, IterableMapping and MapMapping) to MappingResolver", "file_num_lines": 848, "diff_parsed": {"added": [[21, "import org.mapstruct.ap.model.ParameterAssignment;"], [82, "    private MappingResolver mappingResolver;"], [95, "        this.mappingResolver = new MappingResolver(messager, typeFactory, elementUtils, typeUtils );"], [110, "        mappingMethods.addAll( mappingResolver.getVirtualMethodsToGenerate() );"], [644, ""], [645, "        ParameterAssignment parameterAssignment = mappingResolver.getParameterAssignment("], [665, "            parameterAssignment != null ? parameterAssignment.getMethodReference() : null,"], [666, "            parameterAssignment != null ? parameterAssignment.getTypeConversion() : null"], [691, "        String conversionStr = Strings.getSaveVariableName( sourceElementType.getName(), method.getParameterNames() );"], [693, "        ParameterAssignment parameterAssignment = mappingResolver.getParameterAssignment("], [701, "            dateFormat,"], [702, "            conversionStr"], [705, "        if ( parameterAssignment == null ) {"], [720, "            parameterAssignment != null ? parameterAssignment.getMethodReference() : null,"], [721, "            parameterAssignment != null ? parameterAssignment.getTypeConversion() : null,"], [736, "        ParameterAssignment parameterAssignmentKey = mappingResolver.getParameterAssignment("], [744, "            keyDateFormat,"], [745, "            \"entry.getKey()\""], [748, "        if ( parameterAssignmentKey == null ) {"], [765, "        ParameterAssignment parameterAssignmentValue = mappingResolver.getParameterAssignment("], [777, "        if ( parameterAssignmentValue == null ) {"], [792, "                method,"], [793, "                parameterAssignmentKey != null ? parameterAssignmentKey.getMethodReference() : null,"], [794, "                parameterAssignmentKey != null ? parameterAssignmentKey.getTypeConversion() : null,"], [795, "                parameterAssignmentValue != null ? parameterAssignmentValue.getMethodReference() : null,"], [796, "                parameterAssignmentValue != null ? parameterAssignmentValue.getTypeConversion() : null,"], [797, "                factoryMethod"]], "deleted": [[51, "import org.mapstruct.ap.model.TypeConversion;"], [82, "    private MappingMethodResolver mappingMethodResolver;"], [95, "        this.mappingMethodResolver = new MappingMethodResolver(messager, typeFactory, elementUtils, typeUtils );"], [110, "        mappingMethods.addAll( mappingMethodResolver.getVirtualMethodsToCreate() );"], [644, "        MethodReference mappingMethodReference = mappingMethodResolver.getMappingMethodReferenceBasedOnMethod("], [652, "            dateFormat"], [653, "        );"], [654, ""], [655, "        TypeConversion conversion = mappingMethodResolver.getConversion("], [656, "            sourceType,"], [657, "            targetType,"], [670, "            mappingMethodReference,"], [671, "            conversion"], [675, ""], [676, "            // when not mappable, try again with another property mapping method based on parameter only."], [677, "            mappingMethodReference = mappingMethodResolver.getMappingMethodReferenceBasedOnParameter("], [678, "                method,"], [679, "                \"property '\" + Executables.getPropertyName( sourceAccessor ) + \"'\","], [680, "                mapperReferences,"], [681, "                methods,"], [682, "                sourceType,"], [683, "                targetType,"], [684, "                targetPropertyName,"], [685, "                dateFormat"], [686, "            );"], [687, ""], [688, "            property = new PropertyMapping("], [689, "                parameter.getName(),"], [690, "                Executables.getPropertyName( sourceAccessor ),"], [691, "                sourceAccessor.getSimpleName().toString(),"], [692, "                sourceType,"], [693, "                Executables.getPropertyName( targetAcessor ),"], [694, "                targetAcessor.getSimpleName().toString(),"], [695, "                targetType,"], [696, "                mappingMethodReference,"], [697, "                conversion"], [698, "            );"], [699, "        }"], [700, ""], [701, "        if ( !isPropertyMappable( property ) ) {"], [724, "        TypeConversion conversion = mappingMethodResolver.getConversion("], [725, "            sourceElementType,"], [726, "            targetElementType,"], [727, "            dateFormat,"], [728, "            Strings.getSaveVariableName("], [729, "                sourceElementType.getName(),"], [730, "                method.getParameterNames()"], [731, "            )"], [732, "        );"], [733, ""], [734, "        MethodReference mappingMethodReference = mappingMethodResolver.getMappingMethodReferenceBasedOnMethod("], [742, "            dateFormat"], [745, "        if ( !sourceElementType.isAssignableTo( targetElementType ) && conversion == null &&"], [746, "            mappingMethodReference == null ) {"], [747, "            // when no conversion is found and no mapping method try match based on parameter only"], [748, "            mappingMethodReference = mappingMethodResolver.getMappingMethodReferenceBasedOnParameter("], [749, "                method,"], [750, "                \"collection element\","], [751, "                mapperReferences,"], [752, "                methods,"], [753, "                sourceElementType,"], [754, "                targetElementType,"], [755, "                null, // there is no targetPropertyName"], [756, "                dateFormat"], [757, "            );"], [758, "        }"], [759, ""], [760, "        if ( !sourceElementType.isAssignableTo( targetElementType ) && conversion == null &&"], [761, "            mappingMethodReference == null ) {"], [776, "            mappingMethodReference,"], [777, "            conversion,"], [792, "        MethodReference keyMappingMethod = mappingMethodResolver.getMappingMethodReferenceBasedOnMethod("], [800, "            keyDateFormat"], [802, "        TypeConversion keyConversion = mappingMethodResolver.getConversion( keySourceType, keyTargetType,"], [803, "                keyDateFormat, \"entry.getKey()\" );"], [804, ""], [805, "        if ( !keySourceType.isAssignableTo( keyTargetType ) && keyConversion == null && keyMappingMethod == null ) {"], [806, "            // when no conversion is found and no mapping method try match based on parameter only"], [807, "            keyMappingMethod = mappingMethodResolver.getMappingMethodReferenceBasedOnParameter("], [808, "                method,"], [809, "                \"map key\","], [810, "                mapperReferences,"], [811, "                methods,"], [812, "                keySourceType,"], [813, "                keyTargetType,"], [814, "                null, // there is no targetPropertyName"], [815, "                keyDateFormat"], [816, "            );"], [817, "        }"], [819, "        if ( !keySourceType.isAssignableTo( keyTargetType ) && keyConversion == null && keyMappingMethod == null ) {"], [836, "        MethodReference valueMappingMethod = mappingMethodResolver.getMappingMethodReferenceBasedOnMethod("], [844, "            valueDateFormat"], [845, "        );"], [846, "        TypeConversion valueConversion = mappingMethodResolver.getConversion("], [847, "            valueSourceType,"], [848, "            valueTargetType,"], [853, "        if ( !valueSourceType.isAssignableTo( valueTargetType ) && valueConversion == null &&"], [854, "            valueMappingMethod == null ) {"], [855, "            // when no conversion is found and no mapping method try match based on parameter only"], [856, "            keyMappingMethod = mappingMethodResolver.getMappingMethodReferenceBasedOnParameter("], [857, "                method,"], [858, "                \"map value\","], [859, "                mapperReferences,"], [860, "                methods,"], [861, "                valueSourceType,"], [862, "                valueTargetType,"], [863, "                null, // there is no targetPropertyName"], [864, "                valueDateFormat"], [865, "            );"], [866, "        }"], [867, ""], [868, "        if ( !valueSourceType.isAssignableTo( valueTargetType ) && valueConversion == null &&"], [869, "            valueMappingMethod == null ) {"], [884, "            method, keyMappingMethod, keyConversion, valueMappingMethod, valueConversion,"], [885, "            factoryMethod"]]}, "num_lines_added": 27, "num_lines_removed": 115}