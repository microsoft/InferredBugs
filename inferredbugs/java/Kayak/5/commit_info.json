{"hash": "19aa487f70ebe65ce0a96c9bfa73f277e31eaacc", "message": "subscription debugging and persistent bus statistics", "file_num_lines": 103, "diff_parsed": {"added": [[23, "import com.github.kayak.ui.projects.Project;"], [24, "import com.github.kayak.ui.projects.ProjectManager;"], [25, "import java.util.logging.Level;"], [41, "persistenceType = TopComponent.PERSISTENCE_ONLY_OPENED)"], [45, "    private static final Logger logger = Logger.getLogger(BusStatisticsTopComponent.class.getName());"], [130, "        p.setProperty(\"busName\", bus.getName());"], [131, "        ProjectManager manager = ProjectManager.getGlobalProjectManager();"], [132, "        p.setProperty(\"projectName\", manager.getOpenedProject().getName());"], [135, "    void readProperties(java.util.Properties p) {"], [138, "        String busName = p.getProperty(\"busName\");"], [139, "        String projectName = p.getProperty(\"projectName\");"], [140, ""], [141, "        logger.log(Level.INFO, \"Trying to restore statistics view with project {0} and bus {1}\", new String[]{projectName, busName});"], [142, ""], [143, "        Project project = null;"], [144, ""], [145, "        for (Project pr : ProjectManager.getGlobalProjectManager().getProjects()) {"], [146, "            if (pr.getName().equals(projectName)) {"], [147, "                project = pr;"], [148, "                break;"], [149, "            }"], [150, "        }"], [151, ""], [152, "        if (project == null || project.isOpened() == false) {"], [153, "            this.close();"], [154, "            return;"], [155, "        }"], [156, ""], [157, "        Bus newBus = null;"], [158, ""], [159, "        for (Bus b : project.getBusses()) {"], [160, "            if (b.getName().equals(busName)) {"], [161, "                newBus = b;"], [162, "                break;"], [163, "            }"], [164, "        }"], [165, ""], [166, "        if (newBus == null) {"], [167, "            this.close();"], [168, "            return;"], [169, "        }"], [170, ""], [171, "        setBus(newBus);"]], "deleted": [[38, "persistenceType = TopComponent.PERSISTENCE_NEVER)"], [43, "    /** path to the icon used by the component and its open action */"], [44, "//    static final String ICON_PATH = \"SET/PATH/TO/ICON/HERE\";"], [45, "    private static final String PREFERRED_ID = \"BusStatisticsTopComponent\";"], [77, "//        setIcon(ImageUtilities.loadImage(ICON_PATH, true));"], [78, "        putClientProperty(TopComponent.PROP_KEEP_PREFERRED_SIZE_WHEN_SLIDED_IN, Boolean.TRUE);"], [79, ""], [118, "    /**"], [119, "     * Obtain the BusStatisticsTopComponent instance. Never call {@link #getDefault} directly!"], [120, "     */"], [121, "    public static synchronized BusStatisticsTopComponent findInstance() {"], [122, "        TopComponent win = WindowManager.getDefault().findTopComponent(PREFERRED_ID);"], [123, "        if (win == null) {"], [124, "            Logger.getLogger(BusStatisticsTopComponent.class.getName()).warning("], [125, "                    \"Cannot find \" + PREFERRED_ID + \" component. It will not be located properly in the window system.\");"], [126, "            return getDefault();"], [127, "        }"], [128, "        if (win instanceof BusStatisticsTopComponent) {"], [129, "            return (BusStatisticsTopComponent) win;"], [130, "        }"], [131, "        Logger.getLogger(BusStatisticsTopComponent.class.getName()).warning("], [132, "                \"There seem to be multiple components with the '\" + PREFERRED_ID"], [133, "                + \"' ID. That is a potential source of errors and unexpected behavior.\");"], [134, "        return getDefault();"], [135, "    }"], [147, "    @Override"], [148, "    public int getPersistenceType() {"], [149, "        return TopComponent.PERSISTENCE_NEVER;"], [150, "    }"], [151, ""], [153, "        // better to version settings since initial version as advocated at"], [154, "        // http://wiki.apidesign.org/wiki/PropertyFiles"], [156, "    }"], [158, "    Object readProperties(java.util.Properties p) {"], [159, "        if (instance == null) {"], [160, "            instance = this;"], [161, "        }"], [162, "        instance.readPropertiesImpl(p);"], [163, "        return instance;"], [166, "    private void readPropertiesImpl(java.util.Properties p) {"], [168, "    }"], [170, "    @Override"], [171, "    protected String preferredID() {"], [172, "        return PREFERRED_ID;"]]}, "num_lines_added": 43, "num_lines_removed": 44}