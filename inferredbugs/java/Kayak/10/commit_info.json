{"hash": "d438c888eed5d908120400e5d66b20caf5c74d5e", "message": "kayak-core optimizations and cleanup", "file_num_lines": 176, "diff_parsed": {"added": [[3, " *"], [8, " *"], [13, " *"], [16, " *"], [22, "import java.io.OutputStreamWriter;"], [39, ""], [41, "    private OutputStreamWriter output;"], [64, "            input = new InputStreamReader(socket.getInputStream(), \"ASCII\");"], [66, "            output = new OutputStreamWriter(socket.getOutputStream(), \"ASCII\");"], [73, "            output.write(\"< open \" + busName + \" >\");"], [109, "    private synchronized void send(String s) {"], [110, "        try {"], [111, "            output.write(s);"], [113, "        } catch(IOException ex) {"], [114, "            logger.log(Level.WARNING,\"IOException while sending data.\", ex);"], [118, "    public void subscribeTo(int id, int sec, int usec) {"], [119, "        StringBuilder sb = new StringBuilder(30);"], [120, "        sb.append(\"< subscribe \");"], [121, "        sb.append(String.valueOf(sec));"], [122, "        sb.append(' ');"], [123, "        sb.append(String.valueOf(usec));"], [124, "        sb.append(' ');"], [125, "        sb.append(Integer.toHexString(id));"], [126, "        sb.append(\" >\");"], [127, "        send(sb.toString());"], [128, "    }"], [129, ""], [131, "        StringBuilder sb = new StringBuilder(30);"], [132, "        sb.append(\"< unsubscribe \");"], [133, "        sb.append(Integer.toHexString(id));"], [134, "        sb.append(\" >\");"], [135, "        send(sb.toString());"], [139, "        StringBuilder sb = new StringBuilder(40);"], [140, "        sb.append(\"< add \");"], [141, "        sb.append(Integer.toString(sec));"], [142, "        sb.append(' ');"], [143, "        sb.append(Integer.toString(usec));"], [144, "        sb.append(' ');"], [145, "        sb.append(Integer.toHexString(f.getIdentifier()));"], [146, "        sb.append(' ');"], [147, "        sb.append(Integer.toString(f.getLength()));"], [148, "        sb.append(' ');"], [149, "        sb.append(Util.byteArrayToHexString(f.getData()));"], [150, "        sb.append(\" >\");"], [151, "        send(sb.toString());"], [155, "        StringBuilder sb = new StringBuilder(40);"], [156, "        sb.append(\"< add \");"], [157, "        sb.append(Integer.toHexString(f.getIdentifier()));"], [158, "        sb.append(' ');"], [159, "        sb.append(Integer.toString(f.getLength()));"], [160, "        sb.append(' ');"], [161, "        sb.append(Util.byteArrayToHexString(f.getData()));"], [162, "        sb.append(\" >\");"], [163, "        send(sb.toString());"], [167, "        StringBuilder sb = new StringBuilder(50);"], [180, "        send(sb.toString());"], [185, "        StringBuilder sb = new StringBuilder(40);"], [186, ""], [199, "                        sb.setLength(0);"], [214, "                            logger.log(Level.INFO, \"Frame {0}\", f.toString());"], [227, "                /*"]], "deleted": [[3, " *"], [8, " *"], [13, " *"], [16, " *"], [39, "    private PrintWriter output;"], [62, "            input = new InputStreamReader(socket.getInputStream());"], [64, ""], [65, "            output = new PrintWriter(socket.getOutputStream(), true);"], [72, "            output.print(\"< open \" + busName + \" >\");"], [108, "    public void subscribeTo(int id, int sec, int usec) {"], [109, "        synchronized(output) {"], [110, "            output.print(\"< subscribe \""], [111, "                    + Integer.toString(sec) + \" \""], [112, "                    + Integer.toString(usec) + \" \""], [113, "                    + Integer.toHexString(id) + \" >\");"], [119, "        synchronized(output) {"], [120, "            output.print(\"< unsubscribe \" + Integer.toHexString(id) + \" >\");"], [121, "            output.flush();"], [122, "        }"], [126, "        synchronized(output) {"], [127, "            output.print(\"< add \""], [128, "                    + Integer.toString(sec) + \" \""], [129, "                    + Integer.toString(usec) + \" \""], [130, "                    + Integer.toHexString(f.getIdentifier()) + \" \""], [131, "                    + Integer.toString(f.getLength()) + \" \""], [132, "                    + Util.byteArrayToHexString(f.getData()) + \" >\");"], [133, "            output.flush();"], [134, "        }"], [138, "        synchronized(output) {"], [139, "            output.print(\"< add \""], [140, "                    + Integer.toHexString(f.getIdentifier()) + \" \""], [141, "                    + Integer.toString(f.getLength()) + \" \""], [142, "                    + Util.byteArrayToHexString(f.getData()) + \" >\");"], [143, "            output.flush();"], [144, "        }"], [148, "        StringBuilder sb = new StringBuilder();"], [161, "        synchronized(output) {"], [162, "            output.print(sb.toString());"], [163, "            output.flush();"], [164, "        }"], [169, "        StringBuilder sb;"], [170, ""], [183, "                        sb = new StringBuilder(16);"], [210, "                /*"]]}, "num_lines_added": 61, "num_lines_removed": 44}