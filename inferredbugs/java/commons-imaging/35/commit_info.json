{"hash": "5b7b44724b2aadde6d23f827c7d4aec383e3a1cf", "message": "Use try-with-resources instead of IoUtils.closeQuietly()\nfor all non-formats code.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1759064 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 614, "diff_parsed": {"added": [[140, "        try (ByteArrayInputStream baos = new ByteArrayInputStream(compressed);"], [141, "                BitInputStreamFlexible inputStream = new BitInputStreamFlexible(baos);"], [142, "                BitArrayOutputStream outputStream = new BitArrayOutputStream()) {"], [164, "        } catch (final IOException ioException) {"], [165, "            throw new ImageReadException(\"Error reading image to decompress\", ioException);"], [212, "        try (BitArrayOutputStream outputStream = new BitArrayOutputStream()) {"], [461, "        try (BitInputStreamFlexible inputStream = new BitInputStreamFlexible(new ByteArrayInputStream(uncompressed))) {"], [534, "        } catch (final IOException ioException) {"], [535, "            throw new ImageWriteException(\"I/O error\", ioException);"]], "deleted": [[25, "import org.apache.commons.imaging.util.IoUtils;"], [141, "        final BitInputStreamFlexible inputStream = new BitInputStreamFlexible("], [142, "                new ByteArrayInputStream(compressed));"], [143, "        BitArrayOutputStream outputStream = null;"], [144, "        boolean canThrow = false;"], [145, "        try {"], [146, "            outputStream = new BitArrayOutputStream();"], [167, "            canThrow = true;"], [169, "        } finally {"], [170, "            try {"], [171, "                IoUtils.closeQuietly(canThrow, outputStream);"], [172, "            } catch (final IOException ioException) {"], [173, "                throw new ImageReadException(\"I/O error\", ioException);"], [174, "            }"], [221, "        BitArrayOutputStream outputStream = null;"], [222, "        boolean canThrow = false;"], [223, "        try {"], [224, "            outputStream = new BitArrayOutputStream();"], [252, "            canThrow = true;"], [254, "        } finally {"], [255, "            try {"], [256, "                IoUtils.closeQuietly(canThrow, outputStream);"], [257, "            } catch (final IOException ioException) {"], [258, "                throw new ImageReadException(\"I/O error\", ioException);"], [259, "            }"], [480, "        BitInputStreamFlexible inputStream = null;"], [481, "        boolean canThrow = false;"], [482, "        try {"], [483, "            inputStream = new BitInputStreamFlexible(new ByteArrayInputStream(uncompressed));"], [555, "            canThrow = true;"], [557, "        } finally {"], [558, "            try {"], [559, "                IoUtils.closeQuietly(canThrow, inputStream);"], [560, "            } catch (final IOException ioException) {"], [561, "                throw new ImageWriteException(\"I/O error\", ioException);"], [562, "            }"]]}, "num_lines_added": 9, "num_lines_removed": 36}