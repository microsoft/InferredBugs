{"hash": "7d2ad8f9a2168295dac1cfb2ba17c983be5ee2f8", "message": "feat: Makes the use of a component socket optional. (#147)\n\n* feat: Makes the use of a component socket optional.", "file_num_lines": 571, "diff_parsed": {"added": [[21, "import java.io.*;"], [131, "     * The {@link ComponentSocket} instance which, if enabled, will serve as the"], [132, "     * single socket instance for this {@link Component}, merging received"], [133, "     * packets from all of its candidates."], [174, "     * @deprecated"], [176, "    protected Component(int componentID,"], [180, "        this(componentID, mediaStream, keepAliveStrategy, true);"], [181, "    }"], [182, ""], [183, "    /**"], [184, "     * Creates a new <tt>Component</tt> with the specified <tt>componentID</tt>"], [185, "     * as a child of the specified <tt>IceMediaStream</tt>."], [186, "     *"], [187, "     * @param componentID the id of this component."], [188, "     * @param mediaStream the {@link IceMediaStream} instance that would be the"], [189, "     * parent of this component."], [190, "     * @param useComponentSocket whether the component socket should be used."], [191, "     */"], [192, "    protected Component(int componentID,"], [193, "                        IceMediaStream mediaStream,"], [194, "                        KeepAliveStrategy keepAliveStrategy,"], [195, "                        boolean useComponentSocket)"], [196, "    {"], [205, "        if (useComponentSocket)"], [207, "            try"], [208, "            {"], [209, "                componentSocket = new ComponentSocket(this, agentLogger);"], [210, "                socket = new MultiplexingDatagramSocket(componentSocket);"], [211, "                socketWrapper = new IceUdpSocketWrapper(socket);"], [212, "            }"], [213, "            catch (SocketException se)"], [214, "            {"], [215, "                throw new RuntimeException(se);"], [216, "            }"], [218, "        else"], [220, "            componentSocket = null;"], [221, "            socket = null;"], [222, "            socketWrapper = null;"], [871, "        if (componentSocket != null)"], [872, "        {"], [873, "            componentSocket.close();"], [874, "        }"], [875, "        if (socket != null)"], [876, "        {"], [877, "            socket.close();"], [878, "        }"], [1024, "                    componentID,"], [1025, "                    mediaStream,"], [1026, "                    KeepAliveStrategy.SELECTED_ONLY,"], [1027, "                    StackProperties.getBoolean("], [1028, "                        StackProperties.USE_COMPONENT_SOCKET, true));"], [1032, "     * @return the single socket for this {@link Component} which should be"], [1033, "     * used for reading and writing data, if the component socket is enabled"], [1034, "     * and {@code null} if it is not enabled."], [1035, "     * </p>"], [1036, "     * This is for ice4j internal use only! For reading/writing application"], [1037, "     * data, use {@link #getSocket()}."], [1046, "     * reading/writing application data. If the component socket is not enabled,"], [1047, "     * this returns {@code null} and users of the library should use the socket"], [1048, "     * instance from the desired candidate pair instead."], [1057, "     * candidate (see {@link #getSocket()})."], [1058, "     * @deprecated Use {@link #getSocket()} directly. This is only introduced"], [1059, "     * to ease the transition of applications which are already written to use"], [1060, "     * a {@link IceSocketWrapper} instance."]], "deleted": [[130, "     * The single {@link ComponentSocket} instance for this {@link Component},"], [131, "     * which will merge the multiple sockets from the candidate/pairs."], [173, "    protected Component(int            componentID,"], [185, "        try"], [187, "            componentSocket = new ComponentSocket(this, agentLogger);"], [188, "            socket = new MultiplexingDatagramSocket(componentSocket);"], [189, "            socketWrapper = new IceUdpSocketWrapper(socket);"], [191, "        catch (SocketException se)"], [193, "            throw new RuntimeException(se);"], [842, "        getComponentSocket().close();"], [843, "        socket.close();"], [989, "                    componentID, mediaStream, KeepAliveStrategy.SELECTED_ONLY);"], [993, "     * @return the internal merging socket for this component. This is for"], [994, "     * ice4j use only."], [995, "     * For reading/writing application data, use {@link #getSocket()}."], [1004, "     * reading/writing application data."], [1013, "     * candidate (see {@link #getComponentSocket()})."]]}, "num_lines_added": 64, "num_lines_removed": 17}