{"hash": "be0ab56e9c8df772163164e88c7dd6c464e87835", "message": "Fixes transaction management issues", "file_num_lines": 212, "diff_parsed": {"added": [[216, "        synchronized(this)"], [218, "            for (retransmissionCounter = 0;"], [219, "                 retransmissionCounter < maxRetransmissions;"], [220, "                 retransmissionCounter ++)"], [221, "            {"], [222, "                waitFor(nextWaitInterval);"], [223, ""], [224, "                //did someone tell us to get lost?"], [225, "                if(cancelled)"], [226, "                    return;"], [227, ""], [228, "                if(nextWaitInterval < maxWaitInterval)"], [229, "                    nextWaitInterval *= 2;"], [230, ""], [231, "                try"], [232, "                {"], [233, "                    sendRequest0();"], [234, "                }"], [235, "                catch (Exception ex)"], [236, "                {"], [237, "                    //I wonder whether we should notify anyone that a"], [238, "                    //retransmission has failed"], [239, "                    logger.log(Level.INFO,"], [240, "                               \"A client tran retransmission failed\", ex);"], [241, "                }"], [242, "            }"], [243, ""], [244, "            //before stating that a transaction has timeout-ed we should first"], [245, "            //wait for a reception of the response"], [246, "            if(nextWaitInterval < maxWaitInterval)"], [247, "                    nextWaitInterval *= 2;"], [248, ""], [254, "            stackCallback.removeClientTransaction(this);"], [255, "            responseCollector.processTimeout( new StunTimeoutEvent("], [256, "                            this.request, getLocalAddress(), transactionID));"], [315, "    void waitFor(long millis)"], [358, "    synchronized void handleResponse(StunMessageEvent evt)"], [360, "        if( !Boolean.getBoolean(StackProperties.KEEP_CRANS_AFTER_A_RESPONSE) )"], [364, "            evt.getRawMessage(), (Response)evt.getMessage(),"], [365, "            this.request, getTransactionID()));"]], "deleted": [[216, "        for (retransmissionCounter = 0;"], [217, "             retransmissionCounter < maxRetransmissions;"], [218, "             retransmissionCounter ++)"], [222, "            //did someone tell us to get lost?"], [226, "            if(nextWaitInterval < maxWaitInterval)"], [227, "                nextWaitInterval *= 2;"], [228, ""], [229, "            try"], [230, "            {"], [231, "                sendRequest0();"], [232, "            }"], [233, "            catch (Exception ex)"], [234, "            {"], [235, "                //I wonder whether we should notify anyone that a retransmission"], [236, "                //has failed"], [237, "                logger.log(Level.WARNING,"], [238, "                           \"A client tran retransmission failed\", ex);"], [239, "            }"], [241, ""], [242, "        //before stating that a transaction has timeout-ed we should first wait"], [243, "        //for a reception of the response"], [244, "        if(nextWaitInterval < maxWaitInterval)"], [245, "                nextWaitInterval *= 2;"], [246, ""], [247, "        waitFor(nextWaitInterval);"], [248, ""], [249, "        responseCollector.processTimeout( new StunTimeoutEvent("], [250, "                        this.request, getLocalAddress(), transactionID));"], [251, "        stackCallback.removeClientTransaction(this);"], [309, "    synchronized void waitFor(long millis)"], [352, "    void handleResponse(StunMessageEvent evt)"], [354, "        String keepTran = System.getProperty("], [355, "                        StackProperties.KEEP_CRANS_AFTER_A_RESPONSE);"], [356, ""], [357, "        if( keepTran == null || !keepTran.trim().equalsIgnoreCase(\"true\"))"], [361, "            evt.getRawMessage(), (Response)evt.getMessage(), this.request));"]]}, "num_lines_added": 40, "num_lines_removed": 36}