{"hash": "c56fcc3a3f86ccfda8ce57362d378fc11bd35824", "message": "Use ReadWriteLock to split receive and close execution in SafeCloseDatagramSocket. (#166)\n\n* Use ReadWriteLock to split receive and close execution in SafeCloseDatagramSocket.\r\n\r\n* Me into authors lists.\r\n\r\n* Removed empty try/finally", "file_num_lines": 58, "diff_parsed": {"added": [[22, "import java.util.concurrent.locks.*;"], [33, " * @author Yura Yaroshevich"], [39, "     * A reader-writer lock to prevent {@link #close()} completion if any thread"], [40, "     * is blocked within {@link #receive(DatagramPacket)}."], [42, "    private final ReadWriteLock receiveCloseLock"], [43, "        = new ReentrantReadWriteLock();"], [142, "        final Lock closeLock = receiveCloseLock.writeLock();"], [143, "        closeLock.lock();"], [144, "        // we now know all read threads have finished"], [145, "        closeLock.unlock();"], [169, "        final Lock receiveLock = receiveCloseLock.readLock();"], [170, "        receiveLock.lock();"], [177, "            receiveLock.unlock();"]], "deleted": [[36, ""], [38, "     * The number of {@link #receive(DatagramPacket)} calls that have to return"], [39, "     * before {@link #close()} returns."], [41, "    private int inReceive = 0;"], [42, ""], [43, "    /**"], [44, "     * The <tt>Object</tt> which synchronizes the access to {@link #inReceive}"], [45, "     * and implements the related inter-thread communication."], [46, "     */"], [47, "    private final Object inReceiveSyncRoot = new Object();"], [146, "        synchronized (inReceiveSyncRoot)"], [147, "        {"], [148, "            boolean interrupted = false;"], [149, ""], [150, "            while (inReceive > 0)"], [151, "                try"], [152, "                {"], [153, "                    inReceiveSyncRoot.wait();"], [154, "                }"], [155, "                catch (InterruptedException iex)"], [156, "                {"], [157, "                    interrupted = true;"], [158, "                }"], [159, "            if (interrupted)"], [160, "                Thread.currentThread().interrupt();"], [161, "        }"], [185, "        synchronized (inReceiveSyncRoot)"], [186, "        {"], [187, "            inReceive++;"], [188, "        }"], [195, "            synchronized (inReceiveSyncRoot)"], [196, "            {"], [197, "                inReceive--;"], [198, "                inReceiveSyncRoot.notifyAll();"], [199, "            }"]]}, "num_lines_added": 13, "num_lines_removed": 35}