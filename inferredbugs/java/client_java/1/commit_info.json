{"hash": "5638a2a0fca88b9cfc9ecd6eabb9eb08c522f7f7", "message": "Build upon Michal's work for jvm stats.\n\nSpaces are okay in label values, no need to switch to hyphens.\nExport committed and max separately.\nInline rather than using constants, so it's easier to read.\nUse a summary for GC stats.\n\nAdd a way to pick up current and future jvm collectors.", "file_num_lines": 59, "diff_parsed": {"added": [[14, "import static org.mockito.Mockito.when;"], [27, "    when(mockGcBean1.getName()).thenReturn(\"MyGC1\");"], [28, "    when(mockGcBean1.getCollectionCount()).thenReturn(100L);"], [29, "    when(mockGcBean1.getCollectionTime()).thenReturn(TimeUnit.SECONDS.toMillis(10));"], [30, "    when(mockGcBean2.getName()).thenReturn(\"MyGC2\");"], [31, "    when(mockGcBean2.getCollectionCount()).thenReturn(200L);"], [32, "    when(mockGcBean2.getCollectionTime()).thenReturn(TimeUnit.SECONDS.toMillis(20));"], [41, "            \"jvm_gc_collection_seconds_count\","], [48, "            \"jvm_gc_collection_seconds_sum\","], [55, "            \"jvm_gc_collection_seconds_count\","], [62, "            \"jvm_gc_collection_seconds_sum\","]], "deleted": [[26, "    Mockito.when(mockGcBean1.getName()).thenReturn(\"MyGC1\");"], [27, "    Mockito.when(mockGcBean1.getCollectionCount()).thenReturn(100L);"], [28, "    Mockito.when(mockGcBean1.getCollectionTime()).thenReturn(TimeUnit.SECONDS.toMillis(10));"], [29, "    Mockito.when(mockGcBean2.getName()).thenReturn(\"MyGC2\");"], [30, "    Mockito.when(mockGcBean2.getCollectionCount()).thenReturn(200L);"], [31, "    Mockito.when(mockGcBean2.getCollectionTime()).thenReturn(TimeUnit.SECONDS.toMillis(20));"], [40, "            GarbageCollectorExports.COLLECTIONS_COUNT_METRIC,"], [47, "            GarbageCollectorExports.COLLECTIONS_TIME_METRIC,"], [54, "            GarbageCollectorExports.COLLECTIONS_COUNT_METRIC,"], [61, "            GarbageCollectorExports.COLLECTIONS_TIME_METRIC,"]]}, "num_lines_added": 11, "num_lines_removed": 10}