{"hash": "11d14c1a89cc69465e477cabe73b3cb797df6e34", "message": "Support consistent hashing based on multiple fields.", "file_num_lines": 103, "diff_parsed": {"added": [[115, ""], [116, "    Selector multiSelector = new FieldsSelector(\"test1\", \"test2\");"], [117, ""], [118, "    JsonMessage test4 = DefaultJsonMessage.create(new JsonObject().putString(\"test1\", \"a\"), \"auditor\");"], [119, "    List<Connection> connections7 = multiSelector.select(test4, testConnections);"], [120, "    assertEquals(1, connections7.size());"], [121, "    List<Connection> connections8 = multiSelector.select(test4, testConnections);"], [122, "    assertEquals(1, connections8.size());"], [123, "    assertEquals(connections7.get(0), connections8.get(0));"], [124, ""], [125, "    JsonMessage test5 = DefaultJsonMessage.create(new JsonObject().putString(\"test2\", \"ab\"), \"auditor\");"], [126, "    List<Connection> connections9 = multiSelector.select(test5, testConnections);"], [127, "    assertEquals(1, connections9.size());"], [128, "    List<Connection> connections10 = multiSelector.select(test5, testConnections);"], [129, "    assertEquals(1, connections10.size());"], [130, "    assertEquals(connections9.get(0), connections10.get(0));"], [131, ""], [132, "    JsonMessage test6 = DefaultJsonMessage.create(new JsonObject().putString(\"test1\", \"ab\").putString(\"test2\", \"abc\"), \"auditor\");"], [133, "    List<Connection> connections11 = multiSelector.select(test6, testConnections);"], [134, "    assertEquals(1, connections11.size());"], [135, "    List<Connection> connections12 = multiSelector.select(test6, testConnections);"], [136, "    assertEquals(1, connections12.size());"], [137, "    assertEquals(connections11.get(0), connections12.get(0));"]], "deleted": []}, "num_lines_added": 23, "num_lines_removed": 0}