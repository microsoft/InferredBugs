{"hash": "6f6773d154d4817cd4bfb050ca8a5b5c1c1b10f5", "message": "Allow multiple auditors to be deployed with random auditor assignments for each message tree.", "file_num_lines": 398, "diff_parsed": {"added": [[60, "  protected Set<String> auditorDeploymentIds = new HashSet<>();"], [179, "    recursiveDeployAuditors(context.getAuditors(), new DefaultFutureResult<Void>().setHandler(new Handler<AsyncResult<Void>>() {"], [180, "      @Override"], [181, "      public void handle(AsyncResult<Void> result) {"], [182, "        if (result.failed()) {"], [183, "          logger.error(\"Failed to deploy auditor verticle.\", result.cause());"], [184, "          container.exit();"], [185, "        }"], [186, "        else {"], [187, "          new RecursiveDeployer(context).deploy(new Handler<AsyncResult<Void>>() {"], [188, "            @Override"], [189, "            public void handle(AsyncResult<Void> result) {"], [190, "              if (result.failed()) {"], [191, "                container.logger().error(\"Failed to deploy network.\", result.cause());"], [192, "                container.exit();"], [193, "              }"], [194, "            }"], [195, "          });"], [196, "        }"], [197, "      }"], [198, "    }));"], [199, "  }"], [200, ""], [201, "  /**"], [202, "   * Recursively deploys network auditors."], [203, "   */"], [204, "  private void recursiveDeployAuditors(final Set<String> auditors, final Future<Void> future) {"], [205, "    if (auditors.size() > 0) {"], [206, "      final String address = auditors.iterator().next();"], [207, "      JsonObject auditorConfig = new JsonObject().putString(\"address\", address)"], [208, "        .putString(\"broadcast\", context.broadcastAddress())"], [209, "        .putBoolean(\"enabled\", context.getDefinition().ackingEnabled())"], [210, "        .putNumber(\"expire\", context.getDefinition().ackExpire());"], [211, "      deployVerticle(Auditor.class.getName(), auditorConfig, new Handler<AsyncResult<String>>() {"], [215, "            future.setFailure(result.cause());"], [218, "            auditorDeploymentIds.add(result.result());"], [219, "            auditors.remove(address);"], [220, "            if (auditors.size() > 0) {"], [221, "              recursiveDeployAuditors(auditors, future);"], [222, "            }"], [223, "            else {"], [224, "              future.setResult(null);"], [225, "            }"], [228, "      });"], [229, "    }"], [308, "        for (String address : auditorDeploymentIds) {"], [309, "          undeployVerticle(address);"]], "deleted": [[60, "  protected String authDeploymentId;"], [179, "    // TODO: The number of ackers is configurable, but the auditor"], [180, "    // verticle needs to be refactored to better support this."], [181, "    // So, for now we just deploy a single auditor verticle."], [182, "    JsonObject ackConfig = new JsonObject().putString(\"address\", context.auditAddress())"], [183, "      .putString(\"broadcast\", context.broadcastAddress())"], [184, "      .putBoolean(\"enabled\", context.getDefinition().ackingEnabled())"], [185, "      .putNumber(\"expire\", context.getDefinition().ackExpire());"], [186, ""], [187, "    deployVerticle(Auditor.class.getName(), ackConfig, new Handler<AsyncResult<String>>() {"], [191, "            logger.error(\"Failed to deploy authenticator verticle.\", result.cause());"], [192, "            container.exit();"], [195, "            authDeploymentId = result.result();"], [196, "            new RecursiveDeployer(context).deploy(new Handler<AsyncResult<Void>>() {"], [197, "              @Override"], [198, "              public void handle(AsyncResult<Void> result) {"], [199, "                if (result.failed()) {"], [200, "                  container.logger().error(\"Failed to deploy network.\", result.cause());"], [201, "                  container.exit();"], [202, "                }"], [203, "              }"], [204, "            });"], [207, "    });"], [286, "        if (authDeploymentId != null) {"], [287, "          undeployVerticle(authDeploymentId);"]]}, "num_lines_added": 47, "num_lines_removed": 25}