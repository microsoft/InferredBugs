{"hash": "70764503623ff9e48a700e62673b29a3bb521c2a", "message": "change property matching strategy from column name", "file_num_lines": 160, "diff_parsed": {"added": [[53, "\tpublic ResultSetMapperBuilder<T>  addNamedColumn(String column) {"], [54, "\t\tSetter<T, Object> setter = setterFactory.findSetter(new PropertyNameMatcher(column), target);"], [55, "\t\taddMapping(setter, column);"], [56, "\t\treturn this;"], [57, "\t}"], [58, ""], [59, "\tpublic ResultSetMapperBuilder<T>  addIndexedColumn(String column) {"], [60, "\t\treturn addIndexedColumn(column, fields.size() + 1);"], [61, "\t}"], [62, ""], [63, "\tpublic ResultSetMapperBuilder<T>  addIndexedColumn(String column, int p) {"], [64, "\t\tSetter<T, Object> setter = setterFactory.findSetter(new PropertyNameMatcher(column), target);"], [65, "\t\taddMapping(setter, p);"], [66, "\t\treturn this;"], [67, "\t}"], [68, ""], [71, "\t\taddMapping(setter, column);"], [72, "\t\treturn this;"], [73, "\t}"], [74, ""], [75, "\tpublic ResultSetMapperBuilder<T> addMapping(String property, int column) {"], [76, "\t\tSetter<T, Object> setter = setterFactory.getSetter(target, property);"], [77, "\t\taddMapping(setter, column);"], [78, "\t\treturn this;"], [79, "\t}"], [80, ""], [81, "\t@SuppressWarnings(\"unchecked\")"], [82, "\tpublic ResultSetMapper<T> mapper() throws NoSuchMethodException, SecurityException {"], [83, ""], [84, "\t\tfinal Mapper<ResultSet, T> mapper;"], [85, ""], [86, "\t\tif (!fields.isEmpty()) {"], [87, "\t\t\tmapper = new SaticMapper<ResultSet, T>(fields.toArray(new Mapper[fields.size()]));"], [88, "\t\t} else {"], [89, "\t\t\tmapper = new ResultSetAdaptiveMapper<T>(this.setterFactory.getAllSetters(target));"], [90, "\t\t}"], [92, "\t\tfinal Instantiator<T> instantiator = instantiatorFactory.getInstantiator(target);"], [93, ""], [94, "\t\treturn new ResultSetMapperImpl<T>(mapper, instantiator);"], [95, "\t}"], [96, ""], [97, "\tprivate void addMapping(Setter<T, Object> setter, String column) {"], [109, "\tprivate void addMapping(Setter<T, Object> setter, int column) {"]], "deleted": [[65, "\t\treturn this;"], [68, "\tpublic ResultSetMapperBuilder<T> addMapping(String property, int column) {"], [69, "\t\tSetter<T, Object> setter = setterFactory.getSetter(target, property);"], [70, ""], [80, "\t\treturn this;"], [83, ""], [152, ""], [153, "\t@SuppressWarnings(\"unchecked\")"], [154, "\tpublic ResultSetMapper<T> mapper() throws NoSuchMethodException, SecurityException {"], [155, ""], [156, "\t\tfinal Mapper<ResultSet, T> mapper;"], [157, ""], [158, "\t\tif (!fields.isEmpty()) {"], [159, "\t\t\tmapper = new SaticMapper<ResultSet, T>(fields.toArray(new Mapper[fields.size()]));"], [160, "\t\t} else {"], [161, "\t\t\tmapper = new ResultSetAdaptiveMapper<T>(this.setterFactory.getAllSetters(target));"], [162, "\t\t}"], [163, ""], [164, "\t\tfinal Instantiator<T> instantiator = instantiatorFactory.getInstantiator(target);"], [165, ""], [166, "\t\treturn new ResultSetMapperImpl<T>(mapper, instantiator);"], [167, "\t}"], [168, ""], [169, "\tpublic void addColumn(String column) {"], [170, "\t\tString name = PropertyNameMatcher.toPropertyName(column);"], [171, "\t\taddMapping(name, column);"], [172, "\t}"], [173, ""], [174, "\tpublic void addColumn(String column, int p) {"], [175, "\t\tString name = PropertyNameMatcher.toPropertyName(column);"], [176, "\t\taddMapping(name, p);"], [177, "\t}"]]}, "num_lines_added": 43, "num_lines_removed": 32}