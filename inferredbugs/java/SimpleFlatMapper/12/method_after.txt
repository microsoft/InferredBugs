    @Test
    public void testCompose() throws Exception {
        Getter<ResultSet, Integer> getter = new Getter<ResultSet, Integer>() {
            @Override
            public Integer get(ResultSet target) throws Exception {
                return 3;
            }
        };
        FieldMapper<ResultSet, Object> fieldMapper = new FieldMapper<ResultSet, Object>() {
            @Override
            public void map(ResultSet source, Object target) throws Exception {
            }
        };
        FieldMapperColumnDefinition<JdbcColumnKey, ResultSet> compose =
                FieldMapperColumnDefinition.<JdbcColumnKey,ResultSet>identity().addRename("blop").addGetter(getter).addFieldMapper(fieldMapper);

        assertEquals("blop", compose.rename(new JdbcColumnKey("bar", -1)).getName());
        assertEquals(fieldMapper, compose.getCustomFieldMapper());
        assertEquals(new Integer(3), compose.getCustomGetter().get(null));

        assertTrue(compose.hasCustomSource());
        assertEquals(Integer.class, compose.getCustomSourceReturnType());
    }