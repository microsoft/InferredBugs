    public Swagger read(SpringResource resource) {
        if (swagger == null) {
            swagger = new Swagger();
        }
        List<Method> methods = resource.getMethods();
        Map<String, Tag> tags = new HashMap<String, Tag>();

        List<SecurityRequirement> resourceSecurities = new ArrayList<SecurityRequirement>();

        // Add the description from the controller api
        Class<?> controller = resource.getControllerClass();
        RequestMapping apiPath = controller.getAnnotation(RequestMapping.class);


        if (controller != null && controller.isAnnotationPresent(Api.class)) {
            Api api = controller.getAnnotation(Api.class);
            if (!canReadApi(false, api)) {
                return null;
            }
            tags = updateTagsForApi(null, api);

            resourceSecurities = getSecurityRequirements(api);

//            description = api.description();
//            position = api.position();
        }

        resourcePath = resource.getControllerMapping();

        Map<String, List<Method>> apiMethodMap = new HashMap<String, List<Method>>();

        //collect api from method with @RequestMapping
        collectApisByRequestMapping(methods, apiMethodMap);

        for (String p : apiMethodMap.keySet()) {
            List<Operation> operations = new ArrayList<Operation>();

            for (Method method : apiMethodMap.get(p)) {

                RequestMapping requestMapping = method.getAnnotation(RequestMapping.class);
                ApiOperation apiOperation = method.getAnnotation(ApiOperation.class);

                String operationPath = p;
                //getPath(apiPath, requestMapping, "");
                String operationId;
                String httpMethod = null;

                if (operationPath != null && apiOperation != null) {


                    Map<String, String> regexMap = new HashMap<String, String>();
                    operationPath = parseOperationPath(operationPath, regexMap);

                    //http method
                    if (requestMapping.method() != null && requestMapping.method().length != 0) {
                        httpMethod = requestMapping.method()[0].toString().toLowerCase();
                    }

                    Operation operation = parseMethod(method);

                    updateOperationParameters(new ArrayList<Parameter>(), regexMap, operation);

                    updateOperationProtocols(apiOperation, operation);

                    String[] apiConsumes = new String[0];
                    String[] apiProduces = new String[0];
                    RequestMapping rm = controller.getAnnotation(RequestMapping.class);

                    String[] pps = new String[0];
                    String[] pcs = new String[0];
                    if (rm != null) {
                        pcs = rm.consumes();
                        pps = rm.produces();
                    }

                    apiConsumes = updateOperationConsumes(method, pcs, apiConsumes, operation);
                    apiProduces = updateOperationProduces(method, pps, apiProduces, operation);

                    // can't continue without a valid http method
//                    httpMethod = httpMethod == null ? parentMethod : httpMethod;
                    ApiOperation op = method.getAnnotation(ApiOperation.class);
                    updateTagsForOperation(operation, op);
                    updateOperation(apiConsumes, apiProduces, tags, resourceSecurities, operation);
                    updatePath(operationPath, httpMethod, operation);
                }


            }

        }
        return swagger;
    }