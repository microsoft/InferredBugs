{"hash": "b27b82912054fb51a5568702480625fc388476b9", "message": "Revert \"Merge pull request #12 from krasa/paths\"\n\nThis reverts commit b8b044ceb9ae3891bef543d3fcfff216f8adabd8, reversing\nchanges made to 5c3007bb5dfc30e88eaacc12a941cd51bde8c794.\n\nThe configuration of mustacheFileRoot is confused and not always useful", "file_num_lines": 166, "diff_parsed": {"added": [[7, "import java.io.IOException;"], [23, "import com.github.mustachejava.MustacheFactory;"], [29, " * @author: chekong"], [30, " * 05/13/2013"], [53, "    public AbstractDocumentSource(LogAdapter logAdapter, String outputPath, String outputTpl, String swaggerOutput) {"], [96, "            throw new GenerateException("], [97, "                    String.format(\"Swagger-outputDirectory[%s] must be a directory!\", swaggerPath));"], [104, "                throw new GenerateException("], [105, "                        String.format(\"Create Swagger-outputDirectory[%s] failed.\", swaggerPath));"], [134, "        name = name.replaceAll(\"/\", \"_\");"], [141, "        File serviceFile = new File(dir, filename);"], [143, "            while (!serviceFile.createNewFile()) {"], [144, "                serviceFile.delete();"], [145, "            }"], [175, "        MustacheFactory mf = new DefaultMustacheFactory();"], [182, "            throw new GenerateException(e);"], [194, "        URL url = null;"], [195, "        try {"], [196, "            url = uri.toURL();"], [197, "            InputStreamReader reader = new InputStreamReader(url.openStream(), Charset.forName(\"UTF-8\"));"], [198, "            Mustache mustache = mf.compile(reader, templatePath);"], [199, ""], [200, "            mustache.execute(writer, outputTemplate).flush();"], [201, "            writer.close();"], [202, "            LOG.info(\"Done!\");"], [203, "        } catch (MalformedURLException e) {"], [204, "            throw new GenerateException(e);"], [205, "        } catch (IOException e) {"], [206, "            throw new GenerateException(e);"]], "deleted": [[6, "import java.io.IOException;"], [28, " * @author: chekong 05/13/2013"], [31, ""], [38, "    private final String mustacheFileRoot;"], [39, ""], [54, "    private boolean useOutputFlatStructure;"], [55, ""], [56, "    public AbstractDocumentSource(LogAdapter logAdapter, String outputPath, String outputTpl, String swaggerOutput, String mustacheFileRoot, boolean useOutputFlatStructure1) {"], [60, "        this.mustacheFileRoot = mustacheFileRoot;"], [61, "        this.useOutputFlatStructure = useOutputFlatStructure1;"], [101, "            throw new GenerateException(String.format(\"Swagger-outputDirectory[%s] must be a directory!\", swaggerPath));"], [108, "                throw new GenerateException(String.format(\"Create Swagger-outputDirectory[%s] failed.\", swaggerPath));"], [137, ""], [138, "        if (useOutputFlatStructure) {"], [139, "            name = name.replaceAll(\"/\", \"_\");"], [140, "        }"], [148, "            File serviceFile = createFile(dir, filename);"], [155, "    private File createFile(File dir, String outputResourcePath) throws IOException {"], [156, "        File serviceFile;"], [157, "        int i = outputResourcePath.lastIndexOf(\"/\");"], [158, "        if (i != -1) {"], [159, "            String fileName = outputResourcePath.substring(i + 1);"], [160, "            String subDir = outputResourcePath.substring(0, i);"], [161, "            File finalDirectory = new File(dir, subDir);"], [162, "            finalDirectory.mkdirs();"], [163, "            serviceFile = new File(finalDirectory, fileName);"], [164, "        } else {"], [165, "            serviceFile = new File(dir, outputResourcePath);"], [166, "        }"], [167, "        while (!serviceFile.createNewFile()) {"], [168, "            serviceFile.delete();"], [169, "        }"], [170, "        LOG.info(\"Creating file \" + serviceFile.getAbsolutePath());"], [171, "        return serviceFile;"], [172, "    }"], [173, ""], [198, "        try {"], [199, "            URL url = getTemplateUri().toURL();"], [200, "            InputStreamReader reader = new InputStreamReader(url.openStream(), Charset.forName(\"UTF-8\"));"], [201, "            Mustache mustache = getMustacheFactory().compile(reader, templatePath);"], [203, "            mustache.execute(writer, outputTemplate).flush();"], [204, "            writer.close();"], [205, "            LOG.info(\"Done!\");"], [206, "        } catch (MalformedURLException e) {"], [207, "            throw new GenerateException(e);"], [208, "        } catch (IOException e) {"], [209, "            throw new GenerateException(e);"], [210, "        }"], [211, "    }"], [212, ""], [213, "    private URI getTemplateUri() throws GenerateException {"], [218, "            File file = new File(templatePath);"], [219, "            if (!file.exists()) {"], [220, "                throw new GenerateException(\"Template \" + file.getAbsoluteFile()"], [221, "                        + \" not found. You can go to https://github.com/kongchen/api-doc-template to get templates.\");"], [222, "            }"], [223, "            uri = file.toURI();"], [234, "        return uri;"], [235, "    }"], [237, "    private DefaultMustacheFactory getMustacheFactory() {"], [238, "        if (mustacheFileRoot == null) {"], [239, "            return new DefaultMustacheFactory();"], [240, "        } else {"], [241, "            return new DefaultMustacheFactory(new File(mustacheFileRoot));"]]}, "num_lines_added": 29, "num_lines_removed": 64}