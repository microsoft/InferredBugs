{"hash": "21b5b5dea6e4786b2871f026176d23f4daeb18c9", "message": "Cleanup pom\nremove junit-addons. Replaced usages with calls to guava.\nUpdate mockito-all to newest mockito-core. The core does not include hamcrest and objenesis, making dependency management a bit easier.\nUpdated unit tests to reflect these changes.\nSome cleanup to unit tests", "file_num_lines": 195, "diff_parsed": {"added": [[7, "import com.google.common.base.CharMatcher;"], [8, "import com.google.common.io.Files;"], [21, "import org.yaml.snakeyaml.DumperOptions;"], [24, "import java.io.*;"], [25, "import java.nio.charset.Charset;"], [26, "import java.util.ArrayList;"], [27, "import java.util.Collections;"], [28, "import java.util.Iterator;"], [29, "import java.util.List;"], [30, ""], [31, "import static com.github.kongchen.smp.integration.utils.TestUtils.*;"], [32, "import static net.javacrumbs.jsonunit.JsonAssert.assertJsonEquals;"], [33, "import static net.javacrumbs.jsonunit.core.Option.IGNORING_ARRAY_ORDER;"], [34, ""], [60, ""], [123, "            String exptectedFileContent = CharMatcher.breakingWhitespace().removeFrom(Files.toString(expected, Charset.forName(\"UTF-8\")));"], [124, "            String actualFileContent = CharMatcher.breakingWhitespace().removeFrom(Files.toString(actual, Charset.forName(\"UTF-8\")));"], [125, "            assertEquals(exptectedFileContent, actualFileContent);"], [132, "                    fail(\"should not have null parameters\");"], [229, "        DumperOptions options = new DumperOptions();"], [230, "        options.setDefaultFlowStyle(DumperOptions.FlowStyle.BLOCK);"], [231, "        options.setPrettyFlow(true);"], [232, "        Yaml yaml = new Yaml(options);"], [233, "        String actualYaml = yaml.dump(yaml.load(FileUtils.readFileToString(new File(swaggerOutputDir, \"swagger.yaml\"))));"], [234, "        String expectYaml = yaml.dump(yaml.load(this.getClass().getResourceAsStream(\"/expectedOutput/swagger-spring.yaml\")));"]], "deleted": [[5, "import static com.github.kongchen.smp.integration.utils.TestUtils.YamlToJson;"], [6, "import static com.github.kongchen.smp.integration.utils.TestUtils.changeDescription;"], [7, "import static com.github.kongchen.smp.integration.utils.TestUtils.createTempDirPath;"], [8, "import static com.github.kongchen.smp.integration.utils.TestUtils.setCustomReader;"], [11, ""], [14, ""], [15, "import java.io.BufferedReader;"], [16, "import java.io.File;"], [17, "import java.io.FileInputStream;"], [18, "import java.io.IOException;"], [19, "import java.io.InputStreamReader;"], [20, "import java.util.ArrayList;"], [21, "import java.util.Collections;"], [22, "import java.util.Iterator;"], [23, "import java.util.List;"], [24, "import junitx.framework.FileAssert;"], [25, "import static net.javacrumbs.jsonunit.JsonAssert.assertJsonEquals;"], [27, "import static net.javacrumbs.jsonunit.core.Option.IGNORING_ARRAY_ORDER;"], [64, ""], [121, "        BufferedReader actualReader = null;"], [122, "        BufferedReader expectReader = null;"], [129, "            FileAssert.assertEquals(expected, actual);"], [136, "                    assertFalse(\"should not have null parameters\", true);"], [142, "            if (actualReader != null) {"], [143, "                actualReader.close();"], [144, "            }"], [145, "            if (expectReader != null) {"], [146, "                expectReader.close();"], [147, "            }"], [239, "        String actualYaml = io.swagger.util.Yaml.pretty().writeValueAsString("], [240, "                new Yaml().load(FileUtils.readFileToString(new File(swaggerOutputDir, \"swagger.yaml\"))));"], [241, "        String expectYaml = io.swagger.util.Yaml.pretty().writeValueAsString("], [242, "                new Yaml().load(this.getClass().getResourceAsStream(\"/expectedOutput/swagger-spring.yaml\")));"]]}, "num_lines_added": 25, "num_lines_removed": 33}