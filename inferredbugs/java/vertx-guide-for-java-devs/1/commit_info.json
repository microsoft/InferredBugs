{"hash": "45b63c71f963a372956d57a622bc5723c98d6cf1", "message": "Step 2 refactoring done to 2 verticles", "file_num_lines": 225, "diff_parsed": {"added": [[62, "    GET_PAGE,"], [63, "    CREATE_PAGE,"], [64, "    SAVE_PAGE,"], [65, "    DELETE_PAGE"], [114, "      case \"create-page\":"], [115, "        createPage(message);"], [116, "        break;"], [117, "      case \"save-page\":"], [118, "        savePage(message);"], [119, "        break;"], [120, "      case \"delete-page\":"], [121, "        deletePage(message);"], [122, "        break;"], [185, "  private void createPage(Message<JsonObject> message) {"], [186, "    JsonObject request = message.body();"], [187, ""], [188, "    dbClient.getConnection(car -> {"], [189, ""], [190, "      if (car.succeeded()) {"], [191, "        SQLConnection connection = car.result();"], [192, "        JsonArray data = new JsonArray()"], [193, "          .add(request.getString(\"title\"))"], [194, "          .add(request.getString(\"markdown\"));"], [195, ""], [196, "        connection.updateWithParams(sqlQueries.get(SqlQuery.CREATE_PAGE), data, res -> {"], [197, "          connection.close();"], [198, "          if (res.succeeded()) {"], [199, "            message.reply(\"ok\");"], [200, "          } else {"], [201, "            reportQueryError(message, res.cause());"], [202, "          }"], [203, "        });"], [204, "      } else {"], [205, "        reportQueryError(message, car.cause());"], [206, "      }"], [207, "    });"], [208, "  }"], [209, ""], [210, "  private void savePage(Message<JsonObject> message) {"], [211, "    JsonObject request = message.body();"], [212, ""], [213, "    dbClient.getConnection(car -> {"], [214, ""], [215, "      if (car.succeeded()) {"], [216, "        SQLConnection connection = car.result();"], [217, "        JsonArray data = new JsonArray()"], [218, "          .add(request.getString(\"markdown\"))"], [219, "          .add(request.getString(\"id\"));"], [220, ""], [221, "        connection.updateWithParams(sqlQueries.get(SqlQuery.SAVE_PAGE), data, res -> {"], [222, "          connection.close();"], [223, "          if (res.succeeded()) {"], [224, "            message.reply(\"ok\");"], [225, "          } else {"], [226, "            reportQueryError(message, res.cause());"], [227, "          }"], [228, "        });"], [229, "      } else {"], [230, "        reportQueryError(message, car.cause());"], [231, "      }"], [232, "    });"], [233, "  }"], [234, ""], [235, "  private void deletePage(Message<JsonObject> message) {"], [236, "    dbClient.getConnection(car -> {"], [237, "      if (car.succeeded()) {"], [238, "        SQLConnection connection = car.result();"], [239, "        JsonArray data = new JsonArray().add(message.body().getString(\"id\"));"], [240, "        connection.updateWithParams(sqlQueries.get(SqlQuery.DELETE_PAGE), data, res -> {"], [241, "          connection.close();"], [242, "          if (res.succeeded()) {"], [243, "            message.reply(\"ok\");"], [244, "          } else {"], [245, "            reportQueryError(message, res.cause());"], [246, "          }"], [247, "        });"], [248, "      } else {"], [249, "        reportQueryError(message, car.cause());"], [250, "      }"], [251, "    });"], [252, "  }"], [253, ""], [279, "    sqlQueries.put(SqlQuery.CREATE_PAGE, queriesProps.getProperty(\"create-page\"));"], [280, "    sqlQueries.put(SqlQuery.SAVE_PAGE, queriesProps.getProperty(\"save-page\"));"], [281, "    sqlQueries.put(SqlQuery.DELETE_PAGE, queriesProps.getProperty(\"delete-page\"));"]], "deleted": [[62, "    GET_PAGE"]]}, "num_lines_added": 85, "num_lines_removed": 1}