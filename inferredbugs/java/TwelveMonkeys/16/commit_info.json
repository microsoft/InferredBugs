{"hash": "0cd250646a606029d7ef331dfed257a1e4421618", "message": "#438 CompoundDocument file descriptor fix\n\n(cherry picked from commit 04f27a1)", "file_num_lines": 111, "diff_parsed": {"added": [[75, "        try (CompoundDocument document = createTestDocument()) {"], [76, "            Entry root = document.getRootEntry();"], [77, ""], [78, "            assertNotNull(root);"], [79, "            assertEquals(\"Root Entry\", root.getName());"], [80, "            assertTrue(root.isRoot());"], [81, "            assertFalse(root.isFile());"], [82, "            assertFalse(root.isDirectory());"], [83, "            assertEquals(0, root.length());"], [84, "            assertNull(root.getInputStream());"], [85, "        }"], [90, "        try (CompoundDocument document = createTestDocument()) {"], [91, "            Entry root = document.getRootEntry();"], [93, "            assertNotNull(root);"], [95, "            SortedSet<Entry> children = new TreeSet<Entry>(root.getChildEntries());"], [96, "            assertEquals(25, children.size());"], [98, "            // Weirdness in the file format, name is *written backwards* 1-24 + Catalog"], [99, "            for (String name : \"1,2,3,4,5,6,7,8,9,01,02,11,12,21,22,31,32,41,42,51,61,71,81,91,Catalog\".split(\",\")) {"], [100, "                assertEquals(name, children.first().getName());"], [101, "                children.remove(children.first());"], [102, "            }"], [108, "        try (CompoundDocument document = createTestDocument()) {"], [109, "            Entry root = document.getRootEntry();"], [111, "            assertNotNull(root);"], [113, "            SortedSet<Entry> children = root.getChildEntries();"], [115, "            // Should not be allowed, as it modifies the internal structure"], [116, "            children.remove(children.first());"], [117, "        }"], [122, "        try (CompoundDocument document = createTestDocument()) {"], [123, "            Entry root = document.getRootEntry();"], [125, "            assertNotNull(root);"], [126, "            assertEquals(25, root.getChildEntries().size());"], [128, "            Entry catalog = root.getChildEntry(\"Catalog\");"], [130, "            assertNotNull(catalog);"], [131, "            assertNotNull(\"Input stream may not be null\", catalog.getInputStream());"], [132, "        }"]], "deleted": [[75, "        CompoundDocument document = createTestDocument();"], [76, ""], [77, "        Entry root = document.getRootEntry();"], [78, ""], [79, "        assertNotNull(root);"], [80, "        assertEquals(\"Root Entry\", root.getName());"], [81, "        assertTrue(root.isRoot());"], [82, "        assertFalse(root.isFile());"], [83, "        assertFalse(root.isDirectory());"], [84, "        assertEquals(0, root.length());"], [85, "        assertNull(root.getInputStream());"], [90, "        CompoundDocument document = createTestDocument();"], [92, "        Entry root = document.getRootEntry();"], [94, "        assertNotNull(root);"], [95, ""], [96, "        SortedSet<Entry> children = new TreeSet<Entry>(root.getChildEntries());"], [97, "        assertEquals(25, children.size());"], [99, "        // Weirdness in the file format, name is *written backwards* 1-24 + Catalog"], [100, "        for (String name : \"1,2,3,4,5,6,7,8,9,01,02,11,12,21,22,31,32,41,42,51,61,71,81,91,Catalog\".split(\",\")) {"], [101, "            assertEquals(name, children.first().getName());"], [102, "            children.remove(children.first());"], [108, "        CompoundDocument document = createTestDocument();"], [109, ""], [110, "        Entry root = document.getRootEntry();"], [112, "        assertNotNull(root);"], [114, "        SortedSet<Entry> children = root.getChildEntries();"], [116, "        // Should not be allowed, as it modifies the internal structure"], [117, "        children.remove(children.first());"], [122, "        CompoundDocument document = createTestDocument();"], [124, "        Entry root = document.getRootEntry();"], [126, "        assertNotNull(root);"], [127, "        assertEquals(25, root.getChildEntries().size());"], [129, "        Entry catalog = root.getChildEntry(\"Catalog\");"], [130, ""], [131, "        assertNotNull(catalog);"], [132, "        assertNotNull(\"Input stream may not be null\", catalog.getInputStream());"]]}, "num_lines_added": 36, "num_lines_removed": 36}