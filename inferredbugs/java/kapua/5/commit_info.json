{"hash": "0abacbce9bfc830c71d01430868a5f9e02393019", "message": "Refactor command line parsing, allow setting log levels", "file_num_lines": 271, "diff_parsed": {"added": [[13, "import static ch.qos.logback.classic.Level.ALL;"], [14, "import static ch.qos.logback.classic.Level.INFO;"], [15, "import static ch.qos.logback.classic.Level.WARN;"], [16, "import static org.apache.commons.cli.Option.builder;"], [17, ""], [30, "import org.apache.commons.cli.HelpFormatter;"], [31, "import org.apache.commons.cli.OptionGroup;"], [33, "import org.apache.commons.cli.ParseException;"], [47, "import ch.qos.logback.classic.LoggerContext;"], [48, "import ch.qos.logback.classic.layout.TTLLLayout;"], [49, "import ch.qos.logback.classic.spi.ILoggingEvent;"], [50, "import ch.qos.logback.core.ConsoleAppender;"], [51, "import ch.qos.logback.core.encoder.LayoutWrappingEncoder;"], [52, ""], [67, "        opts.addOption("], [68, "                builder(\"n\")"], [69, "                        .longOpt(\"basename\")"], [70, "                        .hasArg().argName(\"BASENAME\")"], [71, "                        .desc(\"The base name of the simulator instance\")"], [72, "                        .build());"], [73, ""], [74, "        opts.addOption("], [75, "                builder()"], [76, "                        .longOpt(\"name-factory\")"], [77, "                        .hasArg().argName(\"FACTORY\")"], [78, "                        .desc(\"The name factory to use\")"], [79, "                        .build());"], [80, ""], [81, "        opts.addOption("], [82, "                builder(\"c\")"], [83, "                        .longOpt(\"count\")"], [84, "                        .hasArg().argName(\"COUNT\")"], [85, "                        .type(Integer.class)"], [86, "                        .desc(\"The number of instances to start\")"], [87, "                        .build());"], [88, ""], [89, "        opts.addOption("], [90, "                builder(\"a\")"], [91, "                        .longOpt(\"account-name\")"], [92, "                        .hasArg().argName(\"NAME\")"], [93, "                        .desc(\"The name of the account (defaults to 'kapua-sys')\")"], [94, "                        .build());"], [95, ""], [96, "        opts.addOption("], [97, "                builder(\"s\")"], [98, "                        .longOpt(\"seconds\")"], [99, "                        .hasArg().argName(\"SECONDS\")"], [100, "                        .type(Long.class)"], [101, "                        .desc(\"Shutdown simulator after <SECONDS> seconds\")"], [102, "                        .build());"], [103, ""], [104, "        opts.addOption(\"?\", \"help\", false, null);"], [105, ""], [106, "        {"], [107, "            final OptionGroup broker = new OptionGroup();"], [108, "            broker.setRequired(false);"], [109, ""], [110, "            broker.addOption("], [111, "                    builder(\"h\")"], [112, "                            .longOpt(\"broker-host\")"], [113, "                            .hasArg().argName(\"HOST\")"], [114, "                            .desc(\"Only the hostname of the broker, used for building the full URL\")"], [115, "                            .build());"], [116, "            broker.addOption("], [117, "                    builder(\"b\")"], [118, "                            .longOpt(\"broker\")"], [119, "                            .hasArg().argName(\"URL\")"], [120, "                            .desc(\"The full URL to the broker\").build());"], [121, ""], [122, "            opts.addOptionGroup(broker);"], [123, "        }"], [124, ""], [125, "        {"], [126, "            final OptionGroup logging = new OptionGroup();"], [127, "            logging.setRequired(false);"], [128, ""], [129, "            logging.addOption(builder(\"q\").longOpt(\"quiet\").desc(\"Suppress output\").build());"], [130, "            logging.addOption(builder(\"v\").longOpt(\"verbose\").desc(\"Show more output\").build());"], [131, "            logging.addOption(builder(\"d\").longOpt(\"debug\").desc(\"Show debug output\").build());"], [132, ""], [133, "            opts.addOptionGroup(logging);"], [134, "        }"], [135, ""], [136, "        final CommandLine cli;"], [137, "        try {"], [138, "            cli = new DefaultParser().parse(opts, args);"], [139, "        } catch (final ParseException e) {"], [140, "            System.err.println(e.getLocalizedMessage());"], [141, "            System.exit(-1);"], [142, "            return;"], [143, "        }"], [144, ""], [145, "        if (cli.hasOption('?')) {"], [146, "            showHelp(opts);"], [147, "            System.exit(0);"], [148, "        }"], [149, ""], [150, "        setupLogging(cli);"], [206, "    private static void showHelp(final Options opts) {"], [207, "        final HelpFormatter formatter = new HelpFormatter();"], [208, "        formatter.printHelp(\"SimulatorRunner\","], [209, "                \"Run Kura gateway simulator\\n\\n\","], [210, "                opts,"], [211, "                \"\\nThis application is the default main entry point for this library. Other entry points may be available.\","], [212, "                true);"], [213, "    }"], [214, ""], [319, ""], [320, "    private static void setupLogging(final CommandLine cli) {"], [321, "        final LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();"], [322, ""], [323, "        // reset first"], [324, ""], [325, "        context.reset();"], [326, ""], [327, "        // now configure"], [328, ""], [329, "        final ConsoleAppender<ILoggingEvent> consoleAdapter = new ConsoleAppender<>();"], [330, "        consoleAdapter.setContext(context);"], [331, "        consoleAdapter.setName(\"console\");"], [332, "        final LayoutWrappingEncoder<ILoggingEvent> encoder = new LayoutWrappingEncoder<>();"], [333, "        encoder.setContext(context);"], [334, ""], [335, "        final TTLLLayout layout = new TTLLLayout();"], [336, ""], [337, "        layout.setContext(context);"], [338, "        layout.start();"], [339, "        encoder.setLayout(layout);"], [340, ""], [341, "        consoleAdapter.setEncoder(encoder);"], [342, "        consoleAdapter.start();"], [343, ""], [344, "        final ch.qos.logback.classic.Logger rootLogger = context.getLogger(Logger.ROOT_LOGGER_NAME);"], [345, "        if (cli.hasOption(\"d\")) {"], [346, "            rootLogger.setLevel(ALL);"], [347, "        } else if (cli.hasOption(\"v\")) {"], [348, "            rootLogger.setLevel(INFO);"], [349, "        } else if (cli.hasOption(\"q\")) {"], [350, "            rootLogger.setLevel(WARN);"], [351, "        } else {"], [352, "            rootLogger.setLevel(INFO);"], [353, "        }"], [354, "        rootLogger.addAppender(consoleAdapter);"], [355, "    }"]], "deleted": [[52, "        opts.addOption(\"n\", \"basename\", true, \"The base name of the simulator instance\");"], [53, "        opts.addOption(null, \"name-factory\", true, \"The name factory to use\");"], [54, "        opts.addOption(\"c\", \"count\", true, \"The number of instances to start\");"], [55, "        opts.addOption(\"h\", \"broker-host\", true, \"The broker's host\");"], [56, "        opts.addOption(\"b\", \"broker\", true, \"The URL to the broker\");"], [57, "        opts.addOption(\"a\", \"account-name\", true, \"The name of the account\");"], [58, "        opts.addOption(\"s\", \"shutdown\", true, \"Shutdown simulator after x seconds\");"], [60, "        final CommandLine cli = new DefaultParser().parse(opts, args);"]]}, "num_lines_added": 144, "num_lines_removed": 8}