{"hash": "8f8f265ff8ab656b67ede4124693669418d6cde9", "message": "Downgrade to Java 6 due to GWT 2.4 requirements", "file_num_lines": 486, "diff_parsed": {"added": [[79, "    private static final Logger logger = LoggerFactory.getLogger(GwtAccountServiceImpl.class);"], [349, "        List<GwtConfigComponent> gwtConfigs = new ArrayList<GwtConfigComponent>();"], [370, "                        List<GwtConfigParameter> gwtParams = new ArrayList<GwtConfigParameter>();"], [383, "                                    Map<String, String> options = new HashMap<String, String>();"], [402, "                                                List<String> strValues = new ArrayList<String>();"], [435, "            Class configurableServiceClass = Class.forName(configComponent.<String> get(\"componentId\"));"], [440, ""], [463, "                logger.info(\"Got configuration component icon from URL: {}\", iconResource);"], [488, "                    logger.info(\"Creating tmp dir on path: {}\", tmpDir.toString());"], [505, "                        logger.info(\"Deleting old cached file: {}\", tmpFile.toString());"], [526, "                            logger.warn(\"Content lenght exceeded ({}/{}) for URL: {}\", contentLength, maxLength, iconResource);"], [530, "                        logger.warn(\"Cannot get Content-Length header!\");"], [533, "                    logger.info(\"Creating file: {}\", tmpFile.toString());"], [537, "                    final InputStream is = urlConnection.getInputStream();"], [538, "                    try {"], [539, "                        byte[] buffer = new byte[4096];"], [540, "                        final OutputStream os = new FileOutputStream(tmpFile);"], [541, "                        try {"], [542, "                            int len;"], [543, "                            while ((len = is.read(buffer)) > 0) {"], [544, "                                os.write(buffer, 0, len);"], [545, ""], [546, "                                maxLength -= len;"], [547, ""], [548, "                                if (maxLength < 0) {"], [549, "                                    logger.warn(\"Maximum content lenght exceeded ({}) for URL: {}\", maxLength, iconResource);"], [550, "                                    throw new IOException(\"Maximum content lenght exceeded (\" + maxLength + \") for URL: \" + iconResource);"], [551, "                                }"], [553, "                        } finally {"], [554, "                            os.close();"], [556, "                    } finally {"], [557, "                        is.close();"], [560, "                    logger.info(\"Downloaded file: {}\", tmpFile.toString());"], [569, "                        logger.info(\"Detected image format: {}\", imgFormat.name);"], [571, "                        logger.error(\"Unknown file format for URL: {}\", iconResource);"], [574, "                        logger.error(\"Usupported file format ({}) for URL: {}\", imgFormat, iconResource);"], [578, "                    logger.info(\"Image validation passed for URL: {}\", iconResource);"], [580, "                    logger.info(\"Using cached file: {}\", tmpFile.toString());"], [588, "                logger.info(\"Injecting configuration component icon: {}\", newResourceURL);"], [598, "                logger.error(\"Error while checking component configuration icon. Using the default plugin icon.\", e);"], [604, ""], [613, ""], [621, ""], [622, "            for (Account a : accounts.getItems()) {"], [625, ""], [629, ""]], "deleted": [[79, "    private static final Logger s_logger = LoggerFactory.getLogger(GwtAccountServiceImpl.class);"], [349, "        List<GwtConfigComponent> gwtConfigs = new ArrayList<>();"], [370, "                        List<GwtConfigParameter> gwtParams = new ArrayList<>();"], [383, "                                    Map<String, String> options = new HashMap<>();"], [402, "                                                List<String> strValues = new ArrayList<>();"], [435, "            Class configurableServiceClass = Class.forName(configComponent.<String>get(\"componentId\"));"], [440, ""], [463, "                s_logger.info(\"Got configuration component icon from URL: {}\", iconResource);"], [488, "                    s_logger.info(\"Creating tmp dir on path: {}\", tmpDir.toString());"], [505, "                        s_logger.info(\"Deleting old cached file: {}\", tmpFile.toString());"], [526, "                            s_logger.warn(\"Content lenght exceeded ({}/{}) for URL: {}\","], [527, "                                    contentLength, maxLength, iconResource);"], [531, "                        s_logger.warn(\"Cannot get Content-Length header!\");"], [534, "                    s_logger.info(\"Creating file: {}\", tmpFile.toString());"], [538, "                    InputStream is = urlConnection.getInputStream();"], [539, "                    byte[] buffer = new byte[4096];"], [540, "                    try (OutputStream os = new FileOutputStream(tmpFile)) {"], [541, "                        int len;"], [542, "                        while ((len = is.read(buffer)) > 0) {"], [543, "                            os.write(buffer, 0, len);"], [544, ""], [545, "                            maxLength -= len;"], [546, ""], [547, "                            if (maxLength < 0) {"], [548, "                                s_logger.warn(\"Maximum content lenght exceeded ({}) for URL: {}\","], [549, "                                        new Object[] { maxLength, iconResource });"], [550, "                                throw new IOException(\"Maximum content lenght exceeded (\" + maxLength + \") for URL: \" + iconResource);"], [555, "                    s_logger.info(\"Downloaded file: {}\", tmpFile.toString());"], [564, "                        s_logger.info(\"Detected image format: {}\", imgFormat.name);"], [566, "                        s_logger.error(\"Unknown file format for URL: {}\", iconResource);"], [569, "                        s_logger.error(\"Usupported file format ({}) for URL: {}\", imgFormat, iconResource);"], [573, "                    s_logger.info(\"Image validation passed for URL: {}\", iconResource);"], [575, "                    s_logger.info(\"Using cached file: {}\", tmpFile.toString());"], [583, "                s_logger.info(\"Injecting configuration component icon: {}\", newResourceURL);"], [593, "                s_logger.error(\"Error while checking component configuration icon. Using the default plugin icon.\", e);"], [599, ""], [608, ""], [616, ""], [617, "            for(Account a : accounts.getItems()){"], [620, ""], [624, ""]]}, "num_lines_added": 46, "num_lines_removed": 41}