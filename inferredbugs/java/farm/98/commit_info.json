{"hash": "e2388d4a803e0a3e0451cb034df5638b2d023b8a", "message": "#1453 - sandbox flags", "file_num_lines": 586, "diff_parsed": {"added": [[49, " * @todo #1453:30min Add new command to handle `sandbox on|off` command"], [50, " *  in q-project.xml and stakeholder to change sandbox in catalog.xml"], [51, " *  via Catalog.sandbox(...) methods. This stakeholder should allow to change"], [52, " *  sandbox flag only to users with role in PMO."], [106, "        this.checkExist(pid);"], [476, "        this.checkExist(pid);"], [497, "        this.checkExist(pid);"], [514, "        this.checkExist(pid);"], [536, "        this.checkExist(pid);"], [554, "        this.checkExist(pid);"], [579, "        this.checkExist(pid);"], [601, "        this.checkExist(pid);"], [638, "        this.checkExist(pid);"], [663, "        this.checkExist(pid);"], [692, "        this.checkExist(pid);"], [713, "        this.checkExist(pid);"], [752, "        this.checkExist(pid);"], [771, "        this.checkExist(pid);"], [796, "        this.checkExist(pid);"], [815, "        this.checkExist(pid);"], [834, "        this.checkExist(pid);"], [848, "     * Checks if project has sandbox flag."], [849, "     * @param pid Project ID"], [850, "     * @return True if project is sandbox project"], [851, "     * @throws IOException If fails"], [852, "     */"], [853, "    public boolean sandbox(final String pid) throws IOException {"], [854, "        this.checkExist(pid);"], [855, "        try (final Item item = this.item()) {"], [856, "            return !new Xocument(item).nodes("], [857, "                String.format("], [858, "                    \"/catalog/project[@id='%s' and sandbox='true']\", pid"], [859, "                )"], [860, "            ).isEmpty();"], [861, "        }"], [862, "    }"], [863, ""], [864, "    /**"], [865, "     * Change sandbox flag."], [866, "     * @param pid Project ID"], [867, "     * @param sbx True if sandbox"], [868, "     * @throws IOException If fails"], [869, "     */"], [870, "    public void sandbox(final String pid, final boolean sbx)"], [871, "        throws IOException {"], [872, "        this.checkExist(pid);"], [873, "        try (final Item item = this.item()) {"], [874, "            new Xocument(item).modify("], [875, "                new Directives()"], [876, "                    .xpath(String.format(\"/catalog/project[@id='%s']\", pid))"], [877, "                    .addIf(\"sandbox\")"], [878, "                    .set(sbx)"], [879, "            );"], [880, "        }"], [881, "    }"], [882, ""], [883, "    /**"]], "deleted": [[32, "import org.cactoos.collection.CollectionOf;"], [98, "     * Return all sandbox projects."], [99, "     * @return List of sandbox projects"], [100, "     * @checkstyle NonStaticMethodCheck (3 lines)"], [101, "     */"], [102, "    public Collection<String> sandbox() {"], [103, "        return new CollectionOf<>("], [104, "            \"CAZPZR9FS\", \"C63314D6Z\", \"C7JGJ00DP\""], [105, "        );"], [106, "    }"], [107, ""], [108, "    /**"], [114, "        if (!this.exists(pid)) {"], [115, "            throw new IllegalArgumentException("], [116, "                new Par(\"Project %s doesn't exist, can't delete\").say(pid)"], [117, "            );"], [118, "        }"], [488, "        if (!this.exists(pid)) {"], [489, "            throw new IllegalArgumentException("], [490, "                new Par(\"Project %s doesn't exist\").say(pid)"], [491, "            );"], [492, "        }"], [513, "        if (!this.exists(pid)) {"], [514, "            throw new IllegalArgumentException("], [515, "                new Par(\"Project %s doesn't exist, can't pause\").say(pid)"], [516, "            );"], [517, "        }"], [534, "        if (!this.exists(pid)) {"], [535, "            throw new IllegalArgumentException("], [536, "                new Par("], [537, "                    \"Project %s doesn't exist, can't get fee\""], [538, "                ).say(pid)"], [539, "            );"], [540, "        }"], [562, "        if (!this.exists(pid)) {"], [563, "            throw new IllegalArgumentException("], [564, "                new Par("], [565, "                    \"Project %s doesn't exist, can't set fee\""], [566, "                ).say(pid)"], [567, "            );"], [568, "        }"], [594, "        if (!this.exists(pid)) {"], [595, "            throw new IllegalArgumentException("], [596, "                new Par("], [597, "                    \"Project %s doesn't exist, can't publish, see \u00a726\""], [598, "                ).say(pid)"], [599, "            );"], [600, "        }"], [617, "        if (!this.exists(pid)) {"], [618, "            throw new IllegalArgumentException("], [619, "                new Par("], [620, "                    \"Project \\\"%s\\\" doesn't exist, can't check publish\""], [621, "                ).say(pid)"], [622, "            );"], [623, "        }"], [645, "        if (!this.exists(pid)) {"], [646, "            throw new IllegalArgumentException("], [647, "                new Par("], [648, "                    \"Project %s doesn't exist, can't add link\""], [649, "                ).say(pid)"], [650, "            );"], [651, "        }"], [688, "        if (!this.exists(pid)) {"], [689, "            throw new IllegalArgumentException("], [690, "                new Par("], [691, "                    \"Project %s doesn't exist, can't unlink\""], [692, "                ).say(pid)"], [693, "            );"], [694, "        }"], [719, "        if (!this.exists(pid)) {"], [720, "            throw new IllegalArgumentException("], [721, "                new Par("], [722, "                    \"Project %s doesn't exist, can't get links\""], [723, "                ).say(pid)"], [724, "            );"], [725, "        }"], [754, "        if (!this.exists(pid)) {"], [755, "            throw new IllegalArgumentException("], [756, "                new Par("], [757, "                    \"Project %s doesn't exist, can't get links\""], [758, "                ).say(pid)"], [759, "            );"], [760, "        }"], [781, "        if (!this.exists(pid)) {"], [782, "            throw new IllegalArgumentException("], [783, "                new Par("], [784, "                    \"Project %s doesn't exist, can't check link\""], [785, "                ).say(pid)"], [786, "            );"], [787, "        }"], [826, "        if (!this.exists(pid)) {"], [827, "            throw new IllegalArgumentException("], [828, "                new Par("], [829, "                    \"Project %s doesn't exist, can't change title\""], [830, "                ).say(pid)"], [831, "            );"], [832, "        }"], [851, "        if (!this.exists(pid)) {"], [852, "            throw new IllegalArgumentException("], [853, "                new Par("], [854, "                    \"Project %s doesn't exist, can't get title\""], [855, "                ).say(pid)"], [856, "            );"], [857, "        }"], [900, "        if (!this.exists(pid)) {"], [901, "            throw new IllegalArgumentException("], [902, "                new Par("], [903, "                    \"Project %s doesn't exist, can't get adviser\""], [904, "                ).say(pid)"], [905, "            );"], [906, "        }"], [925, "        if (!this.exists(pid)) {"], [926, "            throw new IllegalArgumentException("], [927, "                new Par("], [928, "                    \"Project %s doesn't exist, can't get adviser\""], [929, "                ).say(pid)"], [930, "            );"], [931, "        }"]]}, "num_lines_added": 57, "num_lines_removed": 118}