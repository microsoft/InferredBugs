{"hash": "cbba3ce8d21cf57990c84a1a34123d7898a01f1b", "message": "#372 NoRoom ignore for REV", "file_num_lines": 51, "diff_parsed": {"added": [[19, "import com.jcabi.log.Logger;"], [24, "import java.util.Collection;"], [25, "import java.util.Map;"], [26, "import org.cactoos.collection.Filtered;"], [28, "import org.cactoos.iterable.Mapped;"], [29, "import org.cactoos.map.MapEntry;"], [30, "import org.cactoos.map.MapOf;"], [31, "import org.cactoos.scalar.IoCheckedScalar;"], [32, "import org.cactoos.scalar.SolidScalar;"], [40, " * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)"], [45, "     * Workloads of others."], [47, "    private final IoCheckedScalar<Map<String, Integer>> jobs;"], [51, "     * @param pmo The PMO"], [52, "     * @param others All other logins to compete with"], [54, "    public VtrWorkload(final Project pmo, final Collection<String> others) {"], [55, "        this.jobs = new IoCheckedScalar<>("], [56, "            new SolidScalar<>("], [57, "                () -> new MapOf<>("], [58, "                    new Mapped<>("], [59, "                        login -> new MapEntry<>("], [60, "                            login,"], [61, "                            new LengthOf("], [62, "                                new Agenda(pmo, login).jobs()"], [63, "                            ).intValue()"], [64, "                        ),"], [65, "                        others"], [66, "                    )"], [67, "                )"], [68, "            )"], [69, "        );"], [75, "        final int mine = this.jobs.value().get(login);"], [76, "        final int smaller = new Filtered<>("], [77, "            speed -> speed < mine,"], [78, "            this.jobs.value().values()"], [79, "        ).size();"], [81, "            Logger.format("], [82, "                \"Workload of %d jobs is no.%d\","], [83, "                mine, smaller + 1"], [84, "            )"], [86, "        return 1.0d - (double) smaller / (double) this.jobs.value().size();"]], "deleted": [[19, "import com.zerocracy.Par;"], [36, "     * The PMO."], [38, "    private final Project pmo;"], [39, ""], [40, "    /**"], [41, "     * Max."], [42, "     */"], [43, "    private final int max;"], [47, "     * @param prj The PMO"], [48, "     * @param threshold Max"], [50, "    public VtrWorkload(final Project prj, final int threshold) {"], [51, "        this.pmo = prj;"], [52, "        this.max = threshold;"], [58, "        final int jobs = new LengthOf("], [59, "            new Agenda(this.pmo, login).jobs()"], [60, "        ).intValue();"], [62, "            new Par("], [63, "                \"%d out of %d job(s) in agenda\""], [64, "            ).say(jobs, this.max)"], [66, "        return (double) (this.max - Math.min(jobs, this.max))"], [67, "            / (double) this.max;"]]}, "num_lines_added": 40, "num_lines_removed": 21}