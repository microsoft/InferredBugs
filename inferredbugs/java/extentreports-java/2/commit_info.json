{"hash": "53d514543fe277b71a2ab400f6794db417496d59", "message": "add support for extentx 1.0.0", "file_num_lines": 432, "diff_parsed": {"added": [[22, "import com.aventstack.extentreports.model.ExceptionInfo;"], [24, "import com.aventstack.extentreports.model.Media;"], [30, ""], [44, "public class ExtentXReporter extends AbstractReporter implements ReportAppendable {"], [49, "    private Boolean appendExisting;"], [53, "    private Map<String, ObjectId> exceptionNameObjectIdCollection;"], [66, "    private MongoCollection<Document> exceptionCollection;"], [161, "        exceptionCollection = db.getCollection(\"exception\");"], [165, ""], [202, "        Document project = projectCollection.find(doc).first();"], [221, "        if (id != null && !id.toString().isEmpty() && appendExisting) {"], [231, "        Document doc = new Document(\"name\", reportName)"], [248, "        if (testList == null || testList.size() == 0)"], [249, "            return;"], [250, ""], [252, "                        .append(\"duration\", getRunDuration())"], [260, "                        .append(\"exceptionsParentLength\", sc.getChildCountExceptions())"], [261, ""], [270, "                        .append(\"exceptionsChildLength\", sc.getChildCountExceptions())"], [271, ""], [279, "                        .append(\"exceptionsGrandChildLength\", sc.getGrandChildCountExceptions());"], [288, "        Document doc = new Document(\"project\", projectId)"], [289, "                .append(\"report\", reportId)"], [290, "                .append(\"level\", test.getLevel())"], [296, "                .append(\"bdd\", test.isBehaviorDrivenType())"], [297, "                .append(\"childNodesLength\", test.getNodeContext().size());"], [298, ""], [299, "        if (test.isBehaviorDrivenType())"], [300, "            doc.append(\"bddType\", test.getBehaviorDrivenType().getSimpleName());"], [310, "        Document doc = new Document(\"parent\", node.getParent().getObjectId())"], [311, "                .append(\"parentName\", node.getParent().getName())"], [312, "                .append(\"project\", projectId)"], [315, "                .append(\"name\", node.getName())"], [319, "                .append(\"endTime\", node.getEndTime())"], [320, "                .append(\"childNodesCount\", node.getNodeContext().getAll().size())"], [321, "                .append(\"bdd\", node.isBehaviorDrivenType())"], [322, "                .append(\"childNodesLength\", node.getNodeContext().size());"], [323, ""], [324, "        if (node.isBehaviorDrivenType())"], [325, "            doc.append(\"bddType\", node.getBehaviorDrivenType().getSimpleName());"], [327, "        testCollection.insertOne(doc);"], [331, ""], [332, "        // update parent test stats"], [333, "        updateTestBasedOnNode(node.getParent());"], [334, "    }"], [335, ""], [336, "    private void updateTestBasedOnNode(Test test) {"], [337, "        Document doc = new Document(\"childNodesLength\", test.getNodeContext().size());"], [338, ""], [339, "        testCollection.updateOne("], [340, "                new Document(\"_id\", test.getObjectId()),"], [341, "                new Document(\"$set\", doc));"], [346, "        Document doc = new Document(\"test\", test.getObjectId())"], [347, "                .append(\"project\", projectId)"], [350, "                .append(\"sequence\", log.getSequence())"], [356, ""], [357, "        if (test.hasException()) {"], [358, "            if (exceptionNameObjectIdCollection == null)"], [359, "                exceptionNameObjectIdCollection = new HashMap<>();"], [360, ""], [361, "            ExceptionInfo ex = test.getExceptionInfoList().get(0);"], [362, ""], [363, "            ObjectId exceptionId;"], [364, "            doc = new Document(\"report\", reportId)"], [365, "                    .append(\"project\", projectId)"], [366, "                    .append(\"name\", ex.getExceptionName());"], [367, ""], [368, "            FindIterable<Document> iterable = exceptionCollection.find(doc);"], [369, "            Document docException = iterable.first();"], [370, ""], [371, "            if (!exceptionNameObjectIdCollection.containsKey(ex.getExceptionName())) {"], [372, "                if (docException != null) {"], [373, "                    exceptionNameObjectIdCollection.put(ex.getExceptionName(), docException.getObjectId(\"_id\"));"], [374, "                } else {"], [375, "                    doc = new Document(\"project\", projectId)"], [376, "                            .append(\"report\", reportId)"], [377, "                            .append(\"name\", ex.getExceptionName())"], [378, "                            .append(\"stacktrace\", ex.getStackTrace())"], [379, "                            .append(\"testCount\", 0);"], [380, ""], [381, "                    exceptionCollection.insertOne(doc);"], [382, ""], [383, "                    exceptionId = MongoUtil.getId(doc);"], [384, "                    docException = exceptionCollection.find(new Document(\"_id\", exceptionId)).first();"], [385, ""], [386, "                    exceptionNameObjectIdCollection.put(ex.getExceptionName(), exceptionId);"], [387, "                }"], [388, "            }"], [390, "            Integer testCount = ((Integer) (docException.get(\"testCount\"))) + 1;"], [391, "            doc = new Document(\"testCount\", testCount);"], [392, ""], [393, "            exceptionCollection.updateOne("], [394, "                    new Document(\"_id\", docException.getObjectId(\"_id\")),"], [395, "                    new Document(\"$set\", doc));"], [396, ""], [397, "            doc = new Document(\"exception\", exceptionNameObjectIdCollection.get(ex.getExceptionName()));"], [398, ""], [399, "            testCollection.updateOne("], [400, "                    new Document(\"_id\", test.getObjectId()),"], [401, "                    new Document(\"$set\", doc));"], [402, "        }"], [403, ""], [409, "                .append(\"endTime\", test.getEndTime())"], [410, "                .append(\"duration\", test.getRunDurationMillis())"], [411, "                .append(\"categorized\", test.hasCategory());"], [413, "        testCollection.updateOne("], [414, "                new Document(\"_id\", test.getObjectId()),"], [415, "                new Document(\"$set\", doc));"], [416, ""], [417, "        if (test.getLevel() > 0)"], [430, "                    .append(\"project\", projectId)"], [440, "                        .append(\"project\", projectId)"], [471, "                .append(\"project\", projectId)"], [496, "        initMedia();"], [506, "                throw new IOException(\"server url cannot be null, use extentx.config().setServerUrl(url)\");"], [513, "    private void createMedia(Test test, Media media) {"], [514, "        Document doc = new Document(\"test\", test.getObjectId())"], [515, "                .append(\"project\", projectId)"], [518, "                .append(\"sequence\", media.getSequence())"], [519, "                .append(\"mediaType\", media.getMediaType().toString().toLowerCase());"], [524, "        media.setObjectId(mediaId);"], [525, "    }"], [526, ""], [527, "    private void initMedia() throws IOException {"], [528, "        if (media == null) {"], [529, "            media = new MediaStorageManagerFactory().getManager(\"http\");"], [530, "            media.init(url);"], [531, "        }"], [532, "    }"], [533, ""], [534, "    @Override"], [535, "    public void onScreencastAdded(Test test, Screencast screencast) throws IOException {"], [536, "        storeUrl();"], [537, "        screencast.setReportObjectId(reportId);"], [538, ""], [539, "        createMedia(test, screencast);"], [540, ""], [541, "        initMedia();"], [542, ""], [543, "        media.storeMedia(screencast);"], [558, "\t@Override"], [559, "\tpublic void setAppendExisting(Boolean b) {"], [560, "\t\tthis.appendExisting = b;"], [561, "\t}"]], "deleted": [[41, "public class ExtentXReporter extends AbstractReporter {"], [60, "    private MongoCollection<Document> nodeCollection;"], [155, "        nodeCollection = db.getCollection(\"node\");"], [160, ""], [197, "        FindIterable<Document> iterable = projectCollection.find(doc);"], [198, ""], [199, "        Document project = iterable.first();"], [218, "        if (id != null && !id.toString().isEmpty()) {"], [228, "        Document doc = new Document(\"fileName\", reportName)"], [268, "                        .append(\"infoGrandChildLength\", sc.getGrandChildCountInfo());"], [277, "        Document doc = new Document(\"report\", reportId)"], [283, "                .append(\"childNodesCount\", test.getNodeContext().getAll().size());"], [293, "        Document doc = new Document(\"test\", node.getParent().getObjectId())"], [294, "                .append(\"parentTestName\", node.getParent().getName())"], [296, "                .append(\"name\", node.getName())"], [301, "                .append(\"endTime\", node.getEndTime());"], [303, "        nodeCollection.insertOne(doc);"], [311, "        String model = \"test\";"], [312, ""], [313, "        if (test.getLevel() > 0)"], [314, "            model = \"node\";"], [315, ""], [316, "        Document doc = new Document(model, test.getObjectId())"], [319, "                .append(\"logSequence\", log.getSequence())"], [322, "                .append(\"stepName\", log.getStepName())"], [332, "                .append(\"endTime\", test.getEndTime());"], [334, "        if (test.getLevel() == 0) {"], [335, "            testCollection.updateOne("], [336, "                    new Document(\"_id\", test.getObjectId()),"], [337, "                    new Document(\"$set\", doc));"], [338, "        }"], [339, "        else {"], [340, "            nodeCollection.updateOne("], [341, "                    new Document(\"_id\", test.getObjectId()),"], [342, "                    new Document(\"$set\", doc));"], [343, ""], [345, "        }"], [346, ""], [415, "    public void onScreencastAdded(Test test, Screencast screencast) throws IOException { }"], [416, ""], [417, "    @Override"], [424, "        if (media == null) {"], [425, "            media = new MediaStorageManagerFactory().getManager(\"http\");"], [426, "            media.init(url);"], [427, "        }"], [437, "                throw new IOException(\"server url cannot be null, use extentxConfig.setServerUrl(url)\");"], [444, "    private void createMedia(Test test, ScreenCapture screenCapture) {"], [445, "        String model = \"test\";"], [446, "        if (test.getLevel() > 0)"], [447, "            model = \"node\";"], [448, ""], [449, "        Document doc = new Document(model, test.getObjectId())"], [452, "                .append(\"sequence\", screenCapture.getSequence());"], [457, "        screenCapture.setObjectId(mediaId);"]]}, "num_lines_added": 144, "num_lines_removed": 54}