    @Test
    public void testRestoredFromFileRollbackRetry() throws Exception {
        SessionHolder.init(".");
        GlobalSession globalSession = new GlobalSession("demo-app", "my_test_tx_group", "test", 6000);

        globalSession.addSessionLifecycleListener(SessionHolder.getRootSessionManager());
        globalSession.begin();

        BranchSession branchSession1 = SessionHelper.newBranchByGlobal(globalSession, BranchType.AT, RESOURCE_ID,
            "ta:1", "xxx");
        branchSession1.lock();
        globalSession.addBranch(branchSession1);

        LockManager lockManager = LockManagerFactory.get();

        Assert.assertFalse(lockManager.isLockable(0L, RESOURCE_ID, "ta:1"));

        globalSession.changeStatus(GlobalStatus.Rollbacking);
        globalSession.changeBranchStatus(branchSession1, BranchStatus.PhaseTwo_RollbackFailed_Retryable);
        globalSession.changeStatus(GlobalStatus.RollbackRetrying);

        lockManager.cleanAllLocks();

        Assert.assertTrue(lockManager.isLockable(0L, RESOURCE_ID, "ta:1"));

        // Re-init SessionHolder: restore sessions from file
        SessionHolder.init(".");

        long tid = globalSession.getTransactionId();
        GlobalSession reloadSession = SessionHolder.findGlobalSession(tid);
        Assert.assertEquals(reloadSession.getStatus(), GlobalStatus.RollbackRetrying);

        GlobalSession sessionInRetryRollbackingQueue = SessionHolder.getRetryRollbackingSessionManager()
            .findGlobalSession(tid);
        Assert.assertTrue(reloadSession == sessionInRetryRollbackingQueue);
        BranchSession reloadBranchSession = reloadSession.getBranch(branchSession1.getBranchId());
        Assert.assertEquals(reloadBranchSession.getStatus(), BranchStatus.PhaseTwo_RollbackFailed_Retryable);

        // Lock is held by session in RollbackRetrying status
        Assert.assertFalse(lockManager.isLockable(0L, RESOURCE_ID, "ta:1"));

    }