    public static void parse(final PgDatabase database, final String command) {
        final Matcher matcher = PATTERN.matcher(command.trim());

        if (matcher.matches()) {
            final String triggerName = matcher.group(1);
            final String when = matcher.group(2);
            final String[] events = new String[3];
            events[0] = matcher.group(3);
            events[1] = matcher.group(4);
            events[2] = matcher.group(5);

            final String tableName = matcher.group(6);
            final String fireOn = matcher.group(7);
            final String procedure = matcher.group(8);

            final PgTrigger trigger = new PgTrigger();
            trigger.setBefore("BEFORE".equalsIgnoreCase(when));
            trigger.setForEachRow(
                    (fireOn != null) && "ROW".equalsIgnoreCase(fireOn));
            trigger.setFunction(procedure.trim());
            trigger.setName(triggerName.trim());
            trigger.setOnDelete(isEventPresent(events, "DELETE"));
            trigger.setOnInsert(isEventPresent(events, "INSERT"));
            trigger.setOnUpdate(isEventPresent(events, "UPDATE"));
            trigger.setTableName(tableName.trim());

            database.getDefaultSchema().getTable(
                    trigger.getTableName()).addTrigger(trigger);
        } else {
            throw new ParserException(
                    ParserException.CANNOT_PARSE_COMMAND + command);
        }
    }