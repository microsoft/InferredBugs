{"hash": "168c53a6eefc8fe3bdf9abe1ee0597f8236e5349", "message": "#95 \u7ee7\u7eed\u4fee\u6b63\u8f93\u51fa\uff0c\u5305\u62ec\uff1a\n\n\u5220\u9664\u975e\u8fdb\u7a0b\u7ea7\u522b\u7684net\u6570\u636e\uff0c\n\u5220\u9664\u5bb9\u6613\u6df7\u6dc6\u7684io\u6570\u636e\uff0c\nthread\u7684created \u6539\u4e3anew \u5e76\u8fdb\u884c\u544a\u8b66\nclass loaded \u5728perfdata\u4e0b\u7684\u8ba1\u7b97\u4fee\u6b63\uff0c\u5e76\u589e\u52a0new\uff0c\u5e76\u8fdb\u884c\u9ec4\u8272\u544a\u8b66\uff0c\ndirect \u589e\u52a0max\u503c\uff0cmap\u589e\u52a0count\u503c", "file_num_lines": 323, "diff_parsed": {"added": [[37, "\tpublic long maxDirectMemorySize;"], [69, "\tpublic Rate threadNew = new Rate();"], [71, "\tpublic Rate classLoaded = new Rate();"], [158, "\t\tmaxDirectMemorySize = Long"], [159, "\t\t\t\t.parseLong(jmxClient.getHotSpotDiagnosticMXBean().getVMOption(\"MaxDirectMemorySize\").getValue());"], [160, "\t\tmaxDirectMemorySize = maxDirectMemorySize == 0 ? -1 : maxDirectMemorySize;"], [161, ""], [169, ""], [170, "\t\tisLinux = System.getProperty(\"os.name\").toLowerCase(Locale.US).contains(\"linux\");"], [171, ""], [254, "\t\t\tthreadNew.current = (Long) perfCounters.get(\"java.threads.started\").getValue();"], [259, "\t\t\tthreadNew.current = jmxClient.getThreadMXBean().getTotalStartedThreadCount();"], [261, "\t\tthreadNew.update();"], [268, "\t\t\tclassLoaded.current = (long) perfCounters.get(\"java.cls.loadedClasses\").getValue() - classUnLoaded;"], [270, "\t\t\tclassLoaded.current = jmxClient.getClassLoadingMXBean().getLoadedClassCount();"], [273, ""], [274, "\t\tclassLoaded.update();"], [302, "\t\tdirect = new Usage(jmxClient.getBufferPoolManager().getDirectBufferPool().getMemoryUsed(),"], [303, "\t\t\t\tjmxClient.getBufferPoolManager().getDirectBufferPool().getTotalCapacity(), maxDirectMemorySize);"], [305, "\t\t// \u53d6\u5de7\u7528\u6cd5\uff0c\u5c06count \u653e\u5165\u65e0\u7528\u7684max\u4e2d\u3002"], [306, "\t\tmap = new Usage(jmxClient.getBufferPoolManager().getMappedBufferPool().getMemoryUsed(),"], [307, "\t\t\t\tjmxClient.getBufferPoolManager().getMappedBufferPool().getTotalCapacity(),"], [308, "\t\t\t\tjmxClient.getBufferPoolManager().getMappedBufferPool().getCount());"]], "deleted": [[4, "import java.lang.management.BufferPoolMXBean;"], [58, "\tpublic Rate receiveBytes = new Rate();"], [59, "\tpublic Rate sendBytes = new Rate();"], [60, ""], [68, "\tpublic String lastGcCause;"], [73, "\tpublic long threadStarted;"], [75, "\tpublic long classLoaded;"], [93, ""], [169, "\t\tisLinux = System.getProperty(\"os.name\").toLowerCase(Locale.US).contains(\"linux\");"], [193, "\t\t\t\tupdateNet();"], [248, "\tprivate void updateNet() {"], [249, "\t\tMap<String, Long> procNet = ProcFileData.getProcNet(pid);"], [250, ""], [251, "\t\treceiveBytes.current = procNet.get(ProcFileData.RECEIVE_BYTES);"], [252, "\t\tsendBytes.current = procNet.get(ProcFileData.SEND_BYTES);"], [253, ""], [254, "\t\treceiveBytes.update();"], [255, "\t\tsendBytes.update();"], [256, "\t\treceiveBytes.caculateRate(upTimeMills.delta);"], [257, "\t\tsendBytes.caculateRate(upTimeMills.delta);"], [258, "\t}"], [265, "\t\t\tthreadStarted = (Long) perfCounters.get(\"java.threads.started\").getValue();"], [270, "\t\t\tthreadStarted = jmxClient.getThreadMXBean().getTotalStartedThreadCount();"], [277, "\t\t\tclassLoaded = (long) perfCounters.get(\"java.cls.loadedClasses\").getValue();"], [280, "\t\t\tclassLoaded = jmxClient.getClassLoadingMXBean().getLoadedClassCount();"], [311, "\t\tdirect = new Usage(jmxClient.getBufferPoolManager().getDirectBufferPool());"], [312, "\t\tmap = new Usage(jmxClient.getBufferPoolManager().getMappedBufferPool());"], [321, "\t\t\tlastGcCause = (String) perfCounters.get(\"sun.gc.lastCause\").getValue();"], [431, "\t\tpublic Usage(BufferPoolMXBean bufferPoolUsage) {"], [432, "\t\t\tthis(bufferPoolUsage.getMemoryUsed(), -1, bufferPoolUsage.getTotalCapacity());"], [433, "\t\t}"]]}, "num_lines_added": 23, "num_lines_removed": 31}