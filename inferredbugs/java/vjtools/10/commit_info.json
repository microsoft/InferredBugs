{"hash": "65ce340441a352a8012f01e0db288faa00c70eb3", "message": "vjtop\u53ef\u4ee5\u6839\u636e\u5173\u952e\u5b57\u6a21\u7cca\u5339\u914d\u7ebf\u7a0b\u540d #37", "file_num_lines": 201, "diff_parsed": {"added": [[42, "\t\t\t\thandleCommand(command.toLowerCase());"], [53, "\t\tif (command.equals(\"t\") || command.startsWith(\"t \")) {"], [59, "\t\t} else if (command.equals(\"i\") || command.startsWith(\"i \")) {"], [60, "\t\t\tchangeInterval(command);"], [61, "\t\t} else if (command.equals(\"l\") || command.startsWith(\"l \")) {"], [62, "\t\t\tchangeThreadLimit(command);"], [63, "\t\t} else if (command.equals(\"f\")) {"], [64, "\t\t\tchangeThreadFilter();"], [127, "\t\t\t\ttty.println(\" Display mode changed to \" + app.view.mode + \" for next flush\");"], [131, "\t\t\t\ttty.println(\" Display mode changed to \" + app.view.mode + \" for next flush(\" + app.nextFlushTime()"], [132, "\t\t\t\t\t\t+ \"s later)\");"], [138, "\tprivate void changeInterval(String command) {"], [140, ""], [141, "\t\tString intervalStr;"], [142, "\t\tif (command.length() == 1) {"], [143, "\t\t\tintervalStr = readLine(\" Input flush interval seconds(current \" + app.getInterval() + \"):\");"], [144, "\t\t} else {"], [145, "\t\t\tintervalStr = command.substring(2);"], [146, "\t\t}"], [147, ""], [152, "\t\t\t\ttty.println(\"Flush interval change to \" + interval + \" seconds\");"], [164, "\tprivate void changeThreadLimit(String command) {"], [166, ""], [167, "\t\tString threadLimitStr;"], [168, "\t\tif (command.length() == 1) {"], [169, "\t\t\tthreadLimitStr = readLine(\" Input number of threads to display(current \" + app.view.threadLimit + \"):\");"], [170, "\t\t} else {"], [171, "\t\t\tthreadLimitStr = command.substring(2);"], [172, "\t\t}"], [173, ""], [178, "\t\t\t\ttty.println(\" Number of threads to display change to \" + threadLimit + \" for next flush(\""], [179, "\t\t\t\t\t\t+ app.nextFlushTime() + \"s later)\");"], [190, "\tprivate void changeThreadFilter() {"], [191, "\t\tapp.preventFlush();"], [192, ""], [193, "\t\tString threadNameFilter = readLine(\" Input thread name filter (current \" + app.view.threadNameFilter + \"):\");"], [194, ""], [195, "\t\tif (threadNameFilter != null && threadNameFilter.trim().length() == 0) {"], [196, "\t\t\tthreadNameFilter = null;"], [197, "\t\t}"], [198, "\t\tif (threadNameFilter != app.view.threadNameFilter) {"], [199, "\t\t\tapp.view.threadNameFilter = threadNameFilter;"], [200, "\t\t\ttty.println(\"  thread name filter change to \" + threadNameFilter + \" for next flush (\" + app.nextFlushTime()"], [201, "\t\t\t\t\t+ \"s later)\");"], [202, ""], [203, "\t\t} else {"], [204, "\t\t\ttty.println(\" Nothing be changed\");"], [205, "\t\t}"], [206, ""], [207, "\t\tapp.continueFlush();"], [208, "\t}"], [209, ""], [214, "\t\ttty.println(\" i [num]: change flush interval seconds\");"], [215, "\t\ttty.println(\" l [num]: change number of display threads\");"], [216, "\t\ttty.println(\" f [name]: set thread name filter\");"], [220, "\t\twaitForEnter();"], [224, "\tprivate void waitForEnter() {"], [225, "\t\treadLine(\" Please hit <ENTER> to continue...\");"], [232, "\t\t\treturn result.trim();"]], "deleted": [[42, "\t\t\t\thandleCommand(command);"], [53, "\t\tif (command.equals(\"t\") || (command.startsWith(\"t \"))) {"], [59, "\t\t} else if (command.equals(\"i\")) {"], [60, "\t\t\tchangeInterval();"], [61, "\t\t} else if (command.equals(\"l\")) {"], [62, "\t\t\tchangeThreadLimit();"], [128, "\t\t\t\tif (app.nextFlushTime() > 1) {"], [129, "\t\t\t\t\ttty.println(\" Display mode changed to \" + app.view.mode + \" for next flush (\" + app.nextFlushTime()"], [130, "\t\t\t\t\t\t\t+ \"s later)\");"], [131, "\t\t\t\t}"], [137, "\tprivate void changeInterval() {"], [139, "\t\tString intervalStr = readLine(\" Input flush interval seconds(current \" + app.getInterval() + \"):\");"], [155, "\tprivate void changeThreadLimit() {"], [157, "\t\tString threadLimitStr = readLine(\" Input number of threads to display(current \" + app.view.threadLimit + \"):\");"], [162, "\t\t\t\tif (app.nextFlushTime() > 1) {"], [163, "\t\t\t\t\ttty.println(\" Number of threads to display changed to \" + threadLimit + \" for next flush (\""], [164, "\t\t\t\t\t\t\t+ app.nextFlushTime() + \"s later)\");"], [165, "\t\t\t\t}"], [180, "\t\ttty.println(\" i : change flush interval seconds\");"], [181, "\t\ttty.println(\" l : change number of display threads\");"], [185, "\t\tString command = waitForEnter();"], [187, "\t\tif (command.length() > 0) {"], [188, "\t\t\thandleCommand(command);"], [189, "\t\t}"], [192, "\tprivate String waitForEnter() {"], [193, "\t\treturn readLine(\" Please hit <ENTER> to continue...\");"], [200, "\t\t\treturn result.trim().toLowerCase();"]]}, "num_lines_added": 59, "num_lines_removed": 27}