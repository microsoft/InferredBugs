{"hash": "a0d6c34c2b676fefdc3b91027c9cc06fc7c5a29e", "message": "#176 bug fix:jdk14\u62a5NPE\uff1b\u589e\u52a0GC\u7b56\u7565\u8f93\u51fa\uff1b", "file_num_lines": 439, "diff_parsed": {"added": [[10, "import com.sun.management.GarbageCollectorMXBean;"], [14, "import com.vip.vjtools.vjtop.data.jmx.JmxGarbageCollectorManager;"], [70, "\tpublic String ygcStrategy = \"\";"], [73, "\tpublic String fullgcStrategy = \"\";"], [186, "\t\tjvmMajorVersion = Utils.getJavaMajorVersion(taregetVMSystemProperties.get(\"java.specification.version\"));"], [343, ""], [344, "\t\t\tMemoryPoolMXBean edenMXBean = memoryPoolManager.getEdenMemoryPool();"], [345, "\t\t\tif (edenMXBean != null) {"], [346, "\t\t\t\teden = new Usage(edenMXBean.getUsage());"], [347, "\t\t\t} else {"], [348, "\t\t\t\teden = new Usage();"], [349, "\t\t\t}"], [350, ""], [351, "\t\t\tMemoryPoolMXBean oldMXBean = memoryPoolManager.getOldMemoryPool();"], [352, "\t\t\tif (oldMXBean != null) {"], [353, "\t\t\t\told = new Usage(oldMXBean.getUsage());"], [354, "\t\t\t\twarningRule.updateOld(old.max);"], [355, "\t\t\t} else {"], [356, "\t\t\t\told = new Usage();"], [357, "\t\t\t}"], [366, "\t\t\tMemoryPoolMXBean permMXBean = memoryPoolManager.getPermMemoryPool();"], [367, "\t\t\tif (permMXBean != null) {"], [368, "\t\t\t\tperm = new Usage(permMXBean.getUsage());"], [369, "\t\t\t\twarningRule.updatePerm(perm.max);"], [370, "\t\t\t} else {"], [371, "\t\t\t\tperm = new Usage();"], [372, "\t\t\t}"], [383, "\t\t\tMemoryPoolMXBean memoryPoolMXBean = memoryPoolManager.getCodeCacheMemoryPool();"], [384, "\t\t\tif (memoryPoolMXBean != null) {"], [385, "\t\t\t\tcodeCache = new Usage(memoryPoolMXBean.getUsage());"], [386, "\t\t\t} else {"], [387, "\t\t\t\tcodeCache = new Usage();"], [388, "\t\t\t}"], [413, "\t\t\t\tJmxGarbageCollectorManager gcManager = jmxClient.getGarbageCollectorManager();"], [414, ""], [415, "\t\t\t\tGarbageCollectorMXBean ygcMXBean = gcManager.getYoungCollector();"], [416, "\t\t\t\tygcStrategy = gcManager.getYgcStrategy();"], [417, "\t\t\t\tygcCount.update(ygcMXBean.getCollectionCount());"], [418, "\t\t\t\tygcTimeMills.update(ygcMXBean.getCollectionTime());"], [419, ""], [420, "\t\t\t\tGarbageCollectorMXBean fullgcMXBean = gcManager.getFullCollector();"], [421, "\t\t\t\tif (fullgcMXBean != null) {"], [422, "\t\t\t\t\tfullgcStrategy = gcManager.getFgcStrategy();"], [423, "\t\t\t\t\tfullgcCount.update(fullgcMXBean.getCollectionCount());"], [424, "\t\t\t\t\tfullgcTimeMills.update(fullgcMXBean.getCollectionTime());"]], "deleted": [[182, "\t\tjvmMajorVersion = getJavaMajorVersion(jvmVersion);"], [184, ""], [340, "\t\t\teden = new Usage(memoryPoolManager.getEdenMemoryPool().getUsage());"], [341, "\t\t\told = new Usage(memoryPoolManager.getOldMemoryPool().getUsage());"], [342, "\t\t\twarningRule.updateOld(old.max);"], [351, "\t\t\tperm = new Usage(memoryPoolManager.getPermMemoryPool().getUsage());"], [352, "\t\t\twarningRule.updatePerm(perm.max);"], [363, "\t\t\tcodeCache = new Usage(memoryPoolManager.getCodeCacheMemoryPool().getUsage());"], [388, "\t\t\t\tygcCount.update(jmxClient.getGarbageCollectorManager().getYoungCollector().getCollectionCount());"], [389, "\t\t\t\tygcTimeMills.update(jmxClient.getGarbageCollectorManager().getYoungCollector().getCollectionTime());"], [390, ""], [391, "\t\t\t\tif (jmxClient.getGarbageCollectorManager().getFullCollector() != null) {"], [392, "\t\t\t\t\tfullgcCount.update(jmxClient.getGarbageCollectorManager().getFullCollector().getCollectionCount());"], [393, "\t\t\t\t\tfullgcTimeMills"], [394, "\t\t\t\t\t\t\t.update(jmxClient.getGarbageCollectorManager().getFullCollector().getCollectionTime());"], [483, "\tprivate static int getJavaMajorVersion(String jvmVersion) {"], [484, "\t\tif (jvmVersion.startsWith(\"1.8\")) {"], [485, "\t\t\treturn 8;"], [486, "\t\t} else if (jvmVersion.startsWith(\"1.7\")) {"], [487, "\t\t\treturn 7;"], [488, "\t\t} else if (jvmVersion.startsWith(\"1.6\")) {"], [489, "\t\t\treturn 6;"], [490, "\t\t} else {"], [491, "\t\t\treturn 0;"], [492, "\t\t}"], [493, "\t}"]]}, "num_lines_added": 45, "num_lines_removed": 26}