{"hash": "14481a154198fcbda4f1d4d3de13dc496cd7cc1a", "message": "\u6dfb\u52a0mp4\u8f6c\u7801\u5904\u7406", "file_num_lines": 129, "diff_parsed": {"added": [[4, "import com.duoqu.commons.fmj.model.VideoFile;"], [8, "import com.google.common.base.Stopwatch;"], [10, "import org.apache.commons.lang3.StringUtils;"], [16, "import java.util.concurrent.TimeUnit;"], [33, "        VideoInfo vi = new VideoInfo();"], [37, "            vi.setSize(FileUtils.getFineSize(input));"], [38, "            if (vi.getSize() > 0) {"], [39, "                return FFmpegUtils.regInfo(runProcess(commands), vi);"], [46, "        return vi;"], [62, "//            if (log.isInfoEnabled()) {"], [63, "//                log.info(\"screenshot commands :'{}'\", FFmpegUtils.ffmpegCmdLine(commands));"], [64, "//            }"], [65, "//            try {"], [66, "//                pb = new ProcessBuilder();"], [67, "//                pb.command(commands);"], [68, "//                pb.redirectErrorStream(true);"], [69, "//                pro = pb.start();"], [70, "//                int ret = pro.waitFor();"], [71, "//                if (log.isInfoEnabled())"], [72, "//                    log.info(\"screent process run status:'{}'\", ret);"], [73, "//                if (output != null && output.exists())"], [74, "//                    return output;"], [75, "//            } catch (IOException e) {"], [76, "//                if (log.isErrorEnabled())"], [77, "//                    log.error(\"video '{}' screenshot IOException :'{} '\", input.getAbsoluteFile(), e.getCause().getMessage());"], [78, "//                e.printStackTrace();"], [79, "//            } catch (InterruptedException e) {"], [80, "//                if (log.isErrorEnabled())"], [81, "//                    log.error(\"video '{}' screenshot InterruptedException :'{} '\", input.getAbsoluteFile(), e.getCause().getMessage());"], [82, "//                e.printStackTrace();"], [83, "//            }"], [84, "            if (StringUtils.isNotEmpty(runProcess(commands))) {"], [85, "                return output;"], [108, "//            if (log.isInfoEnabled()) {"], [109, "//                log.info(\"generation HLS commands : '{}'\", FFmpegUtils.ffmpegCmdLine(commands));"], [110, "//            }"], [111, "//            pb = new ProcessBuilder();"], [112, "//            pb.command(commands);"], [113, "//            try {"], [114, "//                pro = pb.start();"], [115, "//                int ret = pro.waitFor();"], [116, "//                if (log.isInfoEnabled())"], [117, "//                    log.info(\"screent process run status:'{}'\", ret);"], [118, "//                HLS hls = new HLS();"], [119, "//                hls.setM3u8(output);"], [120, "//                hls.setTs(FileUtils.findTS(output));"], [121, "//                return hls;"], [122, "//            } catch (IOException e) {"], [123, "//                if (log.isErrorEnabled())"], [124, "//                    log.error(\"video '{}' generationHls IOException :'{} '\", input.getAbsoluteFile(), e.getCause().getMessage());"], [125, "//                e.printStackTrace();"], [126, "//            } catch (InterruptedException e) {"], [127, "//                if (log.isErrorEnabled())"], [128, "//                    log.error(\"video '{}' generationHls InterruptedException :'{} '\", input.getAbsoluteFile(), e.getCause().getMessage());"], [129, "//                e.printStackTrace();"], [130, "//            }"], [131, "            if (StringUtils.isNotEmpty(runProcess(commands))) {"], [146, "    /**"], [147, "     * \u8f6c\u6362\u89c6\u9891\u683c\u5f0f\u4e3aMP4"], [148, "     *"], [149, "     * @param input"], [150, "     * @return"], [151, "     */"], [152, "    public static VideoFile coverToMp4(File input) {"], [153, "        VideoFile vf = new VideoFile(input, FileUtils.getMp4OutputByInput(input));"], [154, "        if (vf.getTarget() != null) {"], [155, "            vf.setInputInfo(getVideoInfo(input));"], [156, "            if (vf.getInputInfo().getSize() > 0"], [157, "                    && !BaseCommandOption.H264.equals(vf.getInputInfo().getFormat())) {"], [158, "                List<String> commands = Lists.newArrayList(BaseCommandOption.getFFmpegBinary());"], [159, "                commands.addAll(BaseCommandOption.toMP4CmdArrays(input.getAbsolutePath(), vf.getTarget().getAbsolutePath()));"], [160, ""], [161, "                if (StringUtils.isNotEmpty(runProcess(commands))) {"], [162, "                    vf.setTargetInfo(getVideoInfo(vf.getTarget()));"], [163, "                    vf.setSuccess(true);"], [164, "                    return vf;"], [165, "                }"], [166, "            }"], [167, ""], [168, "        }"], [169, "        return vf;"], [170, "    }"], [171, ""], [172, "    /**"], [173, "     * \u6267\u884c\u547d\u4ee4"], [174, "     *"], [175, "     * @param commands"], [176, "     * @return"], [177, "     */"], [178, "    private static String runProcess(List<String> commands) {"], [179, "        try {"], [180, "            return runProcess(commands, null);"], [181, "        } catch (Exception e) {"], [182, "            e.printStackTrace();"], [183, "        }"], [184, "        return null;"], [185, "    }"], [186, ""], [187, "    /**"], [188, "     * \u6267\u884c\u547d\u4ee4"], [189, "     *"], [190, "     * @param commands"], [191, "     * @param handler"], [192, "     * @return"], [193, "     * @throws Exception"], [194, "     */"], [198, "        Stopwatch stopwatch = Stopwatch.createStarted();"], [227, "            stopwatch.stop();"], [228, "        }"], [229, "        if (log.isInfoEnabled()) {"], [230, "            log.info(\"ffmpeg run {} seconds, {} milliseconds\","], [231, "                    stopwatch.elapsed(TimeUnit.SECONDS),"], [232, "                    stopwatch.elapsed(TimeUnit.MILLISECONDS));"]], "deleted": [[30, ""], [33, "//            if (log.isInfoEnabled())"], [34, "//                log.info(\"get video info commands : '{}'\", FFmpegUtils.ffmpegCmdLine(commands));"], [35, "            try {"], [36, "                VideoInfo vi = new VideoInfo(new FileInputStream(input).available());"], [37, "//                pb = new ProcessBuilder();"], [38, "//                pb.command(commands);"], [39, "//"], [40, "//                pb.redirectErrorStream(true);"], [41, "//"], [42, "//"], [43, "//                pro = pb.start();"], [44, "//                BufferedReader buf = null;"], [45, "//                buf = new BufferedReader(new InputStreamReader(pro.getInputStream()));"], [46, "//                StringBuffer sb = new StringBuffer();"], [47, "//                String line = null;"], [48, "//                while ((line = buf.readLine()) != null) {"], [49, "//                    sb.append(line);"], [50, "//                    continue;"], [51, "//                }"], [52, "//"], [53, "//                int ret = pro.waitFor();"], [54, "//                if (log.isInfoEnabled())"], [55, "//                    log.info(\"get video info process run status:'{}'\", ret);"], [56, "                FFmpegUtils.regInfo(runProcess(commands, null), vi);"], [57, "                return vi;"], [58, "            } catch (IOException e) {"], [59, "                if (log.isErrorEnabled())"], [60, "                    log.error(\"video '{}' get info IOException :'{} '\", input.getAbsoluteFile(), e.getCause().getMessage());"], [61, "                e.printStackTrace();"], [62, "            } catch (InterruptedException e) {"], [63, "                if (log.isErrorEnabled())"], [64, "                    log.error(\"video '{}' get info InterruptedException :'{} '\", input.getAbsoluteFile(), e.getCause().getMessage());"], [65, "                e.printStackTrace();"], [66, "            } catch (Exception e) {"], [67, "                if (log.isErrorEnabled())"], [68, "                    log.error(\"video '{}' get info Exception :'{} '\", input.getAbsoluteFile(), e.getCause().getMessage());"], [69, "                e.printStackTrace();"], [76, "        return null;"], [92, "            if (log.isInfoEnabled()) {"], [93, "                log.info(\"screenshot commands :'{}'\", FFmpegUtils.ffmpegCmdLine(commands));"], [94, "            }"], [95, "            try {"], [96, "                pb = new ProcessBuilder();"], [97, "                pb.command(commands);"], [98, "                pb.redirectErrorStream(true);"], [99, "                pro = pb.start();"], [100, "                int ret = pro.waitFor();"], [101, "                if (log.isInfoEnabled())"], [102, "                    log.info(\"screent process run status:'{}'\", ret);"], [103, "                if (output != null && output.exists())"], [104, "                    return output;"], [105, "            } catch (IOException e) {"], [106, "                if (log.isErrorEnabled())"], [107, "                    log.error(\"video '{}' screenshot IOException :'{} '\", input.getAbsoluteFile(), e.getCause().getMessage());"], [108, "                e.printStackTrace();"], [109, "            } catch (InterruptedException e) {"], [110, "                if (log.isErrorEnabled())"], [111, "                    log.error(\"video '{}' screenshot InterruptedException :'{} '\", input.getAbsoluteFile(), e.getCause().getMessage());"], [112, "                e.printStackTrace();"], [135, "            if (log.isInfoEnabled()) {"], [136, "                log.info(\"generation HLS commands : '{}'\", FFmpegUtils.ffmpegCmdLine(commands));"], [137, "            }"], [138, "            pb = new ProcessBuilder();"], [139, "            pb.command(commands);"], [140, "            try {"], [141, "                pro = pb.start();"], [142, "                int ret = pro.waitFor();"], [143, "                if (log.isInfoEnabled())"], [144, "                    log.info(\"screent process run status:'{}'\", ret);"], [149, "            } catch (IOException e) {"], [150, "                if (log.isErrorEnabled())"], [151, "                    log.error(\"video '{}' generationHls IOException :'{} '\", input.getAbsoluteFile(), e.getCause().getMessage());"], [152, "                e.printStackTrace();"], [153, "            } catch (InterruptedException e) {"], [154, "                if (log.isErrorEnabled())"], [155, "                    log.error(\"video '{}' generationHls InterruptedException :'{} '\", input.getAbsoluteFile(), e.getCause().getMessage());"], [156, "                e.printStackTrace();"]]}, "num_lines_added": 113, "num_lines_removed": 78}