{"hash": "d1a67f924648eca702a4dd4e790c30234e8add8d", "message": "Using NIO instead of threads for asyncronous requests - Closes #3", "file_num_lines": 52, "diff_parsed": {"added": [[33, "import java.util.concurrent.ExecutionException;"], [34, "import java.util.concurrent.Future;"], [35, ""], [36, "import org.json.JSONException;"], [46, "\tpublic void testRequests() throws JSONException {"], [66, ""], [67, "\t@Test"], [68, "\tpublic void testAsync() throws JSONException, InterruptedException, ExecutionException {"], [69, "\t\tFuture<HttpResponse<JsonNode>> future = Unirest.post(\"http://httpbin.org/post\")"], [70, "\t\t\t\t .header(\"accept\", \"application/json\")"], [71, "\t\t\t\t .field(\"param1\", \"value1\")"], [72, "\t\t\t\t .field(\"param2\",\"bye\")"], [73, "\t\t\t\t .asJsonAsync();"], [74, ""], [75, "\t\tassertNotNull(future);"], [76, "\t\tHttpResponse<JsonNode> jsonResponse = future.get();"], [77, ""], [78, "\t\tassertTrue(jsonResponse.getHeaders().size() > 0);"], [79, "\t\tassertTrue(jsonResponse.getBody().toString().length() > 0);"], [80, "\t\tassertFalse(jsonResponse.getRawBody() == null);"], [81, "\t\tassertEquals(200, jsonResponse.getCode());"], [82, ""], [83, "\t\tJsonNode json = jsonResponse.getBody();"], [84, "\t\tassertFalse(json.isArray());"], [85, "\t\tassertNotNull(json.getObject());"], [86, "\t\tassertNotNull(json.getArray());"], [87, "\t\tassertEquals(1, json.getArray().length());"], [88, "\t\tassertNotNull(json.getArray().get(0));"], [89, "\t}"]], "deleted": [[42, "\tpublic void testRequests() throws Exception {"]]}, "num_lines_added": 29, "num_lines_removed": 1}