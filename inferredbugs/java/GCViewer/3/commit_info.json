{"hash": "a0821f382d6c705f21fb369b7b422a19c0dad1ce", "message": "fix problem \"failed to recognize file format\" on valid gc-log (specific chars of GC Type not in first 3 KB)", "file_num_lines": 109, "diff_parsed": {"added": [[24, "    private static final int MAX_ATTEMPT_COUNT = 100;"], [28, "        DataReader dataReader = null;"], [29, "        long nextPos = 0;"], [30, "        String chunkOfLastLine = null;"], [31, "        int attemptCount = 0;"], [32, "        while (attemptCount < MAX_ATTEMPT_COUNT) {"], [33, "            in.mark(FOUR_KB + (int) nextPos);"], [34, "            if (nextPos > 0) {"], [35, "                long skipped = in.skip(nextPos);"], [36, "                if (skipped != nextPos) {"], [37, "                    break;"], [38, "                }"], [39, "            }"], [40, "            byte[] buf = new byte[ONE_KB * 3];"], [41, "            int length = in.read(buf);"], [42, "            in.reset();"], [43, ""], [44, "            if (length <= 0) {"], [45, "                break;"], [46, "            }"], [47, "            nextPos += length;"], [48, ""], [49, "            String s = new String(buf, 0, length, \"ASCII\");"], [50, "            if (chunkOfLastLine != null && chunkOfLastLine.length() > 0) {"], [51, "                s = chunkOfLastLine + s;"], [52, "            }"], [53, "            dataReader = getDataReaderBySample(s, in);"], [54, "            if (dataReader != null) {"], [55, "                break;"], [56, "            }"], [57, ""], [58, "            int index = s.lastIndexOf('\\n');"], [59, "            if (index >= 0) {"], [60, "                chunkOfLastLine = s.substring(index + 1, s.length());"], [61, "            } else {"], [62, "                chunkOfLastLine = \"\";"], [63, "            }"], [64, "            attemptCount++;"], [65, "        }"], [66, ""], [67, "        if (dataReader == null) {"], [68, "            if (LOG.isLoggable(Level.SEVERE)) LOG.severe(localStrings.getString(\"datareaderfactory_instantiation_failed\"));"], [69, "            throw new IOException(localStrings.getString(\"datareaderfactory_instantiation_failed\"));"], [70, "        }"], [71, "        return dataReader;"], [72, "    }"], [73, ""], [74, "    private DataReader getDataReaderBySample(String s, InputStream in) throws IOException {"], [94, "            // G1 logger usually starts with \"<timestamp>: [GC pause (young)...]\""], [98, "            // all 1.6 lines end with a block like this \"[Times: user=1.13 sys=0.08, real=0.95 secs]\""], [121, "        } else if (s.indexOf(\"<verbosegc version=\\\"\") != -1) {"], [124, "        } else if (s.indexOf(\"starting collection, threshold allocation reached.\") != -1) {"], [127, "        }"], [128, "        return null;"]], "deleted": [[27, "        in.mark(FOUR_KB);"], [28, "        byte[] buf = new byte[ONE_KB * 3];"], [29, "        int length = in.read(buf);"], [30, "        in.reset();"], [31, "        String s = new String(buf, 0, length, \"ASCII\");"], [51, "        \t// G1 logger usually starts with \"<timestamp>: [GC pause (young)...]\""], [55, "        \t// all 1.6 lines end with a block like this \"[Times: user=1.13 sys=0.08, real=0.95 secs]\""], [78, "        } else if (s.indexOf(\"<verbosegc version=\\\"\") != -1) {"], [81, "        } else if (s.indexOf(\"starting collection, threshold allocation reached.\") != -1) {"], [84, "        } else"], [85, "            if (LOG.isLoggable(Level.SEVERE)) LOG.severe(localStrings.getString(\"datareaderfactory_instantiation_failed\"));"], [86, "            throw new IOException(localStrings.getString(\"datareaderfactory_instantiation_failed\"));"]]}, "num_lines_added": 54, "num_lines_removed": 12}