{"hash": "6a349b0db485a585f067900a30174f78bdb1dfe8", "message": "refactor DataReaderIBM_J9_R28 to extend AbstractDataReader (#175)", "file_num_lines": 69, "diff_parsed": {"added": [[8, "import java.io.IOException;"], [15, "import com.tagtraum.perf.gcviewer.model.GCResource;"], [23, ""], [24, "    private InputStream getInputStream(String fileName) throws IOException {"], [25, "        return UnittestHelper.getResourceAsStream(UnittestHelper.FOLDER_IBM, fileName);"], [26, "    }"], [27, ""], [28, "    private DataReader getDataReader(GCResource gcResource) throws IOException {"], [29, "        return new DataReaderIBM_J9_R28(gcResource, getInputStream(gcResource.getResourceName()));"], [30, "    }"], [36, "        GCResource gcResource = new GCResource(\"SampleIBMJ9_R28_full_header.txt\");"], [37, "        gcResource.getLogger().addHandler(handler);"], [39, "        DataReader reader = getDataReader(gcResource);"], [69, "        GCResource gcResource = new GCResource(\"SampleIBMJ9_R28_global.txt\");"], [70, "        gcResource.getLogger().addHandler(handler);"], [72, "        DataReader reader = getDataReader(gcResource);"], [83, "    @Test"], [84, "    public void testConcurrentMinimal() throws Exception {"], [85, "        // there are minimal concurrent blocks, that don't contain any information, that the parser can use (at least, at the moment)"], [86, "        TestLogHandler handler = new TestLogHandler();"], [87, "        handler.setLevel(Level.WARNING);"], [88, "        GCResource gcResource = new GCResource(\"SampleIBMJ9_R28_concurrentMinimal.txt\");"], [89, "        gcResource.getLogger().addHandler(handler);"], [90, ""], [91, "        DataReader reader = getDataReader(gcResource);"], [92, "        GCModel model = reader.read();"], [93, ""], [94, "        assertThat(\"model size\", model.size(), is(0));"], [95, "        assertThat(\"number of errors\", handler.getCount(), is(0));"], [96, "    }"], [97, ""]], "deleted": [[10, "import java.util.logging.Logger;"], [22, "    private static final Logger IMP_LOGGER = Logger.getLogger(\"com.tagtraum.perf.gcviewer.imp\");"], [23, "    private static final Logger DATA_READER_FACTORY_LOGGER = Logger.getLogger(\"com.tagtraum.perf.gcviewer.DataReaderFactory\");"], [29, "        IMP_LOGGER.addHandler(handler);"], [30, "        DATA_READER_FACTORY_LOGGER.addHandler(handler);"], [32, "        InputStream in = UnittestHelper.getResourceAsStream(UnittestHelper.FOLDER_IBM, \"SampleIBMJ9_R28_full_header.txt\");"], [33, "        DataReader reader = new DataReaderIBM_J9_R28(in);"], [63, "        IMP_LOGGER.addHandler(handler);"], [64, "        DATA_READER_FACTORY_LOGGER.addHandler(handler);"], [66, "        InputStream in = UnittestHelper.getResourceAsStream(UnittestHelper.FOLDER_IBM, \"SampleIBMJ9_R28_global.txt\");"], [67, "        DataReader reader = new DataReaderIBM_J9_R28(in);"]]}, "num_lines_added": 31, "num_lines_removed": 11}