{"hash": "0f26d6584638602bc74a1b39cc7993a69e7cc2af", "message": "Add check for non anonymous identity before extracting auth header\n\nFixes #251.", "file_num_lines": 2389, "diff_parsed": {"added": [[397, "        if (!anonymousIdentity) {"], [398, "            boolean haveDate = true;"], [399, ""], [400, "            AuthenticationType finalAuthType = null;"], [401, "            if (authHeader.authenticationType == AuthenticationType.AWS_V2 &&"], [402, "                    (authenticationType == AuthenticationType.AWS_V2 ||"], [403, "                    authenticationType == AuthenticationType.AWS_V2_OR_V4)) {"], [404, "                finalAuthType = AuthenticationType.AWS_V2;"], [405, "            } else if ("], [406, "                authHeader.authenticationType == AuthenticationType.AWS_V4 &&"], [407, "                        (authenticationType == AuthenticationType.AWS_V4 ||"], [408, "                    authenticationType == AuthenticationType.AWS_V2_OR_V4)) {"], [409, "                finalAuthType = AuthenticationType.AWS_V4;"], [410, "            } else if (authenticationType != AuthenticationType.NONE) {"], [411, "                throw new S3Exception(S3ErrorCode.ACCESS_DENIED);"], [412, "            }"], [414, "            if (hasXAmzDateHeader) { //format diff between v2 and v4"], [415, "                if (finalAuthType == AuthenticationType.AWS_V2) {"], [416, "                    dateSkew = request.getDateHeader(\"x-amz-date\");"], [417, "                    dateSkew /= 1000;"], [418, "                    //case sensetive?"], [419, "                } else if (finalAuthType == AuthenticationType.AWS_V4) {"], [420, "                    logger.debug(\"into process v4 {}\","], [421, "                            request.getHeader(\"x-amz-date\"));"], [422, ""], [423, "                    dateSkew = parseIso8601(request.getHeader(\"x-amz-date\"));"], [424, "                }"], [425, "            } else if (request.getParameter(\"X-Amz-Date\") != null) { // v4 query"], [426, "                String dateString = request.getParameter(\"X-Amz-Date\");"], [427, "                dateSkew = parseIso8601(dateString);"], [428, "            } else if (hasDateHeader) {"], [429, "                try {"], [430, "                    dateSkew = request.getDateHeader(HttpHeaders.DATE);"], [431, "                    logger.debug(\"dateheader {}\", dateSkew);"], [432, "                } catch (IllegalArgumentException iae) {"], [433, "                    throw new S3Exception(S3ErrorCode.ACCESS_DENIED, iae);"], [434, "                }"], [436, "                logger.debug(\"dateheader {}\", dateSkew);"], [438, "            } else {"], [439, "                haveDate = false;"], [441, "            logger.debug(\"dateSkew {}\", dateSkew);"], [442, "            if (haveDate) {"], [443, "                isTimeSkewed(dateSkew);"]], "deleted": [[397, "        boolean haveDate = true;"], [398, ""], [399, "        AuthenticationType finalAuthType = null;"], [400, "        if (authHeader.authenticationType == AuthenticationType.AWS_V2 &&"], [401, "            (authenticationType == AuthenticationType.AWS_V2 ||"], [402, "            authenticationType == AuthenticationType.AWS_V2_OR_V4)) {"], [403, "            finalAuthType = AuthenticationType.AWS_V2;"], [404, "        } else if (authHeader.authenticationType == AuthenticationType.AWS_V4 &&"], [405, "            (authenticationType == AuthenticationType.AWS_V4 ||"], [406, "            authenticationType == AuthenticationType.AWS_V2_OR_V4)) {"], [407, "            finalAuthType = AuthenticationType.AWS_V4;"], [408, "        } else if (authenticationType != AuthenticationType.NONE) {"], [409, "            throw new S3Exception(S3ErrorCode.ACCESS_DENIED);"], [410, "        }"], [412, "        if (hasXAmzDateHeader) { //format diff between v2 and v4"], [413, "            if (finalAuthType == AuthenticationType.AWS_V2) {"], [414, "                dateSkew = request.getDateHeader(\"x-amz-date\");"], [416, "                //case sensetive?"], [417, "            } else if (finalAuthType == AuthenticationType.AWS_V4) {"], [418, "                logger.debug(\"into process v4 {}\","], [419, "                    request.getHeader(\"x-amz-date\"));"], [421, "                dateSkew = parseIso8601(request.getHeader(\"x-amz-date\"));"], [423, "        } else if (request.getParameter(\"X-Amz-Date\") != null) { // v4 query"], [424, "            String dateString = request.getParameter(\"X-Amz-Date\");"], [425, "            dateSkew = parseIso8601(dateString);"], [426, "        } else if (hasDateHeader) {"], [427, "            try {"], [428, "                dateSkew = request.getDateHeader(HttpHeaders.DATE);"], [429, "                logger.debug(\"dateheader {}\", dateSkew);"], [430, "            } catch (IllegalArgumentException iae) {"], [431, "                throw new S3Exception(S3ErrorCode.ACCESS_DENIED, iae);"], [433, "            dateSkew /= 1000;"], [434, "            logger.debug(\"dateheader {}\", dateSkew);"], [435, ""], [436, "        } else {"], [437, "            haveDate = false;"], [438, "        }"], [439, "        logger.debug(\"dateSkew {}\", dateSkew);"], [440, "        if (haveDate) {"], [441, "            isTimeSkewed(dateSkew);"]]}, "num_lines_added": 43, "num_lines_removed": 40}