{"hash": "2bd8c29ac857d8d186c64005ffa45412483f7619", "message": "Fix reading PDF from stdOut, don't divert through stdOut when writing to file", "file_num_lines": 100, "diff_parsed": {"added": [[14, "    static final String STDOUT = \"-\";"], [15, ""], [72, "        File file = new File(path);"], [73, "        getPDF(path);"], [74, "        return file;"], [75, "\t}"], [76, ""], [77, "    public File saveAs(String path, byte[] document) throws IOException {"], [81, "        bufferedOutputStream.write(document);"], [86, "    }"], [88, "    public byte[] getPDF(String path) throws IOException, InterruptedException {"], [93, "        String command = this.commandWithParameters() + Symbol.separator + path;"], [107, "        while(stdOutStream.available()>0) {"], [111, "        while(stdErrStream.available()>0) {"], [123, "    public byte[] getPDF() throws IOException, InterruptedException {"], [124, "        return getPDF(STDOUT);"], [125, "    }"], [126, ""]], "deleted": [[70, "        byte[] pdf = this.getPDF();"], [74, "        bufferedOutputStream.write(pdf);"], [79, "\t}"], [81, "    public byte[] getPDF() throws IOException, InterruptedException {"], [86, "        String command = this.commandWithParameters() + Symbol.separator + \"-\";"], [100, "        for(int i = 0; i < stdOutStream.available(); i++) {"], [104, "        for(int i = 0; i < stdErrStream.available(); i++) {"]]}, "num_lines_added": 18, "num_lines_removed": 7}