{"hash": "5412a04628c598636621d615523a1fbf8717d271", "message": "Creating temporary files for htmlAsString inputs #8", "file_num_lines": 123, "diff_parsed": {"added": [[8, "import org.apache.commons.io.FileUtils;"], [14, "import java.util.UUID;"], [100, "    private String[] getCommandAsArray() throws IOException {"], [115, ""], [116, "                File temp = File.createTempFile(\"java-wkhtmltopdf-wrapper\" + UUID.randomUUID().toString(), \".html\");"], [117, "                FileUtils.writeStringToFile(temp, page.getSource(), \"UTF-8\");"], [118, ""], [119, "                page.setSource(temp.getAbsolutePath());"], [121, ""], [122, "            commandLine.add(page.getSource());"], [128, "    public String getCommand() throws IOException {"]], "deleted": [[73, "        for (Page page : pages) {"], [74, "            if (page.getType().equals(PageType.htmlAsString)) {"], [75, "                OutputStream stdInStream = process.getOutputStream();"], [76, "                stdInStream.write(page.getSource().getBytes(\"UTF-8\"));"], [77, "                stdInStream.close();"], [78, "            }"], [79, "        }"], [80, ""], [106, "    private String[] getCommandAsArray() {"], [121, "                commandLine.add(STDINOUT);"], [122, "            } else {"], [123, "                commandLine.add(page.getSource());"], [130, "    public String getCommand() {"]]}, "num_lines_added": 11, "num_lines_removed": 13}