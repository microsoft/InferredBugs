{"hash": "a7aeb872ec2698ea288e23735d9870529f5306be", "message": "#231 Missing unix permissions when adding file via stream", "file_num_lines": 441, "diff_parsed": {"added": [[16, "import java.nio.file.attribute.DosFileAttributeView;"], [17, "import java.nio.file.attribute.DosFileAttributes;"], [18, "import java.nio.file.attribute.FileTime;"], [19, "import java.nio.file.attribute.PosixFileAttributeView;"], [20, "import java.nio.file.attribute.PosixFilePermission;"], [21, "import java.util.ArrayList;"], [22, "import java.util.Arrays;"], [23, "import java.util.HashSet;"], [24, "import java.util.List;"], [25, "import java.util.Set;"], [26, ""], [27, "import static java.nio.file.attribute.PosixFilePermission.GROUP_EXECUTE;"], [28, "import static java.nio.file.attribute.PosixFilePermission.GROUP_READ;"], [29, "import static java.nio.file.attribute.PosixFilePermission.GROUP_WRITE;"], [30, "import static java.nio.file.attribute.PosixFilePermission.OTHERS_EXECUTE;"], [31, "import static java.nio.file.attribute.PosixFilePermission.OTHERS_READ;"], [32, "import static java.nio.file.attribute.PosixFilePermission.OTHERS_WRITE;"], [33, "import static java.nio.file.attribute.PosixFilePermission.OWNER_EXECUTE;"], [34, "import static java.nio.file.attribute.PosixFilePermission.OWNER_READ;"], [35, "import static java.nio.file.attribute.PosixFilePermission.OWNER_WRITE;"], [37, "import static net.lingala.zip4j.util.InternalZipConstants.BUFF_SIZE;"], [38, "import static net.lingala.zip4j.util.InternalZipConstants.FILE_SEPARATOR;"], [39, "import static net.lingala.zip4j.util.InternalZipConstants.ZIP_FILE_SEPARATOR;"], [44, "  public static final byte[] DEFAULT_POSIX_FILE_ATTRIBUTES = new byte[] {0, 0, -128, -127}; //-rw-------"], [45, "  public static final byte[] DEFAULT_POSIX_FOLDER_ATTRIBUTES = new byte[] {0, 0, -128, 65}; //drw-------"], [46, "  private static final String OPERATING_SYSTEM_NAME = System.getProperty(\"os.name\").toLowerCase();"], [47, ""], [53, "    if (isWindows()) {"], [55, "    } else if (isMac() || isUnix()) {"], [84, "      if (isWindows()) {"], [86, "      } else if (isMac() || isUnix()) {"], [401, "  public static byte[] getDefaultFileAttributes(boolean isDirectory) {"], [402, "    byte[] permissions = new byte[4];"], [403, "    if (isUnix() || isMac()) {"], [404, "      if (isDirectory) {"], [405, "        System.arraycopy(DEFAULT_POSIX_FOLDER_ATTRIBUTES, 0, permissions, 0, permissions.length);"], [406, "      } else {"], [407, "        System.arraycopy(DEFAULT_POSIX_FILE_ATTRIBUTES, 0, permissions, 0, permissions.length);"], [408, "      }"], [409, "    }"], [410, "    return permissions;"], [411, "  }"], [412, ""], [413, "  public static boolean isWindows() {"], [414, "    return (OPERATING_SYSTEM_NAME.contains(\"win\"));"], [415, "  }"], [416, ""], [417, "  public static boolean isMac() {"], [418, "    return (OPERATING_SYSTEM_NAME.contains(\"mac\"));"], [419, "  }"], [420, ""], [421, "  public static boolean isUnix() {"], [422, "    return (OPERATING_SYSTEM_NAME.contains(\"nux\"));"], [423, "  }"], [424, ""]], "deleted": [[16, "import java.nio.file.attribute.*;"], [17, "import java.util.*;"], [18, ""], [19, "import static java.nio.file.attribute.PosixFilePermission.*;"], [21, "import static net.lingala.zip4j.util.InternalZipConstants.*;"], [31, "    String os = System.getProperty(\"os.name\").toLowerCase();"], [32, "    if (isWindows(os)) {"], [34, "    } else if (isMac(os) || isUnix(os)) {"], [63, "      String os = System.getProperty(\"os.name\").toLowerCase();"], [64, "      if (isWindows(os)) {"], [66, "      } else if (isMac(os) || isUnix(os)) {"], [506, ""], [507, "  public static boolean isWindows() {"], [508, "    String os = System.getProperty(\"os.name\").toLowerCase();"], [509, "    return isWindows(os);"], [510, "  }"], [511, ""], [512, "  private static boolean isWindows(String os) {"], [513, "    return (os.contains(\"win\"));"], [514, "  }"], [515, ""], [516, "  private static boolean isMac(String os) {"], [517, "    return (os.contains(\"mac\"));"], [518, "  }"], [519, ""], [520, "  private static boolean isUnix(String os) {"], [521, "    return (os.contains(\"nux\"));"], [522, "  }"], [523, ""]]}, "num_lines_added": 55, "num_lines_removed": 29}