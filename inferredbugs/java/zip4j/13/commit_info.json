{"hash": "fd6b4ce84e25f9e16babd8e127d1a0be308ebe13", "message": "Fix bug when renaming and removing entries with zip64 and datadescriptor", "file_num_lines": 152, "diff_parsed": {"added": [[50, "        SplitOutputStream outputStream = new SplitOutputStream(temporaryFile)) {"], [65, "        long lengthToCopy = HeaderUtil.getOffsetOfNextEntry(zipModel, fileHeader) - outputStream.getFilePointer();"], [74, "          currentFileCopyPointer = copyEntryAndChangeFileName(newFileNameBytes, fileHeader, currentFileCopyPointer, lengthToCopy,"], [101, "  private long copyEntryAndChangeFileName(byte[] newFileNameBytes, FileHeader fileHeader, long start, long totalLengthOfEntry,"], [116, "    long remainingLengthToCopy = totalLengthOfEntry - (currentFileCopyPointer - start);"]], "deleted": [[6, "import net.lingala.zip4j.io.outputstream.CountingOutputStream;"], [26, "import static net.lingala.zip4j.headers.HeaderUtil.getDataDescriptorSize;"], [27, "import static net.lingala.zip4j.headers.HeaderUtil.getLocalFileHeaderSize;"], [28, ""], [54, "        OutputStream outputStream = new CountingOutputStream(new SplitOutputStream(temporaryFile))) {"], [71, "          long lengthToCopy = getLocalFileHeaderSize(fileHeader) + fileHeader.getCompressedSize() + getDataDescriptorSize(zipModel, fileHeader);"], [78, "          currentFileCopyPointer = copyEntryAndChangeFileName(newFileNameBytes, fileHeader, currentFileCopyPointer,"], [105, "  private long copyEntryAndChangeFileName(byte[] newFileNameBytes, FileHeader fileHeader, long start,"], [120, "    long remainingLengthToCopy = fileHeader.getExtraFieldLength() + fileHeader.getCompressedSize() + getDataDescriptorSize(zipModel, fileHeader);"]]}, "num_lines_added": 5, "num_lines_removed": 9}