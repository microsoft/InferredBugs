{"hash": "e6d49788f782ee7f03c01dc24de7ab1af78df7b9", "message": "fix bug", "file_num_lines": 54, "diff_parsed": {"added": [[3, "import cn.hutool.core.util.ObjectUtil;"], [5, "import com.fasterxml.jackson.databind.ObjectMapper;"], [6, "import com.suke.czx.authentication.detail.CustomUserDetailsService;"], [8, "import com.suke.czx.common.utils.R;"], [9, "import lombok.SneakyThrows;"], [13, "import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;"], [15, "import org.springframework.security.core.userdetails.UserDetails;"], [16, "import org.springframework.security.web.authentication.WebAuthenticationDetailsSource;"], [34, "    private CustomUserDetailsService customUserDetailsService;"], [35, "    private ObjectMapper objectMapper = new ObjectMapper();"], [37, "    public AuthenticationTokenFilter(AuthenticationManager authenticationManager,RedisTemplate template,CustomUserDetailsService customUserDetailsService) {"], [40, "        this.customUserDetailsService = customUserDetailsService;"], [46, "        if(StrUtil.isNotBlank(token) && !StrUtil.equals(token,\"null\")){"], [47, "            Object userId = redisTemplate.opsForValue().get(token);"], [48, "            if(ObjectUtil.isNull(userId)){"], [49, "                writer(response,\"\u65e0\u6548token\");"], [50, "                return;"], [51, "            }"], [52, "            UserDetails userDetails = customUserDetailsService.loadUserByUserId((Long) userId);"], [53, "            UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken(userDetails, null, userDetails.getAuthorities());"], [54, "            authentication.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));"], [59, ""], [60, ""], [61, "    @SneakyThrows"], [62, "    public void writer(HttpServletResponse response,String msg){"], [63, "        response.setContentType(\"application/json;charset=UTF-8\");"], [64, "        response.setStatus(HttpServletResponse.SC_OK);"], [65, "        response.getWriter().write(objectMapper.writeValueAsString(R.error(HttpServletResponse.SC_UNAUTHORIZED,msg)));"], [66, "    }"]], "deleted": [[5, "import com.suke.czx.common.serialization.RedisTokenStoreSerializationStrategy;"], [9, "import org.springframework.security.core.Authentication;"], [28, "    private RedisTokenStoreSerializationStrategy serialization;"], [30, "    public AuthenticationTokenFilter(AuthenticationManager authenticationManager,RedisTemplate template,RedisTokenStoreSerializationStrategy serialization) {"], [33, "        this.serialization = serialization;"], [39, "        if(StrUtil.isNotBlank(token)){"], [40, "            byte[] key = serialization.serialize(token);"], [41, "            byte[] value = redisTemplate.getConnectionFactory().getConnection().get(key);"], [42, "            Authentication authentication = serialization.deserialize(value,Authentication.class);"]]}, "num_lines_added": 29, "num_lines_removed": 9}