{"hash": "5bcc996f909200e9d503027434598c153a2ef239", "message": "client: Fix how 401 and 403 responses are handled\n\nWhen we get a HTTP 401 or 403 from the server, try the next SSH key if\nthere are any more available. If we've tried all the available keys, just\nreturn the 401 or 403 response to the caller.", "file_num_lines": 298, "diff_parsed": {"added": [[236, ""], [239, ""], [240, "              final HttpURLConnection connection = connect0(realUri, method, entity, headers,"], [243, ""], [244, "              final int responseCode = connection.getResponseCode();"], [245, "              if (((responseCode == HTTP_FORBIDDEN) || (responseCode == HTTP_UNAUTHORIZED))"], [246, "                  && !identities.isEmpty()) {"], [247, "                // there was some sort of security error. if we have any more SSH identities to try,"], [248, "                // retry with the next available identity"], [249, "                log.debug(\"retrying with next SSH identity since {} failed\", identity.getComment());"], [250, "                continue;"], [251, "              }"], [252, ""], [253, "              return connection;"], [262, "          } while (false);"], [299, "        @Override public boolean verify(String ip, SSLSession sslSession) {"], [300, "          final String tHostname ="], [301, "              hostname.endsWith(\".\") ? hostname.substring(0, hostname.length() - 1) : hostname;"]], "deleted": [[234, "          boolean tryNextIdentity = false;"], [239, "              return connect0(realUri, method, entity, headers,"], [242, "            } catch (SecurityException e) {"], [243, "              // there was some sort of security error. if we have any more SSH identities to try,"], [244, "              // retry with the next available identity"], [245, "              log.debug(e.toString());"], [246, "              tryNextIdentity = !identities.isEmpty();"], [255, "          } while (tryNextIdentity);"], [259, "            agentProxy = null;"], [293, "        @Override"], [294, "        public boolean verify(String ip, SSLSession sslSession) {"], [295, "          final String tHostname = hostname.endsWith(\".\") ?"], [296, "                                   hostname.substring(0, hostname.length() - 1) : hostname;"], [329, "    } else if ((responseCode == HTTP_FORBIDDEN) || (responseCode == HTTP_UNAUTHORIZED)) {"], [330, "      throw new SecurityException(\"Response code: \" + responseCode);"]]}, "num_lines_added": 18, "num_lines_removed": 15}