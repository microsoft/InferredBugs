{"hash": "bef9f92020462b8ef4ca15dcd8cbf425d48296e6", "message": "DefaultZooKeeperClient: Remove more now un-needed ZK namespace related code", "file_num_lines": 337, "diff_parsed": {"added": [[233, "      return ZKUtil.listSubTreeBFS(client.getZookeeperClient().getZooKeeper(), path);"]], "deleted": [[20, "import com.google.common.collect.ImmutableList;"], [21, ""], [51, "import static com.google.common.base.Strings.isNullOrEmpty;"], [235, ""], [236, "    // namespace the path since we're using zookeeper directly"], [237, "    final String namespace = emptyToNull(client.getNamespace());"], [238, "    final String namespacedPath = ZKPaths.fixForNamespace(namespace, path);"], [239, ""], [241, "      final List<String> paths = ZKUtil.listSubTreeBFS("], [242, "          client.getZookeeperClient().getZooKeeper(), namespacedPath);"], [243, ""], [244, "      if (isNullOrEmpty(namespace)) {"], [245, "        return paths;"], [246, "      } else {"], [247, "        // hide the namespace in the paths returned from zookeeper"], [248, "        final ImmutableList.Builder<String> builder = ImmutableList.builder();"], [249, "        for (final String p : paths) {"], [250, "          final String fixed;"], [251, "          if (p.startsWith(\"/\" + namespace)) {"], [252, "            fixed = (p.length() > namespace.length() + 1)"], [253, "                    ? p.substring(namespace.length() + 1)"], [254, "                    : \"/\";"], [255, "          } else {"], [256, "            fixed = p;"], [257, "          }"], [258, ""], [259, "          builder.add(fixed);"], [260, "        }"], [261, ""], [262, "        return builder.build();"], [263, "      }"]]}, "num_lines_added": 1, "num_lines_removed": 31}