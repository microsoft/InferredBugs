{"hash": "d09be1747e503ec61dbe3e50dbf6121f14f0f750", "message": "extract duplicate function in JobStart/StopCommand", "file_num_lines": 45, "diff_parsed": {"added": [[20, "import com.spotify.helios.cli.Utils;"], [72, "    return Utils.setGoalOnHosts(client, out, json, hosts, deployment,"], [73, "        options.getString(tokenArg.getDest()));"]], "deleted": [[24, "import com.spotify.helios.common.protocol.SetGoalResponse;"], [72, "    int code = 0;"], [73, ""], [74, "    for (final String host : hosts) {"], [75, "      if (!json) {"], [76, "        out.printf(\"%s: \", host);"], [77, "      }"], [78, "      final String token = options.getString(tokenArg.getDest());"], [79, "      final SetGoalResponse result = client.setGoal(deployment, host, token).get();"], [80, "      if (result.getStatus() == SetGoalResponse.Status.OK) {"], [81, "        if (json) {"], [82, "          out.printf(result.toJsonString());"], [83, "        } else {"], [84, "          out.printf(\"done%n\");"], [85, "        }"], [86, "      } else {"], [87, "        if (json) {"], [88, "          out.printf(result.toJsonString());"], [89, "        } else {"], [90, "          out.printf(\"failed: %s%n\", result);"], [91, "        }"], [92, "        code = 1;"], [93, "      }"], [94, "    }"], [95, ""], [96, "    return code;"]]}, "num_lines_added": 3, "num_lines_removed": 26}