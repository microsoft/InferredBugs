{"hash": "7b99f08059f9d5c850623ca3baaeac8e4a73c64b", "message": "Attempt to clarify role of thin.force\n\nIf user has thin.dryrun=true and *doesn't* set thin.force, then we\nassume that thin.force is also true. To dry run and force\ndependency resolution user needs to set both flags.\n\nCommented out test that asserts the pre-computed logs\n\nFixes gh-75", "file_num_lines": 614, "diff_parsed": {"added": [[199, "\t\t\treturn aetherDependencies(model.getDependencies(), properties);"], [243, "\t\t\tList<org.apache.maven.model.Dependency> dependencies, Properties properties) {"], [251, "\t\tList<ArtifactResult> result = collectNonTransitive(list, properties);"], [288, "\t\t// TODO: do we need a version of this with non-empty properties?"], [289, "\t\treturn collectNonTransitive(Arrays.asList(dependency), new Properties())"], [290, "\t\t\t\t.iterator().next().getArtifact().getFile();"], [354, "\t\t\tRepositorySystemSession session, Properties properties) {"], [368, "\t\t\tRepositorySystemSession session, Properties properties) {"], [409, "\t\t\tRepositorySystemSession session, List<ArtifactRepository> list, String id,"], [410, "\t\t\tString url, boolean releases, boolean snapshots) {"], [423, "\t\t\tRepositorySystemSession session, String id, String url, boolean releases,"], [424, "\t\t\tboolean snapshots) {"], [456, "\t\t\tRepositorySystemSession session, RemoteRepository remote,"], [572, "\tprivate List<ArtifactResult> collectNonTransitive(List<Dependency> dependencies,"], [573, "\t\t\tProperties properties) {"], [575, "\t\t\tDefaultRepositorySystemSession session = createSession(properties);"], [576, "\t\t\tList<ArtifactRequest> artifactRequests = getArtifactRequests(dependencies,"], [577, "\t\t\t\t\tsession);"], [578, "\t\t\tList<ArtifactResult> result = this.repositorySystem.resolveArtifacts(session,"], [579, "\t\t\t\t\tartifactRequests);"], [587, "\tprivate List<ArtifactRequest> getArtifactRequests(List<Dependency> dependencies,"], [588, "\t\t\tRepositorySystemSession session) {"], [593, "\t\t\trequest.setRepositories("], [594, "\t\t\t\t\taetherRepositories(settings, session, new Properties()));"]], "deleted": [[199, "\t\t\treturn aetherDependencies(model.getDependencies());"], [243, "\t\t\tList<org.apache.maven.model.Dependency> dependencies) {"], [251, "\t\tList<ArtifactResult> result = collectNonTransitive(list);"], [288, "\t\treturn collectNonTransitive(Arrays.asList(dependency)).iterator().next()"], [289, "\t\t\t\t.getArtifact().getFile();"], [353, "\t\t\tDefaultRepositorySystemSession session, Properties properties) {"], [367, "\t\t\tDefaultRepositorySystemSession session, Properties properties) {"], [408, "\t\t\tDefaultRepositorySystemSession session, List<ArtifactRepository> list,"], [409, "\t\t\tString id, String url, boolean releases, boolean snapshots) {"], [422, "\t\t\tDefaultRepositorySystemSession session, String id, String url,"], [423, "\t\t\tboolean releases, boolean snapshots) {"], [455, "\t\t\tDefaultRepositorySystemSession session, RemoteRepository remote,"], [571, "\tprivate List<ArtifactResult> collectNonTransitive(List<Dependency> dependencies) {"], [573, "\t\t\tList<ArtifactRequest> artifactRequests = getArtifactRequests(dependencies);"], [574, "\t\t\tList<ArtifactResult> result = this.repositorySystem"], [575, "\t\t\t\t\t.resolveArtifacts(createSession(new Properties()), artifactRequests);"], [583, "\tprivate List<ArtifactRequest> getArtifactRequests(List<Dependency> dependencies) {"], [588, "\t\t\tDefaultRepositorySystemSession session;"], [589, "\t\t\ttry {"], [590, "\t\t\t\tsession = createSession(new Properties());"], [591, "\t\t\t\trequest.setRepositories("], [592, "\t\t\t\t\t\taetherRepositories(settings, session, new Properties()));"], [593, "\t\t\t}"], [594, "\t\t\tcatch (NoLocalRepositoryManagerException e) {"], [595, "\t\t\t\tthrow new IllegalStateException(\"No local repository manager\", e);"], [596, "\t\t\t}"]]}, "num_lines_added": 24, "num_lines_removed": 26}