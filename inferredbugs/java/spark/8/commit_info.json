{"hash": "6bd72ca93c4312d3cd1ee4ff5ec8c6a2fcbe02ac", "message": "Added support for reading resources from multiple locations in classpath\n\n - Changed ClassPathResourceHandler to generically read classpath\n   contents, whether files are physical or inside jars\n - Removed JarResourceHandler\n - Slightly changed the ClassPathResourceHandlerTest tests to\n   support the code changed\n\nOverall the expected functionality is not modified", "file_num_lines": 104, "diff_parsed": {"added": [[117, ""], [118, "            if (staticResourceHandlers == null) {"], [119, "                staticResourceHandlers = new ArrayList<>();"], [121, ""], [122, "            staticResourceHandlers.add(new ClassPathResourceHandler(folder, \"index.html\"));"], [123, "            LOG.info(\"StaticResourceHandler configured with folder = \" + folder);"]], "deleted": [[20, "import java.io.InputStream;"], [36, "import spark.resource.ClassPathResource;"], [40, "import spark.resource.JarResourceHandler;"], [53, "    private List<JarResourceHandler> jarResourceHandlers = null;"], [72, "        if (consumeWithJarResourceHandler(httpRequest, httpResponse)) {"], [73, "            return true;"], [74, "        }"], [75, ""], [102, "    private boolean consumeWithJarResourceHandler(HttpServletRequest httpRequest,"], [103, "                                                  HttpServletResponse httpResponse) throws IOException {"], [104, "        if (jarResourceHandlers != null) {"], [105, ""], [106, "            for (JarResourceHandler jarResourceHandler : jarResourceHandlers) {"], [107, "                InputStream stream = jarResourceHandler.getResource(httpRequest);"], [108, ""], [109, "                if (stream != null) {"], [110, "                    OutputStream wrappedOutputStream = GzipUtils.checkAndWrap(httpRequest, httpResponse, false);"], [111, "                    customHeaders.forEach(httpResponse::setHeader); //add all user-defined headers to response"], [112, ""], [113, "                    IOUtils.copy(stream, wrappedOutputStream);"], [114, ""], [115, "                    wrappedOutputStream.flush();"], [116, "                    wrappedOutputStream.close();"], [117, ""], [118, "                    return true;"], [119, "                }"], [120, "            }"], [121, "        }"], [122, "        return false;"], [123, "    }"], [124, ""], [135, "        if (jarResourceHandlers != null) {"], [136, "            jarResourceHandlers.clear();"], [137, "            jarResourceHandlers = null;"], [138, "        }"], [139, ""], [153, "            try {"], [154, "                ClassPathResource resource = new ClassPathResource(folder);"], [155, ""], [156, "                if (configureJarCase(folder, resource)) {"], [157, "                    return;"], [158, "                }"], [159, ""], [160, "                if (!resource.getFile().isDirectory()) {"], [161, "                    LOG.error(\"Static resource location must be a folder\");"], [162, "                    return;"], [163, "                }"], [164, ""], [165, "                if (staticResourceHandlers == null) {"], [166, "                    staticResourceHandlers = new ArrayList<>();"], [167, "                }"], [168, ""], [169, "                staticResourceHandlers.add(new ClassPathResourceHandler(folder, \"index.html\"));"], [170, "                LOG.info(\"StaticResourceHandler configured with folder = \" + folder);"], [171, "            } catch (IOException e) {"], [172, "                LOG.error(\"Error when creating StaticResourceHandler\", e);"], [179, "    private boolean configureJarCase(String folder, ClassPathResource resource) throws IOException {"], [180, "        if (resource.getURL().getProtocol().equals(\"jar\")) {"], [181, ""], [182, "            InputStream stream = StaticFilesConfiguration.class.getResourceAsStream(folder);"], [183, ""], [184, "            if (stream != null) {"], [185, "                if (jarResourceHandlers == null) {"], [186, "                    jarResourceHandlers = new ArrayList<>();"], [187, "                }"], [188, ""], [189, "                // Add jar file resource handler"], [190, "                jarResourceHandlers.add(new JarResourceHandler(folder, \"index.html\"));"], [191, "                staticResourcesSet = true;"], [192, "                return true;"], [193, "            } else {"], [194, "                LOG.error(\"Static file configuration failed.\");"], [195, "            }"], [196, ""], [197, "        }"], [198, "        return false;"], [199, "    }"], [200, ""]]}, "num_lines_added": 6, "num_lines_removed": 78}