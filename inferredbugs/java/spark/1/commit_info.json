{"hash": "e4e52f2d091d350097c72ce753640456f6b96a2c", "message": "Added support for PATCH method + refactor SparkTestUtil to use Apache HttpClient to support PATCH", "file_num_lines": 144, "diff_parsed": {"added": [[15, "import static spark.util.SparkTestUtil.sleep;"], [16, ""], [22, ""], [24, ""], [30, ""], [33, "        testUtil = new SparkTestUtil(PORT);"], [34, ""], [35, "        final Server server = new Server();"], [37, ""], [38, "        // Set some timeout options to make debugging easier."], [39, "        connector.setIdleTimeout(1000 * 60 * 60);"], [40, "        connector.setSoLingerTime(-1);"], [41, "        connector.setPort(PORT);"], [42, "        server.setConnectors(new Connector[]{connector});"], [43, ""], [44, "        WebAppContext bb = new WebAppContext();"], [45, "        bb.setServer(server);"], [46, "        bb.setContextPath(SOMEPATH);"], [47, "        bb.setWar(\"src/test/webapp\");"], [48, ""], [49, "        server.setHandler(bb);"], [50, ""], [51, "        new Thread(new Runnable() {"], [58, "                    System.out.println(\">>> STOPPING EMBEDDED JETTY SERVER\");"], [64, "                }"], [67, ""], [68, "        sleep(1000);"], [70, ""], [81, ""], [92, ""], [102, ""], [113, ""], [136, "    @Test"], [139, "            UrlResponse urlResponse = testUtil.doMethod(\"GET\", SOMEPATH + \"/protected/resource\", null);"], [140, "            Assert.assertTrue(urlResponse.status == 401);"], [141, "        } catch (Throwable e) {"], [142, "            throw new RuntimeException(e);"], [146, "    @Test"], [149, "            UrlResponse urlResponse = testUtil.doMethod(\"GET\", SOMEPATH + \"/no/resource\", null);"], [150, "            Assert.assertTrue(urlResponse.status == 404);"], [151, "        } catch (Throwable e) {"], [152, "            throw new RuntimeException(e);"], [155, ""]], "deleted": [[3, "import static spark.util.SparkTestUtil.sleep;"], [4, ""], [5, "import java.io.FileNotFoundException;"], [6, "import java.io.IOException;"], [7, ""], [9, ""], [17, ""], [27, ""], [29, ""], [35, ""], [38, "\t\ttestUtil = new SparkTestUtil(PORT);"], [39, ""], [40, "\t\tfinal Server server = new Server();"], [42, ""], [43, "\t\t// Set some timeout options to make debugging easier."], [44, "\t\tconnector.setIdleTimeout(1000 * 60 * 60);"], [45, "\t\tconnector.setSoLingerTime(-1);"], [46, "\t\tconnector.setPort(PORT);"], [47, "\t\tserver.setConnectors(new Connector[] { connector });"], [48, ""], [49, "\t\tWebAppContext bb = new WebAppContext();"], [50, "\t\tbb.setServer(server);"], [51, "\t\tbb.setContextPath(SOMEPATH);"], [52, "\t\tbb.setWar(\"src/test/webapp\");"], [53, ""], [54, "\t\tserver.setHandler(bb);"], [55, ""], [56, "\t\tnew Thread(new Runnable() {"], [63, "                    System.out.println(\">>> STOPPING EMBEDDED JETTY SERVER\");"], [69, "                }"], [72, ""], [73, "\t\tsleep(1000);"], [75, ""], [86, ""], [97, ""], [107, ""], [118, ""], [141, "    @Test(expected = IOException.class)"], [144, "            testUtil.doMethod(\"GET\", SOMEPATH + \"/protected/resource\", null);"], [145, "        } catch (Exception e) {"], [146, "            Assert.assertTrue(e.getMessage().contains(\"401\"));"], [147, "            throw e;"], [151, "    @Test(expected = FileNotFoundException.class)"], [154, "            testUtil.doMethod(\"GET\", SOMEPATH + \"/no/resource\", null);"], [155, "        } catch (Exception e) {"], [156, "            throw e;"], [159, ""]]}, "num_lines_added": 43, "num_lines_removed": 47}