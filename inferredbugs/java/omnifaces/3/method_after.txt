 @SuppressWarnings("unchecked")
	@Produces
	@Param
	public <V> ParamValue<V> produce(InjectionPoint injectionPoint) {

		// @Param is the annotation on the injection point that holds all data for this request parameter
		Param requestParameter = getQualifier(injectionPoint, Param.class);

		FacesContext context = getContext();
		UIComponent component = getViewRoot();
		
		// TODO: Save/restore existing potentially existing label?
		component.getAttributes().put("label", getLabel(requestParameter, injectionPoint));

		// Get raw submitted value from the request
		String submittedValue = getRequestParameter(getName(requestParameter, injectionPoint));
		Object convertedValue = null;
		boolean valid = true;

		try {
			
			// Convert the submitted value
			
			Converter converter = getConverter(requestParameter, getTargetType(injectionPoint));
			if (converter != null) {
				convertedValue = converter.getAsObject(context, component, submittedValue);
			} else {
				convertedValue = submittedValue;
			}

			// Validate the converted value
			
			for (Validator validator : getValidators(requestParameter)) {
				try {
					validator.validate(context, component, convertedValue);
				} catch (ValidatorException ve) {
					valid = false;
					addValidatorMessages(context, component, submittedValue, ve, requestParameter.validatorMessage());
				}
			}
		} catch (ConverterException ce) {
			valid = false;
			addConverterMessage(context, component, submittedValue, ce, requestParameter.converterMessage());
		}

		if (!valid) {
			context.validationFailed();
			convertedValue = null;
		}

		return (ParamValue<V>) new ParamValue<Object>(convertedValue);
	}