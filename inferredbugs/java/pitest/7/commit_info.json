{"hash": "3a2aaecce95a68cb681afbcb0f2c9f426d498079", "message": "switched temporary files for sockets", "file_num_lines": 60, "diff_parsed": {"added": [[31, "import org.pitest.util.SafeDataInputStream;"], [43, "      final int port = Integer.valueOf(args[0]);"], [44, "      s = new Socket(\"localhost\", port);"], [46, "      final SafeDataInputStream dis = new SafeDataInputStream("], [47, "          s.getInputStream());"], [49, "      final SlaveArguments paramsFromParent = dis.read(SlaveArguments.class);"], [58, "      final List<TestUnit> tus = getTestsFromParent(dis);"], [85, "  private static List<TestUnit> getTestsFromParent(final SafeDataInputStream dis)"], [87, "    final int count = dis.readInt();"], [88, "    final List<TestUnit> tus = new ArrayList<TestUnit>(count);"], [89, "    for (int i = 0; i != count; i++) {"], [90, "      tus.add(dis.read(TestUnit.class));"], [92, "    LOG.fine(\"Receiving \" + count + \" tests from parent\");"]], "deleted": [[19, "import java.io.BufferedReader;"], [20, "import java.io.File;"], [21, "import java.io.FileInputStream;"], [23, "import java.io.InputStreamReader;"], [32, "import org.pitest.internal.IsolationUtils;"], [46, "      final File input = new File(args[0]);"], [48, "      LOG.fine(\"Input file is \" + input);"], [50, "      final BufferedReader br = new BufferedReader(new InputStreamReader("], [51, "          new FileInputStream(input)));"], [53, "      final SlaveArguments paramsFromParent = (SlaveArguments) IsolationUtils"], [54, "          .fromTransportString(br.readLine());"], [60, "      br.close();"], [61, ""], [65, "      s = new Socket(\"localhost\", paramsFromParent.getPort());"], [66, ""], [67, "      final List<TestUnit> tus = getTestsFromParent(s);"], [94, "  private static List<TestUnit> getTestsFromParent(final Socket s)"], [96, "    final BufferedReader br = new BufferedReader(new InputStreamReader("], [97, "        s.getInputStream()));"], [98, "    final List<TestUnit> tus = new ArrayList<TestUnit>();"], [99, "    String line = br.readLine();"], [100, "    while (!line.equals(\"END\")) {"], [101, "      tus.add((TestUnit) IsolationUtils.fromTransportString(line));"], [102, "      line = br.readLine();"]]}, "num_lines_added": 13, "num_lines_removed": 24}