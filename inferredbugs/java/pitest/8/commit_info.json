{"hash": "3a2aaecce95a68cb681afbcb0f2c9f426d498079", "message": "switched temporary files for sockets", "file_num_lines": 98, "diff_parsed": {"added": [[23, "import java.net.Socket;"], [37, "import org.pitest.util.SafeDataInputStream;"], [47, "    Socket s = null;"], [49, "      final int port = Integer.valueOf(args[0]);"], [51, "      s = new Socket(\"localhost\", port);"], [53, "      final SafeDataInputStream dis = new SafeDataInputStream("], [54, "          s.getInputStream());"], [56, "      final SlaveArguments paramsFromParent = dis.read(SlaveArguments.class);"], [66, "      dis.close();"], [87, "      safelyCloseSocket(s);"], [92, "      safelyCloseSocket(s);"], [107, "  private static void safelyCloseSocket(final Socket s) {"], [108, "    if (s != null) {"], [109, "      try {"], [110, "        s.close();"], [111, "      } catch (final IOException e) {"], [112, "        LOG.log(Level.WARNING, \"Couldn't close scoket\", e);"], [113, "      }"], [114, "    }"], [115, "  }"], [116, ""]], "deleted": [[17, "import java.io.BufferedReader;"], [19, "import java.io.FileInputStream;"], [22, "import java.io.InputStreamReader;"], [48, ""], [50, "      final File input = new File(args[0]);"], [52, "      LOG.fine(\"Input file is \" + input);"], [54, "      final BufferedReader br = new BufferedReader(new InputStreamReader("], [55, "          new FileInputStream(input)));"], [57, "      final SlaveArguments paramsFromParent = (SlaveArguments) IsolationUtils"], [58, "          .fromTransportString(br.readLine());"], [68, "      br.close();"]]}, "num_lines_added": 21, "num_lines_removed": 11}