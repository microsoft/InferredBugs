{"hash": "05507e0c5fa644fe304a6ba3dc923f1af8c6e6f0", "message": "Support more board size (#460)", "file_num_lines": 932, "diff_parsed": {"added": [[20, "import java.util.regex.Matcher;"], [21, "import java.util.regex.Pattern;"], [29, "  private static final String alphabet = \"ABCDEFGHJKLMNOPQRSTUVWXYZ\";"], [82, "    String reg = \"(\\\\D+)(\\\\d+)\";"], [83, "    Pattern p = Pattern.compile(reg);"], [84, "    Matcher m = p.matcher(namedCoordinate);"], [85, "    if (m.find() && m.groupCount() == 2) {"], [86, "      int x = asDigit(m.group(1));"], [87, "      int y = boardSize - Integer.parseInt(m.group(2));"], [88, "      return Optional.of(new int[] {x, y});"], [89, "    }"], [90, "    return Optional.empty();"], [91, "  }"], [92, ""], [93, "  public static int asDigit(String name) {"], [94, "    // coordinates take the form C16 A19 Q5 K10 etc. I is not used."], [95, "    int base = alphabet.length();"], [96, "    char names[] = name.toCharArray();"], [97, "    int length = names.length;"], [98, "    if (length > 0) {"], [99, "      int x = 0;"], [100, "      for (int i = length - 1; i >= 0; i--) {"], [101, "        int index = alphabet.indexOf(names[i]);"], [102, "        if (index == -1) {"], [103, "          return index;"], [104, "        }"], [105, "        x += index * Math.pow(base, length - i - 1);"], [106, "      }"], [107, "      return x;"], [108, "    } else {"], [109, "      return -1;"], [110, "    }"], [111, "  }"], [112, ""], [113, "  public static String asName(int c) {"], [114, "    StringBuilder name = new StringBuilder();"], [115, "    int base = alphabet.length();"], [116, "    int n = c;"], [117, "    ArrayDeque<Integer> ad = new ArrayDeque<Integer>();"], [118, "    if (n > 0) {"], [119, "      while (n > 0) {"], [120, "        ad.addFirst(n < 25 && c >= 25 ? n % base - 1 : n % base);"], [121, "        n /= base;"], [122, "      }"], [123, "    } else {"], [124, "      ad.addFirst(n);"], [125, "    }"], [126, "    ad.forEach(i -> name.append(alphabet.charAt(i)));"], [127, "    return name.toString();"], [139, "    return asName(x) + (boardSize - y);"], [159, "    size = (size >= 2) ? size : 19;"], [162, "      Zobrist.init();"], [163, "      clear();"], [164, "      Lizzie.leelaz.sendCommand(\"boardsize \" + boardSize);"]], "deleted": [[27, "  private static final String alphabet = \"ABCDEFGHJKLMNOPQRST\";"], [80, "    int x = alphabet.indexOf(namedCoordinate.charAt(0));"], [81, "    int y = boardSize - Integer.parseInt(namedCoordinate.substring(1));"], [82, "    return Optional.of(new int[] {x, y});"], [94, "    return alphabet.charAt(x) + \"\" + (boardSize - y);"], [114, "    size = (size == 13 || size == 9) ? size : 19;"], [117, "      initialize();"]]}, "num_lines_added": 54, "num_lines_removed": 7}