{"hash": "1816cb81bbda2477e79aa35ce84752bc82c99d06", "message": "Fix some merge issues and change some description (#560)", "file_num_lines": 778, "diff_parsed": {"added": [[91, "    final Pattern SGF_PATTERN = Pattern.compile(\"(?s).*?(\\\\(\\\\s*;{0,1}.*\\\\))(?s).*?\");"], [102, "    int boardWidth = 19;"], [103, "    int boardHeight = 19;"], [116, "      Lizzie.board.reopen(boardWidth, boardHeight);"], [119, "    parseValue(value, null, false);"], [120, ""], [121, "    return true;"], [122, "  }"], [123, ""], [124, "  private static BoardHistoryList parseValue("], [125, "      String value, BoardHistoryList history, boolean isBranch) {"], [126, ""], [149, "    if (isBranch) {"], [150, "      subTreeDepth += 1;"], [151, "      // Initialize the step count"], [152, "      subTreeStepMap.put(subTreeDepth, 0);"], [153, "    }"], [188, "                if (history == null) {"], [189, "                  Lizzie.board.previousMove();"], [190, "                } else {"], [191, "                  history.previous();"], [192, "                }"], [239, "              if (history == null) {"], [240, "                Lizzie.board.pass(color, newBranch, false);"], [241, "              } else {"], [242, "                history.pass(color, newBranch, false);"], [243, "              }"], [245, "              if (history == null) {"], [246, "                Lizzie.board.place(move[0], move[1], color, newBranch);"], [247, "              } else {"], [248, "                history.place(move[0], move[1], color, newBranch);"], [249, "              }"], [252, "              if (history == null) {"], [253, "                processPendingPros(Lizzie.board.getHistory(), pendingProps);"], [254, "              } else {"], [255, "                processPendingPros(history, pendingProps);"], [256, "              }"], [263, "              if (history == null) {"], [264, "                Lizzie.board.comment(tagContent);"], [265, "              } else {"], [266, "                history.getData().comment = tagContent;"], [267, "              }"], [269, "          } else if (tag.equals(\"LZ\") && Lizzie.config.holdBestMovesToSgf && history == null) {"], [294, "              if (history == null) {"], [295, "                Lizzie.board.addNodeProperty(tag, tagContent);"], [296, "              } else {"], [297, "                history.addNodeProperty(tag, tagContent);"], [298, "              }"], [303, "                if (history == null) {"], [304, "                  Lizzie.board.pass(color, newBranch, true);"], [305, "                } else {"], [306, "                  history.pass(color, newBranch, true);"], [307, "                }"], [309, "                  if (history == null) {"], [310, "                    processPendingPros(Lizzie.board.getHistory(), pendingProps);"], [311, "                  } else {"], [312, "                    processPendingPros(history, pendingProps);"], [313, "                  }"], [317, "              if (history == null) {"], [318, "                Lizzie.board.addNodeProperty(tag, tagContent);"], [319, "              } else {"], [320, "                history.addNodeProperty(tag, tagContent);"], [321, "              }"], [323, "                if (history == null) {"], [324, "                  Lizzie.board.addStone(move[0], move[1], color);"], [325, "                } else {"], [326, "                  history.addStone(move[0], move[1], color);"], [327, "                }"], [331, "                if (history == null) {"], [332, "                  Lizzie.board.pass(color);"], [333, "                } else {"], [334, "                  history.pass(color);"], [335, "                }"], [337, "                if (history == null) {"], [338, "                  Lizzie.board.place(move[0], move[1], color);"], [339, "                } else {"], [340, "                  history.place(move[0], move[1], color);"], [341, "                }"], [342, "              }"], [343, "              if (history == null) {"], [344, "                Lizzie.board.flatten();"], [345, "              } else {"], [346, "                history.flatten();"], [351, "            if (history == null) {"], [352, "              Lizzie.board.getHistory().getGameInfo().setPlayerBlack(blackPlayer);"], [353, "            } else {"], [354, "              history.getGameInfo().setPlayerBlack(blackPlayer);"], [355, "            }"], [358, "            if (history == null) {"], [359, "              Lizzie.board.getHistory().getGameInfo().setPlayerWhite(whitePlayer);"], [360, "            } else {"], [361, "              history.getGameInfo().setPlayerWhite(whitePlayer);"], [362, "            }"], [368, "              if (history == null) {"], [369, "                Lizzie.board.setKomi(Double.parseDouble(tagContent));"], [370, "              } else {"], [371, "                history.getGameInfo().setKomi(Double.parseDouble(tagContent));"], [372, "              }"], [373, "            } catch (NumberFormatException e) {"], [374, "              e.printStackTrace();"], [375, "            }"], [376, "          } else if (tag.equals(\"HA\")) {"], [377, "            try {"], [378, "              if (tagContent.trim().isEmpty()) {"], [379, "                tagContent = \"0\";"], [380, "              }"], [381, "              int handicap = Integer.parseInt(tagContent);"], [382, "              if (history == null) {"], [383, "                Lizzie.board.getHistory().getGameInfo().setHandicap(handicap);"], [384, "              } else {"], [385, "                history.getGameInfo().setHandicap(handicap);"], [386, "              }"], [399, "                      ((history == null"], [400, "                                  && Lizzie.board.getHistory().getLastMoveColor() == Stone.WHITE)"], [401, "                              || (history != null && history.getLastMoveColor() == Stone.WHITE))"], [405, "                  if (history == null) {"], [406, "                    Lizzie.board.pass(color, newBranch, true);"], [407, "                  } else {"], [408, "                    history.pass(color, newBranch, true);"], [409, "                  }"], [411, "                    if (history == null) {"], [412, "                      processPendingPros(Lizzie.board.getHistory(), pendingProps);"], [413, "                    } else {"], [414, "                      processPendingPros(history, pendingProps);"], [415, "                    }"], [419, "                if (history == null) {"], [420, "                  Lizzie.board.addNodeProperty(tag, tagContent);"], [421, "                } else {"], [422, "                  history.addNodeProperty(tag, tagContent);"], [423, "                }"], [426, "                  if (history == null) {"], [427, "                    Lizzie.board.removeStone("], [428, "                        move[0], move[1], tag.equals(\"AB\") ? Stone.BLACK : Stone.WHITE);"], [429, "                  } else {"], [430, "                    history.removeStone("], [431, "                        move[0], move[1], tag.equals(\"AB\") ? Stone.BLACK : Stone.WHITE);"], [432, "                  }"], [439, "                  if (history == null) {"], [440, "                    Lizzie.board.addNodeProperty(tag, tagContent);"], [441, "                  } else {"], [442, "                    history.addNodeProperty(tag, tagContent);"], [443, "                  }"], [471, "    if (isBranch) {"], [472, "      history.toBranchTop();"], [473, "    } else {"], [474, "      Lizzie.frame.setPlayers(whitePlayer, blackPlayer);"], [475, "      if (history == null) {"], [476, "        if (!Utils.isBlank(gameProperties.get(\"RE\"))"], [477, "            && Utils.isBlank(Lizzie.board.getHistory().getData().comment)) {"], [478, "          Lizzie.board.getHistory().getData().comment = gameProperties.get(\"RE\");"], [479, "        }"], [481, "        // Rewind to game start"], [482, "        while (Lizzie.board.previousMove()) ;"], [484, "        // Set AW/AB Comment"], [485, "        if (!headComment.isEmpty()) {"], [486, "          Lizzie.board.comment(headComment);"], [487, "          Lizzie.frame.refresh();"], [488, "        }"], [489, "        if (gameProperties.size() > 0) {"], [490, "          Lizzie.board.addNodeProperties(gameProperties);"], [491, "        }"], [492, "      } else {"], [493, "        if (!Utils.isBlank(gameProperties.get(\"RE\")) && Utils.isBlank(history.getData().comment)) {"], [494, "          history.getData().comment = gameProperties.get(\"RE\");"], [495, "        }"], [497, "        // Rewind to game start"], [498, "        while (history.previous().isPresent()) ;"], [499, ""], [500, "        // Set AW/AB Comment"], [501, "        if (!headComment.isEmpty()) {"], [502, "          history.getData().comment = headComment;"], [503, "        }"], [504, "        if (gameProperties.size() > 0) {"], [505, "          history.getData().addProperties(gameProperties);"], [506, "        }"], [507, "      }"], [508, "    }"], [509, "    return history;"], [910, "  public static BoardHistoryList parseSgf(String value) {"], [911, "    BoardHistoryList history = null;"], [912, ""], [913, "    // Drop anything outside \"(;...)\""], [914, "    final Pattern SGF_PATTERN = Pattern.compile(\"(?s).*?(\\\\(\\\\s*;{0,1}.*\\\\))(?s).*?\");"], [915, "    Matcher sgfMatcher = SGF_PATTERN.matcher(value);"], [916, "    if (sgfMatcher.matches()) {"], [917, "      value = sgfMatcher.group(1);"], [918, "    } else {"], [919, "      return history;"], [920, "    }"], [921, ""], [922, "    // Determine the SZ property"], [923, "    Pattern szPattern = Pattern.compile(\"(?s).*?SZ\\\\[(\\\\d+)\\\\](?s).*\");"], [924, "    Matcher szMatcher = szPattern.matcher(value);"], [925, "    int boardWidth = 19;"], [926, "    int boardHeight = 19;"], [927, "    if (szMatcher.matches()) {"], [928, "      String sizeStr = szMatcher.group(1);"], [929, "      Pattern sizePattern = Pattern.compile(\"([\\\\d]+):([\\\\d]+)\");"], [930, "      Matcher sizeMatcher = sizePattern.matcher(sizeStr);"], [931, "      if (sizeMatcher.matches()) {"], [932, "        boardWidth = Integer.parseInt(sizeMatcher.group(1));"], [933, "        boardHeight = Integer.parseInt(sizeMatcher.group(2));"], [934, "      } else {"], [935, "        boardWidth = boardHeight = Integer.parseInt(sizeStr);"], [936, "      }"], [937, "    }"], [938, "    history = new BoardHistoryList(BoardData.empty(boardWidth, boardHeight));"], [939, ""], [940, "    parseValue(value, history, false);"], [941, ""], [942, "    return history;"], [943, "  }"], [944, ""], [945, "  public static int parseBranch(BoardHistoryList history, String value) {"], [946, "    parseValue(value, history, true);"], [947, "    return history.getCurrentHistoryNode().numberOfChildren() - 1;"], [948, "  }"], [949, ""], [950, "  private static boolean isSgf(String value) {"], [951, "    final Pattern SGF_PATTERN = Pattern.compile(\"(?s).*?(\\\\(\\\\s*;{0,1}.*\\\\))(?s).*?\");"], [952, "    Matcher sgfMatcher = SGF_PATTERN.matcher(value);"], [953, "    return sgfMatcher.matches();"], [954, "  }"], [955, ""]], "deleted": [[91, "    final Pattern SGF_PATTERN = Pattern.compile(\"(?s).*?(\\\\(\\\\s*;.*\\\\)).*?\");"], [114, "      Lizzie.board.reopen(19, 19);"], [173, "                Lizzie.board.previousMove();"], [220, "              Lizzie.board.pass(color, newBranch, false);"], [222, "              Lizzie.board.place(move[0], move[1], color, newBranch);"], [225, "              processPendingPros(Lizzie.board.getHistory(), pendingProps);"], [232, "              Lizzie.board.comment(tagContent);"], [234, "          } else if (tag.equals(\"LZ\") && Lizzie.config.holdBestMovesToSgf) {"], [259, "              Lizzie.board.addNodeProperty(tag, tagContent);"], [264, "                Lizzie.board.pass(color, newBranch, true);"], [266, "                  processPendingPros(Lizzie.board.getHistory(), pendingProps);"], [270, "              Lizzie.board.addNodeProperty(tag, tagContent);"], [272, "                Lizzie.board.addStone(move[0], move[1], color);"], [276, "                Lizzie.board.pass(color);"], [278, "                Lizzie.board.place(move[0], move[1], color);"], [280, "              Lizzie.board.flatten();"], [291, "              Lizzie.board.setKomi(Double.parseDouble(tagContent));"], [304, "                      Lizzie.board.getHistory().getLastMoveColor() == Stone.WHITE"], [308, "                  Lizzie.board.pass(color, newBranch, true);"], [310, "                    processPendingPros(Lizzie.board.getHistory(), pendingProps);"], [314, "                Lizzie.board.addNodeProperty(tag, tagContent);"], [317, "                  Lizzie.board.removeStone("], [318, "                      move[0], move[1], tag.equals(\"AB\") ? Stone.BLACK : Stone.WHITE);"], [325, "                  Lizzie.board.addNodeProperty(tag, tagContent);"], [353, "    Lizzie.frame.setPlayers(whitePlayer, blackPlayer);"], [355, "    // Rewind to game start"], [356, "    while (Lizzie.board.previousMove()) ;"], [358, "    // Set AW/AB Comment"], [359, "    if (!headComment.isEmpty()) {"], [360, "      Lizzie.board.comment(headComment);"], [361, "      Lizzie.frame.refresh();"], [362, "    }"], [363, "    if (gameProperties.size() > 0) {"], [364, "      Lizzie.board.addNodeProperties(gameProperties);"], [365, "    }"], [367, "    return true;"]]}, "num_lines_added": 224, "num_lines_removed": 36}