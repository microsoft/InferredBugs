{"hash": "b0214f95247b24afee4cfdba7daca9b607baa75c", "message": "\u91cd\u6784\u8c03\u7528\u94fe", "file_num_lines": 116, "diff_parsed": {"added": [[15, "import org.apache.commons.lang3.StringUtils;"], [16, "import org.jboss.logging.MDC;"], [35, "    public void logTraceHeader() {"], [36, "        String traceId = getTraceId();"], [37, "        String spanId = getSpanId();"], [38, "        MDC.put(DiscoveryConstant.TRACE_ID, DiscoveryConstant.TRACE_ID + \"=\" + (StringUtils.isNotEmpty(traceId) ? traceId : StringUtils.EMPTY));"], [39, "        MDC.put(DiscoveryConstant.SPAN_ID, DiscoveryConstant.SPAN_ID + \"=\" + (StringUtils.isNotEmpty(spanId) ? spanId : StringUtils.EMPTY));"], [40, "        MDC.put(DiscoveryConstant.N_D_SERVICE_GROUP, DiscoveryConstant.N_D_SERVICE_GROUP + \"=\" + strategyContextHolder.getHeader(DiscoveryConstant.N_D_SERVICE_GROUP));"], [41, "        MDC.put(DiscoveryConstant.N_D_SERVICE_TYPE, DiscoveryConstant.N_D_SERVICE_TYPE + \"=\" + strategyContextHolder.getHeader(DiscoveryConstant.N_D_SERVICE_TYPE));"], [42, "        MDC.put(DiscoveryConstant.N_D_SERVICE_ID, DiscoveryConstant.N_D_SERVICE_ID + \"=\" + strategyContextHolder.getHeader(DiscoveryConstant.N_D_SERVICE_ID));"], [43, "        MDC.put(DiscoveryConstant.N_D_SERVICE_ADDRESS, DiscoveryConstant.N_D_SERVICE_ADDRESS + \"=\" + strategyContextHolder.getHeader(DiscoveryConstant.N_D_SERVICE_ADDRESS));"], [44, "        MDC.put(DiscoveryConstant.N_D_SERVICE_VERSION, DiscoveryConstant.N_D_SERVICE_VERSION + \"=\" + strategyContextHolder.getHeader(DiscoveryConstant.N_D_SERVICE_VERSION));"], [45, "        MDC.put(DiscoveryConstant.N_D_SERVICE_REGION, DiscoveryConstant.N_D_SERVICE_REGION + \"=\" + strategyContextHolder.getHeader(DiscoveryConstant.N_D_SERVICE_REGION));"], [46, "        Map<String, String> customizationMap = getCustomizationMap();"], [47, "        if (MapUtils.isNotEmpty(customizationMap)) {"], [48, "            for (Map.Entry<String, String> entry : customizationMap.entrySet()) {"], [49, "                MDC.put(entry.getKey(), entry.getKey() + \"=\" + entry.getValue());"], [50, "            }"], [51, "        }"], [52, "    }"], [53, ""], [54, "    public void logTraceLocal() {"], [55, "        String traceId = getTraceId();"], [56, "        String spanId = getSpanId();"], [57, "        MDC.put(DiscoveryConstant.TRACE_ID, DiscoveryConstant.TRACE_ID + \"=\" + (StringUtils.isNotEmpty(traceId) ? traceId : StringUtils.EMPTY));"], [58, "        MDC.put(DiscoveryConstant.SPAN_ID, DiscoveryConstant.SPAN_ID + \"=\" + (StringUtils.isNotEmpty(spanId) ? spanId : StringUtils.EMPTY));"], [59, "        MDC.put(DiscoveryConstant.N_D_SERVICE_GROUP, DiscoveryConstant.N_D_SERVICE_GROUP + \"=\" + pluginAdapter.getGroup());"], [60, "        MDC.put(DiscoveryConstant.N_D_SERVICE_TYPE, DiscoveryConstant.N_D_SERVICE_TYPE + \"=\" + pluginAdapter.getServiceType());"], [61, "        MDC.put(DiscoveryConstant.N_D_SERVICE_ID, DiscoveryConstant.N_D_SERVICE_ID + \"=\" + pluginAdapter.getServiceId());"], [62, "        MDC.put(DiscoveryConstant.N_D_SERVICE_ADDRESS, DiscoveryConstant.N_D_SERVICE_ADDRESS + \"=\" + pluginAdapter.getHost() + \":\" + pluginAdapter.getPort());"], [63, "        MDC.put(DiscoveryConstant.N_D_SERVICE_VERSION, DiscoveryConstant.N_D_SERVICE_VERSION + \"=\" + pluginAdapter.getVersion());"], [64, "        MDC.put(DiscoveryConstant.N_D_SERVICE_REGION, DiscoveryConstant.N_D_SERVICE_REGION + \"=\" + pluginAdapter.getRegion());"], [65, "        Map<String, String> customizationMap = getCustomizationMap();"], [66, "        if (MapUtils.isNotEmpty(customizationMap)) {"], [67, "            for (Map.Entry<String, String> entry : customizationMap.entrySet()) {"], [68, "                MDC.put(entry.getKey(), entry.getKey() + \"=\" + entry.getValue());"], [69, "            }"], [70, "        }"], [71, "    }"], [72, ""], [79, "        String traceId = getTraceId();"], [80, "        String spanId = getSpanId();"], [81, "        System.out.println(DiscoveryConstant.TRACE_ID + \"=\" + (StringUtils.isNotEmpty(traceId) ? traceId : StringUtils.EMPTY));"], [82, "        System.out.println(DiscoveryConstant.SPAN_ID + \"=\" + (StringUtils.isNotEmpty(spanId) ? spanId : StringUtils.EMPTY));"], [89, "        Map<String, String> customizationMap = getCustomizationMap();"], [90, "        if (MapUtils.isNotEmpty(customizationMap)) {"], [91, "            for (Map.Entry<String, String> entry : customizationMap.entrySet()) {"], [92, "                System.out.println(entry.getKey() + \"=\" + entry.getValue());"], [93, "            }"], [94, "        }"], [104, "        String traceId = getTraceId();"], [105, "        String spanId = getSpanId();"], [106, "        System.out.println(DiscoveryConstant.TRACE_ID + \"=\" + (StringUtils.isNotEmpty(traceId) ? traceId : StringUtils.EMPTY));"], [107, "        System.out.println(DiscoveryConstant.SPAN_ID + \"=\" + (StringUtils.isNotEmpty(spanId) ? spanId : StringUtils.EMPTY));"], [114, "        Map<String, String> customizationMap = getCustomizationMap();"], [115, "        if (MapUtils.isNotEmpty(customizationMap)) {"], [116, "            for (Map.Entry<String, String> entry : customizationMap.entrySet()) {"], [117, "                System.out.println(entry.getKey() + \"=\" + entry.getValue());"], [118, "            }"], [119, "        }"], [131, "    public String getTraceId() {"], [132, "        return null;"], [133, "    }"], [134, ""], [135, "    public String getSpanId() {"], [136, "        return null;"], [137, "    }"], [138, ""], [139, "    public Map<String, String> getCustomizationMap() {"]], "deleted": [[39, "        Map<String, String> debugTraceMap = getDebugTraceMap();"], [40, "        if (MapUtils.isNotEmpty(debugTraceMap)) {"], [41, "            for (Map.Entry<String, String> entry : debugTraceMap.entrySet()) {"], [42, "                System.out.println(entry.getKey() + \"=\" + entry.getValue());"], [43, "            }"], [44, "        }"], [60, "        Map<String, String> debugTraceMap = getDebugTraceMap();"], [61, "        if (MapUtils.isNotEmpty(debugTraceMap)) {"], [62, "            for (Map.Entry<String, String> entry : debugTraceMap.entrySet()) {"], [63, "                System.out.println(entry.getKey() + \"=\" + entry.getValue());"], [64, "            }"], [65, "        }"], [83, "    public Map<String, String> getDebugTraceMap() {"]]}, "num_lines_added": 69, "num_lines_removed": 13}