{"hash": "feb43d4024d32c05e047d23f4af81c267dbe712a", "message": "VectorSpliterator: cleaner and faster forEachRemaining (#259, CVS rev. 1.38)", "file_num_lines": 117, "diff_parsed": {"added": [[37, "// CVS rev. 1.38"], [98, "        int hi = getFence();"], [99, "        Object[] a = array;"], [100, "        int i;"], [101, "        for (i = index, index = hi; i < hi; i++) {"], [102, "            action.accept((E) a[i]);"], [104, "        if (getModCount(list) != expectedModCount) {"], [105, "            throw new ConcurrentModificationException();"]], "deleted": [[37, "// CVS rev. 1.37"], [98, "        int i, hi; // hoist accesses and checks from loop"], [99, "        Vector<E> lst = list;"], [100, "        Object[] a;"], [101, "        if ((hi = fence) < 0) {"], [102, "            synchronized (lst) {"], [103, "                expectedModCount = getModCount(lst);"], [104, "                a = array = getData(lst);"], [105, "                hi = fence = getSize(lst);"], [106, "            }"], [107, "        } else {"], [108, "            a = array;"], [110, "        if (a != null && (i = index) >= 0 && (index = hi) <= a.length) {"], [111, "            while (i < hi) {"], [112, "                action.accept((E) a[i++]);"], [113, "            }"], [114, "            if (expectedModCount == getModCount(lst)) {"], [115, "                return;"], [116, "            }"], [118, "        throw new ConcurrentModificationException();"]]}, "num_lines_added": 8, "num_lines_removed": 20}