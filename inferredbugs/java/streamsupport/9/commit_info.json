{"hash": "9ff8150dbaed0c8e062e12a2c590c2f9c1ef3558", "message": "JDK-8169739: LinkedBlockingDeque spliterator support node self-linking (#251)", "file_num_lines": 180, "diff_parsed": {"added": [[31, "// CVS rev. 1.67"], [50, "    Object succ(Object p) {"], [73, "            forEachFrom(action, p);"], [159, "    /**"], [160, "     * Runs action on each element found during a traversal starting at p."], [161, "     * If p is null, traversal starts at head."], [162, "     */"], [163, "    void forEachFrom(Consumer<? super E> action, Object p) {"], [164, "        // Extract batches of elements while holding the lock; then"], [165, "        // run the action on the elements while not"], [166, "        ReentrantLock lock = queueLock;"], [167, "        final int batchSize = 32;       // max number of elements per batch"], [168, "        Object[] es = null;             // container for batch of elements"], [169, "        int n, len = 0;"], [170, "        do {"], [171, "            lock.lock();"], [172, "            try {"], [173, "                if (es == null) {"], [174, "                    if (p == null) p = getQueueFirst(queue);"], [175, "                    for (Object q = p; q != null; q = succ(q))"], [176, "                        if (getNodeItem(q) != null && ++len == batchSize)"], [177, "                            break;"], [178, "                    es = new Object[len];"], [179, "                }"], [180, "                for (n = 0; p != null && n < len; p = succ(p))"], [181, "                    if ((es[n] = getNodeItem(p)) != null)"], [182, "                        n++;"], [183, "            } finally {"], [184, "                // checkInvariants();"], [185, "                lock.unlock();"], [186, "            }"], [187, "            for (int i = 0; i < n; i++) {"], [188, "                @SuppressWarnings(\"unchecked\") E e = (E) es[i];"], [189, "                action.accept(e);"], [190, "            }"], [191, "        } while (n > 0 && p != null);"], [192, "    }"], [193, ""]], "deleted": [[31, "// CVS rev. 1.66"], [50, "    private Object succ(Object p) {"], [71, "            ReentrantLock lock = queueLock;"], [74, "            do {"], [75, "                E e = null;"], [76, "                lock.lock();"], [77, "                try {"], [78, "                    if (p != null || (p = getQueueFirst(queue)) != null)"], [79, "                        do {"], [80, "                            e = getNodeItem(p);"], [81, "                            p = succ(p);"], [82, "                        } while (e == null && p != null);"], [83, "                } finally {"], [84, "                    // checkInvariants();"], [85, "                    lock.unlock();"], [86, "                }"], [87, "                if (e != null)"], [88, "                    action.accept(e);"], [89, "            } while (p != null);"]]}, "num_lines_added": 38, "num_lines_removed": 19}