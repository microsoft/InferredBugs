{"hash": "bbebd77bd5848449306a942cdb517fac77150bae", "message": "Revert \"Fix TLV encoding for negative integer\"\n\nThis reverts commit 0e0bd6e1fdd09ddbdabed1ca0841c483d56975d5.", "file_num_lines": 161, "diff_parsed": {"added": [[54, "     * Encodes an integer value."], [58, "        long lValue = number.longValue();"], [59, "        if (lValue >= Byte.MIN_VALUE && lValue <= Byte.MAX_VALUE) {"], [61, "            iBuf.put((byte) lValue);"], [62, "        } else if (lValue >= Short.MIN_VALUE && lValue <= Short.MAX_VALUE) {"], [64, "            iBuf.putShort((short) lValue);"], [65, "        } else if (lValue >= Integer.MIN_VALUE && lValue <= Integer.MAX_VALUE) {"], [67, "            iBuf.putInt((int) lValue);"], [68, "        } else {"], [70, "            iBuf.putLong(lValue);"], [72, "        return iBuf.array();"], [81, "        if (dValue >= Float.MIN_VALUE && dValue <= Float.MAX_VALUE) {"]], "deleted": [[54, "     * Encodes an integer value (signed magnitude representation)"], [57, ""], [59, "        long longValue = number.longValue();"], [60, "        if (longValue == Long.MIN_VALUE) {"], [61, "            throw new IllegalArgumentException("], [62, "                    \"Could not encode Long.MIN_VALUE, because of signed magnitude representation.\");"], [63, "        }"], [64, ""], [65, "        long positiveValue = longValue < 0 ? -longValue : longValue;"], [66, "        if (positiveValue <= Byte.MAX_VALUE) {"], [68, "            iBuf.put((byte) positiveValue);"], [69, "        } else if (positiveValue <= Short.MAX_VALUE) {"], [71, "            iBuf.putShort((short) positiveValue);"], [72, "        } else if (positiveValue <= Integer.MAX_VALUE) {"], [74, "            iBuf.putInt((int) positiveValue);"], [75, "        } else if (positiveValue <= Long.MAX_VALUE) {"], [77, "            iBuf.putLong(positiveValue);"], [78, "        }"], [79, ""], [80, "        byte[] bytes = iBuf.array();"], [81, "        // set the most significant bit to 1 if negative value"], [82, "        if (number.longValue() < 0) {"], [83, "            bytes[0] |= 0b1000_0000;"], [85, "        return bytes;"], [94, "        if (Float.MIN_VALUE <= dValue && dValue <= Float.MAX_VALUE) {"]]}, "num_lines_added": 12, "num_lines_removed": 25}