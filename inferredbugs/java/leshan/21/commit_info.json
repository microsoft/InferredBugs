{"hash": "3e35551b4f6339e6082f7b327a0b2d6d0c206ab3", "message": "#435: Add support of RPK", "file_num_lines": 250, "diff_parsed": {"added": [[228, "    public void createRPKClient(boolean useServerCertificate) {"], [235, "                        useServerCertificate ? serverX509CertChain[0].getPublicKey().getEncoded()"], [236, "                                : serverPublicKey.getEncoded()));"], [247, "    }"], [248, ""], [249, "    public void createRPKClient() {"], [250, "        createRPKClient(false);"]], "deleted": [[228, "    // TODO implement RPK support for client"], [229, "    public void createRPKClient() {"], [236, "                        serverPublicKey.getEncoded()));"], [243, "        DtlsConnectorConfig.Builder config = new DtlsConnectorConfig.Builder().setAddress(clientAddress);"], [244, "        // TODO we should read the config from the security object"], [245, "        // TODO no way to provide a dynamic config with the current scandium API"], [246, "        config.setIdentity(clientPrivateKey, clientPublicKey);"], [247, ""], [248, "        CoapServer coapServer = new CoapServer();"], [249, "        CoapEndpoint.CoapEndpointBuilder coapBuilder = new CoapEndpoint.CoapEndpointBuilder();"], [250, "        coapBuilder.setConnector(new DTLSConnector(config.build()));"], [251, "        coapBuilder.setNetworkConfig(new NetworkConfig());"], [252, "        coapServer.addEndpoint(coapBuilder.build());"], [253, ""], [258, "        setupClientMonitoring();"]]}, "num_lines_added": 7, "num_lines_removed": 15}