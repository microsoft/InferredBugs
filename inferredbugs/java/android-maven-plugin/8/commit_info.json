{"hash": "221d11f8267bd5af2676df58d85d2944eca85dc3", "message": "Update the manifest version number generator: Now for every number in the manifest version name, a three digit representation is added in the version code. Examples: 1.01-SNAPSHOT -> 1001, 2.1.5.0-SNAPSHOT -> 2001005000, 2.0-SNAPSHOT -> 2000", "file_num_lines": 694, "diff_parsed": {"added": [[94, "    private static final int NUMBER_OF_DIGITS_FOR_VERSION_POSITION = 3;"], [95, ""], [776, "        String verCode = generateVersionCodeFromVersionName( verString );"], [782, "    private String generateVersionCodeFromVersionName( String versionName )"], [783, "    {"], [784, "      String[] versionNameDigits = versionName.replaceAll( \"[^0-9.]\", \"\" ).split( \"\\\\.\" );"], [785, ""], [786, "      long versionCode = 0;"], [787, "      for ( int i = 0; i < versionNameDigits.length; i++ )"], [788, "      {"], [789, "        double digitMultiplayer = Math.pow( 10, i * NUMBER_OF_DIGITS_FOR_VERSION_POSITION );"], [790, "        String versionDigit = versionNameDigits[versionNameDigits.length - i - 1 ];"], [791, "        versionCode += Integer.valueOf( versionDigit ).intValue() * digitMultiplayer;"], [792, "      }"], [793, "      return String.valueOf( versionCode );"], [794, "    }"], [795, ""]], "deleted": [[12, "import org.apache.maven.artifact.versioning.ArtifactVersion;"], [13, "import org.apache.maven.artifact.versioning.DefaultArtifactVersion;"], [96, "    private static final int INCREMENTAL_VERSION_POSITION = 1;"], [97, "    private static final int MINOR_VERSION_POSITION = 1000;"], [98, "    private static final int MAJOR_VERSION_POSITION = 1000000;"], [779, "        ArtifactVersion artifactVersion = new DefaultArtifactVersion( verString );"], [780, "        String verCode;"], [781, "        if ( artifactVersion.getMajorVersion() < 1 && artifactVersion.getMinorVersion() < 1"], [782, "             && artifactVersion.getIncrementalVersion() < 1 )"], [783, "        {"], [784, "            getLog().warn( \"Problem parsing version number occurred. Using fall back to determine version code. \" );"], [785, ""], [786, "            verCode = verString.replaceAll( \"\\\\D\", \"\" );"], [787, ""], [788, "            Attr versionCodeAttr = manifestElement.getAttributeNode( ATTR_VERSION_CODE );"], [789, "            int currentVersionCode = 0;"], [790, "            if ( versionCodeAttr != null )"], [791, "            {"], [792, "                currentVersionCode = NumberUtils.toInt( versionCodeAttr.getValue(), 0 );"], [793, "            }"], [794, ""], [795, "            if ( Integer.parseInt( verCode ) < currentVersionCode )"], [796, "            {"], [797, "                getLog().info( verCode + \" < \" + currentVersionCode + \" so padding versionCode\" );"], [798, "                verCode = StringUtils.rightPad( verCode, versionCodeAttr.getValue().length(), \"0\" );"], [799, "            }"], [800, "        }"], [801, "        else"], [802, "        {"], [803, "            verCode = Integer.toString( artifactVersion.getMajorVersion() * MAJOR_VERSION_POSITION"], [804, "                    + artifactVersion.getMinorVersion() * MINOR_VERSION_POSITION"], [805, "                    + artifactVersion.getIncrementalVersion() * INCREMENTAL_VERSION_POSITION );"], [806, "        }"]]}, "num_lines_added": 17, "num_lines_removed": 33}