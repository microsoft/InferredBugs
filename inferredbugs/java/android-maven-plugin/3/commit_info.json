{"hash": "ec49808d2fdc848f4d8d0a35980b6f579df03c01", "message": "Only use the Mac OS X JDK-path tweak if the path exists\n\nThe new Oracle JVM on Mac OS X doesn't use unconventional paths - only\nthe Apple JVM does. The plugin gives this error when used with the\nOracle JVM:\n\n[INFO] java.io.IOException: Can't read [/Library/Java/JavaVirtualMachines/jdk1.7.0_11.jdk/Contents/Home/Classes/classes.jar] (No such file or directory)\n[INFO] \tat proguard.InputReader.readInput(InputReader.java:230)\n[INFO] \tat proguard.InputReader.readInput(InputReader.java:200)\n[INFO] \tat proguard.InputReader.readInput(InputReader.java:178)\n[INFO] \tat proguard.InputReader.execute(InputReader.java:100)\n[INFO] \tat proguard.ProGuard.readInput(ProGuard.java:196)\n[INFO] \tat proguard.ProGuard.execute(ProGuard.java:78)\n[INFO] \tat proguard.ProGuard.main(ProGuard.java:492)\n[INFO] Caused by: java.io.IOException: No such file or directory\n[INFO] \tat proguard.io.DirectoryPump.pumpDataEntries(DirectoryPump.java:50)\n[INFO] \tat proguard.InputReader.readInput(InputReader.java:226)\n[INFO] \t... 6 more\n\n\nHere's the actual Oracle JVM on Mac OS X:\n\n$ ls /Library/Java/JavaVirtualMachines/jdk1.7.0_11.jdk/Contents/Home/Classes/\nls: /Library/Java/JavaVirtualMachines/jdk1.7.0_11.jdk/Contents/Home/Classes/: No such file or directory\n$ ls /Library/Java/JavaVirtualMachines/jdk1.7.0_11.jdk/Contents/Home/lib/\nant-javafx.jar\t\tdt.jar\t\t\tjavafx-doclet.jar\tjconsole.jar\t\tsa-jdi.jar\t\tvisualvm\nct.sym\t\t\tir.idl\t\t\tjavafx-mx.jar\t\torb.idl\t\t\ttools.jar\n$ ls /Library/Java/JavaVirtualMachines/jdk1.7.0_11.jdk/Contents/Home/jre/lib/\nJObjC.jar\t\t\tjli\t\t\t\tlibjava_crw_demo.dylib\t\tlibsaproc.dylib\nalt-rt.jar\t\t\tjsse.jar\t\t\tlibjavafx-font.dylib\t\tlibsplashscreen.dylib\napplet\t\t\t\tjvm.cfg\t\t\t\tlibjavafx-iio.dylib\t\tlibsunec.dylib\ncalendars.properties\t\tjvm.hprof.txt\t\t\tlibjawt.dylib\t\t\tlibt2k.dylib\ncharsets.jar\t\t\tlibAppleScriptEngine.dylib\tlibjdwp.dylib\t\t\tlibunpack.dylib\nclasslist\t\t\tlibJObjC.dylib\t\t\tlibjfr.dylib\t\t\tlibverify.dylib\ncmm\t\t\t\tlibattach.dylib\t\t\tlibjfxmedia.dylib\t\tlibzip.dylib\ncontent-types.properties\tlibawt.dylib\t\t\tlibjfxwebkit.dylib\t\tlogging.properties\ncurrency.data\t\t\tlibdcpr.dylib\t\t\tlibjpeg.dylib\t\t\tlwawt\ndeploy.jar\t\t\tlibdecora-sse.dylib\t\tlibjsdt.dylib\t\t\tmanagement\next\t\t\t\tlibdeploy.dylib\t\t\tlibjsig.dylib\t\t\tmanagement-agent.jar\nflavormap.properties\t\tlibdt_socket.dylib\t\tlibjsound.dylib\t\t\tmeta-index\nfontconfig.bfc\t\t\tlibfontmanager.dylib\t\tlibkcms.dylib\t\t\tnet.properties\nfontconfig.properties.src\tlibglass.dylib\t\t\tlibmanagement.dylib\t\tplugin.jar\nfonts\t\t\t\tlibglib-2.0.0.dylib\t\tlibmlib_image.dylib\t\tpsfont.properties.ja\nfxplugins.dylib\t\t\tlibgstplugins-lite.dylib\tlibnet.dylib\t\t\tpsfontj2d.properties\nheadless\t\t\tlibgstreamer-lite.dylib\t\tlibnio.dylib\t\t\tresources.jar\nhtmlconverter.jar\t\tlibhprof.dylib\t\t\tlibnpt.dylib\t\t\trt.jar\nimages\t\t\t\tlibinstrument.dylib\t\tlibosx.dylib\t\t\tsecurity\njavafx.properties\t\tlibj2gss.dylib\t\t\tlibosxapp.dylib\t\t\tserver\njavaws.jar\t\t\tlibj2pcsc.dylib\t\t\tlibosxkrb5.dylib\t\tservicetag\njce.jar\t\t\t\tlibj2pkcs11.dylib\t\tlibosxui.dylib\t\t\tsound.properties\njfr.jar\t\t\t\tlibjaas_unix.dylib\t\tlibprism-es2.dylib\t\txawt\njfxrt.jar\t\t\tlibjava.dylib\t\t\tlibrmi.dylib\t\t\tzi", "file_num_lines": 374, "diff_parsed": {"added": [[505, "            if ( isMacOSXJDKbyApple( javaHome ) )"], [508, "                jdkLibsPath = appleJDKLibsPath( javaHome );"], [547, "    private boolean isMacOSXJDKbyApple( String javaHome )"], [548, "    {"], [549, "        return ( javaHome.startsWith( \"/System/Library/Java\" ) || javaHome.startsWith( \"/Library/Java\" ) )"], [550, "                && new File( appleJDKLibsPath( javaHome ) ).exists();"], [551, "    }"], [552, ""], [553, "    private String appleJDKLibsPath( String javaHome )"], [554, "    {"], [555, "        return javaHome + \"/../Classes\";"], [556, "    }"]], "deleted": [[505, "            if ( javaHome.startsWith( \"/System/Library/Java\" ) || javaHome.startsWith( \"/Library/Java\" ) )"], [508, "                jdkLibsPath = javaHome + \"/../Classes\";"]]}, "num_lines_added": 12, "num_lines_removed": 2}