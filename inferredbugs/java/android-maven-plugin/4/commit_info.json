{"hash": "f660481fa9514df1545f0d947645e837259d96ac", "message": "A fix for Proguard not working on Mac OS X with Oracle Java.\n\nThis is an alternate fix to commit ec49808. I didn't realize when I\ndid this that he submitted his fix a couple of days earlier.  Please\nconsider this one, because it checks and manipulates file paths using\nonly the java.io.File class, rather than by concatenating strings.\nAlso, if a particular JVM library doesn't exist, it isn't included.", "file_num_lines": 409, "diff_parsed": {"added": [[241, "    private File javaHomeDir;"], [242, "    private File javaLibDir;"], [243, "    private File altJavaLibDir;"], [244, ""], [506, "            File rtJar = getJVMLibrary( \"rt.jar\" );"], [507, "            if ( rtJar == null )"], [509, "                rtJar = getJVMLibrary( \"classes.jar\" );"], [511, "            if ( rtJar != null )"], [513, "                addLibraryJar( rtJar.getPath() );"], [515, ""], [517, "            File jsseJar = getJVMLibrary( \"jsse.jar\" );"], [518, "            if ( jsseJar != null )"], [519, "            {"], [520, "                addLibraryJar( jsseJar.getPath() );"], [521, "            }"], [522, ""], [524, "            File jceJar = getJVMLibrary( \"jce.jar\" );"], [525, "            if ( jceJar != null )"], [526, "            {"], [527, "                addLibraryJar( jceJar.getPath() );"], [528, "            }"], [634, "    /**"], [635, "     * Finds a library file in either the primary or alternate lib directory."], [636, "     * @param fileName The base name of the file."], [637, "     * @return Either a canonical filename, or {@code null} if not found."], [638, "     */"], [639, "    private File getJVMLibrary( String fileName )"], [640, "    {"], [641, "        File libFile = new File( getJavaLibDir(), fileName );"], [642, "        if ( !libFile.exists() )"], [643, "        {"], [644, "            libFile = new File( getAltJavaLibDir(), fileName );"], [645, "            if ( !libFile.exists() )"], [646, "            {"], [647, "                libFile = null;"], [648, "            }"], [649, "        }"], [650, "        return libFile;"], [651, "    }"], [652, ""], [653, "    /**"], [654, "     * Determines the java.home directory."], [655, "     * @return The java.home directory, as a File."], [656, "     */"], [657, "    private File getJavaHomeDir()"], [658, "    {"], [659, "        if ( javaHomeDir == null )"], [660, "        {"], [661, "            javaHomeDir = new File( System.getProperty( \"java.home\" ) );"], [662, "        }"], [663, "        return javaHomeDir;"], [664, "    }"], [665, ""], [666, "    /**"], [667, "     * Determines the primary JVM library location."], [668, "     * @return The primary library directory, as a File."], [669, "     */"], [670, "    private File getJavaLibDir()"], [671, "    {"], [672, "        if ( javaLibDir == null )"], [673, "        {"], [674, "            javaLibDir = new File( getJavaHomeDir(), \"lib\" );"], [675, "        }"], [676, "        return javaLibDir;"], [677, "    }"], [678, ""], [679, "    /**"], [680, "     * Determines the alternate JVM library location (applies with older"], [681, "     * MacOSX JVMs)."], [682, "     * @return The alternate JVM library location, as a File."], [683, "     */"], [684, "    private File getAltJavaLibDir()"], [685, "    {"], [686, "        if ( altJavaLibDir == null )"], [687, "        {"], [688, "            altJavaLibDir = new File( getJavaHomeDir().getParent(), \"Classes\" );"], [689, "        }"], [690, "        return altJavaLibDir;"], [691, "    }"]], "deleted": [[499, "            final String slash = File.separator;"], [503, "            String javaHome = System.getProperty( \"java.home\" );"], [504, "            String jdkLibsPath = null;"], [505, "            if ( isMacOSXJDKbyApple( javaHome ) )"], [507, "                // MacOS X uses different naming conventions for JDK installations"], [508, "                jdkLibsPath = appleJDKLibsPath( javaHome );"], [509, "                addLibraryJar( jdkLibsPath + \"/classes.jar\" );"], [511, "            else"], [513, "                jdkLibsPath = javaHome + slash + \"lib\";"], [514, "                addLibraryJar( jdkLibsPath + slash + \"rt.jar\" );"], [517, "            addLibraryJar( jdkLibsPath + slash + \"jsse.jar\" );"], [519, "            addLibraryJar( jdkLibsPath + slash + \"jce.jar\" );"], [547, "    private boolean isMacOSXJDKbyApple( String javaHome )"], [548, "    {"], [549, "        return ( javaHome.startsWith( \"/System/Library/Java\" ) || javaHome.startsWith( \"/Library/Java\" ) )"], [550, "                && new File( appleJDKLibsPath( javaHome ) ).exists();"], [551, "    }"], [552, ""], [553, "    private String appleJDKLibsPath( String javaHome )"], [554, "    {"], [555, "        return javaHome + \"/../Classes\";"], [556, "    }"]]}, "num_lines_added": 79, "num_lines_removed": 22}