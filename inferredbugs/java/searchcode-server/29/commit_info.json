{"hash": "5db81d4ae8aa7c6ecbad68b6cf845bd64b9415ba", "message": "Start to build connection to sphinx", "file_num_lines": 163, "diff_parsed": {"added": [[11, "import sun.reflect.generics.reflectiveObjects.NotImplementedException;"], [44, "        } catch (SQLException ignored) { }"], [45, ""], [46, ""], [47, "        CodeIndexDocument codeIndexDocument = documentQueue.poll();"], [48, "        List<CodeIndexDocument> codeIndexDocumentList = new ArrayList<>();"], [49, ""], [50, "        while (codeIndexDocument != null) {"], [51, "            codeIndexDocumentList.add(codeIndexDocument);"], [52, "            codeIndexDocument = documentQueue.poll();"], [55, ""], [57, "            for (CodeIndexDocument codeResult: codeIndexDocumentList) {"], [58, "                try {"], [59, "                    stmt = connection.prepareStatement(\"REPLACE INTO codesearchrt1 VALUES(?,?,?,?,?,?,?,?,?)\");"], [60, ""], [63, "                    stmt.setString(3, codeResult.getFileName());"], [70, "                    stmt.execute();"], [71, "                } catch (SQLException ex) {"], [72, "                    Singleton.getLogger().warning(ex.toString());"], [73, "                }"], [74, "            }"], [93, "    public void deleteAll() throws IOException { throw new NotImplementedException(); }"], [96, "    public void reindexAll() { throw new NotImplementedException(); }"], [99, "    public void flipIndex() { throw new NotImplementedException(); }"], [102, "    public void flipReadIndex()  { throw new NotImplementedException(); }"], [105, "    public void flipWriteIndex()  { throw new NotImplementedException(); }"]], "deleted": [[43, "        } catch (SQLException ex) {"], [44, "            return;"], [45, "        }"], [46, "        finally {"], [47, "            this.helpers.closeQuietly(connection);"], [51, "//            for (SearchcodeCodeResult codeResult: codeResultList) {"], [52, "//                try {"], [53, "//                    stmt = connection.prepareStatement(\"REPLACE INTO codesearchrt1 VALUES(?,?,?,?,?,?,?,?,?)\");"], [54, "//"], [57, "//                    stmt.setString(3, codeResult.getFilename());"], [64, "//                    stmt.execute();"], [65, "//                } catch (SQLException ex) {"], [66, "//                    Singleton.getLogger().warning(ex.toString());"], [67, "//                }"], [68, "//            }"], [87, "    public void deleteAll() throws IOException {"], [88, ""], [89, "    }"], [92, "    public void reindexAll() {"], [93, ""], [94, "    }"], [97, "    public void flipIndex() {"], [98, ""], [99, "    }"], [102, "    public void flipReadIndex() {"], [103, ""], [104, "    }"], [107, "    public void flipWriteIndex() {"], [108, ""], [109, "    }"]]}, "num_lines_added": 26, "num_lines_removed": 30}