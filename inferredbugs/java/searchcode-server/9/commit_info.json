{"hash": "46353e6df4def31becd1f176c7f83c21d7c56dca", "message": "Refactor to reuse more code", "file_num_lines": 356, "diff_parsed": {"added": [[329, "        Connection connection = null;"], [330, "        PreparedStatement preparedStatement = null;"], [332, "        // Update with new details"], [333, "        try {"], [334, "            connection = this.dbConfig.getConnection();"], [335, "            if (existing != null) {"], [336, "                preparedStatement = connection.prepareStatement(\"UPDATE \\\"repo\\\" SET \\\"name\\\" = ?, \\\"scm\\\" = ?, \\\"url\\\" = ?, \\\"username\\\" = ?, \\\"password\\\" = ?, \\\"source\\\" = ?, \\\"branch\\\" = ? WHERE  \\\"name\\\" = ?\");"], [337, "                preparedStatement.setString(8, repoResult.getName());"], [339, "            else {"], [340, "                isNew = true;"], [341, "                preparedStatement = connection.prepareStatement(\"INSERT INTO repo(\\\"name\\\",\\\"scm\\\",\\\"url\\\", \\\"username\\\", \\\"password\\\",\\\"source\\\",\\\"branch\\\") VALUES (?,?,?,?,?,?,?)\");"], [343, ""], [344, "            preparedStatement.setString(1, repoResult.getName());"], [345, "            preparedStatement.setString(2, repoResult.getScm());"], [346, "            preparedStatement.setString(3, repoResult.getUrl());"], [347, "            preparedStatement.setString(4, repoResult.getUsername());"], [348, "            preparedStatement.setString(5, repoResult.getPassword());"], [349, "            preparedStatement.setString(6, repoResult.getSource());"], [350, "            preparedStatement.setString(7, repoResult.getBranch());"], [351, ""], [352, "            preparedStatement.execute();"], [354, "        catch(SQLException ex) {"], [355, "            LOGGER.severe(\" caught a \" + ex.getClass() + \"\\n with message: \" + ex.getMessage());"], [356, "        }"], [357, "        finally {"], [358, "            Helpers.closeQuietly(preparedStatement);"], [359, "            Helpers.closeQuietly(connection);"]], "deleted": [[321, "    // Anything which updates or saves should be syncronized to avoid"], [322, "    // SQLite issues with such operations"], [331, "        Connection conn = null;"], [332, "        PreparedStatement stmt = null;"], [333, "        ResultSet rs = null;"], [334, ""], [335, "        if (existing != null) {"], [336, "            // Update with new details"], [337, "            try {"], [338, "                conn = this.dbConfig.getConnection();"], [339, "                stmt = conn.prepareStatement(\"UPDATE \\\"repo\\\" SET \\\"name\\\" = ?, \\\"scm\\\" = ?, \\\"url\\\" = ?, \\\"username\\\" = ?, \\\"password\\\" = ?, \\\"source\\\" = ?, \\\"branch\\\" = ? WHERE  \\\"name\\\" = ?\");"], [340, ""], [341, "                stmt.setString(1, repoResult.getName());"], [342, "                stmt.setString(2, repoResult.getScm());"], [343, "                stmt.setString(3, repoResult.getUrl());"], [344, "                stmt.setString(4, repoResult.getUsername());"], [345, "                stmt.setString(5, repoResult.getPassword());"], [346, "                stmt.setString(6, repoResult.getSource());"], [347, "                stmt.setString(7, repoResult.getBranch());"], [349, "                // Target the row"], [350, "                stmt.setString(8, repoResult.getName());"], [351, ""], [352, "                stmt.execute();"], [353, "            }"], [354, "            catch(SQLException ex) {"], [355, "                LOGGER.severe(\" caught a \" + ex.getClass() + \"\\n with message: \" + ex.getMessage());"], [357, "            finally {"], [358, "                Helpers.closeQuietly(rs);"], [359, "                Helpers.closeQuietly(stmt);"], [360, "                Helpers.closeQuietly(conn);"], [363, "        else {"], [364, "            isNew = true;"], [365, "            try {"], [366, "                conn = this.dbConfig.getConnection();"], [367, "                stmt = conn.prepareStatement(\"INSERT INTO repo(\\\"name\\\",\\\"scm\\\",\\\"url\\\", \\\"username\\\", \\\"password\\\",\\\"source\\\",\\\"branch\\\") VALUES (?,?,?,?,?,?,?)\");"], [368, ""], [369, "                stmt.setString(1, repoResult.getName());"], [370, "                stmt.setString(2, repoResult.getScm());"], [371, "                stmt.setString(3, repoResult.getUrl());"], [372, "                stmt.setString(4, repoResult.getUsername());"], [373, "                stmt.setString(5, repoResult.getPassword());"], [374, "                stmt.setString(6, repoResult.getSource());"], [375, "                stmt.setString(7, repoResult.getBranch());"], [376, ""], [377, "                stmt.execute();"], [378, "            }"], [379, "            catch(SQLException ex) {"], [380, "                LOGGER.severe(\" caught a \" + ex.getClass() + \"\\n with message: \" + ex.getMessage());"], [381, "            }"], [382, "            finally {"], [383, "                Helpers.closeQuietly(rs);"], [384, "                Helpers.closeQuietly(stmt);"], [385, "                Helpers.closeQuietly(conn);"], [386, "            }"]]}, "num_lines_added": 27, "num_lines_removed": 54}