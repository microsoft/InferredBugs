{"hash": "5ff7c3c25512910f2431600441614e68522ffcf3", "message": "Use Kernel Streaming instead of Direct Show source", "file_num_lines": 302, "diff_parsed": {"added": [[57, "\tprivate final int deviceIndex;"], [61, "\tprivate final File videoFile;"], [70, "\tprivate Element jpegparse = null;"], [98, "\tprotected GStreamerDevice(GStreamerDriver driver, int deviceIndex) {"], [100, "\t\tthis.deviceIndex = deviceIndex;"], [101, "\t\tthis.videoFile = null;"], [104, "\tprotected GStreamerDevice(GStreamerDriver driver, File videoFile) {"], [106, "\t\tthis.deviceIndex = -1;"], [107, "\t\tthis.videoFile = videoFile;"], [121, "\t\tpipe = new Pipeline(getName());"], [122, "\t\tsource = ElementFactory.make(GStreamerDriver.getSourceBySystem(), \"source\");"], [125, "\t\t\tsource.set(\"device-index\", deviceIndex);"], [127, "\t\t\tsource.set(\"device\", videoFile.getAbsolutePath());"], [128, "\t\t} else if (Platform.isMacOSX()) {"], [129, "\t\t\tthrow new IllegalStateException(\"not yet implemented\");"], [132, "\t\tsink = new RGBDataSink(getName(), this);"], [139, "\t\tjpegparse = ElementFactory.make(\"jpegparse\", \"jpegparse\");"], [231, "\t\t\treturn Integer.toString(deviceIndex);"], [233, "\t\t\treturn videoFile.getAbsolutePath();"], [309, "\t\t\t\telements = new Element[] { source, filter, jpegparse, jpegdec, sink };"], [374, "\t\tjpegparse.dispose();"]], "deleted": [[57, "\tprivate final String name;"], [61, "\tprivate final File vfile;"], [70, "\tprivate Element jpegpar = null;"], [98, "\tprotected GStreamerDevice(GStreamerDriver driver, String name) {"], [100, "\t\tthis.name = name;"], [101, "\t\tthis.vfile = null;"], [104, "\tprotected GStreamerDevice(GStreamerDriver driver, File vfile) {"], [106, "\t\tthis.name = null;"], [107, "\t\tthis.vfile = vfile;"], [121, "\t\tpipe = new Pipeline(name);"], [124, "\t\t\tsource = ElementFactory.make(\"dshowvideosrc\", \"dshowvideosrc\");"], [125, "\t\t\tsource.set(\"device-name\", name);"], [127, "\t\t\tsource = ElementFactory.make(\"v4l2src\", \"v4l2src\");"], [128, "\t\t\tsource.set(\"device\", vfile.getAbsolutePath());"], [131, "\t\tsink = new RGBDataSink(name, this);"], [138, "\t\tjpegpar = ElementFactory.make(\"jpegparse\", \"jpegparse\");"], [141, "\t\t// if (Platform.isLinux()) {"], [143, "\t\t// }"], [144, ""], [146, ""], [147, "\t\t// if (Platform.isLinux()) {"], [149, "\t\t// }"], [236, "\t\t\treturn name;"], [238, "\t\t\treturn vfile.getAbsolutePath();"], [314, "\t\t\t\telements = new Element[] { source, filter, jpegpar, jpegdec, sink };"], [379, "\t\tjpegpar.dispose();"]]}, "num_lines_added": 21, "num_lines_removed": 26}