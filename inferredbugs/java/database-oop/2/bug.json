{"bug_class": "PROVER", "kind": "ERROR", "bug_type": "THREAD_SAFETY_VIOLATION", "qualifier": "Unprotected write. Non-private method `oop.sqlite.connection.SqliteBaseConnectionFactory.getConnection` indirectly writes to field `currCon.oop.sqlite.connection.SqliteBaseConnection.connection` outside of synchronization.\n Reporting because this access may occur on a background thread.\n\nNote that the prefix path currCon has been contaminated during the execution, so the reported race on currCon.oop.sqlite.connection.SqliteBaseConnection.connection might be a false positive.", "severity": "HIGH", "visibility": "user", "line": 90, "column": -1, "procedure": "Connection SqliteBaseConnectionFactory.getConnection(String)", "procedure_id": "oop.sqlite.connection.SqliteBaseConnectionFactory.getConnection(java.lang.String):java.sql.Connectio.cdbecb86adbcb3189523ae91888860eb", "procedure_start_line": 75, "file": "sqlite-oop/src/main/java/oop/sqlite/connection/SqliteBaseConnectionFactory.java", "bug_trace": [{"level": 0, "filename": "sqlite-oop/src/main/java/oop/sqlite/connection/SqliteBaseConnectionFactory.java", "line_number": 90, "column_number": -1, "description": "call to Connection SqliteBaseConnection.getConnection()"}, {"level": 1, "filename": "sqlite-oop/src/main/java/oop/sqlite/connection/SqliteBaseConnection.java", "line_number": 89, "column_number": -1, "description": "access to `this.oop.sqlite.connection.SqliteBaseConnection.connection`"}], "key": "SqliteBaseConnectionFactory.java|getConnection|THREAD_SAFETY_VIOLATION", "node_key": "9c5d6d9028928346cc4fb44cced5dea1", "hash": "61e72cf3e25915871f4481a7ad496179", "bug_type_hum": "Thread Safety Violation", "censored_reason": ""}