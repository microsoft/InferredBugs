{"hash": "645f6415f1d532254fc03b5d78d617b443a709a8", "message": "Add a simplified test", "file_num_lines": 146, "diff_parsed": {"added": [[38, "    public void testLocking() {"], [42, "        final int lockCount = 20 * 1000 * 1000;"], [43, "        new Thread(new Runnable() {"], [46, "                manyToggles(store1, lockCount, 1, 0);"], [48, "        }).start();"], [49, ""], [50, "        manyToggles(store1, lockCount, 0, 1);"], [51, ""], [52, "        store1.free();"], [53, "        long time = System.nanoTime() - start;"], [54, "        System.out.printf(\"Contended lock rate was %,d per second%n\", (int) (lockCount * 2 * 1e9 / time));"], [55, "    }"], [57, "    private void manyToggles(DirectStore store1, int lockCount, int from, int to) {"], [65, "            slice1.tryLockNanosInt(0, 1000 * 1000 * 1000);"], [67, "            if (toggle1 == from) {"], [68, "                slice1.writeInt(4, to);"]], "deleted": [[38, "    public void testLocking() throws Exception {"], [42, "        final int lockCount = 20 * 1000000;"], [43, ""], [44, "        Thread t = new Thread(new Runnable() {"], [47, "                long id = Thread.currentThread().getId();"], [48, "                System.out.println(\"Thread \" + id);"], [49, "                assertEquals(0, id >>> 24);"], [50, "                try {"], [51, "                    DirectBytes slice1 = store1.createSlice();"], [52, "                    for (int i = 0; i < lockCount; i++) {"], [53, "                        slice1.busyLockInt(0);"], [54, "                        int toggle1 = slice1.readInt(4);"], [55, "                        if (toggle1 == 1) {"], [56, "                            slice1.writeInt(4, 0);"], [57, "                        } else {"], [58, "                            i--;"], [59, "                        }"], [60, "                        slice1.unlockInt(0);"], [61, "                    }"], [62, "                } catch (InterruptedException e) {"], [63, "                    e.printStackTrace();"], [64, "                }"], [66, "        });"], [67, "        t.start();"], [76, "            slice1.busyLockInt(0);"], [78, "            if (toggle1 == 0) {"], [79, "                slice1.writeInt(4, 1);"], [85, ""], [86, "        store1.free();"], [87, "        long time = System.nanoTime() - start;"], [88, "        System.out.printf(\"Contended lock rate was %,d per second%n\", (int) (lockCount * 2 * 1e9 / time));"]]}, "num_lines_added": 16, "num_lines_removed": 31}