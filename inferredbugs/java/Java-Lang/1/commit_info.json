{"hash": "b501c3bd15c44abe0df18ec731adda145fa4c4aa", "message": "Add a simplified test", "file_num_lines": 161, "diff_parsed": {"added": [[40, "        long start = System.nanoTime();"], [41, "        final DirectStore store1 = DirectStore.allocate(1 << 12);"], [42, "        final int lockCount = 20 * 1000000;"], [43, ""], [44, "        Thread t = new Thread(new Runnable() {"], [45, "            @Override"], [46, "            public void run() {"], [47, "                long id = Thread.currentThread().getId();"], [48, "                System.out.println(\"Thread \" + id);"], [49, "                assertEquals(0, id >>> 24);"], [50, "                try {"], [51, "                    DirectBytes slice1 = store1.createSlice();"], [52, "                    for (int i = 0; i < lockCount; i++) {"], [53, "                        slice1.busyLockInt(0);"], [54, "                        int toggle1 = slice1.readInt(4);"], [55, "                        if (toggle1 == 1) {"], [56, "                            slice1.writeInt(4, 0);"], [57, "                        } else {"], [58, "                            i--;"], [59, "                        }"], [60, "                        slice1.unlockInt(0);"], [61, "                    }"], [62, "                } catch (InterruptedException e) {"], [63, "                    e.printStackTrace();"], [64, "                }"], [65, "            }"], [66, "        });"], [67, "        t.start();"], [68, ""], [69, "        long id = Thread.currentThread().getId();"], [70, "        assertEquals(0, id >>> 24);"], [71, "        System.out.println(\"Thread \" + id);"], [72, ""], [73, "        DirectBytes slice1 = store1.createSlice();"], [74, ""], [75, "        for (int i = 0; i < lockCount; i++) {"], [76, "            slice1.busyLockInt(0);"], [77, "            int toggle1 = slice1.readInt(4);"], [78, "            if (toggle1 == 0) {"], [79, "                slice1.writeInt(4, 1);"], [80, "            } else {"], [81, "                i--;"], [82, "            }"], [83, "            slice1.unlockInt(0);"], [84, "        }"], [85, ""], [86, "        store1.free();"], [87, "        long time = System.nanoTime() - start;"], [88, "        System.out.printf(\"Contended lock rate was %,d per second%n\", (int) (lockCount * 2 * 1e9 / time));"], [89, "    }"], [90, ""], [91, "    @Test"], [92, "    public void testLocking2() throws Exception {"], [93, "        // a page"], [205, ""]], "deleted": []}, "num_lines_added": 55, "num_lines_removed": 0}