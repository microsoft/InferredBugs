{"hash": "1035f3703ff35723a0b90bc4e5abf544b3ac2624", "message": "#949 - deduplication #5 - moved getSharedWebDriver to SharedWebdriverSingletonImpl", "file_num_lines": 195, "diff_parsed": {"added": [[119, "            sharedWebDriver = getSharedWebDriver(PARAMETERS_THREAD_LOCAL.get(), null);"], [129, "        setTestClassAndMethodValues();"], [145, "    private SharedWebDriver getSharedWebDriver(EffectiveParameters<?> parameters, ExecutorService executorService)"], [147, "        return SharedWebDriverContainer.INSTANCE.getSharedWebDriver("], [148, "                parameters, executorService, this::newWebDriver, getConfiguration());"]], "deleted": [[119, "            sharedWebDriver = getSharedWebDriver(PARAMETERS_THREAD_LOCAL.get());"], [144, "    private SharedWebDriver getSharedWebDriver(EffectiveParameters<?> parameters)"], [145, "            throws ExecutionException, InterruptedException {"], [146, "        return getSharedWebDriver(parameters, null);"], [147, "    }"], [148, ""], [149, "    /**"], [150, "     * Returns SharedDriver instance"], [151, "     *"], [152, "     * @param parameters        driver parameters"], [153, "     * @param webDriverExecutor executor service"], [154, "     * @return SharedDriver"], [155, "     * @throws ExecutionException   execution exception"], [156, "     * @throws InterruptedException interrupted exception"], [157, "     */"], [158, "    protected SharedWebDriver getSharedWebDriver(EffectiveParameters<?> parameters,"], [159, "                                                 ExecutorService webDriverExecutor)"], [161, "        SharedWebDriver sharedWebDriver = null;"], [162, "        ExecutorService executorService = getExecutor(webDriverExecutor);"], [163, ""], [164, "        for (int retryCount = 0; retryCount < getBrowserTimeoutRetries(); retryCount++) {"], [165, ""], [166, "            Future<SharedWebDriver> futureWebDriver = createDriver(parameters, executorService);"], [167, "            shutDownExecutor(executorService, getBrowserTimeout());"], [168, ""], [169, "            try {"], [170, "                sharedWebDriver = futureWebDriver.get();"], [171, "            } catch (InterruptedException | ExecutionException e) {"], [172, "                executorService.shutdownNow();"], [173, "                throw e;"], [174, "            }"], [175, ""], [176, "            if (sharedWebDriver != null) {"], [177, "                break;"], [178, "            }"], [179, "        }"], [180, ""], [181, "        setTestClassAndMethodValues();"], [182, "        return sharedWebDriver;"], [183, "    }"], [184, ""], [185, "    private Future<SharedWebDriver> createDriver(EffectiveParameters<?> parameters, ExecutorService executorService) {"], [186, "        return executorService.submit("], [187, "                () -> SharedWebDriverContainer.INSTANCE.getOrCreateDriver(this::newWebDriver, parameters));"]]}, "num_lines_added": 5, "num_lines_removed": 44}