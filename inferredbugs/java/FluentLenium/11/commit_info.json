{"hash": "cb4c16bda28a915fc889c40664abd2210480b03d", "message": "#949 - Deduplication - last part - Moved common started/finished/failed logic into one class", "file_num_lines": 119, "diff_parsed": {"added": [[3, "import static org.fluentlenium.adapter.TestRunnerCommon.deleteCookies;"], [4, "import static org.fluentlenium.adapter.TestRunnerCommon.doHtmlDump;"], [5, "import static org.fluentlenium.adapter.TestRunnerCommon.doScreenshot;"], [6, "import static org.fluentlenium.adapter.TestRunnerCommon.getTestDriver;"], [7, "import static org.fluentlenium.adapter.TestRunnerCommon.quitMethodAndThreadDrivers;"], [93, "        return getMethodNameFromThread(TEST_METHOD_NAME);"], [144, "        SharedWebDriver sharedWebDriver = getTestDriver(testClass, testName,"], [145, "                this::newWebDriver, this::failed,"], [146, "                getConfiguration(), PARAMETERS_THREAD_LOCAL.get());"], [184, "        SharedWebDriver sharedWebDriver = SharedWebDriverContainer.INSTANCE"], [185, "                .getDriver(sharedMutator.getEffectiveParameters(testClass, testName, driverLifecycle));"], [187, "        quitMethodAndThreadDrivers(driverLifecycle, sharedWebDriver);"], [188, "        deleteCookies(sharedWebDriver, getConfiguration());"], [237, "            doScreenshot(testClass, testName, this, getConfiguration());"], [238, "            doHtmlDump(testClass, testName, this, getConfiguration());"]], "deleted": [[3, "import static org.apache.commons.lang3.StringUtils.isEmpty;"], [4, "import static org.fluentlenium.utils.ExceptionUtil.getCauseMessage;"], [15, "import java.util.Optional;"], [16, "import java.util.concurrent.ExecutionException;"], [21, "import org.openqa.selenium.WebDriverException;"], [31, ""], [94, "       return getMethodNameFromThread(TEST_METHOD_NAME);"], [145, "        SharedWebDriver sharedWebDriver;"], [146, ""], [147, "        try {"], [148, "            sharedWebDriver = SharedWebDriverContainer.INSTANCE.getSharedWebDriver("], [149, "                    PARAMETERS_THREAD_LOCAL.get(), null, this::newWebDriver, getConfiguration());"], [150, "        } catch (ExecutionException | InterruptedException e) {"], [151, "            this.failed(testClass, testName);"], [152, ""], [153, "            String causeMessage = getCauseMessage(e);"], [154, "            throw new WebDriverException(\"Browser failed to start, test [ \" + testName + \" ] execution interrupted.\""], [155, "                    + (isEmpty(causeMessage) ? \"\" : \"\\nCaused by: [ \" + causeMessage + \"]\"), e);"], [156, "        }"], [157, ""], [162, ""], [196, "        EffectiveParameters<?> parameters = sharedMutator.getEffectiveParameters(testClass, testName,"], [197, "                driverLifecycle);"], [198, "        SharedWebDriver sharedWebDriver = SharedWebDriverContainer.INSTANCE.getDriver(parameters);"], [199, ""], [200, "        if (driverLifecycle == DriverLifecycle.METHOD || driverLifecycle == DriverLifecycle.THREAD) {"], [201, "            Optional.ofNullable(sharedWebDriver).ifPresent(SharedWebDriverContainer.INSTANCE::quit);"], [202, "        }"], [203, ""], [204, "        if (getDeleteCookies()) {"], [205, "            Optional.ofNullable(sharedWebDriver).ifPresent(shared -> shared.getDriver().manage().deleteAllCookies());"], [206, "        }"], [256, "            try {"], [257, "                if (getScreenshotMode() == TriggerMode.AUTOMATIC_ON_FAIL && canTakeScreenShot()) {"], [258, "                    takeScreenshot(testClass.getSimpleName() + \"_\" + testName + \".png\");"], [259, "                }"], [260, "            } catch (Exception ignored) {"], [261, "            }"], [262, ""], [263, "            try {"], [264, "                if (getHtmlDumpMode() == TriggerMode.AUTOMATIC_ON_FAIL && getDriver() != null) {"], [265, "                    takeHtmlDump(testClass.getSimpleName() + \"_\" + testName + \".html\");"], [266, "                }"], [267, "            } catch (Exception ignored) {"], [268, "            }"], [269, ""]]}, "num_lines_added": 15, "num_lines_removed": 46}