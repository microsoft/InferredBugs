{"hash": "cf7f29a53f0bc5b5ecdf44afeb1c2d5f849032ea", "message": "Avoid null dereference", "file_num_lines": 237, "diff_parsed": {"added": [[64, "    private static final long BOOTTIME = querySystemBootTime();"], [271, "    private static long querySystemBootTime() {"], [272, "        Timeval tv = new Timeval();"], [273, "        if (!BsdSysctlUtil.sysctl(\"kern.boottime\", tv) || tv.tv_sec == 0) {"], [274, "            // Usually this works. If it doesn't, fall back to text parsing."], [275, "            // Boot time will be the first consecutive string of digits."], [276, "            return ParseUtil.parseLongOrDefault("], [277, "                    ExecutingCommand.getFirstAnswer(\"sysctl -n kern.boottime\").split(\",\")[0].replaceAll(\"\\\\D\", \"\"),"], [278, "                    System.currentTimeMillis() / 1000);"], [279, "        }"], [280, "        // tv now points to a 128-bit timeval structure for boot time."], [281, "        // First 8 bytes are seconds, second 8 bytes are microseconds (we ignore)"], [282, "        return tv.tv_sec;"], [283, "    }"], [284, ""], [302, "        File[] listFiles;"], [303, "        if (dir.exists() && dir.isDirectory() && (listFiles = dir.listFiles()) != null) {"], [304, "            for (File f : listFiles) {"]], "deleted": [[64, "    private static final long BOOTTIME;"], [65, "    static {"], [66, "        Timeval tv = new Timeval();"], [67, "        if (!BsdSysctlUtil.sysctl(\"kern.boottime\", tv) || tv.tv_sec == 0) {"], [68, "            // Usually this works. If it doesn't, fall back to text parsing."], [69, "            // Boot time will be the first consecutive string of digits."], [70, "            BOOTTIME = ParseUtil.parseLongOrDefault("], [71, "                    ExecutingCommand.getFirstAnswer(\"sysctl -n kern.boottime\").split(\",\")[0].replaceAll(\"\\\\D\", \"\"),"], [72, "                    System.currentTimeMillis() / 1000);"], [73, "        } else {"], [74, "            // tv now points to a 128-bit timeval structure for boot time."], [75, "            // First 8 bytes are seconds, second 8 bytes are microseconds"], [76, "            // (we ignore)"], [77, "            BOOTTIME = tv.tv_sec;"], [78, "        }"], [79, "    }"], [303, "        if (dir.exists() && dir.isDirectory()) {"], [304, "            for (File f : dir.listFiles()) {"]]}, "num_lines_added": 18, "num_lines_removed": 18}