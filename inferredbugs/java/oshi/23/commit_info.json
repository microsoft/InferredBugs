{"hash": "916f235bda39e4d2c65e39aa27586f4e9acaa780", "message": "Add read/write to Windows and OS X HWDiskStores (#193)", "file_num_lines": 60, "diff_parsed": {"added": [[22, "import java.util.HashMap;"], [30, "import oshi.util.platform.windows.WmiUtil.ValueType;"], [41, "    /**"], [42, "     * Maps to store read/write bytes per drive index"], [43, "     */"], [44, "    private static Map<String, Long> readMap = new HashMap<>();"], [45, "    private static Map<String, Long> writeMap = new HashMap<>();"], [46, ""], [47, "    private static final ValueType[] DRIVE_TYPES = { ValueType.STRING, ValueType.STRING, ValueType.STRING,"], [48, "            ValueType.STRING, ValueType.STRING, ValueType.LONG };"], [49, ""], [54, "        readMap.clear();"], [55, "        writeMap.clear();"], [56, "        populateReadWriteMaps();"], [58, "        Map<String, List<Object>> vals = WmiUtil.selectObjectsFrom(null, \"Win32_DiskDrive\","], [59, "                \"Name,Manufacturer,Model,SerialNumber,Size,Index\", null, DRIVE_TYPES);"], [62, "            ds.setName((String) vals.get(\"Name\").get(i));"], [65, "            ds.setSerial(ParseUtil.hexStringToString((String) vals.get(\"SerialNumber\").get(i)));"], [66, "            String index = vals.get(\"Index\").get(i).toString();"], [67, "            if (readMap.containsKey(index)) {"], [68, "                ds.setReads(readMap.get(index));"], [69, "            }"], [70, "            if (writeMap.containsKey(index)) {"], [71, "                ds.setWrites(writeMap.get(index));"], [72, "            }"], [75, "                ds.setSize(Long.parseLong((String) vals.get(\"Size\").get(i)));"], [85, ""], [86, "    private void populateReadWriteMaps() {"], [87, "        // Although the field names say \"PerSec\" this is the Raw Data from which"], [88, "        // the associated fields are populated in the Formatted Data class, so"], [89, "        // in fact this is the data we want"], [90, "        Map<String, List<String>> vals = WmiUtil.selectStringsFrom(null, \"Win32_PerfRawData_PerfDisk_PhysicalDisk\","], [91, "                \"Name,DiskReadBytesPerSec,DiskWriteBytesPerSec\", null);"], [92, "        for (int i = 0; i < vals.get(\"Name\").size(); i++) {"], [93, "            String index = vals.get(\"Name\").get(i).split(\"\\\\s+\")[0];"], [94, "            try {"], [95, "                readMap.put(index, Long.parseLong(vals.get(\"DiskReadBytesPerSec\").get(i)));"], [96, "                writeMap.put(index, Long.parseLong(vals.get(\"DiskWriteBytesPerSec\").get(i)));"], [97, "            } catch (NumberFormatException e) {"], [98, "                // If we can't parse, just ignore, we won't populate the map"], [99, "                continue;"], [100, "            }"], [101, "        }"], [102, "    }"]], "deleted": [[44, "        Map<String, List<String>> vals = WmiUtil.selectStringsFrom(null, \"Win32_DiskDrive\","], [45, "                \"Name,Manufacturer,Model,SerialNumber,Size\", null);"], [48, "            ds.setName(vals.get(\"Name\").get(i));"], [51, "            ds.setSerial(ParseUtil.hexStringToString(vals.get(\"SerialNumber\").get(i)));"], [54, "                ds.setSize(Long.parseLong(vals.get(\"Size\").get(i)));"]]}, "num_lines_added": 44, "num_lines_removed": 5}