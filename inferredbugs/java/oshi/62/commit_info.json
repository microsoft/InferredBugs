{"hash": "d7b3ee98c36319e4b57d8e2cfeaf63b3a927f941", "message": "Suppress repeated attempts to query failed PDH (#1266)", "file_num_lines": 139, "diff_parsed": {"added": [[29, "import java.util.HashSet;"], [32, "import java.util.Set;"], [33, "import java.util.concurrent.locks.ReentrantLock;"], [34, ""], [35, "import org.slf4j.Logger;"], [36, "import org.slf4j.LoggerFactory;"], [45, "import oshi.annotation.concurrent.GuardedBy;"], [57, "    private static final Logger LOG = LoggerFactory.getLogger(PerfCounterWildcardQuery.class);"], [58, ""], [59, "    // Use a map to cache failed pdh queries"], [60, "    @GuardedBy(\"failedQueryCacheLock\")"], [61, "    private static final Set<String> failedQueryCache = new HashSet<>();"], [62, "    private static final ReentrantLock failedQueryCacheLock = new ReentrantLock();"], [63, ""], [89, "        // Check without locking for performance"], [90, "        if (!failedQueryCache.contains(perfObject)) {"], [91, "            failedQueryCacheLock.lock();"], [92, "            try {"], [93, "                // Double check lock"], [94, "                if (!failedQueryCache.contains(perfObject)) {"], [95, "                    Pair<List<String>, Map<T, List<Long>>> instancesAndValuesMap = queryInstancesAndValuesFromPDH("], [96, "                            propertyEnum, perfObject);"], [97, "                    if (!instancesAndValuesMap.getA().isEmpty()) {"], [98, "                        return instancesAndValuesMap;"], [99, "                    }"], [100, "                    // If we are here, query failed"], [101, "                    LOG.warn(\"Disabling further attempts to query {}.\", perfObject);"], [102, "                    failedQueryCache.add(perfObject);"], [103, "                }"], [104, "            } finally {"], [105, "                failedQueryCacheLock.unlock();"], [106, "            }"], [108, "        return queryInstancesAndValuesFromWMI(propertyEnum, perfWmiClass);"]], "deleted": [[75, "        Pair<List<String>, Map<T, List<Long>>> instancesAndValuesMap = queryInstancesAndValuesFromPDH(propertyEnum,"], [76, "                perfObject);"], [77, "        if (instancesAndValuesMap.getA().isEmpty()) {"], [78, "            return queryInstancesAndValuesFromWMI(propertyEnum, perfWmiClass);"], [80, "        return instancesAndValuesMap;"]]}, "num_lines_added": 33, "num_lines_removed": 5}