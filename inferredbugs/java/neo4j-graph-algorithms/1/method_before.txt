    RleWeightedInput[] prepareRleWeights(List<Map<String, Object>> data, long degreeCutoff, Double skipValue) {
        RleWeightedInput[] inputs = new RleWeightedInput[data.size()];
        int idx = 0;
        for (Map<String, Object> row : data) {

            List<Number> weightList = extractValues(row.get("weights"));

            int size = weightList.size();
            if (size > degreeCutoff) {
                double[] weights = Weights.buildRleWeights(weightList, REPEAT_CUTOFF);
                inputs[idx++] = skipValue == null ? new RleWeightedInput((Long) row.get("item"), weights, size) : new RleWeightedInput((Long) row.get("item"), weights, size, skipValue);
            }
        }
        if (idx != inputs.length) inputs = Arrays.copyOf(inputs, idx);
        Arrays.sort(inputs);
        return inputs;
    }