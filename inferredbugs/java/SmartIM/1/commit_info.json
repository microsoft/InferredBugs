{"hash": "d5d8a8ec972be75cfaf1d98b76765c7ed900407a", "message": "opt qq message and remove reload group/discuss when out of date", "file_num_lines": 70, "diff_parsed": {"added": [[8, "import com.scienjus.smartqq.model.DiscussFrom;"], [10, "import com.scienjus.smartqq.model.GroupFrom;"], [11, "import com.scienjus.smartqq.model.QQContact;"], [24, "    public static void main(String[] args) throws Exception {"], [35, "            public void onReceiveMessage(AbstractMessage message,"], [36, "                    AbstractFrom from) {"], [37, "                System.out.println(from + \" > \" + message.getText());"], [38, "                boolean unkown = false;"], [39, "                QQContact qqContact = null;"], [40, "                if (from instanceof GroupFrom) {"], [41, "                    GroupFrom gf = (GroupFrom) from;"], [42, "                    unkown = (gf.getGroupUser() == null"], [43, "                            || gf.getGroupUser().isUnknown());"], [44, "                    qqContact = client.getGroup(gf.getGroup().getId());"], [45, "                }"], [46, "                else if (from instanceof DiscussFrom) {"], [47, "                    DiscussFrom gf = (DiscussFrom) from;"], [48, "                    unkown = (gf.getDiscussUser() == null"], [49, "                            || gf.getDiscussUser().isUnknown());"], [50, "                    qqContact = client.getGroup(gf.getDiscuss().getId());"], [51, "                }"], [52, "                else {"], [53, "                    qqContact = (Friend) (from.getContact());"], [54, "                }"], [55, "                System.out.println("], [56, "                        String.format(\"unknown?%s, newbie?%s, contact:%s\","], [57, "                                unkown, from.isNewbie(), qqContact));"], [65, "        while (true) {"], [66, "            if (client.isLogin()) {"], [67, "                break;"], [68, "            }"], [69, "            Thread.sleep(1000);"], [70, "        }"], [71, ""], [72, "        client.init();"], [73, "        // \u767b\u5f55\u6210\u529f\u540e\u4fbf\u53ef\u4ee5\u7f16\u5199\u4f60\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\u4e86"], [74, "        List<Category> categories = client.getFriendListWithCategory();"], [75, "        for (Category category : categories) {"], [76, "            System.out.println(category.getName());"], [77, "            for (Friend friend : category.getFriends()) {"], [78, "                System.out.println(\"\u2014\u2014\u2014\u2014\" + friend.getNickname());"], [79, "            }"], [80, "        }"], [81, "        client.parseRecents(client.getRecentList());"]], "deleted": [[21, "    public static void main(String[] args) throws Exception{"], [29, "        // \u767b\u5f55\u6210\u529f\u540e\u4fbf\u53ef\u4ee5\u7f16\u5199\u4f60\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\u4e86"], [30, "        List<Category> categories = client.getFriendListWithCategory();"], [31, "        for (Category category : categories) {"], [32, "            System.out.println(category.getName());"], [33, "            for (Friend friend : category.getFriends()) {"], [34, "                System.out.println(\"\u2014\u2014\u2014\u2014\" + friend.getNickname());"], [35, "            }"], [36, "        }"], [40, "            public void onReceiveMessage(AbstractMessage message, AbstractFrom from) {"], [41, "                System.out.println(\"from \" + from + \" msg: \" + message);"]]}, "num_lines_added": 44, "num_lines_removed": 11}