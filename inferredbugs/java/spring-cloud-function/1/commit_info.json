{"hash": "0419fbc2ac19665787db98f588c50ced53a86480", "message": "Refactor deployer app so that it starts empty\n\nFunctions are namespaced under the \"app name\", e.g.\n/sample/uppercase is the \"uppercase\" function in the \"sample\" app.\n\nAlso added a README to get started quickly.", "file_num_lines": 78, "diff_parsed": {"added": [[50, "\t\t\tdeploy(\"sample\", \"maven://com.example:function-sample:1.0.0.BUILD-SNAPSHOT\");"], [52, "\t\t\tid = deploy(\"pojos\","], [53, "\t\t\t\t\t\"maven://com.example:function-sample-pojo:1.0.0.BUILD-SNAPSHOT\");"], [61, "\t\t\tdeployer.undeploy(\"pojos\");"], [66, "\tpublic void listFunctions() throws Exception {"], [67, "\t\tassertThat(deployer.getFunctionNames()).contains(\"sample/uppercase\","], [68, "\t\t\t\t\"pojos/uppercase\");"], [69, "\t}"], [70, ""], [71, "\t@Test"], [72, "\tpublic void nameFunction() throws Exception {"], [73, "\t\tassertThat(deployer.getName(deployer.lookupFunction(\"sample/uppercase\")))"], [74, "\t\t\t\t.isEqualTo(\"sample/uppercase\");"], [75, "\t}"], [76, ""], [77, "\t@Test"], [83, "\t\tFlux<String> result = (Flux<String>) deployer.lookupFunction(\"pojos/uppercase\")"], [89, "\tpublic void listConsumers() throws Exception {"], [90, "\t\tassertThat(deployer.getConsumerNames()).isEmpty();"], [91, "\t}"], [92, ""], [93, "\t@Test"], [95, "\t\tassertThat(deployer.lookupConsumer(\"pojos/sink\")).isNull();"], [96, "\t}"], [97, ""], [98, "\t@Test"], [99, "\tpublic void listSuppliers() throws Exception {"], [100, "\t\tassertThat(deployer.getSupplierNames()).contains(\"sample/words\", \"pojos/words\");"], [101, "\t}"], [102, ""], [103, "\t@Test"], [104, "\tpublic void nameSupplier() throws Exception {"], [105, "\t\tassertThat(deployer.getName(deployer.lookupSupplier(\"sample/words\")))"], [106, "\t\t\t\t.isEqualTo(\"sample/words\");"], [111, "\t\tassertThat(deployer.lookupSupplier(\"sample/words\")).isNotNull();"], [112, "\t\tassertThat(deployer.lookupSupplier(\"pojos/words\")).isNotNull();"], [115, "\tprivate static String deploy(String name, String path, String... args)"], [116, "\t\t\tthrows Exception {"], [117, "\t\tString deployed = deployer.deploy(name, path, args);"]], "deleted": [[18, "import java.util.Arrays;"], [19, "import java.util.Collections;"], [20, ""], [27, "import org.springframework.boot.loader.thin.ArchiveUtils;"], [29, "import org.springframework.cloud.deployer.spi.core.AppDefinition;"], [30, "import org.springframework.cloud.deployer.spi.core.AppDeploymentRequest;"], [31, "import org.springframework.core.io.FileSystemResource;"], [32, "import org.springframework.core.io.Resource;"], [58, "\t\t\tid = deploy(\"maven://com.example:function-sample:1.0.0.BUILD-SNAPSHOT\");"], [76, "\t\tFlux<String> result = (Flux<String>) deployer.lookupFunction(\"uppercase\")"], [83, "\t\tassertThat(deployer.lookupConsumer(\"sink\")).isNull();"], [88, "\t\tassertThat(deployer.lookupSupplier(\"words\")).isNotNull();"], [91, "\tprivate static String deploy(String jarName, String... args) throws Exception {"], [92, "\t\tResource resource = new FileSystemResource("], [93, "\t\t\t\tArchiveUtils.getArchiveRoot(ArchiveUtils.getArchive(jarName)));"], [94, "\t\tAppDefinition definition = new AppDefinition(resource.getFilename(),"], [95, "\t\t\t\tCollections.emptyMap());"], [96, "\t\tAppDeploymentRequest request = new AppDeploymentRequest(definition, resource,"], [97, "\t\t\t\tCollections.emptyMap(), Arrays.asList(args));"], [98, "\t\tString deployed = deployer.deploy(\"sample\", request);"]]}, "num_lines_added": 39, "num_lines_removed": 20}