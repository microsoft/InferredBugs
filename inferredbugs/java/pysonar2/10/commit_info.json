{"hash": "378369f5c7868b0f970752fe1c67de9a6f3fee2e", "message": "more cleaning up the paths", "file_num_lines": 135, "diff_parsed": {"added": [[7, "import java.io.File;"], [19, "    String expecteRefs;"], [25, "        if (new File(inputDir).isDirectory()) {"], [26, "            expecteRefs = _.makePathString(inputDir, \"refs.json\");"], [27, "        } else {"], [28, "            expecteRefs = _.makePathString(inputDir + \".refs.json\");"], [29, "        }"], [39, "    public boolean generateRefs() {"], [41, "        List<Map<String, Object>> refs = new ArrayList<>();"], [42, "        for (Map.Entry<Node, List<Binding>> e : analyzer.getReferences().entrySet()) {"], [44, "            String file = e.getKey().file;"], [46, "            // only record those in the inputDir"], [47, "            if (file != null && !file.startsWith(\"/\")) {"], [48, "                Map<String, Object> writeout = new LinkedHashMap<>();"], [50, "                Map<String, Object> ref = new LinkedHashMap<>();"], [51, "                ref.put(\"name\", e.getKey().name);"], [52, "                ref.put(\"file\", file);"], [53, "                ref.put(\"start\", e.getKey().start);"], [54, "                ref.put(\"end\", e.getKey().end);"], [55, ""], [56, "                List<Map<String, Object>> dests = new ArrayList<>();"], [57, "                for (Binding b : e.getValue()) {"], [58, "                    String destFile = b.getFile();"], [59, "                    if (destFile != null && !destFile.startsWith(\"/\")) {"], [60, "                        Map<String, Object> dest = new LinkedHashMap<>();"], [61, "                        dest.put(\"name\", b.getName());"], [62, "                        dest.put(\"file\", destFile);"], [63, "                        dest.put(\"start\", b.start);"], [64, "                        dest.put(\"end\", b.end);"], [65, "                        dests.add(dest);"], [68, "                if (!dests.isEmpty()) {"], [69, "                    writeout.put(\"ref\", ref);"], [70, "                    writeout.put(\"dests\", dests);"], [71, "                    refs.add(writeout);"], [72, "                }"], [73, "            }"], [74, "        }"], [76, "        String json = gson.toJson(refs);"], [77, "        _.writeFile(expecteRefs, json);"], [78, "        return true;"], [79, "    }"], [80, ""], [81, ""], [82, "    public boolean checkRefs() {"], [83, "        List<Map<String, Object>> failedRefs = new ArrayList<>();"], [84, "        String json = _.readFile(expecteRefs);"], [85, "        if (json == null) {"], [86, "            _.msg(\"Expected refs not found in: \" + expecteRefs +"], [87, "                    \"Please run Test with -exp to generate\");"], [88, "            return false;"], [89, "        }"], [90, "        List<Map<String, Object>> expectedRefs = gson.fromJson(json, List.class);"], [91, "        for (Map<String, Object> r : expectedRefs) {"], [92, "            Map<String, Object> refMap = (Map<String, Object>) r.get(\"ref\");"], [93, "            Dummy dummy = makeDummy(refMap);"], [94, ""], [95, "            List<Map<String, Object>> dests = (List<Map<String, Object>>) r.get(\"dests\");"], [96, "            List<Binding> actualDests = analyzer.getReferences().get(dummy);"], [97, "            List<Map<String, Object>> failedDests = new ArrayList<>();"], [98, ""], [99, "            for (Map<String, Object> d : dests) {"], [100, "                String name = (String) d.get(\"name\");"], [101, "                String file = (String) d.get(\"file\");"], [102, "                int start = (int) Math.floor((double) d.get(\"start\"));"], [103, "                int end = (int) Math.floor((double) d.get(\"end\"));"], [104, ""], [105, "                if (!checkBindingExist(actualDests, file, start, end)) {"], [106, "                    failedDests.add(d);"], [110, "            // record the ref & failed dests if any"], [111, "            if (!failedDests.isEmpty()) {"], [112, "                Map<String, Object> failedRef = new LinkedHashMap<>();"], [113, "                failedRef.put(\"ref\", refMap);"], [114, "                failedRef.put(\"dests\", failedDests);"], [115, "                failedRefs.add(failedRef);"], [118, ""], [119, "        if (failedRefs.isEmpty()) {"], [120, "            return true;"], [121, "        } else {"], [122, "            _.msg(\"Failed refs: \" + gson.toJson(failedRefs));"], [123, "            return false;"], [124, "        }"], [128, "    boolean checkBindingExist(List<Binding> bs, String file, int start, int end) {"], [134, "            if (((b.getFile() == null && file == null) ||"], [135, "                    (b.getFile() != null && file != null && b.getFile().equals(file))) &&"], [136, "                    b.start == start && b.end == end)"], [146, "    Dummy makeDummy(Map<String, Object> m) {"], [166, "        if (exp) {"], [167, "            test.generateRefs();"], [168, "        } else {"], [169, "            test.checkRefs();"], [170, "        }"]], "deleted": [[32, "    public boolean checkRefs() {"], [33, "        String expecteRefs = _.makePathString(inputDir, \"expected_refs\");"], [34, "        if (exp) {"], [36, "            List<Map<String, Object>> refs = new ArrayList<>();"], [37, "            for (Map.Entry<Node, List<Binding>> e : analyzer.getReferences().entrySet()) {"], [38, ""], [39, "                String file = e.getKey().file;"], [40, ""], [41, "                // only record those in the inputDir"], [42, "                if (file != null && !file.startsWith(\"/\")) {"], [43, "                    Map<String, Object> writeout = new LinkedHashMap<>();"], [44, ""], [45, "                    Map<String, Object> ref = new LinkedHashMap<>();"], [46, "                    ref.put(\"name\", e.getKey().name);"], [47, "                    ref.put(\"file\", file);"], [48, "                    ref.put(\"start\", e.getKey().start);"], [49, "                    ref.put(\"end\", e.getKey().end);"], [50, ""], [51, "                    List<Map<String, Object>> dests = new ArrayList<>();"], [52, "                    for (Binding b : e.getValue()) {"], [53, "                        String destFile = b.getFile();"], [54, "                        if (destFile != null && !destFile.startsWith(\"/\")) {"], [55, "                            Map<String, Object> dest = new LinkedHashMap<>();"], [56, "                            dest.put(\"name\", b.getName());"], [57, "                            dest.put(\"file\", destFile);"], [58, "                            dest.put(\"start\", b.getStart());"], [59, "                            dest.put(\"end\", b.getEnd());"], [60, "                            dests.add(dest);"], [61, "                        }"], [62, "                    }"], [63, "                    if (!dests.isEmpty()) {"], [64, "                        writeout.put(\"ref\", ref);"], [65, "                        writeout.put(\"dests\", dests);"], [66, "                        refs.add(writeout);"], [67, "                    }"], [68, "                }"], [69, "            }"], [71, "            String json = gson.toJson(refs);"], [72, "            _.writeFile(expecteRefs, json);"], [73, "            return true;"], [76, "        } else {"], [77, "            List<Map<String, Object>> failedRefs = new ArrayList<>();"], [78, "            String json = _.readFile(expecteRefs);"], [79, "            if (json == null) {"], [80, "                _.msg(\"Expected refs not found\");"], [81, "                return false;"], [82, "            }"], [83, "            List<Map<String, Object>> expectedRefs = gson.fromJson(json, List.class);"], [84, "            for (Map<String, Object> r : expectedRefs) {"], [85, "                Map<String, Object> refMap = (Map<String, Object>) r.get(\"ref\");"], [86, "                Dummy dummy = createRef(refMap);"], [87, ""], [88, "                List<Map<String, Object>> dests = (List<Map<String, Object>>) r.get(\"dests\");"], [89, "                List<Binding> actualDests = analyzer.getReferences().get(dummy);"], [90, "                List<Map<String, Object>> failedDests = new ArrayList<>();"], [91, ""], [92, "                for (Map<String, Object> d : dests) {"], [93, "                    String name = (String) d.get(\"name\");"], [94, "                    String file = (String) d.get(\"file\");"], [95, "                    int start = (int) Math.floor((double) d.get(\"start\"));"], [96, ""], [97, "                    if (!checkBindingExist(actualDests, name, file, start)) {"], [98, "                        failedDests.add(d);"], [102, "                // record the ref & failed dests if any"], [103, "                if (!failedDests.isEmpty()) {"], [104, "                    Map<String, Object> failedRef = new LinkedHashMap<>();"], [105, "                    failedRef.put(\"ref\", refMap);"], [106, "                    failedRef.put(\"dests\", failedDests);"], [107, "                    failedRefs.add(failedRef);"], [111, "            if (failedRefs.isEmpty()) {"], [112, "                return true;"], [113, "            } else {"], [114, "                _.msg(\"Failed refs: \" + gson.toJson(failedRefs));"], [115, "                return false;"], [121, "    boolean checkBindingExist(List<Binding> bs, String name, String file, int start) {"], [127, "            String actualFile = b.getFile();"], [128, "            if (b.getName().equals(name) &&"], [129, "                    actualFile.equals(file) &&"], [130, "                    b.getStart() == start)"], [140, "    Dummy createRef(Map<String, Object> m) {"], [159, "        test.checkRefs();"]]}, "num_lines_added": 91, "num_lines_removed": 81}