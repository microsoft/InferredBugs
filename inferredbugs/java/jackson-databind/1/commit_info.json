{"hash": "cfa2fc159f4600320816ebefe0629e1273532ae9", "message": "Implement feature [Issue-11]", "file_num_lines": 41, "diff_parsed": {"added": [[12, "    final ObjectMapper MAPPER = new ObjectMapper();"], [16, "        assertEquals(Boolean.TRUE, MAPPER.convertValue(\"true\", Boolean.class));"], [17, "        assertEquals(Integer.valueOf(-3), MAPPER.convertValue(\"  -3 \", Integer.class));"], [18, "        assertEquals(Long.valueOf(77), MAPPER.convertValue(\"77\", Long.class));"], [26, "        assertArrayEquals(ints, MAPPER.convertValue(Ints, int[].class));"], [33, "                          MAPPER.convertValue(\"1  2 3    4  -1 0\".split(\"\\\\s+\"), int[].class));"], [39, "        String encoded = MAPPER.convertValue(input, String.class);"], [41, "        byte[] result = MAPPER.convertValue(encoded, byte[].class);"], [49, "        char[] expEncoded = MAPPER.convertValue(input, String.class).toCharArray();"], [51, "        char[] actEncoded = MAPPER.convertValue(input, char[].class);"]], "deleted": [[12, "    final ObjectMapper mapper = new ObjectMapper();"], [16, "        assertEquals(Boolean.TRUE, mapper.convertValue(\"true\", Boolean.class));"], [17, "        assertEquals(Integer.valueOf(-3), mapper.convertValue(\"  -3 \", Integer.class));"], [18, "        assertEquals(Long.valueOf(77), mapper.convertValue(\"77\", Long.class));"], [26, "        assertArrayEquals(ints, mapper.convertValue(Ints, int[].class));"], [33, "                          mapper.convertValue(\"1  2 3    4  -1 0\".split(\"\\\\s+\"), int[].class));"], [36, "    /**"], [37, "     * @since 1.6"], [38, "     */"], [42, "        String encoded = mapper.convertValue(input, String.class);"], [44, "        byte[] result = mapper.convertValue(encoded, byte[].class);"], [48, "    /**"], [49, "     * @since 1.7.3"], [50, "     */"], [55, "        char[] expEncoded = mapper.convertValue(input, String.class).toCharArray();"], [57, "        char[] actEncoded = mapper.convertValue(input, char[].class);"]]}, "num_lines_added": 10, "num_lines_removed": 16}