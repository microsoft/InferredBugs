{"hash": "48617c885ec1c2563458d5d66ed637a4972dc1cc", "message": "Simplify failing test", "file_num_lines": 79, "diff_parsed": {"added": [[31, "    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.WRAPPER_OBJECT)"], [32, "    @JsonSubTypes({"], [33, "        @JsonSubTypes.Type(value = TypeOne.class, name = \"one\")"], [34, "    })"], [59, "        final int COUNT = 50;"], [60, "        for (int i = 0; i < COUNT; i++) {"], [61, "            runOnce(i, COUNT);"], [65, "    void runOnce(int round, int max) throws Exception {"], [91, "System.out.println(\"JSON wrong: \"+json);"], [92, "                throw new IllegalStateException(\"Round #\"+round+\"/\"+max+\" ; missing property 'one', source: \"+json);"], [94, "System.out.println(\"JSON fine: \"+json);"], [99, "        return new ObjectMapper();"]], "deleted": [[11, "import com.fasterxml.jackson.databind.module.SimpleModule;"], [15, "    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.WRAPPER_OBJECT)"], [16, "    @JsonSubTypes({"], [17, "        @JsonSubTypes.Type(value = TypeOne.class, name = \"one\"),"], [18, "        @JsonSubTypes.Type(value = TypeTwo.class, name = \"two\"),"], [19, "        @JsonSubTypes.Type(value = TypeThree.class, name = \"three\")"], [20, "    })"], [38, "    static class TypeTwo extends AbstractHasSubTypes {"], [39, "        private final String id;"], [40, "        public TypeTwo(String id) {"], [41, "            this.id = id;"], [42, "        }"], [43, "        @JsonProperty"], [44, "        public String getId() {"], [45, "            return id;"], [46, "        }"], [47, "        @Override"], [48, "        public String getType() {"], [49, "            return TypeTwo.class.getSimpleName();"], [50, "        }"], [51, "    }"], [52, ""], [53, "    static class TypeThree extends AbstractHasSubTypes {"], [54, "        private final String id;"], [55, "        public TypeThree(String id) {"], [56, "            this.id = id;"], [57, "        }"], [58, "        @JsonProperty"], [59, "        public String getId() {"], [60, "            return id;"], [61, "        }"], [62, "        @Override"], [63, "        public String getType() {"], [64, "            return TypeThree.class.getSimpleName();"], [65, "        }"], [66, "    }"], [67, ""], [92, "        for (int i = 0; i < 1000; i++) {"], [93, "            runOnce();"], [97, "    void runOnce() throws Exception {"], [123, "                throw new IllegalStateException(\"Missing 'one', source: \"+json);"], [129, "        SimpleModule module = new SimpleModule(\"subTypeRace\");"], [130, "        module.setMixInAnnotation(HasSubTypes.class, AbstractHasSubTypes.class);"], [131, ""], [132, "        ObjectMapper mapper = new ObjectMapper();"], [133, "        mapper.registerModule(module);"], [134, "        return mapper;"]]}, "num_lines_added": 12, "num_lines_removed": 47}