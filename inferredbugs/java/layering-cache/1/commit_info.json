{"hash": "1cdcc43e19198a3ea0bd2a17a22df03c077f2239", "message": "\u83b7\u53d6\u7f13\u5b58\u7edf\u8ba1\u4fe1\u606f\u65b9\u6cd5\u79fb\u5230CacheManager\u4e0a", "file_num_lines": 173, "diff_parsed": {"added": [[6, "import com.github.xiaolyuh.stats.CacheStatsInfo;"], [7, "import com.github.xiaolyuh.tool.service.CacheService;"], [9, "import com.github.xiaolyuh.tool.support.IPRange;"], [10, "import com.github.xiaolyuh.tool.support.InitServletData;"], [11, "import com.github.xiaolyuh.tool.support.Result;"], [12, "import com.github.xiaolyuh.tool.support.URLConstant;"], [14, "import com.github.xiaolyuh.util.BeanFactory;"], [17, "import org.springframework.util.CollectionUtils;"], [104, "            Set<AbstractCacheManager> cacheManagers = AbstractCacheManager.getCacheManager();"], [105, "            for (AbstractCacheManager cacheManager : cacheManagers) {"], [106, "                cacheManager.resetCacheStat();"], [107, "            }"], [114, "            String cacheName = request.getParameter(\"cacheName\");"], [115, "            Set<AbstractCacheManager> cacheManagers = AbstractCacheManager.getCacheManager();"], [116, "            List<CacheStatsInfo> statsList = new ArrayList<>();"], [117, "            for (AbstractCacheManager cacheManager : cacheManagers) {"], [118, "                List<CacheStatsInfo> cacheStats = cacheManager.listCacheStats(cacheName);"], [119, "                if (!CollectionUtils.isEmpty(cacheStats)) {"], [120, "                    statsList.addAll(cacheStats);"], [121, "                }"], [122, "            }"], [132, "            BeanFactory.getBean(CacheService.class).deleteCache(cacheNameParam, internalKey, key);"]], "deleted": [[6, "import com.github.xiaolyuh.tool.service.StatsService;"], [8, "import com.github.xiaolyuh.tool.support.*;"], [9, "import com.github.xiaolyuh.tool.util.BeanFactory;"], [13, "import org.springframework.data.redis.core.RedisTemplate;"], [36, "    private RedisTemplate<String, Object> redisTemplate;"], [37, ""], [38, ""], [103, "            BeanFactory.getBean(StatsService.class).resetCacheStat(redisTemplate);"], [110, "            String cacheNameParam = request.getParameter(\"cacheName\");"], [111, "            List<CacheStats> statsList = BeanFactory.getBean(StatsService.class).listCacheStats(redisTemplate, cacheNameParam);"], [121, "            BeanFactory.getBean(StatsService.class).deleteCache(cacheNameParam, internalKey, key);"], [154, ""], [155, "        // \u91c7\u96c6\u7f13\u5b58\u547d\u4e2d\u6570\u636e"], [156, "        redisTemplate = getRedisTemplate();"], [157, "        BeanFactory.getBean(StatsService.class).syncCacheStats(redisTemplate);"], [213, ""], [214, "    private RedisTemplate<String, Object> getRedisTemplate() {"], [215, "        Set<AbstractCacheManager> cacheManagers = AbstractCacheManager.getCacheManager();"], [216, "        for (AbstractCacheManager cacheManager : cacheManagers) {"], [217, "            return cacheManager.getRedisTemplate();"], [218, "        }"], [219, "        return null;"], [220, "    }"], [221, ""], [222, "    @Override"], [223, "    public void destroy() {"], [224, "        super.destroy();"], [225, "        BeanFactory.getBean(StatsService.class).shutdownExecutor();"], [226, "    }"]]}, "num_lines_added": 22, "num_lines_removed": 29}