{"bug_class": "PROVER", "kind": "ERROR", "bug_type": "THREAD_SAFETY_VIOLATION", "qualifier": "Read/Write race. Non-private method `com.hazelcast.impl.MapOperationStatsImpl.writeData` reads without synchronization from `this.com.hazelcast.impl.MapOperationStatsImpl.endTime`. Potentially races with write in method `MapOperationStatsImpl.getPublishedStats()`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not.", "severity": "HIGH", "visibility": "user", "line": 54, "column": -1, "procedure": "void MapOperationStatsImpl.writeData(DataOutput)", "procedure_id": "com.hazelcast.impl.MapOperationStatsImpl.writeData(java.io.DataOutput):void.efd39c2c649c6fcb8402517e6436a521", "procedure_start_line": 49, "file": "hazelcast/src/main/java/com/hazelcast/impl/MapOperationStatsImpl.java", "bug_trace": [{"level": 0, "filename": "hazelcast/src/main/java/com/hazelcast/impl/MapOperationStatsImpl.java", "line_number": 54, "column_number": -1, "description": "<Read trace>"}, {"level": 0, "filename": "hazelcast/src/main/java/com/hazelcast/impl/MapOperationStatsImpl.java", "line_number": 54, "column_number": -1, "description": "access to `this.com.hazelcast.impl.MapOperationStatsImpl.endTime`"}, {"level": 0, "filename": "hazelcast/src/main/java/com/hazelcast/impl/MapOperationStatsImpl.java", "line_number": 83, "column_number": -1, "description": "<Write trace>"}, {"level": 0, "filename": "hazelcast/src/main/java/com/hazelcast/impl/MapOperationStatsImpl.java", "line_number": 83, "column_number": -1, "description": "call to MapOperationStatsImpl MapOperationStatsImpl.getThis()"}, {"level": 1, "filename": "hazelcast/src/main/java/com/hazelcast/impl/MapOperationStatsImpl.java", "line_number": 139, "column_number": -1, "description": "access to `this.com.hazelcast.impl.MapOperationStatsImpl.endTime`"}], "key": "MapOperationStatsImpl.java|writeData|THREAD_SAFETY_VIOLATION", "node_key": "9c5d6d9028928346cc4fb44cced5dea1", "hash": "1201c2bf7bb4a168708ee22bcfc705f0", "bug_type_hum": "Thread Safety Violation", "censored_reason": ""}