{"hash": "f3dc3982c87ab1a36bf6720cfa91c2a766b35184", "message": "Condition.await is buggy on SunOS 10u5 so it is safer to use regular object locks.\n\nNew distribution structure\n/bin/\n/lib/\n/javadoc/\n/license/\n\ngit-svn-id: http://hazelcast.googlecode.com/svn/trunk@865 3f8e66b6-ca9d-11dd-a2b5-e5f827957e07", "file_num_lines": 198, "diff_parsed": {"added": [[46, "    private final Object notEmptyLock = new Object();"], [93, "        packetQueue.offer(packet);"], [94, "        synchronized (notEmptyLock) {"], [95, "            notEmptyLock.notify();"], [100, "        processableQueue.offer(processable);"], [101, "        synchronized (notEmptyLock) {"], [102, "            notEmptyLock.notify();"], [139, "                    synchronized (notEmptyLock) {"], [140, "                        notEmptyLock.wait(100);"], [141, "                    }"], [218, "            StringBuilder sb = new StringBuilder(\"Hazelcast ServiceThread is blocked for \");"], [225, "            sb.append(\"\\n\");"]], "deleted": [[29, "import java.util.concurrent.locks.Condition;"], [30, "import java.util.concurrent.locks.ReentrantLock;"], [48, "    private final ReentrantLock enqueueLock = new ReentrantLock();"], [49, "    private final Condition notEmpty = enqueueLock.newCondition();"], [96, "        try {"], [97, "            packetQueue.offer(packet);"], [98, "            enqueueLock.lock();"], [99, "            notEmpty.signal();"], [100, "        } finally {"], [101, "            enqueueLock.unlock();"], [106, "        try {"], [107, "            processableQueue.offer(processable);"], [108, "            enqueueLock.lock();"], [109, "            notEmpty.signal();"], [110, "        } finally {"], [111, "            enqueueLock.unlock();"], [147, "                enqueueLock.lock();"], [149, "                    notEmpty.await(100, TimeUnit.MILLISECONDS);"], [153, "                } finally {"], [154, "                    enqueueLock.unlock();"], [228, "            StringBuilder sb = new StringBuilder (\"Hazelcast ServiceThread is blocked for \");"], [235, "            sb.append(\"\\n\");"]]}, "num_lines_added": 12, "num_lines_removed": 22}