{"hash": "6a0210bee450ce43771d896b2a97fe7cc7aefcbf", "message": "* \u4f18\u5316feign\u7684\u62e6\u622a\u5904\u7406\u903b\u8f91\n* \u4f18\u5316\u8d44\u6e90\u53cd\u5e8f\u5217\u5316\u7684\u903b\u8f91\n* \u8c03\u6574RemoteCoodinator\u7684\u521d\u59cb\u5316\u65b9\u5f0f", "file_num_lines": 35, "diff_parsed": {"added": [[18, "import org.bytesoft.bytejta.supports.dubbo.TransactionBeanRegistry;"], [43, "\t\tTransactionBeanRegistry transactionBeanRegistry = TransactionBeanRegistry.getInstance();"], [44, "\t\treturn transactionBeanRegistry.getConsumeCoordinator();"], [48, "\t\tTransactionBeanRegistry transactionBeanRegistry = TransactionBeanRegistry.getInstance();"], [49, "\t\ttransactionBeanRegistry.setConsumeCoordinator(consumeCoordinator);"]], "deleted": [[18, "import java.util.concurrent.TimeUnit;"], [19, "import java.util.concurrent.locks.Condition;"], [20, "import java.util.concurrent.locks.Lock;"], [21, "import java.util.concurrent.locks.ReentrantLock;"], [22, ""], [35, "\tprivate RemoteCoordinator consumeCoordinator;"], [36, ""], [37, "\tprivate Lock lock = new ReentrantLock();"], [38, "\tprivate Condition condition = this.lock.newCondition();"], [51, "\t\tif (this.consumeCoordinator != null) {"], [52, "\t\t\treturn this.consumeCoordinator;"], [53, "\t\t} else {"], [54, "\t\t\treturn this.doGetConsumeCoordinator();"], [55, "\t\t}"], [56, "\t}"], [57, ""], [58, "\tprivate RemoteCoordinator doGetConsumeCoordinator() {"], [59, "\t\ttry {"], [60, "\t\t\tthis.lock.lock();"], [61, "\t\t\twhile (this.consumeCoordinator == null) {"], [62, "\t\t\t\ttry {"], [63, "\t\t\t\t\tthis.condition.await(1, TimeUnit.SECONDS);"], [64, "\t\t\t\t} catch (InterruptedException ex) {"], [65, "\t\t\t\t\tlogger.debug(ex.getMessage());"], [66, "\t\t\t\t}"], [67, "\t\t\t}"], [68, ""], [69, "\t\t\t// ConsumeCoordinator is injected by the CompensableConfigPostProcessor, which has a slight delay."], [70, "\t\t\treturn consumeCoordinator;"], [71, "\t\t} finally {"], [72, "\t\t\tthis.lock.unlock();"], [73, "\t\t}"], [77, "\t\ttry {"], [78, "\t\t\tthis.lock.lock();"], [79, "\t\t\tif (this.consumeCoordinator == null) {"], [80, "\t\t\t\tthis.consumeCoordinator = consumeCoordinator;"], [81, "\t\t\t\tthis.condition.signalAll();"], [82, "\t\t\t} else {"], [83, "\t\t\t\tthrow new IllegalStateException("], [84, "\t\t\t\t\t\t\"Field 'consumeCoordinator' has already been set, please check your app whether it imports ByteTCC repeatedly!\");"], [85, "\t\t\t}"], [86, "\t\t} finally {"], [87, "\t\t\tthis.lock.unlock();"], [88, "\t\t}"]]}, "num_lines_added": 5, "num_lines_removed": 44}