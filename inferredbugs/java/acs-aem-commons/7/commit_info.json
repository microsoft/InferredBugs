{"hash": "2d4199187a39b8c0a7fb2f2f26131366e025ad9f", "message": "removing unnecessary synchronization by using AtomicInteger; fixing Findbugs issue about default charset", "file_num_lines": 193, "diff_parsed": {"added": [[25, ""], [49, ""], [54, "import java.util.concurrent.ConcurrentMap;"], [60, "        metatype = true"], [92, "    private static final String PROP_SERVE_AUTHENTICATED_FROM_CACHE = \"serve-authenticated-from-cache\";"], [94, "    private ConcurrentMap<String, CacheEntry> cache = new ConcurrentHashMap<String, CacheEntry>();"], [113, "        CacheEntry cacheEntry = cache.get(path);"], [114, "        final boolean newEntry = cacheEntry == null;"], [116, "        if (newEntry || cacheEntry.isExpired(new Date())) {"], [118, "            // Cache Miss"], [119, "            final String data = ResourceDataUtil.getIncludeAsString(path, request, response);"], [121, "            if (newEntry) {"], [122, "                cacheEntry = new CacheEntry();"], [123, "            }"], [125, "            cacheEntry.setData(data);"], [126, "            cacheEntry.setExpiresIn(ttl);"], [127, "            cacheEntry.incrementMisses();"], [129, "            if (newEntry) {"], [132, "            }"], [134, "            log.info(\"Served cache MISS for [ {} ] in [ {} ] ms\", path, System.currentTimeMillis() - start);"], [136, "            return data;"], [137, "        } else {"], [138, "            // Cache Hit"], [140, "            final String data = cacheEntry.getData();"], [142, "            cacheEntry.incrementHits();"], [143, "            cache.put(path, cacheEntry);"], [145, "            log.info(\"Served cache HIT for [ {} ] in [ {} ] ms\", path, System.currentTimeMillis() - start);"], [147, "            return data;"], [185, "        for (final CacheEntry entry : this.cache.values()) {"], [186, "            hits = hits + entry.getHits();"], [214, "        return this.getTotalHits() + this.getTotalMisses();"], [221, "        for (final CacheEntry entry : this.cache.values()) {"], [222, "            bytes = bytes + entry.getBytes();"], [256, "            data.put(\"sizeInKB\", cacheEntry.getBytes() / KB_IN_BYTES);"], [268, "        this.cache.clear();"]], "deleted": [[57, "        metatype = true,"], [58, "        immediate = true"], [90, "    public static final String PROP_SERVE_AUTHENTICATED_FROM_CACHE = \"serve-authenticated-from-cache\";"], [92, "    private ConcurrentHashMap<String, CacheEntry> cache = new ConcurrentHashMap<String, CacheEntry>();"], [112, "        // Lock the cache because we we increment values within the cache even on valid cache hits"], [113, "        synchronized (this.cache) {"], [114, ""], [115, "            CacheEntry cacheEntry = cache.get(path);"], [116, ""], [117, "            if (cacheEntry == null || cacheEntry.isExpired(new Date())) {"], [119, "                // Cache Miss"], [121, "                if (cacheEntry == null) {"], [122, "                    cacheEntry = new CacheEntry();"], [123, "                }"], [124, ""], [125, "                final String data = ResourceDataUtil.getIncludeAsString(path, request, response);"], [127, "                cacheEntry.setData(data);"], [128, "                cacheEntry.setExpiresIn(ttl);"], [129, "                cacheEntry.incrementMisses();"], [134, "                log.info(\"Served cache MISS for [ {} ] in [ {} ] ms\", path, System.currentTimeMillis() - start);"], [136, "                return data;"], [137, "            } else {"], [138, "                // Cache Hit"], [140, "                final String data = cacheEntry.getData();"], [142, "                cacheEntry.incrementHits();"], [143, "                cache.put(path, cacheEntry);"], [145, "                log.info(\"Served cache HIT for [ {} ] in [ {} ] ms\", path, System.currentTimeMillis() - start);"], [147, "                return data;"], [148, "            }"], [186, "        for (final Map.Entry<String, CacheEntry> entry : this.cache.entrySet()) {"], [187, "            hits = hits + entry.getValue().getHits();"], [215, "        return this.getTotalHits() + getTotalMisses();"], [222, "        for (final Map.Entry<String, CacheEntry> entry : this.cache.entrySet()) {"], [223, "            bytes = bytes + entry.getValue().getData().getBytes().length;"], [257, "            data.put(\"sizeInKB\", cacheEntry.getData().getBytes().length / KB_IN_BYTES);"], [269, "        synchronized (this.cache) {"], [270, "            this.cache.clear();"], [271, "        }"]]}, "num_lines_added": 35, "num_lines_removed": 38}