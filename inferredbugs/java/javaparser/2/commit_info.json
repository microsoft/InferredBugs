{"hash": "392da9ccc20700afd59d2713132bf1363d34e55d", "message": "Fix 37: handling strings while parsing comments", "file_num_lines": 124, "diff_parsed": {"added": [[17, "        WAITING_TO_LEAVE_BLOCK_COMMENT,"], [18, "        IN_STRING;"], [54, "            switch (state) {"], [56, "                    if (prevTwoChars.peekLast().equals('/') && c == '/') {"], [59, "                        currentLineComment.setBeginColumn(currCol - 1);"], [62, "                    } else if (prevTwoChars.peekLast().equals('/') && c == '*') {"], [63, "                        currentBlockComment = new BlockComment();"], [65, "                        currentBlockComment.setBeginColumn(currCol - 1);"], [68, "                    } else if (c == '\"') {"], [69, "                        state = State.IN_STRING;"], [110, "                case IN_STRING:"], [111, "                    if (!prevTwoChars.peekLast().equals('\\\\') && c == '\"') {"], [112, "                        state = State.CODE;"], [113, "                    }"], [114, "                    break;"]], "deleted": [[17, "        WAITING_TO_LEAVE_BLOCK_COMMENT;"], [53, "            switch (state){"], [55, "                    if (prevTwoChars.peekLast().equals('/') && c=='/'){"], [58, "                        currentLineComment.setBeginColumn(currCol-1);"], [61, "                    } else if (prevTwoChars.peekLast().equals('/') && c=='*'){"], [62, "                        currentBlockComment= new BlockComment();"], [64, "                        currentBlockComment.setBeginColumn(currCol-1);"]]}, "num_lines_added": 15, "num_lines_removed": 7}