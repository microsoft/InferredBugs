{"hash": "c33ba536da04e5b22a1c2740ce38761300dd13a9", "message": "fixed issue #916 (#928)\n\n* fixed issue #916\r\n\r\nfixed issue #916 InputStream not closed in class org.jsoup.nodes.Entities.\r\nuse jdk7 try-with-resources to close \"BufferReader input\".\r\n\r\n* fixed issue #916\r\n\r\ntry-with-resources makes use of Throwable.addSuppressed(Throwable) which was officially added with API 19.\r\nusing normal try-catch block instead.", "file_num_lines": 246, "diff_parsed": {"added": [[306, "        BufferedReader input = null;"], [307, "        try {"], [308, "            input = new BufferedReader(new InputStreamReader(stream, ASCII));"], [309, "            CharacterReader reader = new CharacterReader(input);"], [310, ""], [311, "            while (!reader.isEmpty()) {"], [312, "                // NotNestedLessLess=10913,824;1887"], [313, ""], [314, "                final String name = reader.consumeTo('=');"], [315, "                reader.advance();"], [316, "                final int cp1 = Integer.parseInt(reader.consumeToAny(codeDelims), codepointRadix);"], [317, "                final char codeDelim = reader.current();"], [318, "                reader.advance();"], [319, "                final int cp2;"], [320, "                if (codeDelim == ',') {"], [321, "                    cp2 = Integer.parseInt(reader.consumeTo(';'), codepointRadix);"], [322, "                    reader.advance();"], [323, "                } else {"], [324, "                    cp2 = empty;"], [325, "                }"], [326, "                String indexS = reader.consumeTo('\\n');"], [327, "                // default git checkout on windows will add a \\r there, so remove"], [328, "                if (indexS.charAt(indexS.length() - 1) == '\\r') {"], [329, "                    indexS = indexS.substring(0, indexS.length() - 1);"], [330, "                }"], [331, "                final int index = Integer.parseInt(indexS, codepointRadix);"], [334, "                e.nameKeys[i] = name;"], [335, "                e.codeVals[i] = cp1;"], [336, "                e.codeKeys[index] = cp1;"], [337, "                e.nameVals[index] = name;"], [339, "                if (cp2 != empty) {"], [340, "                    multipoints.put(name, new String(new int[]{cp1, cp2}, 0, 2));"], [341, "                }"], [342, "                i++;"], [343, "            }"], [344, "        } finally {"], [345, "            try {"], [346, "                if (input != null) {"], [347, "                    input.close();"], [348, "                }"], [349, "            } catch (IOException e1) {"], [350, "                //ignore exception"]], "deleted": [[306, "        BufferedReader input = new BufferedReader(new InputStreamReader(stream, ASCII));"], [307, "        CharacterReader reader = new CharacterReader(input);"], [308, ""], [309, "        while (!reader.isEmpty()) {"], [310, "            // NotNestedLessLess=10913,824;1887"], [311, ""], [312, "            final String name = reader.consumeTo('=');"], [313, "            reader.advance();"], [314, "            final int cp1 = Integer.parseInt(reader.consumeToAny(codeDelims), codepointRadix);"], [315, "            final char codeDelim = reader.current();"], [316, "            reader.advance();"], [317, "            final int cp2;"], [318, "            if (codeDelim == ',') {"], [319, "                cp2 = Integer.parseInt(reader.consumeTo(';'), codepointRadix);"], [321, "            } else {"], [322, "                cp2 = empty;"], [323, "            }"], [324, "            String indexS = reader.consumeTo('\\n');"], [325, "            // default git checkout on windows will add a \\r there, so remove"], [326, "            if (indexS.charAt(indexS.length() - 1) == '\\r') {"], [327, "                indexS = indexS.substring(0, indexS.length() - 1);"], [328, "            }"], [329, "            final int index = Integer.parseInt(indexS, codepointRadix);"], [330, "            reader.advance();"], [332, "            e.nameKeys[i] = name;"], [333, "            e.codeVals[i] = cp1;"], [334, "            e.codeKeys[index] = cp1;"], [335, "            e.nameVals[index] = name;"], [337, "            if (cp2 != empty) {"], [338, "                multipoints.put(name, new String(new int[]{cp1, cp2}, 0, 2));"], [340, "            i++;"]]}, "num_lines_added": 42, "num_lines_removed": 31}