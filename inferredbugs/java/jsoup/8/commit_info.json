{"hash": "6b0dd15b9542b184a55040de992e0140e613fec8", "message": "Performance tweaks.", "file_num_lines": 217, "diff_parsed": {"added": [[23, "    int siblingIndex;"], [229, "        Integer index = out.siblingIndex();"], [232, "        in.setSiblingIndex(index);"], [238, "        int index = out.siblingIndex();"], [240, "        reindexChildren();"], [247, ""], [258, "        reindexChildren();"], [259, "    }"], [260, ""], [261, "    private void reindexChildren() {"], [262, "        for (int i = 0; i < childNodes.size(); i++) {"], [263, "            childNodes.get(i).setSiblingIndex(i);"], [264, "        }"], [291, "        Integer index = siblingIndex();"], [305, "        Integer index = siblingIndex();"], [320, "        return siblingIndex;"], [322, ""], [323, "    protected void setSiblingIndex(int siblingIndex) {"], [324, "        this.siblingIndex = siblingIndex;"], [332, "        StringBuilder accum = new StringBuilder(32*1024);"]], "deleted": [[228, "        Integer index = indexInList(out, childNodes);"], [236, "        int index = indexInList(out, childNodes);"], [244, ""], [281, "        Integer index = indexInList(this, siblings);"], [295, "        Integer index = indexInList(this, siblings);"], [310, "        return indexInList(this, parent().childNodes);"], [312, ""], [313, "    protected static <N extends Node> Integer indexInList(N search, List<N> nodes) {"], [314, "        Validate.notNull(search);"], [315, "        Validate.notNull(nodes);"], [316, ""], [317, "        for (int i = 0; i < nodes.size(); i++) {"], [318, "            N node = nodes.get(i);"], [319, "            if (node.equals(search))"], [320, "                return i;"], [321, "        }"], [322, "        return null;"], [330, "        StringBuilder accum = new StringBuilder();"]]}, "num_lines_added": 20, "num_lines_removed": 18}