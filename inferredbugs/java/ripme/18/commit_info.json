{"hash": "da47ca0c9d9df3252aaf7ae89bfdf188652c0e97", "message": "Logger changes and using config now to store login cookies.", "file_num_lines": 306, "diff_parsed": {"added": [[7, "import com.rarchives.ripme.utils.Utils;"], [9, "import java.io.ByteArrayInputStream;"], [10, "import java.io.ByteArrayOutputStream;"], [14, "import java.io.Serializable;"], [18, "import java.util.Base64;"], [77, "\tprivate Map<String, String> cookies = null;"], [84, "\tprivate final String utilsKey = \"DeviantartLogin.cookies\";"], [122, "\t\ttry {"], [123, "\t\t\tString dACookies = Utils.getConfigString(utilsKey, null);"], [124, "\t\t\tthis.cookies = dACookies != null ? deserialize(dACookies) : null;"], [125, "\t\t} catch (ClassNotFoundException e) {"], [126, "\t\t\te.printStackTrace();"], [127, "\t\t}"], [128, "\t\tif (this.cookies == null) {"], [129, "\t\t\tLOGGER.info(\"Log in now\");"], [130, "\t\t\t// Do login now"], [141, "\t\t\tLOGGER.info(\"Token: \" + token + \" & Key: \" + key);"], [166, "\t\t\t// Write Cookie to file for other RipMe Instances or later use"], [167, "\t\t\tUtils.setConfigString(utilsKey, serialize(new HashMap<String, String>(this.cookies)));"], [168, "\t\t\tUtils.saveConfig(); // save now because of other instances that might work simultaneously"], [172, "\t\tLOGGER.info(\"DA Cookies: \" + this.cookies);"], [186, "\t\tLOGGER.info(\"Current Offset: \" + this.offset);"], [191, "\t\t\tLOGGER.info(\"Messages amount: \" + messages.size() + \" - Next Page does not exists\");"], [223, "\t\tLOGGER.info(\"Amount of Images on Page: \" + result.size());"], [224, "\t\tLOGGER.info(page.location());"], [235, "\t\tLOGGER.info(\"Downloading URL Number \" + this.downloadCount);"], [236, "\t\tLOGGER.info(\"Deviant Art URL: \" + url.toExternalForm());"], [308, "\t\tLOGGER.info(\"Album Name: \" + artist + \"_\" + what + \"_\" + albumname);"], [353, "\t\tLOGGER.info(\"Updating Cookies\");"], [354, "\t\tLOGGER.info(\"Old Cookies: \" + this.cookies + \" \");"], [355, "\t\tLOGGER.info(\"New Cookies: \" + m + \" \");"], [358, "\t\tLOGGER.info(\"Merged Cookies: \" + this.cookies + \" \");"], [363, "\t * Serializes an Object and returns a String ready to store Used to store"], [364, "\t * cookies in the config file because the deviantart cookies contain all sort of"], [365, "\t * special characters like ; , = : and so on."], [366, "\t *"], [367, "\t * @param o Object to serialize"], [368, "\t * @return The serialized base64 encoded object"], [369, "\t * @throws IOException"], [370, "\t */"], [371, "\tprivate String serialize(Serializable o) throws IOException {"], [372, "\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();"], [373, "\t\tObjectOutputStream oos = new ObjectOutputStream(baos);"], [374, "\t\toos.writeObject(o);"], [375, "\t\toos.close();"], [376, "\t\treturn Base64.getEncoder().encodeToString(baos.toByteArray());"], [377, "\t}"], [378, ""], [379, "\t/**"], [380, "\t * Recreates the object from the base64 encoded String. Used for Cookies"], [381, "\t *"], [382, "\t * @param s the base64 encoded string"], [383, "\t * @return the Cookie Map"], [384, "\t * @throws IOException"], [385, "\t * @throws ClassNotFoundException"], [386, "\t */"], [387, "\tprivate Map<String, String> deserialize(String s) throws IOException, ClassNotFoundException {"], [388, "\t\tbyte[] data = Base64.getDecoder().decode(s);"], [389, "\t\tObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(data));"], [390, "\t\tHashMap<String, String> o = (HashMap<String, String>) ois.readObject(); // Unchecked cast here but should never"], [391, "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// be something else"], [392, "\t\tois.close();"], [393, "\t\treturn o;"], [394, "\t}"], [395, ""], [396, "\t/**"], [433, "\t\t\tLOGGER.info(\"Searching max. Resolution for \" + url);"], [460, "\t\t\t\t\tLOGGER.info(\"Download Button found: \" + downloadButton.attr(\"href\"));"], [469, "\t\t\t\t\tLOGGER.info(\"Found Image URL\");"], [470, "\t\t\t\t\tLOGGER.info(url);"], [471, "\t\t\t\t\tLOGGER.info(location);"], [485, "\t\t\t\t\tLOGGER.error(\"ERROR on \" + url);"], [487, "\t\t\t\t\tLOGGER.error(\"Cookies: \" + getDACookie() + \"    \");"], [488, "\t\t\t\t\tLOGGER.error(div);"], [489, "\t\t\t\t\tsendUpdate(STATUS.DOWNLOAD_ERRORED, \"ERROR at\\n\" + url);"], [496, "\t\t\t\t\tLOGGER.error(\"No Image found, probably text art\");"], [497, "\t\t\t\t\tLOGGER.error(url);"], [507, "\t\t\t\t\tLOGGER.error(\"Unexpected URL Format\");"], [508, "\t\t\t\t\tsendUpdate(STATUS.DOWNLOAD_ERRORED, \"Unexpected URL Format\");"], [514, "\t\t\t\tLOGGER.info(\"Found Image URL\");"], [515, "\t\t\t\tLOGGER.info(url);"], [516, "\t\t\t\tLOGGER.info(parts[0]);"], [526, "\t\t\tLOGGER.error(\"No Full Size URL for: \" + url);"]], "deleted": [[8, "import java.io.File;"], [9, "import java.io.FileInputStream;"], [10, "import java.io.FileOutputStream;"], [75, "\tprivate Map<String, String> cookies;"], [119, "\t\tFile f = new File(\"DACookie.toDelete\");"], [120, "\t\tif (!f.exists()) {"], [121, "\t\t\tf.createNewFile();"], [122, "\t\t\tf.deleteOnExit();"], [133, "\t\t\tSystem.out.println("], [134, "\t\t\t\t\t\"------------------------------\" + token + \"   &   \" + key + \"------------------------------\");"], [160, "\t\t\t// Write Cookie to file for other RipMe Instances"], [161, "\t\t\ttry {"], [162, "\t\t\t\tFileOutputStream fileOut = new FileOutputStream(f);"], [163, "\t\t\t\tObjectOutputStream out = new ObjectOutputStream(fileOut);"], [164, "\t\t\t\tout.writeObject(this.cookies);"], [165, "\t\t\t\tout.close();"], [166, "\t\t\t\tfileOut.close();"], [167, "\t\t\t} catch (IOException i) {"], [168, "\t\t\t\ti.printStackTrace();"], [169, "\t\t\t}"], [170, ""], [171, "\t\t} else {"], [172, ""], [173, "\t\t\t// When cookie file already exists (from another RipMe instance)"], [174, "\t\t\twhile (this.cookies == null) {"], [175, "\t\t\t\ttry {"], [176, "\t\t\t\t\tThread.sleep(2000);"], [177, "\t\t\t\t\tFileInputStream fileIn = new FileInputStream(f);"], [178, "\t\t\t\t\tObjectInputStream in = new ObjectInputStream(fileIn);"], [179, "\t\t\t\t\tthis.cookies = (Map<String, String>) in.readObject();"], [180, "\t\t\t\t\tin.close();"], [181, "\t\t\t\t\tfileIn.close();"], [182, "\t\t\t\t} catch (IOException | ClassNotFoundException | InterruptedException i) {"], [183, "\t\t\t\t\ti.printStackTrace();"], [184, "\t\t\t\t}"], [185, "\t\t\t}"], [188, "\t\tSystem.out.println(\"------------------------------\" + this.cookies + \"------------------------------\");"], [202, "\t\tSystem.out.println(\"------------------------------Current Offset: \" + this.offset"], [203, "\t\t\t\t+ \" - More Pages?------------------------------\");"], [208, "\t\t\tSystem.out.println(\"------------------------------Messages amount: \" + messages.size()"], [209, "\t\t\t\t\t+ \" - Next Page does not exists------------------------------\");"], [241, "\t\tSystem.out.println(\"------------------------------Amount of Images on Page: \" + result.size()"], [242, "\t\t\t\t+ \"------------------------------\");"], [243, "\t\tSystem.out.println(\"------------------------------\" + page.location() + \"------------------------------\");"], [254, "\t\tSystem.out.println(\"------------------------------Download URL Number \" + this.downloadCount"], [255, "\t\t\t\t+ \"------------------------------\");"], [256, "\t\tSystem.out.println("], [257, "\t\t\t\t\"------------------------------DAURL: \" + url.toExternalForm() + \"------------------------------\");"], [329, "\t\tSystem.out.println(\"------------------------------Album Name: \" + artist + \"_\" + what + \"_\" + albumname"], [330, "\t\t\t\t+ \"------------------------------\");"], [375, "\t\tSystem.out.println(\"------------------------------Updating Cookies------------------------------\");"], [376, "\t\tSystem.out.println("], [377, "\t\t\t\t\"------------------------------Old Cookies: \" + this.cookies + \" ------------------------------\");"], [378, "\t\tSystem.out.println(\"------------------------------New Cookies: \" + m + \" ------------------------------\");"], [381, "\t\tSystem.out.println("], [382, "\t\t\t\t\"------------------------------Merged Cookies: \" + this.cookies + \" ------------------------------\");"], [423, "\t\t\tSystem.out.println(\"------------------------------------------------------------\");"], [424, "\t\t\tSystem.out.println(\"------------------------------Searching max. Resolution for \" + url"], [425, "\t\t\t\t\t+ \"------------------------------\");"], [452, "\t\t\t\t\tSystem.out.println(\"------------------------------Download Button found: \""], [453, "\t\t\t\t\t\t\t+ downloadButton.attr(\"href\") + \"------------------------------\");"], [462, "\t\t\t\t\tSystem.out.println(\"------------------------------Found Image URL------------------------------\");"], [463, "\t\t\t\t\tSystem.out.println(\"------------------------------\" + url + \"------------------------------\");"], [464, "\t\t\t\t\tSystem.out.println(\"------------------------------\" + location + \"------------------------------\");"], [478, "\t\t\t\t\tSystem.out.println("], [479, "\t\t\t\t\t\t\t\"------------------------------!!!ERROR on \" + url + \" !!!------------------------------\");"], [481, "\t\t\t\t\tSystem.out.println(\"------------------------------!!!Cookies: \" + getDACookie()"], [482, "\t\t\t\t\t\t\t+ \"    ------------------------------\");"], [483, "\t\t\t\t\tSystem.out.println(div);"], [484, "\t\t\t\t\tsendUpdate(STATUS.DOWNLOAD_ERRORED, \"!!!ERROR!!!\\n\" + url);"], [491, "\t\t\t\t\tSystem.out.println("], [492, "\t\t\t\t\t\t\t\"------------------------------No Image found, probably text art------------------------------\");"], [493, "\t\t\t\t\tSystem.out.println(url);"], [503, "\t\t\t\t\tSystem.out.println("], [504, "\t\t\t\t\t\t\t\"------------------------------Unexpected URL Format------------------------------\");"], [505, "\t\t\t\t\tsendUpdate(STATUS.DOWNLOAD_WARN, \"Unexpected URL Format - Risky Try\");"], [511, "\t\t\t\tSystem.out.println(\"------------------------------Found Image URL------------------------------\");"], [512, "\t\t\t\tSystem.out.println(\"------------------------------\" + url + \"------------------------------\");"], [513, "\t\t\t\tSystem.out.println(\"------------------------------\" + parts[0] + \"------------------------------\");"], [523, "\t\t\tSystem.out.println("], [524, "\t\t\t\t\t\"------------------------------No Full Size URL for: \" + url + \"------------------------------\");"]]}, "num_lines_added": 83, "num_lines_removed": 81}