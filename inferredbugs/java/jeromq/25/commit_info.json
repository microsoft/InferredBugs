{"hash": "0df54c281e1a1e92c54ae23fade468c2717197ff", "message": "problem: cannot cancel ongoing recv/send operation\n\nFor thread-safe sockets this is an issue because at the moment there is no way to poll over thread-safe sockets.\nThis PR adds a CancellationToken to allow cancel pending send/recv operation, both for thread-safe and regular sockets", "file_num_lines": 1123, "diff_parsed": {"added": [[10, "import java.util.concurrent.atomic.AtomicBoolean;"], [299, "                boolean rc = processCommands(0, false, null);"], [349, "            boolean rc = processCommands(0, false, null);"], [381, "            boolean brc = processCommands(0, false, null);"], [496, "        boolean brc = processCommands(0, false, null);"], [701, "            boolean rc = processCommands(0, false, null);"], [777, "        return send(msg, flags, null);"], [778, "    }"], [779, ""], [780, "    public final boolean send(Msg msg, int flags, AtomicBoolean canceled)"], [781, "    {"], [798, "            boolean brc = processCommands(0, true, canceled);"], [839, "                if (!processCommands(timeout, false, canceled)) {"], [869, "        return recv(flags, null);"], [870, "    }"], [871, ""], [872, "    public final Msg recv(int flags, AtomicBoolean canceled)"], [873, "    {"], [894, "                if (!processCommands(0, false, canceled)) {"], [920, "                if (!processCommands(0, false, canceled)) {"], [942, "                if (!processCommands(block ? timeout : 0, false, canceled)) {"], [998, "    public final void cancel(AtomicBoolean canceled)"], [999, "    {"], [1000, "        canceled.set(true);"], [1001, "        sendCancel();"], [1002, "    }"], [1003, ""], [1078, "    private boolean processCommands(int timeout, boolean throttle, AtomicBoolean canceled)"], [1122, "        if (canceled != null && canceled.get()) {"], [1123, "            errno.set(ZError.ECANCELED);"], [1124, "            return false;"], [1125, "        }"], [1126, ""], [1261, "            processCommands(0, false, null);"]], "deleted": [[298, "                boolean rc = processCommands(0, false);"], [348, "            boolean rc = processCommands(0, false);"], [380, "            boolean brc = processCommands(0, false);"], [495, "        boolean brc = processCommands(0, false);"], [700, "            boolean rc = processCommands(0, false);"], [792, "            boolean brc = processCommands(0, true);"], [833, "                if (!processCommands(timeout, false)) {"], [883, "                if (!processCommands(0, false)) {"], [909, "                if (!processCommands(0, false)) {"], [931, "                if (!processCommands(block ? timeout : 0, false)) {"], [1061, "    private boolean processCommands(int timeout, boolean throttle)"], [1239, "            processCommands(0, false);"]]}, "num_lines_added": 34, "num_lines_removed": 12}