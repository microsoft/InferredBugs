{"hash": "a7bbb1a1a09aa40ed6c7acc6b0c4926f31e49beb", "message": "rollback FQ,LB", "file_num_lines": 80, "diff_parsed": {"added": [[70, "        if (index < active) {"], [74, "                current = 0;"], [76, "        pipes.remove (pipe_);"], [98, "        while (active > 0) {"], [99, "            if (pipes.get(current).write (msg_))"], [103, "            active--;"], [104, "            if (current < active)"], [105, "                Utils.swap (pipes, current, active);"], [106, "            else"], [107, "                current = 0;"], [111, "        if (active == 0) {"], [120, "            pipes.get(current).flush ();"], [121, "            if (active > 1)"], [122, "                current = (current + 1) % active;"], [134, "        while (active > 0) {"], [141, "            active--;"], [142, "            Utils.swap (pipes, current, active);"], [144, "                current = 0;"]], "deleted": [[45, "    //  List operations"], [46, "    private int start;"], [47, ""], [54, "        start = 0;"], [74, "        if (index >= start && index < active) {"], [77, "            index = active;"], [79, "                current = start;"], [81, "        pipes.remove (index);"], [103, "        Pipe pipe = null;"], [104, "        while (active > start) {"], [105, "            pipe = pipes.get(current);"], [106, "            if (pipe.write (msg_))"], [110, "            current++;"], [111, "            start = current;"], [112, "            if (current == active)"], [113, "                current = start = active = 0;"], [117, "        if (active == start) {"], [126, "            pipe.flush ();"], [127, "            current++;"], [128, "            if (current == active)"], [129, "                current = start;"], [141, "        while (active > start) {"], [148, "            current++;"], [149, "            start = current;"], [151, "                current = start = active = 0;"]]}, "num_lines_added": 18, "num_lines_removed": 25}