{"bug_class": "PROVER", "kind": "ERROR", "bug_type": "THREAD_SAFETY_VIOLATION", "qualifier": "Unprotected write. Non-private method `org.zeromq.ZContext.destroy` indirectly writes to field `socket.org.zeromq.ZMQ$Socket.base.zmq.SocketBase.tag` outside of synchronization.\n Reporting because this access may occur on a background thread.\n\nNote that the prefix path socket has been contaminated during the execution, so the reported race on socket.org.zeromq.ZMQ$Socket.base.zmq.SocketBase.tag might be a false positive.", "severity": "HIGH", "visibility": "user", "line": 78, "column": -1, "procedure": "void ZContext.destroy()", "procedure_id": "org.zeromq.ZContext.destroy():void.4999bab718cfade53cdd45c591a6a11e", "procedure_start_line": 74, "file": "src/main/java/org/zeromq/ZContext.java", "bug_trace": [{"level": 0, "filename": "src/main/java/org/zeromq/ZContext.java", "line_number": 78, "column_number": -1, "description": "call to void ZMQ$Socket.close()"}, {"level": 1, "filename": "src/main/java/org/zeromq/ZMQ.java", "line_number": 479, "column_number": -1, "description": "call to void SocketBase.close()"}, {"level": 2, "filename": "src/main/java/zmq/SocketBase.java", "line_number": 860, "column_number": -1, "description": "access to `this.zmq.SocketBase.tag`"}], "key": "ZContext.java|destroy|THREAD_SAFETY_VIOLATION", "node_key": "9c5d6d9028928346cc4fb44cced5dea1", "hash": "3b6b6e8769d4a8717f30be9ca8c2e25e", "bug_type_hum": "Thread Safety Violation", "censored_reason": ""}