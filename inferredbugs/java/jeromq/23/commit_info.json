{"hash": "c0fbdbd64f4cae1050f63169ec6fbee540acbabf", "message": "Event send by monitor can now send channel to listener.", "file_num_lines": 169, "diff_parsed": {"added": [[26, "        try (ZMQ.Context zctx = new ZMQ.Context(1);"], [27, "            ZMQ.Socket s = zctx.socket(SocketType.PUB);"], [28, "            ZMQ.Socket m = zctx.socket(SocketType.PAIR)) {"], [29, "            s.monitor(\"inproc://TestEventResolution\", eventFilter);"], [30, "            m.connect(\"inproc://TestEventResolution\");"], [31, "            sender.send(s.base(), \"tcp://127.0.0.1:8000\");"], [32, "            return ZMQ.Event.recv(m);"], [33, "        }"], [62, "        assertThat(value, is(sc));"], [73, "        assertThat(value, is(sc));"], [84, "        assertThat(value, is(sc));"], [95, "        assertThat(value, is(sc));"], [106, "        assertThat(value, is(sc));"], [184, "        ZMQ.Event ev = make((s, a) -> s.eventHandshakeFailedNoDetail(a, Error.EFAULT.getCode()), zmq.ZMQ.ZMQ_EVENT_HANDSHAKE_FAILED_NO_DETAIL);"], [185, "        Error err = ev.resolveValue();"], [186, "        assertThat(err, is(Error.EFAULT));"]], "deleted": [[15, "import zmq.Ctx;"], [27, "        Ctx ctx = new Ctx();"], [28, "        @SuppressWarnings(\"deprecation\")"], [29, "        SocketBase s = ctx.createSocket(ZMQ.PUB);"], [30, "        @SuppressWarnings(\"deprecation\")"], [31, "        SocketBase m = ctx.createSocket(ZMQ.PAIR);"], [32, "        m.connect(\"inproc://TestEventResolution\");"], [33, "        s.monitor(\"inproc://TestEventResolution\", eventFilter);"], [34, "        sender.send(s, \"tcp://127.0.0.1:8000\");"], [35, "        zmq.ZMQ.Event ev = zmq.ZMQ.Event.read(m);"], [36, "        return new ZMQ.Event(ev.event, ev.arg, ev.addr);"], [65, "        assertThat(value, nullValue());"], [76, "        assertThat(value, nullValue());"], [87, "        assertThat(value, nullValue());"], [98, "        assertThat(value, nullValue());"], [109, "        assertThat(value, nullValue());"], [187, "        ZMQ.Event ev = make((s, a) -> s.eventHandshakeFailedNoDetail(a, 0), zmq.ZMQ.ZMQ_EVENT_HANDSHAKE_FAILED_NO_DETAIL);"], [188, "        Object value = ev.resolveValue();"], [189, "        assertThat(value, nullValue());"]]}, "num_lines_added": 16, "num_lines_removed": 19}