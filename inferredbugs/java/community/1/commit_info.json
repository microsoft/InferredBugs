{"hash": "ff6eedc18efc1cfb7aba6c696a06ac15d6351458", "message": "add profile page", "file_num_lines": 77, "diff_parsed": {"added": [[31, ""], [32, "        Integer totalPage;"], [33, ""], [35, ""], [36, "        if (totalCount % size == 0) {"], [37, "            totalPage = totalCount / size;"], [38, "        } else {"], [39, "            totalPage = totalCount / size + 1;"], [40, "        }"], [45, "        if (page > totalPage) {"], [46, "            page = totalPage;"], [49, "        paginationDTO.setPagination(totalPage, page);"], [66, ""], [67, "    public PaginationDTO list(Integer userId, Integer page, Integer size) {"], [68, "        PaginationDTO paginationDTO = new PaginationDTO();"], [69, ""], [70, "        Integer totalPage;"], [71, ""], [72, "        Integer totalCount = questionMapper.countByUserId(userId);"], [73, ""], [74, "        if (totalCount % size == 0) {"], [75, "            totalPage = totalCount / size;"], [76, "        } else {"], [77, "            totalPage = totalCount / size + 1;"], [78, "        }"], [79, ""], [80, "        if (page < 1) {"], [81, "            page = 1;"], [82, "        }"], [83, "        if (page > totalPage) {"], [84, "            page = totalPage;"], [85, "        }"], [86, ""], [87, "        paginationDTO.setPagination(totalPage, page);"], [88, ""], [89, "        //size*(page-1)"], [90, "        Integer offset = size * (page - 1);"], [91, "        List<Question> questions = questionMapper.listByUserId(userId, offset, size);"], [92, "        List<QuestionDTO> questionDTOList = new ArrayList<>();"], [93, ""], [94, "        for (Question question : questions) {"], [95, "            User user = userMapper.findById(question.getCreator());"], [96, "            QuestionDTO questionDTO = new QuestionDTO();"], [97, "            BeanUtils.copyProperties(question, questionDTO);"], [98, "            questionDTO.setUser(user);"], [99, "            questionDTOList.add(questionDTO);"], [100, "        }"], [101, ""], [102, "        paginationDTO.setQuestions(questionDTOList);"], [103, "        return paginationDTO;"], [104, "    }"]], "deleted": [[30, ""], [33, "        paginationDTO.setPagination(totalCount, page, size);"], [38, ""], [39, "        if (page > paginationDTO.getTotalPage()) {"], [40, "            page = paginationDTO.getTotalPage();"]]}, "num_lines_added": 51, "num_lines_removed": 5}