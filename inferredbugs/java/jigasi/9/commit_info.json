{"hash": "4dbe945d9d657bdc08b7911a44b13dfadb828052", "message": "Adds option to plugin custom transcription service.\n\nFixes some error logs to go to logger.\nAdded some extra parameters to the API.\nRemoved a duplicate DD code.", "file_num_lines": 396, "diff_parsed": {"added": [[394, "            updateDDClient(DD_ASPECT_START);"], [400, "                = this.transcript.started(roomName, roomUrl, getParticipants());"], [423, "            updateDDClient(DD_ASPECT_STOP);"], [443, "     * Updated dd client with a stat."], [444, "     *"], [445, "     * @param ddAspectStop"], [446, "     */"], [447, "    private void updateDDClient(String ddAspectStop)"], [448, "    {"], [449, "        StatsDClient dClient = JigasiBundleActivator.getDataDogClient();"], [450, "        if(dClient != null)"], [451, "        {"], [452, "            dClient.increment(ddAspectStop);"], [453, "            if(logger.isDebugEnabled())"], [454, "            {"], [455, "                logger.debug(\"thrown stat: \" + ddAspectStop);"], [456, "            }"], [457, "        }"], [458, "    }"], [459, ""], [460, "    /**"], [670, ""], [671, "        return getParticipants()"], [672, "            .stream()"], [673, "            .anyMatch(Participant::isRequestingTranscription);"], [674, "    }"], [675, ""], [676, "    /**"], [677, "     * Returns the list of participants. A copy of it."], [678, "     *"], [679, "     * @return the list of current participants."], [680, "     */"], [681, "    public List<Participant> getParticipants()"], [682, "    {"], [689, "        return participantsCopy;"]], "deleted": [[394, "            StatsDClient dClient = JigasiBundleActivator.getDataDogClient();"], [395, "            if(dClient != null)"], [396, "            {"], [397, "                dClient.increment(DD_ASPECT_START);"], [398, "                if(logger.isDebugEnabled())"], [399, "                {"], [400, "                    logger.debug(\"thrown stat: \" + DD_ASPECT_START);"], [401, "                }"], [402, "            }"], [407, "            List<Participant> participantsClone;"], [408, "            synchronized (this.participants)"], [409, "            {"], [410, "                participantsClone = new ArrayList<>(this.participants.size());"], [411, "                participantsClone.addAll(this.participants.values());"], [412, "            }"], [413, ""], [415, "                = this.transcript.started(roomName, roomUrl, participantsClone);"], [438, "            StatsDClient dClient = JigasiBundleActivator.getDataDogClient();"], [439, "            if(dClient != null)"], [440, "            {"], [441, "                dClient.increment(DD_ASPECT_STOP);"], [442, "                if(logger.isDebugEnabled())"], [443, "                {"], [444, "                    logger.debug(\"thrown stat: \" + DD_ASPECT_STOP);"], [445, "                }"], [446, "            }"], [681, "        return participantsCopy"], [682, "            .stream()"], [683, "            .anyMatch(Participant::isRequestingTranscription);"]]}, "num_lines_added": 35, "num_lines_removed": 29}