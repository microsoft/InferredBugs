{"hash": "760372a21ed7aa9dc8fca9b29c440f0418b26c04", "message": "Make almost everything in jimfs.internal package-private and change AttributeProvider impl tests to not use JimfsFileStore.", "file_num_lines": 70, "diff_parsed": {"added": [[41, "public class PosixAttributeProviderTest extends AttributeProviderTest<PosixAttributeProvider> {"], [44, "  protected PosixAttributeProvider createProvider() {"], [47, "    return new PosixAttributeProvider("], [53, "    assertContainsAll(store,"], [55, "            \"group\", createGroupPrincipal(\"group\"),"], [56, "            \"permissions\", PosixFilePermissions.fromString(\"rw-r--r--\")));"], [61, "    assertSetAndGetSucceeds(\"group\", createGroupPrincipal(\"foo\"));"], [62, "    assertSetAndGetSucceeds(\"permissions\", PosixFilePermissions.fromString(\"rwxrwxrwx\"));"], [63, "    assertCanSetOnCreate(\"permissions\");"], [64, "    assertCannotSetOnCreate(\"group\");"], [65, "    assertSetFails(\"permissions\", ImmutableList.of(PosixFilePermission.GROUP_EXECUTE));"], [66, "    assertSetFails(\"permissions\", ImmutableSet.of(\"foo\"));"], [71, "    store.setAttribute(\"owner:owner\", createUserPrincipal(\"user\"));"], [72, ""], [73, "    PosixFileAttributeView view = provider.getView(attributeStoreSupplier());"], [87, "    ASSERT.that(store.getAttribute(\"owner:owner\")).is(createUserPrincipal(\"root\"));"], [91, "    ASSERT.that(store.getAttribute(\"posix:group\")).is(createGroupPrincipal(\"root\"));"], [96, "    ASSERT.that(store.getAttribute(\"posix:permissions\"))"], [102, "    PosixFileAttributes attrs = provider.read(store);"]], "deleted": [[27, "import com.google.jimfs.attribute.AttributeProvider;"], [32, "import java.nio.file.attribute.FileTime;"], [43, "public class PosixAttributeProviderTest extends AttributeProviderTest {"], [46, "  protected Iterable<? extends AttributeProvider> createProviders() {"], [49, "    PosixAttributeProvider posix = new PosixAttributeProvider("], [51, "    return ImmutableList.of(basic, owner, posix);"], [56, "    assertContainsAll(file,"], [58, "            \"posix:group\", createGroupPrincipal(\"group\"),"], [59, "            \"posix:permissions\", PosixFilePermissions.fromString(\"rw-r--r--\"),"], [60, "            \"posix:owner\", createUserPrincipal(\"user\"),"], [61, "            \"posix:fileKey\", 0L));"], [66, "    assertSetAndGetSucceeds(\"posix:group\", createGroupPrincipal(\"foo\"));"], [67, "    assertSetAndGetSucceeds(\"posix:permissions\", PosixFilePermissions.fromString(\"rwxrwxrwx\"));"], [68, "    assertSetOnCreateSucceeds(\"posix:permissions\", PosixFilePermissions.fromString(\"rwxrwxrwx\"));"], [69, "    assertSetOnCreateSucceeds(\"posix:permissions\", ImmutableSet.of());"], [70, "    assertSetOnCreateFails(\"posix:group\", createGroupPrincipal(\"foo\"));"], [71, "    assertSetFails(\"posix:permissions\", ImmutableList.of(PosixFilePermission.GROUP_EXECUTE));"], [72, "    assertSetFails(\"posix:permissions\", ImmutableSet.of(\"foo\"));"], [77, "    PosixFileAttributeView view = service.getFileAttributeView("], [78, "        fileSupplier(), PosixFileAttributeView.class);"], [90, "    FileTime time = FileTime.fromMillis(0L);"], [91, "    view.setTimes(time, time, time);"], [92, "    assertContainsAll(file, ImmutableMap.<String, Object>of("], [93, "        \"posix:creationTime\", time, \"posix:lastAccessTime\", time, \"posix:lastModifiedTime\", time));"], [94, ""], [97, "    ASSERT.that(file.getAttribute(\"owner:owner\")).is(createUserPrincipal(\"root\"));"], [101, "    ASSERT.that(file.getAttribute(\"posix:group\")).is(createGroupPrincipal(\"root\"));"], [106, "    ASSERT.that(file.getAttribute(\"posix:permissions\"))"], [112, "    PosixFileAttributes attrs = service.readAttributes(file, PosixFileAttributes.class);"]]}, "num_lines_added": 19, "num_lines_removed": 29}