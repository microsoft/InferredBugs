  @Test
  public void testView() throws IOException {
    PosixFileAttributeView view = service.getFileAttributeView(
        fileSupplier(), PosixFileAttributeView.class);
    assertNotNull(view);

    ASSERT.that(view.name()).is("posix");
    ASSERT.that(view.getOwner()).is(createUserPrincipal("user"));

    PosixFileAttributes attrs = view.readAttributes();
    ASSERT.that(attrs.fileKey()).is(0L);
    ASSERT.that(attrs.owner()).is(createUserPrincipal("user"));
    ASSERT.that(attrs.group()).is(createGroupPrincipal("group"));
    ASSERT.that(attrs.permissions()).is(PosixFilePermissions.fromString("rw-r--r--"));

    FileTime time = FileTime.fromMillis(0L);
    view.setTimes(time, time, time);
    assertContainsAll(file, ImmutableMap.<String, Object>of(
        "posix:creationTime", time, "posix:lastAccessTime", time, "posix:lastModifiedTime", time));

    view.setOwner(createUserPrincipal("root"));
    ASSERT.that(view.getOwner()).is(createUserPrincipal("root"));
    ASSERT.that(file.getAttribute("owner:owner")).is(createUserPrincipal("root"));

    view.setGroup(createGroupPrincipal("root"));
    ASSERT.that(view.readAttributes().group()).is(createGroupPrincipal("root"));
    ASSERT.that(file.getAttribute("posix:group")).is(createGroupPrincipal("root"));

    view.setPermissions(PosixFilePermissions.fromString("rwx------"));
    ASSERT.that(view.readAttributes().permissions())
        .is(PosixFilePermissions.fromString("rwx------"));
    ASSERT.that(file.getAttribute("posix:permissions"))
        .is(PosixFilePermissions.fromString("rwx------"));
  }