{"hash": "e8dbeacf603d3bf18454d6a21d98811ea3916d2d", "message": "Log, GetUrl\n\tge\u00e4ndert:   dist/MediathekView.jar\n\tge\u00e4ndert:   src/mediathek/Main.java\n\tge\u00e4ndert:   src/mediathek/MediathekGui.java\n\tge\u00e4ndert:   src/mediathek/controller/filmeLaden/suchen/FilmeSuchenSender.java\n\tge\u00e4ndert:   src/mediathek/controller/filmeLaden/suchen/sender/MediathekWdr.java\n\tge\u00e4ndert:   src/mediathek/controller/io/GetUrl.java\n\tge\u00e4ndert:   src/mediathek/tool/Log.java\n\tge\u00e4ndert:   src/version.properties", "file_num_lines": 296, "diff_parsed": {"added": [[29, "import java.util.ArrayList;"], [32, "import java.util.zip.GZIPInputStream;"], [33, "import java.util.zip.Inflater;"], [34, "import java.util.zip.InflaterInputStream;"], [46, "    public static final int LISTE_LADEART = 6;"], [56, "    private static LinkedList<Seitenzaehler> listeLadeArt = new LinkedList<Seitenzaehler>(); // Summe Daten in Byte f\u00fcr die verschiedenen Ladearten"], [57, "    private static final int LADE_ART_UNBEKANNT = 0;"], [58, "    private static final int LADE_ART_NIX = 1;"], [59, "    private static final int LADE_ART_DEFLATE = 2;"], [60, "    private static final int LADE_ART_GZIP = 3;"], [66, "        long ladeArtUnbekannt = 0;"], [67, "        long ladeArtNix = 0;"], [68, "        long ladeArtDeflate = 0;"], [69, "        long ladeArtGzip = 0;"], [119, "                    incSeitenZaehler(LISTE_SEITEN_ZAEHLER, sender, 1, LADE_ART_UNBEKANNT);"], [128, "                    incSeitenZaehler(LISTE_SEITEN_ZAEHLER_WARTEZEIT_FEHLVERSUCHE, sender, wartezeit / 1000, LADE_ART_UNBEKANNT);"], [129, "                    incSeitenZaehler(LISTE_SEITEN_ZAEHLER_FEHLERVERSUCHE, sender, 1, LADE_ART_UNBEKANNT);"], [132, "                        incSeitenZaehler(LISTE_SEITEN_ZAEHLER_FEHlER, sender, 1, LADE_ART_UNBEKANNT);"], [144, "        incSeitenZaehler(LISTE_SEITEN_ZAEHLER, sender, 1, LADE_ART_UNBEKANNT);"], [187, "    public static synchronized String getSeitenZaehlerLadeArt(String sender) {"], [188, "        String ret = \"\";"], [189, "        LinkedList<Seitenzaehler> liste = getListe(LISTE_SUMME_BYTE);"], [190, "        Iterator<Seitenzaehler> it = liste.iterator();"], [191, "        while (it.hasNext()) {"], [192, "            Seitenzaehler sz = it.next();"], [193, "            if (sz.senderName.equals(sender)) {"], [194, "                ret = \"Unbekannt: \" + (sz.ladeArtUnbekannt == 0 ? \"0\" : ((sz.ladeArtUnbekannt / 1024 / 1024) == 0 ? \"<1\" : String.valueOf(sz.ladeArtUnbekannt / 1024 / 1024)))"], [195, "                        + \"   Nix: \" + (sz.ladeArtNix == 0 ? \"0\" : ((sz.ladeArtNix / 1024 / 1024) == 0 ? \"<1\" : String.valueOf(sz.ladeArtNix / 1024 / 1024)))"], [196, "                        + \"   Deflaet: \" + (sz.ladeArtDeflate == 0 ? \"0\" : ((sz.ladeArtDeflate / 1024 / 1024) == 0 ? \"<1\" : String.valueOf(sz.ladeArtDeflate / 1024 / 1024)))"], [197, "                        + \"   Gzip: \" + (sz.ladeArtGzip == 0 ? \"0\" : ((sz.ladeArtGzip / 1024 / 1024) == 0 ? \"<1\" : String.valueOf(sz.ladeArtGzip / 1024 / 1024)));"], [198, "            }"], [199, "        }"], [200, "        return ret;"], [201, "    }"], [202, ""], [231, "    private synchronized void incSeitenZaehler(int art, String sender, int inc, int ladeArt) {"], [240, "                addLadeArt(sz, ladeArt, inc);"], [246, "            sz = new Seitenzaehler(sender, inc);"], [247, "            addLadeArt(sz, ladeArt, inc);"], [248, "            liste.add(sz);"], [249, "        }"], [250, "    }"], [251, ""], [252, "    private void addLadeArt(Seitenzaehler sz, int ladeArt, int inc) {"], [253, "        switch (ladeArt) {"], [254, "            case LADE_ART_NIX:"], [255, "                sz.ladeArtNix += inc;"], [256, "                break;"], [257, "            case LADE_ART_DEFLATE:"], [258, "                sz.ladeArtDeflate += inc;"], [259, "                break;"], [260, "            case LADE_ART_GZIP:"], [261, "                sz.ladeArtGzip += inc;"], [262, "                break;"], [263, "            default:"], [264, "                sz.ladeArtUnbekannt += inc;"], [273, "        HttpURLConnection conn = null;"], [279, "        int ladeArt = LADE_ART_UNBEKANNT;"], [289, "            conn = (HttpURLConnection) new URL(addr).openConnection();"], [291, "            conn.setRequestProperty(\"User-Agent\", Daten.getUserAgent());"], [292, "            System.setProperty(\"http.maxConnections\", \"600\");"], [293, "            System.setProperty(\"http.keepAlive\", \"false\");"], [294, "            conn.setRequestProperty(\"Accept-Encoding\", \"gzip, deflate\");"], [299, "            // the encoding returned by the server"], [300, "            String encoding = conn.getContentEncoding();"], [301, "//            if (conn instanceof HttpURLConnection) {"], [302, "//                HttpURLConnection httpConnection = (HttpURLConnection) conn;"], [303, "//                code = httpConnection.getResponseCode();"], [321, "//            } else {"], [322, "//                Log.fehlerMeldung(949697315, Log.FEHLER_ART_GETURL, GetUrl.class.getName() + \".getUri\", \"keine HTTPcon\");"], [323, "//            }"], [324, "            //in = conn.getInputStream();"], [325, ""], [326, "            if (encoding != null && encoding.equalsIgnoreCase(\"gzip\")) {"], [327, "                ladeArt = LADE_ART_GZIP;"], [328, "                in = new GZIPInputStream(conn.getInputStream());"], [329, "            } else if (encoding != null && encoding.equalsIgnoreCase(\"deflate\")) {"], [330, "                ladeArt = LADE_ART_DEFLATE;"], [331, "                in = new InflaterInputStream(conn.getInputStream(), new Inflater(true));"], [333, "                ladeArt = LADE_ART_NIX;"], [334, "                in = conn.getInputStream();"], [337, "////            while (!Daten.filmeLaden.getStop() && inReader.read(zeichen) != -1) {"], [338, "////                seite.append(zeichen);"], [339, "////                incSeitenZaehler(LISTE_SUMME_BYTE, sender, 1);"], [340, "////            }"], [341, "            char[] buff = new char[256];"], [342, "            int cnt;"], [343, "            while (!Daten.filmeLaden.getStop() && (cnt = inReader.read(buff)) > 0) {"], [344, "                seite.append(buff, 0, cnt);"], [345, "                incSeitenZaehler(LISTE_SUMME_BYTE, sender, cnt, ladeArt);"], [348, "            // consume error stream, otherwise, connection won't be reused"], [349, "            if (conn != null) {"], [350, "                try {"], [351, "                    InputStream i = conn.getErrorStream();"], [352, "                    if (i != null) {"], [353, "                        i.close();"], [354, "                    }"], [355, "                    if (inReader != null) {"], [356, "                        inReader.close();"], [357, "                    }"], [358, "                } catch (Exception e) {"], [359, "                    Log.fehlerMeldung(645105987, Log.FEHLER_ART_GETURL, GetUrl.class.getName() + \".getUri\", e, \"\");"], [360, "                }"], [361, "            }"], [369, "                if (ex.getMessage().equals(\"Read timed out\")) {"], [370, "                    Log.fehlerMeldung(502739817, Log.FEHLER_ART_GETURL, GetUrl.class.getName() + \".getUri: TimeOut\", text);"], [371, "                } else {"], [372, "                    Log.fehlerMeldung(502739817, Log.FEHLER_ART_GETURL, GetUrl.class.getName() + \".getUri\", ex, text);"], [373, "                }"], [380, "                    in.close();"], [382, "            } catch (Exception ex) {"], [383, "                Log.fehlerMeldung(696321478, Log.FEHLER_ART_GETURL, GetUrl.class.getName() + \".getUri\", ex, \"\");"]], "deleted": [[29, "import java.net.URLConnection;"], [57, ""], [58, "        public Seitenzaehler(String ssenderName) {"], [59, "            senderName = ssenderName;"], [60, "            seitenAnzahl = 1;"], [61, "        }"], [111, "                    incSeitenZaehler(LISTE_SEITEN_ZAEHLER, sender, 1);"], [120, "                    incSeitenZaehler(LISTE_SEITEN_ZAEHLER_WARTEZEIT_FEHLVERSUCHE, sender, wartezeit / 1000);"], [121, "                    incSeitenZaehler(LISTE_SEITEN_ZAEHLER_FEHLERVERSUCHE, sender, 1);"], [124, "                        incSeitenZaehler(LISTE_SEITEN_ZAEHLER_FEHlER, sender, 1);"], [136, "        incSeitenZaehler(LISTE_SEITEN_ZAEHLER, sender, 1);"], [207, "    private synchronized void incSeitenZaehler(int art, String sender, int inc) {"], [221, "            liste.add(new Seitenzaehler(sender, inc));"], [230, "        URLConnection conn;"], [244, "            URL url = new URL(addr);"], [246, "            conn = url.openConnection();"], [252, "            if (conn instanceof HttpURLConnection) {"], [253, "                HttpURLConnection httpConnection = (HttpURLConnection) conn;"], [254, "                code = httpConnection.getResponseCode();"], [273, "                Log.fehlerMeldung(949697315, Log.FEHLER_ART_GETURL, GetUrl.class.getName() + \".getUri\", \"keine HTTPcon\");"], [275, "            in = conn.getInputStream();"], [277, "            while (!Daten.filmeLaden.getStop() && inReader.read(zeichen) != -1) {"], [278, "                seite.append(zeichen);"], [279, "                incSeitenZaehler(LISTE_SUMME_BYTE, sender, 1);"], [289, "                Log.fehlerMeldung(502739817, Log.FEHLER_ART_GETURL, GetUrl.class.getName() + \".getUri\", ex, text);"], [296, "                    inReader.close();"], [298, "            } catch (IOException ex) {"]]}, "num_lines_added": 112, "num_lines_removed": 27}