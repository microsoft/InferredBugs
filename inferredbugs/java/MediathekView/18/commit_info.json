{"hash": "11925c56c6bc74ac5b1db6ccaca6592cd37d2040", "message": "GuiDownload: neue Downloads: status richtig anzeigen", "file_num_lines": 646, "diff_parsed": {"added": [[22, "import com.sun.org.omg.SendingContext.CodeBasePackage.URLSeqHelper;"], [29, "import java.util.ArrayList;"], [59, "import mediathek.tool.Log;"], [235, "            ddaten.listeDownloads.downloadVorziehen(url);"], [244, "            String[] urls = new String[rows.length];"], [245, "            for (int i = 0; i < rows.length; ++i) {"], [246, "                urls[i] = tabelle.getModel().getValueAt(tabelle.convertRowIndexToModel(rows[i]), DatenDownload.DOWNLOAD_URL_NR).toString();"], [247, "            }"], [248, "            for (int i = 0; i < urls.length; ++i) {"], [249, "                DatenDownload download = ddaten.listeDownloads.getDownloadByUrl(urls[i]);"], [250, "                if (download == null) {"], [251, "                    // wie kann das sein??"], [252, "                    Log.debugMeldung(\"Gits ja gar nicht\");"], [253, "                } else {"], [254, "                    if (dauerhaft) {"], [255, "                        if (download.istAbo()) {"], [256, "                            // ein Abo wird zus\u00e4tzlich ins Logfile geschrieben"], [257, "                            ddaten.erledigteAbos.zeileSchreiben(download.arr[DatenDownload.DOWNLOAD_THEMA_NR],"], [258, "                                    download.arr[DatenDownload.DOWNLOAD_TITEL_NR], urls[i]);"], [259, "                        }"], [260, "                        ddaten.listeDownloads.delDownloadByUrl(urls[i]);"], [261, "                    }// if (dauerhaft) {"], [262, "                    ddaten.starterClass.filmLoeschen(urls[i]);"], [329, "                download.starten(ddaten);"], [338, "        ArrayList<String> urls = new ArrayList<String>();"], [345, "                    urls.add(url);"], [348, "        }"], [349, "        for (int i = 0; i < urls.size(); ++i) {"], [350, "            ddaten.starterClass.filmLoeschen(urls.get(i));"], [355, "        ArrayList<String> urls = new ArrayList<String>();"], [362, "                    urls.add(url);"], [366, "        for (int i = 0; i < urls.size(); ++i) {"], [367, "            ddaten.listeDownloads.delDownloadByUrl(urls.get(i));"], [368, "        }"]], "deleted": [[220, "                    DDaten.setGeaendert();"], [221, "                    load();"], [224, "            setInfo();"], [235, "            DatenDownload download = ddaten.listeDownloads.downloadVorziehen(url);"], [236, "            if (download != null) {"], [237, "                // hat dann geklappt"], [238, "                load();"], [239, "                setInfo();"], [240, "                if (tabelle.getRowCount() > 0) {"], [241, "                    tabelle.setRowSelectionInterval(0, 0);"], [242, "                    tabelle.scrollRectToVisible(tabelle.getCellRect(0, 0, false));"], [243, "                }"], [244, "            }"], [253, "            for (int i = rows.length - 1; i >= 0; --i) {"], [254, "                int delRow = tabelle.convertRowIndexToModel(rows[i]);"], [255, "                String url = tabelle.getModel().getValueAt(delRow, DatenDownload.DOWNLOAD_URL_NR).toString();"], [256, "                DatenDownload download = ddaten.listeDownloads.getDownloadByUrl(url);"], [257, "                if (dauerhaft) {"], [258, "                    if (download.istAbo()) {"], [259, "                        // ein Abo wird zus\u00e4tzlich ins Logfile geschrieben"], [260, "                        ddaten.erledigteAbos.zeileSchreiben(download.arr[DatenDownload.DOWNLOAD_THEMA_NR],"], [261, "                                download.arr[DatenDownload.DOWNLOAD_TITEL_NR],"], [262, "                                url);"], [263, "                    }"], [264, "                    ddaten.listeDownloads.delDownloadByUrl(url);"], [266, "                ddaten.starterClass.filmLoeschen(tabelle.getModel().getValueAt(delRow, DatenDownload.DOWNLOAD_URL_NR).toString());"], [267, "                ((TModelDownload) tabelle.getModel()).removeRow(delRow);"], [269, "            setInfo();"], [334, "                download.startMelden(DatenDownload.PROGRESS_WARTEN);"], [335, "                ddaten.starterClass.addStarts(new Start(download));"], [340, "        setInfo();"], [351, "                    ddaten.starterClass.filmLoeschen(url);"], [354, "            setInfo();"], [365, "                    ddaten.listeDownloads.delDownloadByUrl(url);"], [366, "                    ((TModelDownload) tabelle.getModel()).removeRow(delRow);"], [370, "        setInfo();"]]}, "num_lines_added": 34, "num_lines_removed": 36}