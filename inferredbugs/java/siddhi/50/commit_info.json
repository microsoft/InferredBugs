{"hash": "1d605cb0eb20bf821cf53a4cade9befd12758429", "message": "Add implementation for updateOrAdd()", "file_num_lines": 487, "diff_parsed": {"added": [[99, "        String sql = this.composeInsertQuery();"], [100, "        try {"], [101, "            this.batchExecuteQueriesWithRecords(sql, records, false);"], [102, "        } catch (SQLException e) {"], [103, "            throw new RDBMSTableException(\"Error in adding events to '\" + this.tableName + \"' store: \""], [104, "                    + e.getMessage(), e);"], [105, "        }"], [106, "    }"], [107, ""], [108, "    private String composeInsertQuery() {"], [119, "        return insertQuery.replace(Q_PLACEHOLDER, params.toString());"], [200, ""], [201, "        String sql = this.composeUpdateQuery(compiledCondition);"], [202, "        try {"], [203, "            this.batchProcessUpdateOrMerge(sql, updateConditionParameterMaps, compiledCondition, updateValues);"], [204, "        } catch (SQLException e) {"], [205, "            throw new RDBMSTableException(\"Error performing update operation on table '\" + this.tableName"], [206, "                    + \"': \" + e.getMessage(), e);"], [207, "        }"], [208, "    }"], [209, ""], [210, "    private String composeUpdateQuery(CompiledCondition compiledCondition) {"], [214, "        this.attributes.forEach(attribute -> {"], [219, "        });"], [226, ""], [227, "        return sql;"], [228, "    }"], [229, ""], [230, "    private void batchProcessUpdateOrMerge(String sql, List<Map<String, Object>> updateConditionParameterMaps,"], [231, "                                           CompiledCondition compiledCondition,"], [232, "                                           List<Map<String, Object>> updateValues) throws SQLException {"], [233, "        final int seed = this.attributes.size();"], [262, "        String mergeSQL = this.queryConfigurationEntry.getRecordMergeQuery();"], [263, "        if (mergeSQL != null) {"], [264, "            try {"], [265, "                this.mergeRecords(mergeSQL, updateConditionParameterMaps, compiledCondition, updateValues);"], [266, "            } catch (SQLException e) {"], [267, "                //Merge operations have failed, maybe because one (or more) constraint violations."], [268, "                //Now, let us try to sequentially update/insert records."], [269, "                this.UpdateOrInsertRecords(updateConditionParameterMaps, compiledCondition, updateValues, addingRecords);"], [270, "            }"], [271, "        } else {"], [272, "            this.UpdateOrInsertRecords(updateConditionParameterMaps, compiledCondition, updateValues, addingRecords);"], [273, "        }"], [274, "    }"], [275, ""], [276, "    /**"], [277, "     * Attempts to use SQL MERGE queries to try and insert/update records."], [278, "     * Can fail due to one or more constraint violations in the supplied list of records."], [279, "     *"], [280, "     * @param updateConditionParameterMaps"], [281, "     * @param compiledCondition"], [282, "     * @param updateValues"], [283, "     * @throws SQLException if one or more batch MERGE operations fail."], [284, "     */"], [285, "    private void mergeRecords(String sql, List<Map<String, Object>> updateConditionParameterMaps,"], [286, "                              CompiledCondition compiledCondition, List<Map<String, Object>> updateValues)"], [287, "            throws SQLException {"], [288, "        String mergeSQL = this.composeMergeQuery(sql, compiledCondition);"], [289, "        this.batchProcessUpdateOrMerge(mergeSQL, updateConditionParameterMaps, compiledCondition, updateValues);"], [290, "    }"], [291, ""], [292, "    private void UpdateOrInsertRecords(List<Map<String, Object>> updateConditionParameterMaps,"], [293, "                                       CompiledCondition compiledCondition, List<Map<String, Object>> updateValues,"], [294, "                                       List<Object[]> addingRecords) {"], [295, "        int counter = 0;"], [296, "        final int seed = this.attributes.size();"], [297, "        Connection conn = this.getConnection(false);"], [298, "        PreparedStatement updateStmt = null;"], [299, "        PreparedStatement insertStmt = null;"], [300, "        try {"], [301, "            //TODO discuss order. Try insert -> update or vice versa?"], [302, "            updateStmt = conn.prepareStatement(this.composeUpdateQuery(compiledCondition));"], [303, "            insertStmt = conn.prepareStatement(this.composeInsertQuery());"], [304, "            while (counter < updateValues.size()) {"], [305, "                Map<String, Object> conditionParameters = updateConditionParameterMaps.get(counter);"], [306, "                Map<String, Object> values = updateValues.get(counter);"], [307, "                //Incrementing the ordinals of the conditions in the statement with the # of variables to be updated"], [308, "                RDBMSTableUtils.resolveCondition(updateStmt, (RDBMSCompiledCondition) compiledCondition,"], [309, "                        conditionParameters, seed);"], [310, "                for (Attribute attribute : this.attributes) {"], [311, "                    RDBMSTableUtils.populateStatementWithSingleElement(updateStmt,"], [312, "                            this.attributes.indexOf(attribute) + 1, attribute.getType(),"], [313, "                            values.get(attribute.getName()));"], [314, "                }"], [315, "                // Using a sub try-block to ensure that only exceptions in performing UPDATE DB operations are caught."], [316, "                // Other exceptions point to a larger problem and must be handled separately outside."], [317, "                try {"], [318, "                    updateStmt.executeUpdate();"], [319, "                    conn.commit();"], [320, "                    counter++;"], [321, "                } catch (SQLException e) {"], [322, "                    RDBMSTableUtils.rollbackConnection(conn);"], [323, "                    Object[] record = addingRecords.get(counter);"], [324, "                    try {"], [325, "                        this.populateStatement(record, insertStmt);"], [326, "                        insertStmt.executeUpdate();"], [327, "                        conn.commit();"], [328, "                        counter++;"], [329, "                    } catch (SQLException e2) {"], [330, "                        //TODO log warn?"], [331, "                        RDBMSTableUtils.rollbackConnection(conn);"], [332, "                        throw new RDBMSTableException(\"Error performing update/insert operation (insert) on table '\""], [333, "                                + this.tableName + \"': \" + e.getMessage(), e);"], [334, "                    }"], [335, "                }"], [336, "            }"], [337, "        } catch (SQLException e) {"], [338, "            throw new RDBMSTableException(\"Error performing update/insert operation (update) on table '\" + this.tableName"], [339, "                    + \"': \" + e.getMessage(), e);"], [340, "        } finally {"], [341, "            RDBMSTableUtils.cleanupConnection(null, updateStmt, null);"], [342, "            RDBMSTableUtils.cleanupConnection(null, insertStmt, conn);"], [343, "        }"], [344, "    }"], [346, "    private String composeMergeQuery(String sql, CompiledCondition compiledCondition) {"], [347, "        //TODO"], [348, "        return null;"], [416, "        this.attributes.forEach(attribute -> {"], [459, "        });"]], "deleted": [[109, "        insertQuery = insertQuery.replace(Q_PLACEHOLDER, params.toString());"], [110, "        try {"], [111, "            this.batchExecuteQueriesWithRecords(insertQuery, records, false);"], [112, "        } catch (SQLException e) {"], [113, "            throw new RDBMSTableException(\"Error in adding events to '\" + this.tableName + \"' store: \""], [114, "                    + e.getMessage(), e);"], [115, "        }"], [196, "        final int seed = this.attributes.size();"], [200, "        for (Attribute attribute : this.attributes) {"], [205, "        }"], [231, "        } catch (SQLException e) {"], [232, "            throw new RDBMSTableException(\"Error performing update operation on table '\" + this.tableName"], [233, "                    + \"': \" + e.getMessage(), e);"], [311, "        for (Attribute attribute : this.attributes) {"], [354, "        }"]]}, "num_lines_added": 120, "num_lines_removed": 15}