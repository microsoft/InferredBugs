{"hash": "c999a0b55edc2b3690269fbbfccfdf193b55c210", "message": "Changes according to the PR reviews", "file_num_lines": 157, "diff_parsed": {"added": [[31, "import java.io.Closeable;"], [49, "     * Constructor for real time training method."], [63, "     * Constructor for predefined markov matrix method."], [77, "     * Method to process new events."], [82, "     * @return Array containing output results."], [104, "     * Method to updateTransitionCount States."], [118, "     * Method which updateTransitionCount markov matrix and return notifications."], [120, "     * @return Array containing last state, transition probability and notify values."], [147, "     * Method to remove events which have expired based on time."], [161, "     * Method to populate the markov matrix using a file input."], [193, "                                    + statesNames.length + \" x \" + statesNames.length + \" matrix.\");"], [203, "                                    + statesNames.length + \" x \" + statesNames.length + \" matrix.\");"], [210, "                        log.error(\"Exception occurred while reading the data file: \" + markovMatrixStorageLocation"], [211, "                                + \". All values in the matrix should be in double.\", e);"], [225, "            log.error(\"Exception occurred while reading the data file: \" + markovMatrixStorageLocation, e);"], [227, "            closedQuietly(markovMatrixStorageLocation, bufferedReader, bufferedInputStream, fileInputStream);"], [233, "    private void closedQuietly(String closingFile, Closeable... closeables) {"], [234, "        if (closeables == null) {"], [235, "            return;"], [237, "        for (Closeable closeable : closeables) {"], [238, "            try {"], [239, "                if (closeable != null) {"], [240, "                    closeable.close();"], [241, "                }"], [242, "            } catch (IOException e) {"], [243, "                log.error(\"Exception occurred while closing the stream related to data file: \" + closingFile, e);"]], "deleted": [[48, "     * Constructor for real time training method"], [62, "     * Constructor for predefined markov matrix method"], [76, "     * Method to process new events"], [81, "     * @return Array containing output results"], [103, "     * Method to updateTransitionCount States"], [117, "     * Method which updateTransitionCount markov matrix and return notifications"], [119, "     * @return Array containing last state, transition probability and notify values"], [146, "     * Method to remove events which have expired based on time"], [160, "     * Method to populate the markov matrix using a file input"], [192, "                                    + statesNames.length + \" x \" + statesNames.length + \" matrix\");"], [202, "                                    + statesNames.length + \" x \" + statesNames.length + \" matrix\");"], [209, "                        log.error(\"Exception occurred while reading the data file \" + markovMatrixStorageLocation"], [210, "                                + \". All values in the matrix should be in double\", e);"], [224, "            log.error(\"Exception occurred while reading the data file \" + markovMatrixStorageLocation, e);"], [226, "            closeQuietly(bufferedReader, bufferedInputStream, fileInputStream);"], [232, "    private void closeQuietly(BufferedReader bufferedReader, BufferedInputStream bufferedInputStream,"], [233, "            FileInputStream fileInputStream) {"], [234, "        try {"], [235, "            if (bufferedReader != null) {"], [236, "                bufferedReader.close();"], [237, "            }"], [238, "        } catch (IOException ex) {"], [239, "            log.error(\"Exception occurred when closing the file stream of the data file.\", ex);"], [241, ""], [242, "        try {"], [243, "            if (bufferedInputStream != null) {"], [244, "                bufferedInputStream.close();"], [245, "            }"], [246, "        } catch (IOException ex) {"], [247, "            log.error(\"Exception occurred when closing the file stream of the data file.\", ex);"], [248, "        }"], [249, ""], [250, "        try {"], [251, "            if (fileInputStream != null) {"], [252, "                fileInputStream.close();"], [254, "        } catch (IOException ex) {"], [255, "            log.error(\"Exception occurred when closing the file stream of the data file.\", ex);"]]}, "num_lines_added": 26, "num_lines_removed": 37}