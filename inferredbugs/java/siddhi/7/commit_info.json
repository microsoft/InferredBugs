{"hash": "f1e45632e2d1a11121b154b5647409709e9e6de9", "message": "Adding Time Series Forecasting, Outliers and Testcase", "file_num_lines": 94, "diff_parsed": {"added": [[54, ""], [55, "            // Obtain x value that user wants to use to forecast Y"], [60, "            Object[] coefficients = regressionCalculator.calculateLinearRegression(inputData);"], [62, "            if (coefficients == null) {"], [65, "                Object[] outputData = new Object[coefficients.length+1];"], [66, "                System.arraycopy(coefficients, 0, outputData, 0, coefficients.length);"], [67, ""], [68, "                // Calculating forecast Y based on regression equation and given x"], [69, "                outputData[coefficients.length] = ((Number) coefficients[coefficients.length-2]).doubleValue() + ((Number) coefficients[coefficients.length-1]).doubleValue() * xDash;"], [78, "        paramCount = attributeExpressionLength;"], [80, "        // Capture Constant inputs"], [81, "        if (attributeExpressionExecutors[1] instanceof ConstantExpressionExecutor){"], [97, "        // Pick the appropriate regression calculator"], [104, "        // Create attributes for standard error and all beta values and the Forecast Y value"], [106, "        ArrayList<Attribute> attributes = new ArrayList<Attribute>(paramCount+1);"]], "deleted": [[40, "    private boolean constFlag = false;"], [59, "            Object[] temp = regressionCalculator.calculateLinearRegression(inputData);"], [60, "            Object[] outputData = new Object[temp.length+1];"], [61, "            System.arraycopy(temp, 0, outputData, 0, temp.length);"], [62, "            outputData[temp.length] = ((Number) temp[temp.length-2]).doubleValue() + ((Number) temp[temp.length-1]).doubleValue() * xDash;"], [63, ""], [65, "            if (outputData == null) {"], [76, "        paramCount = attributeExpressionLength - 1;"], [78, "        if (attributeExpressionExecutors[0] instanceof ConstantExpressionExecutor){"], [79, "            constFlag = true;"], [102, "        ArrayList<Attribute> attributes = new ArrayList<Attribute>(paramCount);"]]}, "num_lines_added": 15, "num_lines_removed": 11}