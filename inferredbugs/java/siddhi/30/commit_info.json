{"hash": "a71618890c80c17c8de49f6dcb52202cfa2eed17", "message": "fixing SnapshotOutputRateLimit", "file_num_lines": 83, "diff_parsed": {"added": [[63, "                    tryFlushEvents(outputEventChunks, event);"], [66, "                    tryFlushEvents(outputEventChunks, event);"], [77, "    private void tryFlushEvents(List<ComplexEventChunk<ComplexEvent>> outputEventChunks, ComplexEvent event) {"], [78, "        if (event.getTimestamp() >= scheduledTime) {"], [79, "            ComplexEventChunk<ComplexEvent> outputEventChunk = new ComplexEventChunk<ComplexEvent>(false);"], [80, "            for (ComplexEvent complexEvent : groupByKeyEvents.values()) {"], [81, "                outputEventChunk.add(cloneComplexEvent(complexEvent));"], [82, "            }"], [83, "            outputEventChunks.add(outputEventChunk);"], [84, "            scheduledTime += value;"], [85, "            scheduler.notifyAt(scheduledTime);"], [86, "        }"], [87, "    }"], [88, ""]], "deleted": [[63, "                    if (event.getTimestamp() >= scheduledTime) {"], [64, "                        ComplexEventChunk<ComplexEvent> outputEventChunk = new ComplexEventChunk<ComplexEvent>(false);"], [65, "                        for (ComplexEvent complexEvent : groupByKeyEvents.values()) {"], [66, "                            outputEventChunk.add(cloneComplexEvent(complexEvent));"], [67, "                        }"], [68, "                        outputEventChunks.add(outputEventChunk);"], [69, "                        scheduledTime += value;"], [70, "                        scheduler.notifyAt(scheduledTime);"], [71, "                    }"]]}, "num_lines_added": 14, "num_lines_removed": 9}