{"hash": "f4179c4e7a7ca77006b4a26a78e5778849329e7f", "message": "Changes preparing for release\n- model as jar resource\n- auto-detect input format\n- greedy decoder by default\n- standalone twokenize.sh script\n- conll conversion script\n- fake bill nye example\n- other stuff", "file_num_lines": 343, "diff_parsed": {"added": [[31, "\tString inputFormat = \"auto\";"], [36, "\t/** Can be either filename or resource name **/"], [37, "\tString modelFilename = \"/cmu/arktweetnlp/model.20120919\";"], [43, "\tpublic Decoder decoder = Decoder.GREEDY;"], [68, "\tpublic void detectAndSetInputFormat(String tweetData) throws IOException {"], [69, "\t\tJsonTweetReader jsonTweetReader = new JsonTweetReader();"], [70, "\t\tif (jsonTweetReader.isJson(tweetData)) {"], [71, "\t\t\tSystem.err.println(\"Detected JSON input format\");"], [72, "\t\t\tinputFormat = \"json\";"], [73, "\t\t} else {"], [74, "\t\t\tSystem.err.println(\"Detected text input format\");"], [75, "\t\t\tinputFormat = \"text\";"], [76, "\t\t}"], [77, "\t}"], [78, ""], [101, ""], [102, "\t\t\tif (reader.getLineNumber()==1) {"], [103, "\t\t\t\tif (inputFormat.equals(\"auto\")) {"], [104, "\t\t\t\t\tdetectAndSetInputFormat(tweetData);"], [105, "\t\t\t\t}"], [106, "\t\t\t}"], [107, ""], [110, "\t\t\t\ttext = jsonTweetReader.getText(tweetData);"], [111, "\t\t\t\tif (text==null) {"], [112, "\t\t\t\t\tSystem.err.println(\"Warning, null text (JSON parse error?), using blank string instead\");"], [113, "\t\t\t\t\ttext = \"\";"], [114, "\t\t\t\t}"], [133, "\t\t\t\toutputPrependedTagging(sentence, modelSentence, justTokenize, line);"], [235, "\t\treturn String.format(\"%.4f\", confidence);"], [357, "\t\tif (args.length <= i) usage();"], [359, "\t\ttagger.finalizeOptions();"], [361, "\t\ttagger.runTagger();"], [364, "\tpublic void finalizeOptions() throws IOException {"], [372, "\t\tif (showConfidence && decoder==Decoder.VITERBI) {"], [373, "\t\t\tSystem.err.println(\"Confidence output is unimplemented in Viterbi, turning it off.\");"], [374, "\t\t\tshowConfidence = false;"], [375, "\t\t}"], [376, "\t\tif (justTokenize) {"], [377, "\t\t\tshowConfidence = false;"], [378, "\t\t}"], [391, "\"\\n  --model <Filename>        Specify model filename. (Else use built-in.)\" +"], [394, "\"\\n  --input-format <Format>   Default: auto\" +"], [404, "\"\\n  --decoder <Decoder>       Change the decoding algorithm (default: greedy)\" +"], [408, "\"\\n         as per the Streaming API. (The 'text' field is used.)\" +"], [410, "\"\\nWe actually assume input lines are TSV and the tweet data is one field.\"+"], [415, "\"\\n   pretsv: Prepend the tokenization and tagging as new TSV fields, \" +"], [417, "\"\\nBy default, three TSV fields are prepended:\" +"], [418, "\"\\n   Tokenization \\\\t POSTags \\\\t Confidences \\\\t (original data...)\" +"], [420, "\"\\nThe 'conll' format is token-per-line, blank spaces separating tweets.\"+"]], "deleted": [[31, "\tString inputFormat = \"json\";"], [36, "\tString modelFilename;"], [42, "\tpublic Decoder decoder = Decoder.VITERBI;"], [91, "\t\t\t\ttext = jsonTweetReader.getText(tweetData);"], [110, "\t\t\t\toutputPrependedTagging(sentence, modelSentence, justTokenize, tweetData);"], [212, "\t\treturn String.format(\"%.3f\", confidence);"], [332, ""], [333, "\t\ttagger.finalizeOutputFormat();"], [338, "\t\ttagger.runTagger();"], [339, ""], [342, "\tpublic void finalizeOutputFormat() {"], [362, "\"\\n  --model <Filename>        Specify model filename.\" +"], [363, "\"\\n                            [TODO should this default to something?]\" +"], [366, "\"\\n  --input-format <Format>   Default: json.\" +"], [377, "\"\\nThere are two types of input-output formats: \" +"], [378, "\"\\n(1) tweet-per-line, and (2) token-per-line.\" +"], [381, "\"\\n         as per the Streaming API. (The 'text' field gets used.)\" +"], [383, "\"\\nFor both cases, we the lines in the input are actually TSV,\" +"], [384, "\"\\nand the tweets (text or json) are one particular field.\" +"], [388, "\"\\nThis allows metadata to be passed through.\" +"], [389, "\"\\nBy default, the first field is used; change with --input-field.\" +"], [391, "\"\\n   pretsv: Prepend the tokenization and tagging as two new TSV fields, \" +"], [393, "\"\\n           (Control where the fields are inserted with --output-field.)\" +"], [394, "\"\\nBy default, two TSV fields are prepended:\" +"], [395, "\"\\n          Tokenization \\\\t POSTags \\\\t (original data...)\" +"], [397, "\"\\nWrite your own Java wrapper to Tagger.java for a different format.\" +"], [398, "\"\\n\" +"], [399, "\"\\nThere is only one token-per-line format:\" +"], [400, "\"\\n   conll: Each line is: Token \\\\t Tag, and blank line separating tweets.\" +"]]}, "num_lines_added": 49, "num_lines_removed": 29}