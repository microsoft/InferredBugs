{"hash": "350bcbe99c46e8841f3db2d41ffc4776cb391b01", "message": "Enabled user to specify which type of collection shall be used to hold the currently connected websockets. (#138)\nAlso removed the setAddress method since it is misleading and unnecessary.", "file_num_lines": 419, "diff_parsed": {"added": [[16, "import java.util.Collection;"], [24, "import java.util.concurrent.CopyOnWriteArraySet;"], [54, "\tprivate final Collection<WebSocket> connections;"], [59, "\tprivate final InetSocketAddress address;"], [88, "\t * Creates a WebSocketServer that will attempt to"], [90, "\t *"], [91, "\t * @see #WebSocketServer(InetSocketAddress, int, List, Collection) more details here"], [100, "\t * @see #WebSocketServer(InetSocketAddress, int, List, Collection) more details here"], [106, "\t/**"], [107, "\t * @see #WebSocketServer(InetSocketAddress, int, List, Collection) more details here"], [108, "\t */"], [114, "\t * @see #WebSocketServer(InetSocketAddress, int, List, Collection) more details here"], [120, "\t/**"], [121, "\t * @see #WebSocketServer(InetSocketAddress, int, List, Collection) more details here"], [122, "\t */"], [124, "\t\tthis( address, decodercount, drafts, new HashSet<WebSocket>() );"], [125, "\t}"], [126, ""], [127, "\t/**"], [128, "\t * Creates a WebSocketServer that will attempt to bind/listen on the given <var>address</var>,"], [129, "\t * and comply with <tt>Draft</tt> version <var>draft</var>."], [130, "\t *"], [131, "\t * @param address"], [132, "\t *            The address (host:port) this server should listen on."], [133, "\t * @param decodercount"], [134, "\t *            The number of {@link WebSocketWorker}s that will be used to process the incoming network data. By default this will be <code>Runtime.getRuntime().availableProcessors()</code>"], [135, "\t * @param drafts"], [136, "\t *            The versions of the WebSocket protocol that this server"], [137, "\t *            instance should comply to. Clients that use an other protocol version will be rejected."], [138, "\t *"], [139, "\t * @param connectionscontainer"], [140, "\t *            Allows to specify a collection that will be used to store the websockets in. <br>"], [141, "\t *            If you plan to often iterate through the currently connected websockets you may want to use a collection that does not require synchronization like a {@link CopyOnWriteArraySet}. In that case make sure that you overload {@link #removeConnection(WebSocket)} and {@link #addConnection(WebSocket)}.<br>By default a {@link HashSet} will be used."], [142, "\t *"], [143, "\t * @see #removeConnection(WebSocket) for more control over syncronized operation"], [144, "\t * @see <a href=\"https://github.com/TooTallNate/Java-WebSocket/wiki/Drafts\" > more about drafts"], [145, "\t */"], [146, "\tpublic WebSocketServer( InetSocketAddress address , int decodercount , List<Draft> drafts , Collection<WebSocket> connectionscontainer ) {"], [147, "\t\tif(address ==null || decodercount<1||connectionscontainer==null){"], [148, "\t\t\tthrow new IllegalArgumentException( \"address and connectionscontainer must not be null and you need at least 1 decoder\" );"], [149, "\t\t}"], [150, ""], [155, ""], [156, "\t\tthis.address = address;"], [157, "\t\tthis.connections = connectionscontainer;"], [240, "\tpublic Collection<WebSocket> connections() {"], [375, ""], [473, "\t\tif( addConnection( conn ) ) {"], [474, "\t\t\tonOpen( conn, (ClientHandshake) handshake );"], [483, "\t\t\tif( removeConnection( conn ) ) {"], [484, "\t\t\t\tonClose( conn, code, reason, remote );"], [497, "\t * This method performs remove operations on the connection and therefore also gives control over whether the operation shall be synchronized"], [498, "\t * <p>"], [499, "\t * {@link #WebSocketServer(InetSocketAddress, int, List, Collection)} allows to specify a collection which will be used to store current connections in.<br>"], [500, "\t * Depending on the type on the connection, modifications of that collection may have to be synchronized."], [501, "\t **/"], [502, "\tprotected boolean removeConnection( WebSocket ws ) {"], [503, "\t\tsynchronized ( connections ) {"], [504, "\t\t\treturn this.connections.remove( ws );"], [505, "\t\t}"], [506, "\t}"], [507, ""], [508, "\t/** @see #removeConnection(WebSocket) */"], [509, "\tprotected boolean addConnection( WebSocket ws ) {"], [510, "\t\tsynchronized ( connections ) {"], [511, "\t\t\treturn this.connections.add( ws );"], [512, "\t\t}"], [513, "\t}"], [514, ""], [515, "\t/**"]], "deleted": [[52, "\tprivate final Set<WebSocket> connections = new HashSet<WebSocket>();"], [57, "\tprivate InetSocketAddress address;"], [85, "\t// CONSTRUCTORS ////////////////////////////////////////////////////////////"], [87, "\t * Nullary constructor. Creates a WebSocketServer that will attempt to"], [97, "\t * @param address"], [98, "\t *            The address (host:port) this server should listen on."], [109, "\t * Creates a WebSocketServer that will attempt to bind/listen on the given <var>address</var>,"], [110, "\t * and comply with <tt>Draft</tt> version <var>draft</var>."], [111, "\t *"], [112, "\t * @param address"], [113, "\t *            The address (host:port) this server should listen on."], [114, "\t * @param draft"], [115, "\t *            The version of the WebSocket protocol that this server"], [116, "\t *            instance should comply to."], [127, "\t\tsetAddress( address );"], [210, "\tpublic Set<WebSocket> connections() {"], [214, "\t/**"], [215, "\t * Sets the address (host:port) that this WebSocketServer should listen on."], [216, "\t *"], [217, "\t * @param address"], [218, "\t *            The address (host:port) to listen on."], [219, "\t */"], [220, "\tpublic void setAddress( InetSocketAddress address ) {"], [221, "\t\tthis.address = address;"], [222, "\t}"], [223, ""], [355, ""], [453, "\t\tsynchronized ( connections ) {"], [454, "\t\t\tif( this.connections.add( conn ) ) {"], [455, "\t\t\t\tonOpen( conn, (ClientHandshake) handshake );"], [456, "\t\t\t}"], [465, "\t\t\tsynchronized ( connections ) {"], [466, "\t\t\t\tif( this.connections.remove( conn ) ) {"], [467, "\t\t\t\t\tonClose( conn, code, reason, remote );"], [468, "\t\t\t\t}"]]}, "num_lines_added": 70, "num_lines_removed": 35}