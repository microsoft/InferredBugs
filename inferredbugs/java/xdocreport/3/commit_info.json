{"hash": "8ebc1e3e3bb10eba1fc1e970c5fced5c8b93a74a", "message": "Macro with XML Fields.", "file_num_lines": 84, "diff_parsed": {"added": [[4, "import java.io.FileInputStream;"], [5, "import java.io.FileOutputStream;"], [8, "import java.util.HashMap;"], [9, "import java.util.Map;"], [12, "import fr.opensagres.xdocreport.core.utils.StringUtils;"], [13, "import fr.opensagres.xdocreport.document.tools.json.FieldsMetadataJSONSerializer;"], [14, "import fr.opensagres.xdocreport.template.formatter.FieldsMetadata;"], [15, "import fr.opensagres.xdocreport.template.formatter.FieldsMetadataXMLSerializer;"], [26, "\t\tString metadataFile = null;"], [27, "\t\tboolean autoGenData = false;"], [29, "\t\tIDataProvider dataProvider = null;"], [41, "\t\t\t\tMap<String, String> parameters = new HashMap<String, String>();"], [42, "\t\t\t\tparameters.put(\"jsonData\", jsonData);"], [43, "\t\t\t\tdataProvider = DataProviderFactoryRegistry.getRegistry()"], [44, "\t\t\t\t\t\t.create(\"json\", parameters);"], [47, "\t\t\t} else if (\"-autoGenData\".equals(arg)) {"], [48, "\t\t\t\tautoGenData = StringUtils.asBoolean(getValue(args, i), false);"], [49, "\t\t\t} else if (\"-metadataFile\".equals(arg)) {"], [50, "\t\t\t\tmetadataFile = getValue(args, i);"], [54, "\t\tFieldsMetadata fieldsMetadata = null;"], [55, "\t\tif (metadataFile != null) {"], [56, "\t\t\tfieldsMetadata = FieldsMetadataXMLSerializer.getInstance().load("], [57, "\t\t\t\t\tnew FileInputStream(metadataFile));"], [58, "\t\t}"], [59, ""], [60, "\t\tif (!StringUtils.isEmpty(jsonFile)) {"], [61, "\t\t\tStringWriter jsonDataWriter = new StringWriter();"], [62, ""], [63, "\t\t\tFile f = new File(jsonFile);"], [64, "\t\t\tif (!f.exists() && autoGenData && fieldsMetadata != null) {"], [65, "\t\t\t\t// Generate JSON"], [66, "\t\t\t\tFieldsMetadataJSONSerializer.getInstance().save(fieldsMetadata,"], [67, "\t\t\t\t\t\tnew FileOutputStream(jsonFile), true);"], [68, "\t\t\t}"], [69, ""], [70, "\t\t\tIOUtils.copy(new FileReader(f), jsonDataWriter);"], [71, "\t\t\tMap<String, String> parameters = new HashMap<String, String>();"], [72, "\t\t\tparameters.put(\"jsonData\", jsonDataWriter.toString());"], [73, "\t\t\tdataProvider = DataProviderFactoryRegistry.getRegistry().create("], [74, "\t\t\t\t\t\"json\", parameters);"], [75, ""], [76, "\t\t}"], [77, ""], [80, "\t\t\t\tfieldsMetadata, dataProvider);"]], "deleted": [[8, "import fr.opensagres.xdocreport.document.tools.json.JSONPoupluateContextAware;"], [20, "\t\tIPopulateContextAware contextAware = null;"], [32, "\t\t\t\tcontextAware = new JSONPoupluateContextAware(jsonData);"], [35, "\t\t\t\tStringWriter jsonDataWriter = new StringWriter();"], [36, "\t\t\t\tIOUtils.copy(new FileReader(new File(jsonFile)), jsonDataWriter);"], [37, "\t\t\t\tcontextAware = new JSONPoupluateContextAware("], [38, "\t\t\t\t\t\tjsonDataWriter.toString());"], [44, "\t\t\t\tcontextAware);"]]}, "num_lines_added": 44, "num_lines_removed": 8}