{"hash": "b529a1e4c27c6b10d50fc77ae3e7ff8f13fdc30b", "message": "- Fix hashing of empty files\n- Add global throughput info in the statistics", "file_num_lines": 274, "diff_parsed": {"added": [[96, "\t\t\tSystem.out.printf(\"(Hash progress legend for files grouped %d by %d: %s)%n\", PROGRESS_DISPLAY_FILE_COUNT, PROGRESS_DISPLAY_FILE_COUNT, hashProgressLegend());"], [192, "\t\tlong durationSeconds = duration / 1000;"], [193, "\t\tlong totalMegaHashed = totalBytesHashed / (1024 * 1024);"], [194, "\t\tlong globalThroughput = totalMegaHashed / durationSeconds;"], [195, "\t\tString throughputStr = FileUtils.byteCountToDisplaySize(globalThroughput);"], [196, ""], [204, "\t\t\tLogger.info(String.format(\"Scanned %d files (%s), hashed %s bytes (global throughput %s/s), during %s, using %d thread%n\","], [205, "\t\t\t\t\tstate.getFileStates().size(), totalFileContentLengthStr, totalBytesHashedStr, throughputStr, durationStr, parameters.getThreadCount()));"], [308, "\tprotected char getProgressChar(long fileLength)"], [313, "\t\t\tif (fileLength >= hashProgress[progressIndex].getRight())"]], "deleted": [[96, "\t\t\tSystem.out.printf(\"    (Hash progress legend for files grouped %d by %d: %s)%n\", PROGRESS_DISPLAY_FILE_COUNT, PROGRESS_DISPLAY_FILE_COUNT, hashProgressLegend());"], [199, "\t\t\tLogger.info(String.format(\"Scanned %d files (%s), hashed %s bytes, during %s, using %d thread%n\","], [200, "\t\t\t\t\tstate.getFileStates().size(), totalFileContentLengthStr, totalBytesHashedStr, durationStr, parameters.getThreadCount()));"], [303, "\tprivate char getProgressChar(long fileLength)"], [308, "\t\t\tif (fileLength > hashProgress[progressIndex].getRight())"]]}, "num_lines_added": 10, "num_lines_removed": 5}