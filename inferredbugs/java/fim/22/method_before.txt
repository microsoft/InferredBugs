 public CompareResult displayChanges()
	{
		if (lastState != null)
		{
			System.out.printf("Comparing with the last committed state from %s%n", formatDate(lastState.getTimestamp()));
			if (lastState.getComment().length() > 0)
			{
				System.out.println("Comment: " + lastState.getComment());
			}
			Console.newLine();
		}

		if (!context.isVerbose())
		{
			displayCounts();
			return this;
		}

		String stateFormat = "%-17s ";

		for (Difference diff : added)
		{
			System.out.printf(stateFormat + "%s%n", "Added:", diff.getFileState().getFileName());
		}

		for (Difference diff : copied)
		{
			System.out.printf(stateFormat + "%s \t(was %s)%n", "Copied:", diff.getFileState().getFileName(), diff.getPreviousFileState().getFileName());
		}

		for (Difference diff : duplicated)
		{
			System.out.printf(stateFormat + "%s = %s%s%n", "Duplicated:", diff.getFileState().getFileName(), diff.getPreviousFileState().getFileName(), formatModifiedAttributes(diff, true));
		}

		for (Difference diff : dateModified)
		{
			System.out.printf(stateFormat + "%s \t%s%n", "Date modified:", diff.getFileState().getFileName(), formatModifiedAttributes(diff, false));
		}

		for (Difference diff : contentModified)
		{
			System.out.printf(stateFormat + "%s \t%s%n", "Content modified:", diff.getFileState().getFileName(), formatModifiedAttributes(diff, false));
		}

		for (Difference diff : attributesModified)
		{
			System.out.printf(stateFormat + "%s \t%s%n", "Attrs. modified:", diff.getFileState().getFileName(), formatModifiedAttributes(diff, false));
		}

		for (Difference diff : renamed)
		{
			System.out.printf(stateFormat + "%s -> %s%s%n", "Renamed:", diff.getPreviousFileState().getFileName(), diff.getFileState().getFileName(), formatModifiedAttributes(diff, true));
		}

		for (Difference diff : deleted)
		{
			System.out.printf(stateFormat + "%s%n", "Deleted:", diff.getFileState().getFileName());
		}

		for (Difference diff : corrupted)
		{
			System.out.printf(stateFormat + "%s \t%s%n", "Corrupted?:", diff.getFileState().getFileName(), formatModifiedAttributes(diff, false));
		}

		if (somethingModified())
		{
			Console.newLine();
		}

		displayCounts();

		return this;
	}