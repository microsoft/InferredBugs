{"hash": "95a77cb895b71bfe0c2ce4ad6b1ee6165f94e86c", "message": "Added the remove-duplicates command", "file_num_lines": 290, "diff_parsed": {"added": [[27, "import java.util.HashMap;"], [29, "import java.util.Map;"], [40, "import org.fim.model.FileState;"], [56, "\t\toptions.addOption(createOption(\"d\", \"fimRepositoryDirectory\", true, \"Directory of a Fim repository that you want to use as master. Only for the remove duplicates command\", false));"], [57, "\t\toptions.addOption(createOption(\"y\", \"alwaysYes\", false, \"Always yes to every questions\", false));"], [92, "\t\tString fimRepositoryDirectory = null;"], [93, "\t\tboolean alwaysYes = false;"], [111, "\t\t\t\tfimRepositoryDirectory = commandLine.getOptionValue('d');"], [112, "\t\t\t\talwaysYes = commandLine.hasOption('y');"], [113, ""], [114, "\t\t\t\tif (command == Command.REMOVE_DUPLICATES && fimRepositoryDirectory == null)"], [115, "\t\t\t\t{"], [116, "\t\t\t\t\tSystem.out.println(\"The Fim repository directory must be provided\");"], [117, "\t\t\t\t\tprintUsage();"], [118, "\t\t\t\t\tSystem.exit(-1);"], [119, "\t\t\t\t}"], [137, "\t\t\tSystem.exit(-1);"], [141, "\t\tFile stateDir = new File(StateGenerator.FIM_DIR, \"states\");"], [160, "\t\tState state;"], [189, "\t\t\t\t\tif (alwaysYes || confirmCommand(\"commit\"))"], [222, "\t\t\tcase REMOVE_DUPLICATES:"], [223, "\t\t\t\tfastCompareNotSupported(compareMode);"], [224, ""], [225, "\t\t\t\tFile repository = new File(fimRepositoryDirectory);"], [226, "\t\t\t\tif (!repository.exists())"], [227, "\t\t\t\t{"], [228, "\t\t\t\t\tSystem.out.printf(\"Directory %s does not exist%n\", fimRepositoryDirectory);"], [229, "\t\t\t\t\tSystem.exit(-1);"], [230, "\t\t\t\t}"], [231, ""], [232, "\t\t\t\tif (repository.getCanonicalPath().equals(baseDirectory.getCanonicalPath()))"], [233, "\t\t\t\t{"], [234, "\t\t\t\t\tSystem.out.printf(\"Cannot remove duplicates from the current directory%n\");"], [235, "\t\t\t\t\tSystem.exit(-1);"], [236, "\t\t\t\t}"], [237, ""], [238, "\t\t\t\tFile fimDir = new File(repository, StateGenerator.FIM_DIR);"], [239, "\t\t\t\tif (!fimDir.exists())"], [240, "\t\t\t\t{"], [241, "\t\t\t\t\tSystem.out.printf(\"Directory %s is not a Fim repository%n\", fimRepositoryDirectory);"], [242, "\t\t\t\t\tSystem.exit(-1);"], [243, "\t\t\t\t}"], [244, ""], [245, "\t\t\t\tSystem.out.println(\"Searching for duplicated files using the \" + fimRepositoryDirectory + \" directory as master\");"], [246, "\t\t\t\tSystem.out.println(\"\");"], [247, ""], [248, "\t\t\t\tFile otherStateDir = new File(fimDir, \"states\");"], [249, "\t\t\t\tStateManager otherManager = new StateManager(otherStateDir, CompareMode.FULL);"], [250, "\t\t\t\tState otherState = otherManager.loadLastState();"], [251, "\t\t\t\tMap<String, FileState> otherHashes = new HashMap<>();"], [252, "\t\t\t\tfor (FileState otherFileState : otherState.getFileStates())"], [253, "\t\t\t\t{"], [254, "\t\t\t\t\totherHashes.put(otherFileState.getHash(), otherFileState);"], [255, "\t\t\t\t}"], [256, ""], [257, "\t\t\t\tState localState = generator.generateState(message, baseDirectory);"], [258, "\t\t\t\tfor (FileState localFileState : localState.getFileStates())"], [259, "\t\t\t\t{"], [260, "\t\t\t\t\tFileState otherFileState = otherHashes.get(localFileState.getHash());"], [261, "\t\t\t\t\tif (otherFileState != null)"], [262, "\t\t\t\t\t{"], [263, "\t\t\t\t\t\tSystem.out.printf(\"%s is a duplicate of %s/%s%n\", localFileState.getFileName(), fimRepositoryDirectory, otherFileState.getFileName());"], [264, "\t\t\t\t\t\tif (alwaysYes || confirmCommand(\"remove it\"))"], [265, "\t\t\t\t\t\t{"], [266, "\t\t\t\t\t\t\tSystem.out.printf(\"  %s removed%n\", localFileState.getFileName());"], [267, "\t\t\t\t\t\t\tFile localFile = new File(localFileState.getFileName());"], [268, "\t\t\t\t\t\t\tlocalFile.delete();"], [269, "\t\t\t\t\t\t}"], [270, "\t\t\t\t\t}"], [271, "\t\t\t\t}"], [272, "\t\t\t\tbreak;"], [273, ""], [309, "\tprivate static boolean confirmCommand(String action)"], [312, "\t\tSystem.out.printf(\"Do you really want to %s (y/n)? \", action);"]], "deleted": [[121, "\t\t\tSystem.exit(0);"], [125, "\t\tFile stateDir = new File(StateGenerator.FIC_DIR, \"states\");"], [172, "\t\t\t\t\tif (confirmCommand(\"commit\"))"], [194, "\t\t\t\tState state;"], [241, "\tprivate static boolean confirmCommand(String command)"], [244, "\t\tSystem.out.printf(\"Do you really want to %s (y/n)? \", command);"]]}, "num_lines_added": 74, "num_lines_removed": 6}