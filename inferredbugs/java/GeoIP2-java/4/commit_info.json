{"hash": "75e8e960296cd0f172a7582f1eb2f76c777b3b51", "message": "Clean up some of the exception handling and reduce the number of nulls being returned", "file_num_lines": 164, "diff_parsed": {"added": [[26, "        return new Country(json);"], [31, "        return new City(json);"], [36, "        return new Omni(json);"], [41, "        return new CityISPOrg(json);"], [51, "        String uri = \"https://\" + host;"], [52, "        if (host.startsWith(\"localhost\")) {"], [53, "            uri = \"http://\" + host;"], [54, "        }"], [55, "        uri = uri + \"/geoip/v2.0/\" + path + \"/\" + ip_address;"], [56, "        HttpGet httpget = new HttpGet(uri);"], [57, "        httpget.addHeader(\"Accept\", \"application/json\");"], [58, "        httpget.addHeader(BasicScheme.authenticate("], [59, "                new UsernamePasswordCredentials(userId, licenseKey), \"UTF-8\","], [60, "                false));"], [61, "        HttpResponse response = null;"], [63, "            response = httpclient.execute(httpget);"], [69, ""], [70, "        int status = response.getStatusLine().getStatusCode();"], [71, "        if (status == 200) {"], [72, "            return handleSuccess(response, uri);"], [73, "        } else {"], [74, "            handleErrorStatus(response, status, uri);"], [75, "        }"], [82, "            return null;"], [93, "            throws GeoIP2Exception {"], [95, "        String content;"], [96, "        try {"], [97, "            content = getContent(response);"], [98, "        } catch (IOException e) {"], [99, "            throw new GeoIP2Exception(\"Received a 200 response for \" + uri"], [100, "                    + \" but could not parse the message content: \\n\""], [101, "                    + e.getMessage(), e);"], [102, "        }"], [103, ""], [104, "        if (content == null) {"], [105, "            throw new GeoIP2Exception(\"Received a 200 response for \" + uri"], [106, "                    + \" but there was no message body.\");"], [107, "        }"], [108, ""], [119, "    private void handleErrorStatus(HttpResponse response, int status, String uri)"], [120, "            throws GeoIP2Exception {"], [131, "            throws GeoIP2Exception {"], [134, "        String content = \"\";"], [135, "        try {"], [136, "            content = getContent(response);"], [137, "        } catch (IOException e) {"], [138, "            throw new GeoIP2Exception(\"Received a \" + status + \" response for \""], [139, "                    + uri + \" but could not parse the message content: \\n\""], [140, "                    + e.getMessage(), e);"], [142, ""], [143, "        if (content == null) {"], [147, ""], [148, "        JSONObject body;"], [149, "        String contentType = response.getEntity().getContentType().getValue();"], [150, "        if (contentType.indexOf(\"json\") != -1) {"], [152, "                body = new JSONObject(content);"], [154, "                throw new HTTPException(JSON_Message + e.getMessage(), e,"], [155, "                        status, uri);"], [158, "            throw new HTTPException(\"Received a \" + status + \" error for \""], [159, "                    + uri + \"with the following body: \" + content, status, uri);"], [160, "        }"], [161, ""], [162, "        try{"], [163, "            String code = body.getString(\"code\");"], [164, "            String error = body.getString(\"error\");"], [165, "            throw new WebServiceException(error, code, status, uri);"], [166, "        } catch (JSONException e) {"]], "deleted": [[26, "        if (json != null) {"], [27, "            return new Country(json);"], [28, "        }"], [29, "        return null;"], [34, "        if (json != null) {"], [35, "            return new City(json);"], [36, "        }"], [37, "        return null;"], [42, "        if (json != null) {"], [43, "            return new Omni(json);"], [44, "        }"], [45, "        return null;"], [50, "        if (json != null) {"], [51, "            return new CityISPOrg(json);"], [52, "        }"], [53, "        return null;"], [64, "            // String uri = \"https://ct4-test.maxmind.com/geoip/\" + path + \"/\" +"], [65, "            // ip_address;"], [66, "            String uri = \"https://\" + host;"], [67, "            if (host.startsWith(\"localhost\")) {"], [68, "                uri = \"http://\" + host;"], [69, "            }"], [70, "            uri = uri + \"/geoip/v2.0/\" + path + \"/\" + ip_address;"], [71, "            HttpGet httpget = new HttpGet(uri);"], [72, "            httpget.addHeader(\"Accept\", \"application/json\");"], [73, "            httpget.addHeader(BasicScheme.authenticate("], [74, "                    new UsernamePasswordCredentials(userId, licenseKey),"], [75, "                    \"UTF-8\", false));"], [76, "            HttpResponse response = httpclient.execute(httpget);"], [77, "            int status = response.getStatusLine().getStatusCode();"], [78, "            if (status == 200) {"], [79, "                return handleSuccess(response, uri);"], [80, "            } else {"], [81, "                handleErrorStatus(response, status, uri);"], [82, "            }"], [94, "            return \"\";"], [105, "            throws IOException, GeoIP2Exception {"], [108, "            String content = getContent(response);"], [109, "            if (content == null) {"], [110, "                content = \"\";"], [111, "            }"], [112, "            System.out.println(content);"], [122, "    private void handleErrorStatus(HttpResponse response, int status,"], [123, "            String uri) throws IOException, GeoIP2Exception {"], [134, "            throws IOException, HTTPException {"], [137, "        String content = getContent(response);"], [138, "        if (content == null) {"], [139, "            content = \"\";"], [141, "        System.out.println(content);"], [142, "        JSONObject body;"], [143, "        if (content.equals(\"\") == false) {"], [144, "            String contentType = response.getEntity().getContentType()"], [145, "                    .getValue();"], [146, "            if (contentType.indexOf(\"json\") != -1) {"], [147, "                try {"], [148, "                    body = new JSONObject(content);"], [149, "                } catch (JSONException e) {"], [150, "                    throw new HTTPException(JSON_Message + e.getMessage(), e,"], [151, "                            status, uri);"], [152, "                }"], [153, "            } else {"], [154, "                throw new HTTPException(\"Received a \" + status + \" error for \""], [155, "                        + uri + \"with the following body: \" + content, status,"], [156, "                        uri);"], [157, "            }"], [158, "        } else {"], [162, "        if (body.has(\"code\") & body.has(\"error\")) {"], [164, "                String code = body.getString(\"code\");"], [165, "                String error = body.getString(\"error\");"], [166, "                throw new WebServiceException(error, code, status, uri);"], [168, "                e.printStackTrace();"]]}, "num_lines_added": 67, "num_lines_removed": 71}