{"hash": "0d3d4ec1e7c0795652dec72006ae3ef935b7746f", "message": "- Simplified commands - no more pipes, sockets, etc;\n - Redid schema commands, now they are executed via mysql instead of jdbc;\n - Some simplifications along the way.", "file_num_lines": 167, "diff_parsed": {"added": [[28, "import static com.wix.mysql.utils.Utils.closeCloseables;"], [29, "import static de.flapdoodle.embed.process.distribution.Platform.Windows;"], [30, ""], [73, "            new MysqlConfigurer(getConfig(), runtimeConfig, getExecutable().executable.generatedBaseDir()).configure();"], [74, ""], [88, "        return Collections.newArrayList("], [89, "                exe.executable().getAbsolutePath(),"], [90, "                \"--no-defaults\","], [91, "                \"--log-output=NONE\","], [92, "                String.format(\"--basedir=%s\", baseDir),"], [93, "                String.format(\"--datadir=%s/data\", baseDir),"], [94, "                String.format(\"--plugin-dir=%s/lib/plugin\", baseDir),"], [95, "                String.format(\"--pid-file=%s.pid\", pidFile(exe.executable())),"], [96, "                String.format(\"--lc-messages-dir=%s/share\", baseDir),"], [97, "                String.format(\"--port=%s\", config.getPort()),"], [98, "                String.format(\"--log-error=%s/data/error.log\", baseDir));"], [135, "        Set<String> successPatterns = Sets.newHashSet("], [136, "                \"'Can't connect to MySQL server on 'localhost'\","], [137, "                Platform.detect() == Windows ? \"mysqld.exe: Shutdown complete\" : \"mysqld: Shutdown complete\");"], [140, "            String cmd = Paths.get(getExecutable().getFile().generatedBaseDir().getAbsolutePath(), \"bin\", \"mysqladmin\").toString();"], [142, "            Process p = Runtime.getRuntime().exec(new String[] {"], [143, "                    cmd, \"--no-defaults\", \"--protocol=tcp\","], [144, "                    String.format(\"-u%s\", MysqldConfig.SystemDefaults.USERNAME),"], [145, "                    \"shutdown\"});"], [152, "                    StreamToLineProcessor.wrap(getRuntimeConfig().getProcessOutput().getOutput()));"], [175, "            closeCloseables(stdOut, stdErr);"], [198, "     * Work-around to get IRuntimeConfig in hooks where it's not provided and as"], [199, "     * all init is done in base class constructor, local vars are still not"], [200, "     * initialized:/"], [201, "     */"], [202, "    private IRuntimeConfig getRuntimeConfig() {"], [203, "        try {"], [204, "            Field f = AbstractProcess.class.getDeclaredField(\"runtimeConfig\");"], [205, "            f.setAccessible(true);"], [206, "            return (IRuntimeConfig)f.get(this);"], [207, "        } catch (Exception e) {"], [208, "            throw new RuntimeException(e);"], [209, "        }"], [210, "    }"], [211, ""], [212, ""], [213, "    /**"]], "deleted": [[5, "import com.google.common.io.Closeables;"], [14, "import de.flapdoodle.embed.process.io.LogWatchStreamProcessor;"], [38, "    private IRuntimeConfig unsafeRuntimeConfig;"], [48, "        this.unsafeRuntimeConfig = runtimeConfig;"], [68, ""], [75, "            new MysqlConfigurer(getConfig()).configure();"], [89, "        //TODO: create factory for platform-specific commands;"], [90, "        if (Platform.detect() == Platform.Windows) {"], [91, "            return Collections.newArrayList("], [92, "                    exe.executable().getAbsolutePath(),"], [93, "                    \"--no-defaults\","], [94, "                    \"--log-output=NONE\","], [95, "                    \"--enable-named-pipe\","], [96, "                    String.format(\"--basedir=%s\", baseDir),"], [97, "                    String.format(\"--datadir=%s/data\", baseDir),"], [98, "                    String.format(\"--plugin-dir=%s/lib/plugin\", baseDir),"], [99, "                    String.format(\"--pid-file=%s.pid\", pidFile(exe.executable())),"], [100, "                    String.format(\"--lc-messages-dir=%s/share\", baseDir),"], [101, "                    String.format(\"--socket=%s\", sockFile(exe)),"], [102, "                    String.format(\"--port=%s\", config.getPort()),"], [103, "                    String.format(\"--log-error=%s/data/error.log\", baseDir));"], [104, "        } else {"], [105, "            return Collections.newArrayList("], [106, "                    exe.executable().getAbsolutePath(),"], [107, "                    \"--no-defaults\","], [108, "                    \"--log-output=NONE\","], [109, "                    String.format(\"--basedir=%s\", baseDir),"], [110, "                    String.format(\"--datadir=%s/data\", baseDir),"], [111, "                    String.format(\"--plugin-dir=%s/lib/plugin\", baseDir),"], [112, "                    String.format(\"--pid-file=%s.pid\", pidFile(exe.executable())),"], [113, "                    String.format(\"--lc-messages-dir=%s/share\", baseDir),"], [114, "                    String.format(\"--socket=%s\", sockFile(exe)),"], [115, "                    String.format(\"--port=%s\", config.getPort()),"], [116, "                    String.format(\"--log-error=%s/data/error.log\", baseDir));"], [117, "        }"], [154, "        Set<String> successPatterns = Sets.newHashSet(\"'Can't connect to MySQL server on 'localhost'\");"], [157, "            Process p;"], [159, "            if (Platform.detect() == Platform.Windows) {"], [160, "                String cmd = Paths.get(getExecutable().getFile().generatedBaseDir().getAbsolutePath(), \"bin\", \"mysqladmin.exe\").toString();"], [161, "                successPatterns.add(\"mysqld.exe: Shutdown complete\");"], [162, ""], [163, "                p = Runtime.getRuntime().exec(new String[] {"], [164, "                        cmd, \"--no-defaults\", \"--protocol=tcp\","], [165, "                        String.format(\"-u%s\", MysqldConfig.SystemDefaults.USERNAME),"], [166, "                        \"shutdown\"});"], [167, "            } else {"], [168, "                String cmd = Paths.get(getExecutable().getFile().generatedBaseDir().getAbsolutePath(), \"bin\", \"mysqladmin\").toString();"], [169, "                successPatterns.add(\"mysqld: Shutdown complete\");"], [170, ""], [171, "                p = Runtime.getRuntime().exec(new String[] {"], [172, "                        cmd, \"--no-defaults\", \"--protocol=tcp\","], [173, "                        String.format(\"-u%s\", MysqldConfig.SystemDefaults.USERNAME),"], [174, "                        //String.format(\"--socket=%s\", sockFile(getExecutable().executable)),"], [175, "                        \"shutdown\"});"], [176, "            }"], [183, "                    StreamToLineProcessor.wrap(unsafeRuntimeConfig.getProcessOutput().getOutput()));"], [206, "            closeCloseable(stdOut);"], [207, "            closeCloseable(stdErr);"], [245, ""], [246, "    //Cannot use higher version of guava than 16 right now due to framework (wix-embedded-mysql) uses this"], [247, "    //TODO: make sure 18 version is in FW"], [248, "    private static void closeCloseable(Reader reader) {"], [249, "        try {"], [250, "            if (reader != null) reader.close();"], [251, "        } catch (IOException e) {"], [252, ""], [253, "        }"], [254, ""], [255, "    }"]]}, "num_lines_added": 42, "num_lines_removed": 69}