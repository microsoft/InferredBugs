{"hash": "c3288555abc58f520af5857525a02f652b0344da", "message": "added locale to parser to allow locale dependent date parsing (fixes\nrometools/rome-modules#22)", "file_num_lines": 71, "diff_parsed": {"added": [[22, "import java.util.Locale;"], [43, "        cal.setTime(DateParser.parseRFC822(sDate, Locale.US));"], [55, "        cal.setTime(DateParser.parseRFC822(sDate, Locale.US));"], [67, "        cal.setTime(DateParser.parseRFC822(sDate, Locale.US));"], [79, "        cal.setTime(DateParser.parseRFC822(sDate, Locale.US));"], [91, "        assertNotNull(DateParser.parseDate(sDate, Locale.US));"], [95, "        assertNotNull(DateParser.parseDate(sDate, Locale.US));"], [103, "        assertEquals(expectedDate.getTime() / 1000, DateParser.parseDate(sDate, Locale.US).getTime() / 1000);"], [107, "        assertEquals(expectedDate.getTime() / 1000, DateParser.parseDate(sDate, Locale.US).getTime() / 1000);"], [111, "        assertEquals(expectedDate.getTime() / 1000, DateParser.parseDate(sDate, Locale.US).getTime() / 1000);"], [115, "        assertEquals(expectedDate.getTime() / 1000, DateParser.parseDate(sDate, Locale.US).getTime() / 1000);"], [119, "        assertEquals(expectedDate.getTime() / 1000, DateParser.parseDate(sDate, Locale.US).getTime() / 1000);"], [123, "        assertNotNull(DateParser.parseDate(sDate, Locale.US));"], [127, "        assertNull(DateParser.parseDate(sDate, Locale.US));"]], "deleted": [[42, "        cal.setTime(DateParser.parseRFC822(sDate));"], [54, "        cal.setTime(DateParser.parseRFC822(sDate));"], [66, "        cal.setTime(DateParser.parseRFC822(sDate));"], [78, "        cal.setTime(DateParser.parseRFC822(sDate));"], [90, "        assertNotNull(DateParser.parseDate(sDate));"], [94, "        assertNotNull(DateParser.parseDate(sDate));"], [102, "        assertEquals(expectedDate.getTime() / 1000, DateParser.parseDate(sDate).getTime() / 1000);"], [106, "        assertEquals(expectedDate.getTime() / 1000, DateParser.parseDate(sDate).getTime() / 1000);"], [110, "        assertEquals(expectedDate.getTime() / 1000, DateParser.parseDate(sDate).getTime() / 1000);"], [114, "        assertEquals(expectedDate.getTime() / 1000, DateParser.parseDate(sDate).getTime() / 1000);"], [118, "        assertEquals(expectedDate.getTime() / 1000, DateParser.parseDate(sDate).getTime() / 1000);"], [122, "        assertNotNull(DateParser.parseDate(sDate));"], [126, "        assertNull(DateParser.parseDate(sDate));"]]}, "num_lines_added": 14, "num_lines_removed": 13}