{"hash": "7b4555f31ccc386f87d38b83a34730399291741e", "message": "resource warnings removed", "file_num_lines": 280, "diff_parsed": {"added": [[52, "        checkEncoding(XML1, encoding, \"UTF-8\");"], [53, "        checkEncoding(XML2, encoding, \"UTF-8\");"], [54, "        checkEncoding(XML3, encoding, encoding);"], [55, "        checkEncoding(XML4, encoding, encoding);"], [56, "        checkEncoding(XML5, encoding, encoding);"], [57, "    }"], [59, "    private void checkEncoding(final String xmlType, final String encoding, final String expected) throws IOException {"], [60, "        InputStream is = null;"], [61, "        XmlReader xmlReader = null;"], [62, "        try {"], [63, "            is = getXmlStream(\"no-bom\", xmlType, encoding, encoding);"], [64, "            xmlReader = new XmlReader(is, false);"], [65, "            assertEquals(xmlReader.getEncoding(), expected);"], [66, "        } finally {"], [67, "            if (xmlReader != null) {"], [68, "                xmlReader.close();"], [69, "            }"], [70, "            if (is != null) {"], [71, "                is.close();"], [72, "            }"], [73, "        }"], [77, "        InputStream is = null;"], [78, "        XmlReader xmlReader = null;"], [80, "            is = getXmlStream(\"no-bom\", XML3, encoding, encoding);"], [81, "            xmlReader = new XmlReader(is, false);"], [85, "        } finally {"], [86, "            if (xmlReader != null) {"], [87, "                xmlReader.close();"], [88, "            }"], [89, "            if (is != null) {"], [90, "                is.close();"], [91, "            }"], [109, "        xmlReader.close();"], [117, "            xmlReader.close();"], [202, "        XmlReader xmlReader = null;"], [211, "            xmlReader = new XmlReader(is, cT, false);"], [220, "            if (xmlReader != null) {"], [221, "                xmlReader.close();"], [222, "            }"], [240, "        xmlReader.close();"], [268, "        xmlReader.close();"], [278, "        xmlReader.close();"]], "deleted": [[52, "        InputStream is = getXmlStream(\"no-bom\", XML1, encoding, encoding);"], [53, "        XmlReader xmlReader = new XmlReader(is, false);"], [54, "        assertEquals(xmlReader.getEncoding(), \"UTF-8\");"], [55, ""], [56, "        is = getXmlStream(\"no-bom\", XML2, encoding, encoding);"], [57, "        xmlReader = new XmlReader(is);"], [58, "        assertEquals(xmlReader.getEncoding(), \"UTF-8\");"], [59, ""], [60, "        is = getXmlStream(\"no-bom\", XML3, encoding, encoding);"], [61, "        xmlReader = new XmlReader(is);"], [62, "        assertEquals(xmlReader.getEncoding(), encoding);"], [63, ""], [64, "        is = getXmlStream(\"no-bom\", XML4, encoding, encoding);"], [65, "        xmlReader = new XmlReader(is);"], [66, "        assertEquals(xmlReader.getEncoding(), encoding);"], [68, "        is = getXmlStream(\"no-bom\", XML5, encoding, encoding);"], [69, "        xmlReader = new XmlReader(is);"], [70, "        assertEquals(xmlReader.getEncoding(), encoding);"], [74, "        final InputStream is = getXmlStream(\"no-bom\", XML3, encoding, encoding);"], [76, "            final XmlReader xmlReader = new XmlReader(is, false);"], [196, "            final XmlReader xmlReader = new XmlReader(is, cT, false);"], [201, "                final String enc;"], [202, "                if (alternateEnc != null) {"], [203, "                    enc = alternateEnc;"], [204, "                } else {"], [205, "                    enc = streamEnc;"], [206, "                }"]]}, "num_lines_added": 42, "num_lines_removed": 27}