{"hash": "c904baeb08f75b60c03841ff5b95db8f33cf04de", "message": "more flatbuffers dev", "file_num_lines": 156, "diff_parsed": {"added": [[3, "import static com.github.davidmoten.rtree.fbs.FlatBuffersHelper.createBox;"], [4, "import static com.github.davidmoten.rtree.fbs.FlatBuffersHelper.toGeometry;"], [5, ""], [121, "            if (child.childrenLength()>0) {"], [122, "                children.add(new NonLeafFlatBuffers<T, S>(child, context, deserializer));"], [123, "            } else {"], [124, "                children.add(new LeafFlatBuffers<T,S>(child, context, deserializer));"], [125, "            }"], [146, "        return FlatBuffersHelper.createBox(node.mbb());"]], "deleted": [[118, "            children.add(new NonLeafFlatBuffers<T, S>(child, context, deserializer));"], [139, "        return createBox(node.mbb());"], [142, "    private static Geometry createBox(Box_ b) {"], [143, "        return Rectangle.create(b.minX(), b.minY(), b.maxX(), b.maxY());"], [144, "    }"], [145, ""], [146, "    @SuppressWarnings(\"unchecked\")"], [147, "    private static <S extends Geometry> S toGeometry(Geometry_ g) {"], [148, "        final Geometry result;"], [149, "        byte type = g.type();"], [150, "        if (type == GeometryType_.Box) {"], [151, "            result = createBox(g.box());"], [152, "        } else if (type == GeometryType_.Point) {"], [153, "            result = Point.create(g.point().x(), g.point().y());"], [154, "        } else"], [155, "            throw new UnsupportedOperationException();"], [156, "        return (S) result;"], [157, "    }"], [158, ""], [159, "    @Override"], [160, "    public int childrenCount() {"], [161, "        return node.childrenLength();"], [162, "    }"]]}, "num_lines_added": 9, "num_lines_removed": 23}