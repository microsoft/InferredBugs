{"hash": "84c0ae357fd6e2ef2685204f6e57ffcfb0945a66", "message": "serialization round trip working", "file_num_lines": 125, "diff_parsed": {"added": [[16, "import com.github.davidmoten.rtree.fbs.generated.Box_;"], [17, "import com.github.davidmoten.rtree.fbs.generated.GeometryType_;"], [18, "import com.github.davidmoten.rtree.fbs.generated.Geometry_;"], [19, "import com.github.davidmoten.rtree.fbs.generated.Node_;"], [53, "        System.out.println(\"searching \" + node);"], [60, "            if (entries.isEmpty())"], [61, "                throw new RuntimeException(\"unexpected\");"], [63, "                entries.add(createEntry(i));"], [73, "            Node_ child = node.children(i);"], [74, "            if (child.childrenLength() > 0)"], [75, "                children.add(new NonLeafFlatBuffersStatic<T, S>(child, context, deserializer));"], [76, "            else"], [77, "                children.add(new LeafDefault<T, S>("], [78, "                        FlatBuffersHelper.<T, S> createEntries(child, deserializer), context));"], [89, "                byte[] bytes = Arrays.copyOfRange(bb.array(), bb.position(), bb.limit());"], [103, "        if (node.childrenLength() > 0)"], [104, "            return node.childrenLength();"], [105, "        else"], [106, "            return node.entriesLength();"], [140, "    @Override"], [141, "    public String toString() {"], [142, "        return \"Node [\" + (node.childrenLength() > 0 ? \"NonLeaf\" : \"Leaf\") + \",\""], [143, "                + createBox(node.mbb()).toString() + \"]\";"], [144, "    }"], [145, ""]], "deleted": [[16, "import com.github.davidmoten.rtree.flatbuffers.Box_;"], [17, "import com.github.davidmoten.rtree.flatbuffers.GeometryType_;"], [18, "import com.github.davidmoten.rtree.flatbuffers.Geometry_;"], [19, "import com.github.davidmoten.rtree.flatbuffers.Node_;"], [60, "                final int index = i;"], [61, "                entries.add(createEntry(index));"], [71, "            children.add("], [72, "                    new NonLeafFlatBuffersStatic<T, S>(node.children(i), context, deserializer));"], [83, "                byte[] bytes = Arrays.copyOfRange(bb.array(), bb.position(), bb.remaining());"], [97, "        return node.childrenLength();"]]}, "num_lines_added": 25, "num_lines_removed": 10}