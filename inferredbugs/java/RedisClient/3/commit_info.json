{"hash": "86c335d6e24654a1167c4dfae6a8dd7fc4dc6827", "message": "finish import, export service", "file_num_lines": 25, "diff_parsed": {"added": [[5, "public class ConfigFile extends PropertyFile {"], [19, "\t\treturn readMaxId(propertyFile, maxid);"], [22, "\tpublic static String read(String key) throws IOException {"], [23, "\t\treturn read(propertyFile, key);"], [27, "\t\twrite(propertyFile, key, value);"], [31, "\t\tdelete(propertyFile, key);"]], "deleted": [[3, "import java.io.BufferedInputStream;"], [4, "import java.io.File;"], [5, "import java.io.FileInputStream;"], [6, "import java.io.FileNotFoundException;"], [7, "import java.io.FileOutputStream;"], [9, "import java.io.InputStream;"], [10, "import java.io.OutputStream;"], [11, "import java.util.Properties;"], [13, "public class ConfigFile {"], [19, "\tpublic static final String SERVER_AMOUNT = \"server_amount\";"], [25, "\tpublic static final String FAVORITE_AMOUNT = \"favorite_amount\";"], [27, ""], [28, "\tpublic static String read(String key) throws IOException {"], [29, "\t\tProperties props = getProperty();"], [30, "\t\tString value = props.getProperty(key);"], [31, "\t\treturn value;"], [32, ""], [33, "\t}"], [34, ""], [35, "\tpublic static String readAmount(String amount) throws IOException {"], [36, "\t\tString servers = read(amount);"], [37, "\t\tif (servers == null)"], [38, "\t\t\treturn \"0\";"], [39, "\t\telse"], [40, "\t\t\treturn servers;"], [41, ""], [42, "\t}"], [45, "\t\tString id = read(maxid);"], [46, "\t\tif (id == null)"], [47, "\t\t\treturn \"0\";"], [48, "\t\telse"], [49, "\t\t\treturn id;"], [50, ""], [53, "\tprivate static Properties getProperty() throws IOException {"], [54, "\t\tProperties props = new Properties();"], [55, ""], [56, "\t\tFile file = new File(propertyFile);"], [57, "\t\tif(!file.exists())"], [58, "\t\t\tfile.createNewFile();"], [59, ""], [60, "\t\tInputStream is;"], [61, "\t\ttry {"], [62, "\t\t\tis = new BufferedInputStream(new FileInputStream(propertyFile));"], [63, "\t\t} catch (FileNotFoundException e) {"], [64, "\t\t\tthrow new IllegalArgumentException();"], [65, "\t\t}"], [66, "\t\tprops.load(is);"], [67, "\t\tis.close();"], [68, "\t\treturn props;"], [70, ""], [72, ""], [74, "\t\tProperties props = getProperty();"], [75, "\t\tOutputStream fos = new FileOutputStream(propertyFile);"], [76, "\t\tprops.setProperty(key, value);"], [77, ""], [78, "\t\tprops.store(fos, \"Update '\" + key + \"' value\");"], [79, ""], [83, "\t\tProperties props = getProperty();"], [84, "\t\tOutputStream fos = new FileOutputStream(propertyFile);"], [85, "\t\tprops.remove(key);"], [86, ""], [87, "\t\tprops.store(fos, \"Delete '\" + key + \"' value\");"], [88, ""]]}, "num_lines_added": 6, "num_lines_removed": 63}