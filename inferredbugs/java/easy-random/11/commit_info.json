{"hash": "8ee6f782e7be048d61d6fcb3dc42c1cf86c71acb", "message": "Make bean validation handlers aware of custom registries\n\nResolves #401", "file_num_lines": 199, "diff_parsed": {"added": [[28, "import org.jeasy.random.randomizers.range.BigDecimalRangeRandomizer;"], [29, "import org.jeasy.random.randomizers.range.IntegerRangeRandomizer;"], [30, "import org.jeasy.random.randomizers.registry.CustomRandomizerRegistry;"], [35, "import javax.validation.Valid;"], [39, "import javax.validation.constraints.DecimalMax;"], [40, "import javax.validation.constraints.DecimalMin;"], [42, "import javax.validation.constraints.NotNull;"], [43, "import javax.validation.constraints.Size;"], [44, ""], [48, "import java.util.List;"], [249, "    void customBeanValidationRegistryTest() {"], [268, "    @Test"], [269, "    void customRegistryTest() {"], [270, "        // given"], [271, "        class Amount {"], [272, "            @NotNull"], [273, "            @Digits(integer = 12, fraction = 3)"], [274, "            protected BigDecimal amount;"], [275, "        }"], [276, "        class DiscountEffect {"], [277, "            @Digits(integer = 6, fraction = 4)"], [278, "            protected BigDecimal percentage;"], [279, "            protected Amount amount;"], [280, "            @Digits(integer = 12, fraction = 3)"], [281, "            protected BigDecimal quantity;"], [282, "            @NotNull"], [283, "            @DecimalMax(\"65535\")"], [284, "            @DecimalMin(\"1\")"], [285, "            protected Integer size;"], [286, "        }"], [287, "        class Discount {"], [288, "            @NotNull"], [289, "            @Size(min = 1)"], [290, "            @Valid"], [291, "            protected List<DiscountEffect> discountEffects;"], [292, "        }"], [293, ""], [294, "        CustomRandomizerRegistry registry = new CustomRandomizerRegistry();"], [295, "        registry.registerRandomizer(BigDecimal.class, new BigDecimalRangeRandomizer(new Double(5d), new Double(10d), Integer.valueOf(3)));"], [296, "        registry.registerRandomizer(Integer.class, new IntegerRangeRandomizer(5, 10));"], [297, "        EasyRandomParameters parameters = new EasyRandomParameters()"], [298, "                .randomizerRegistry(registry);"], [299, "        EasyRandom easyRandom = new EasyRandom(parameters);"], [300, ""], [301, "        // when"], [302, "        Discount discount = easyRandom.nextObject(Discount.class);"], [303, ""], [304, "        // then"], [305, "        assertThat(discount.discountEffects)"], [306, "                .isNotEmpty()"], [307, "                .allSatisfy(discountEffect -> {"], [308, "                    assertThat(discountEffect).isNotNull();"], [309, "                    assertThat(discountEffect.percentage).isBetween(new BigDecimal(\"5.000\"), new BigDecimal(\"10.000\"));"], [310, "                    assertThat(discountEffect.quantity).isBetween(new BigDecimal(\"5.000\"), new BigDecimal(\"10.000\"));"], [311, "                    assertThat(discountEffect.amount.amount).isBetween(new BigDecimal(\"5.000\"), new BigDecimal(\"10.000\"));"], [312, "                    assertThat(discountEffect.size).isBetween(5, 10);"], [313, "                });"], [314, "    }"], [315, ""]], "deleted": [[239, "    void customRegistryTest() {"]]}, "num_lines_added": 59, "num_lines_removed": 1}