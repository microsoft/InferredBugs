{"hash": "5c3d4a078bc81b9f8c77dd77d6299fa2872ba711", "message": "ExtractorBase now uses HTMLFetcher", "file_num_lines": 46, "diff_parsed": {"added": [[32, "import de.l3s.boilerpipe.sax.HTMLFetcher;"], [87, "        \treturn getText(HTMLFetcher.fetch(url).toInputSource());"]], "deleted": [[21, "import java.io.InputStream;"], [25, "import java.net.URLConnection;"], [26, "import java.nio.charset.Charset;"], [27, "import java.nio.charset.UnsupportedCharsetException;"], [90, "            final URLConnection conn = url.openConnection();"], [91, "            final String encoding = conn.getContentEncoding();"], [92, ""], [93, "            Charset cs = Charset.forName(\"Cp1252\");"], [94, "            if (encoding != null) {"], [95, "                try {"], [96, "                    cs = Charset.forName(encoding);"], [97, "                } catch (UnsupportedCharsetException e) {"], [98, "                    // keep default"], [99, "                }"], [100, "            }"], [101, ""], [102, "            final InputStream in = conn.getInputStream();"], [103, ""], [104, "            InputSource is = new InputSource(in);"], [105, "            if(cs != null) {"], [106, "                is.setEncoding(cs.name());"], [107, "            }"], [108, ""], [109, "            final String text = getText(is);"], [110, "            in.close();"], [111, "            return text;"]]}, "num_lines_added": 2, "num_lines_removed": 26}