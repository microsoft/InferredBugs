{"hash": "0c39cbc04eef28ec6876392b5ccaa2cb8c2d6d24", "message": "More implementation on HID protocol.", "file_num_lines": 722, "diff_parsed": {"added": [[394, "    private static final int                   DATA_SZ            = 248;"], [398, "    private final IHost                        host;"], [401, "    private final IMemoryBlock                 displayBlock;"], [424, "    private IMemoryBlock                       ledBlock;"], [425, ""], [426, "    private IMemoryBlock                       keyLedBlock;"], [427, ""], [466, "            this.hidDevice = this.usbDevice.getHidDevice ();"], [467, "            if (this.hidDevice != null)"], [468, "                this.hidDevice.setCallback (this::processHIDMessage);"], [478, "        this.ledBlock = host.createMemoryBlock (25);"], [479, "        this.keyLedBlock = host.createMemoryBlock (266);"], [502, "        if (this.hidDevice == null)"], [505, "        this.hidDevice.sendOutputReport ((byte) 0xA0, new byte []"], [506, "        {"], [507, "            0,"], [508, "            0"], [509, "        }, 2);"], [628, "        if (this.hidDevice == null)"], [677, "                // TODO Use Memory object for interface; also rewind on createByteBuffer with Reaper"], [678, "                displayBuffer.rewind ();"], [681, "                this.hidDevice.sendOutputReport ((byte) 0xE0, data, DATA_SZ);"], [692, "        this.hidDevice = null;"], [720, "        if (this.hidDevice == null)"], [738, "        final byte [] data = new byte [25];"], [739, "        ledBuffer.rewind ();"], [741, "        this.hidDevice.sendOutputReport ((byte) 0x80, data, data.length);"], [774, "        if (this.hidDevice == null)"], [783, "        // keyLedBuffer.put ((byte) 0x82);"], [790, "        final byte [] data = new byte [266];"], [791, "        keyLedBuffer.rewind ();"], [794, "        // TODO Bug in HID impl or is 88*3 too long? --> Try with modified lib"], [795, "        this.hidDevice.sendOutputReport ((byte) 0x82, data, 183); // data.length);"], [796, ""]], "deleted": [[11, "import de.mossgrabers.framework.usb.IUsbEndpoint;"], [395, "    private static final int                   DATA_SZ            = 249;"], [396, "    private static final int                   TIMEOUT            = 0;"], [400, "    private boolean                            useHIDForInput;"], [401, "    private IHost                              host;"], [403, "    private IUsbEndpoint                       usbEndpointDisplay;"], [404, "    private IUsbEndpoint                       usbEndpointUI;"], [406, ""], [407, "    private IMemoryBlock                       initBlock;"], [408, "    private IMemoryBlock                       displayBlock;"], [409, "    private IMemoryBlock                       ledBlock;"], [410, "    private IMemoryBlock                       keyLedBlock;"], [411, "    private IMemoryBlock                       uiBlock;"], [468, "        this.useHIDForInput = OperatingSystem.get () == OperatingSystem.WINDOWS;"], [473, "            this.usbEndpointDisplay = this.usbDevice.getEndpoint (0, 0);"], [474, ""], [475, "            if (this.useHIDForInput)"], [476, "            {"], [477, "                this.hidDevice = this.usbDevice.getHidDevice ();"], [478, "                if (this.hidDevice != null)"], [479, "                    this.hidDevice.setCallback (this::processHIDMessage);"], [480, "            }"], [481, "            else"], [482, "            {"], [483, "                this.usbEndpointUI = this.usbDevice.getEndpoint (0, 1);"], [484, "                this.uiBlock = host.createMemoryBlock (1024);"], [485, "            }"], [490, "            this.usbEndpointDisplay = null;"], [491, "            this.usbEndpointUI = null;"], [497, "        this.ledBlock = host.createMemoryBlock (26);"], [498, "        this.keyLedBlock = host.createMemoryBlock (267);"], [499, "        this.initBlock = host.createMemoryBlock (3);"], [500, "        final ByteBuffer initBuffer = this.initBlock.createByteBuffer ();"], [501, "        initBuffer.put ((byte) 0xA0);"], [502, "        initBuffer.put ((byte) 0x00);"], [503, "        initBuffer.put ((byte) 0x00);"], [511, "     * Poll the user interface controls."], [512, "     */"], [513, "    public void pollUI ()"], [514, "    {"], [515, "        if (this.usbEndpointUI == null || this.useHIDForInput)"], [516, "            return;"], [517, ""], [518, "        this.usbEndpointUI.sendAsync (this.uiBlock, resultLength -> {"], [519, "            if (resultLength > 0)"], [520, "                this.processMessage (resultLength);"], [521, "            this.host.scheduleTask (this::pollUI, 10);"], [522, "        }, TIMEOUT);"], [523, "    }"], [524, ""], [525, ""], [526, "    /**"], [542, "        if (this.usbEndpointDisplay == null)"], [545, "        // TODO TEST"], [546, "        final byte [] data = new byte [3];"], [547, "        this.initBlock.createByteBuffer ().get (data);"], [548, "        this.hidDevice.sendOutputReport ((byte) 0, data, data.length);"], [549, ""], [550, "        // this.usbEndpointDisplay.send (this.initBlock, TIMEOUT);"], [669, "        if (this.usbEndpointDisplay == null)"], [675, "            displayBuffer.rewind ();"], [719, "                // TODO TEST"], [722, "                this.hidDevice.sendOutputReport ((byte) 0, data, DATA_SZ);"], [723, ""], [724, "                // this.usbEndpointDisplay.send (this.displayBlock, TIMEOUT);"], [735, "        this.usbEndpointDisplay = null;"], [763, "        if (this.usbEndpointDisplay == null)"], [772, "        ledBuffer.put ((byte) 0x80);"], [782, "        final byte [] data = new byte [26];"], [784, "        this.hidDevice.sendOutputReport ((byte) 0, data, data.length);"], [817, "        if (this.usbEndpointDisplay == null)"], [826, "        keyLedBuffer.put ((byte) 0x82);"], [833, "        final byte [] data = new byte [267];"], [835, "        this.hidDevice.sendOutputReport ((byte) 0, data, data.length);"], [837, "        // this.usbEndpointDisplay.send (this.keyLedBlock, TIMEOUT);"], [851, "        displayBuffer.put ((byte) 0xe0);"], [864, "     * Process the received USB message."], [865, "     *"], [866, "     * @param received The number of valid bytes in the data array"], [867, "     */"], [868, "    private void processMessage (final int received)"], [869, "    {"], [870, "        final ByteBuffer uiBuffer = this.uiBlock.createByteBuffer ();"], [871, "        final byte [] data = new byte [received];"], [872, "        uiBuffer.get (data);"], [873, "        this.processHIDMessage (data, received);"], [874, "    }"], [875, ""], [876, ""], [877, "    /**"]]}, "num_lines_added": 34, "num_lines_removed": 90}