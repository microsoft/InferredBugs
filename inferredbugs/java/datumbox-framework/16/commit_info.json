{"hash": "5202a0f323d62be71fddb9e936469ed7b70a4e98", "message": "Adding multi-threading support to Ordinal Regression.", "file_num_lines": 262, "diff_parsed": {"added": [[18, "import com.datumbox.common.concurrency.StreamMethods;"], [33, "import com.datumbox.framework.machinelearning.common.interfaces.TrainParallelizable;"], [58, "public class OrdinalRegression extends AbstractClassifier<OrdinalRegression.ModelParameters, OrdinalRegression.TrainingParameters, OrdinalRegression.ValidationMetrics> implements PredictParallelizable, TrainParallelizable {"], [265, "        //also we initialize the weights and thitas to zero"], [266, "        TreeSet<Object> sortedClasses = new TreeSet<>();"], [271, ""], [272, "            thitas.put(r.getY(), 0.0);"], [274, ""], [275, "        Object finalClass = sortedClasses.last();"], [281, "        }"], [357, "        StreamMethods.stream(trainingData.stream(), isParallelized()).forEach(r -> {"], [372, "            double dtG_multiplier = (gOfCurrent-gOfPrevious)*multiplier;"], [374, "            synchronized(newWeights) {"], [375, "                //update weights"], [376, "                for(Map.Entry<Object, Object> entry : r.getX().entrySet()) {"], [377, "                    Object column = entry.getKey();"], [378, "                    Double xij = TypeInference.toDouble(entry.getValue());"], [379, ""], [380, "                    newWeights.put(column, newWeights.get(column)+xij*dtG_multiplier);"], [381, "                }"], [384, "            synchronized(newThitas) {"], [385, "                //update thitas"], [386, "                newThitas.put(rClass, newThitas.get(rClass)+multiplier*(-gOfCurrent));"], [387, "                if(rPreviousClass!=null) {"], [388, "                    newThitas.put(rPreviousClass, newThitas.get(rPreviousClass)+multiplier*gOfPrevious);"], [389, "                }"], [391, "        });"], [421, "        double error = StreamMethods.stream(trainingData.stream(), isParallelized()).mapToDouble(r -> {"], [422, "            double e=0.0;"], [430, "                e += h(thitas.get(previousClass)-xTw);"], [433, "            e += h(xTw-thitas.get(theClass));"], [434, ""], [435, "            return e;"], [436, "        }).sum();"]], "deleted": [[56, "public class OrdinalRegression extends AbstractClassifier<OrdinalRegression.ModelParameters, OrdinalRegression.TrainingParameters, OrdinalRegression.ValidationMetrics> implements PredictParallelizable {"], [263, "        Set<Object> sortedClasses = new TreeSet<>();"], [272, "        //we initialize the weights and thitas to zero"], [275, "        }"], [276, "        for(Record r : trainingData) {"], [277, "            thitas.put(r.getY(), 0.0);"], [278, "        }"], [279, ""], [280, "        Object finalClass = null;"], [281, "        for(Object theClass : classesSet) {"], [282, "            finalClass=theClass;"], [283, "        }"], [359, "        for(Record r : trainingData) {"], [375, ""], [376, "            //update weights"], [377, "            for(Map.Entry<Object, Object> entry : r.getX().entrySet()) {"], [378, "                Object column = entry.getKey();"], [379, "                Double xij = TypeInference.toDouble(entry.getValue());"], [380, ""], [381, "                newWeights.put(column, newWeights.get(column)+multiplier*xij*(gOfCurrent-gOfPrevious));"], [384, ""], [385, "            //update thitas"], [386, "            newThitas.put(rClass, newThitas.get(rClass)+multiplier*(-gOfCurrent));"], [387, "            if(rPreviousClass!=null) {"], [388, "                newThitas.put(rPreviousClass, newThitas.get(rPreviousClass)+multiplier*gOfPrevious);"], [390, "        }"], [419, "        double error=0.0;"], [421, "        for(Record r : trainingData) {"], [429, "                error += h(thitas.get(previousClass)-xTw);"], [432, "            error += h(xTw-thitas.get(theClass));"], [433, "        }"]]}, "num_lines_added": 34, "num_lines_removed": 31}