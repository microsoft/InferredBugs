    private double calculateError(Dataframe trainingData, Map<Object, Object> previousThitaMapping, Map<Object, Double> weights, Map<Object, Double> thitas) {
        
        double error = StreamMethods.stream(trainingData.stream(), isParallelized()).mapToDouble(r -> { 
            double e=0.0;
            double xTw = xTw(r.getX(), weights);
            
            Object theClass = r.getY();
            Object previousClass = previousThitaMapping.get(theClass);
            
            
            if(previousClass!=null) {
                e += h(thitas.get(previousClass)-xTw);
            }
            
            e += h(xTw-thitas.get(theClass));
            
            return e;
        }).sum();
        
        return error/kb().getModelParameters().getN();
    }