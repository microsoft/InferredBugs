{"hash": "903faeba40124f459e3ed1b8665318c7af76f446", "message": "Issue #220 : GreenMail.waitForIncomingEmail(...) waits twice the requested time\n\nReplace custom count down latch with JDK 5 CountDownLatch", "file_num_lines": 231, "diff_parsed": {"added": [[8, "import java.util.concurrent.CountDownLatch;"], [9, "import java.util.concurrent.TimeUnit;"], [194, "        final CountDownLatch waitObject = managers.getSmtpManager().createAndAddNewWaitObject(emailCount);"], [196, "            while (waitObject.getCount() > 0) {"], [199, "                    return waitObject.getCount() == 0;"], [202, "                    waitObject.await(waitTime, TimeUnit.MILLISECONDS);"], [204, "                    // Continue loop, in case of premature interruption"], [207, "        return waitObject.getCount() == 0;"]], "deleted": [[18, "import com.icegreen.greenmail.smtp.SmtpManager;"], [193, "        final SmtpManager.WaitObject waitObject = managers.getSmtpManager().createAndAddNewWaitObject(emailCount);"], [195, "        synchronized (waitObject) {"], [196, "            while (!waitObject.isArrived()) {"], [199, "                    return waitObject.isArrived();"], [201, "                //this loop is necessary to insure correctness, see documentation on Object.wait()"], [203, "                    waitObject.wait(waitTime);"], [205, "                    throw new IllegalStateException(\"Interrupted while waiting for incoming email\", e);"], [208, "        }"], [209, "        return waitObject.isArrived();"]]}, "num_lines_added": 8, "num_lines_removed": 10}