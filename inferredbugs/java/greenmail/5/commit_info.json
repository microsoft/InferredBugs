{"hash": "73d0dcf201a13f2c36fd6a0d346362588b282642", "message": "Issue #193 : Improved OrTerm test case, cleanup of assertions by replacing assertTrue with assertEquals where possible", "file_num_lines": 174, "diff_parsed": {"added": [[7, "import java.util.Date;"], [8, "import javax.mail.*;"], [9, "import javax.mail.internet.InternetAddress;"], [10, "import javax.mail.internet.MimeMessage;"], [11, "import javax.mail.search.*;"], [12, ""], [51, "            assertEquals(4, imapMessages.length);"], [53, "            assertTrue(m0.getSubject().startsWith(\"#0\"));"], [55, "            assertTrue(m1.getSubject().startsWith(\"#1\"));"], [56, "            Message m2 = imapMessages[2];"], [57, "            assertTrue(m2.getSubject().startsWith(\"#2\"));"], [58, "            Message m3 = imapMessages[3];"], [59, "            assertTrue(m3.getSubject().startsWith(\"#3\"));"], [60, ""], [73, "            assertEquals(3, imapMessages.length);"], [75, "            assertTrue(!imapMessages[1].getFlags().contains(fooFlags));"], [76, "            assertTrue(!imapMessages[2].getFlags().contains(fooFlags));"], [104, "            assertEquals(3, imapMessages.length);"], [109, "            assertEquals(2, imapMessages.length);"], [112, "            assertEquals(2, imapMessages.length);"], [115, "            assertEquals(2, imapMessages.length);"], [120, "            assertEquals(2, imapMessages.length);"], [121, ""], [122, "            //Search OrTerm - Search Subject which contains test0Search OR nonexistent"], [123, "            imapMessages = imapFolder.search(new OrTerm(new SubjectTerm(\"test0Search\"), new SubjectTerm(\"nonexistent\")));"], [124, "            assertEquals(2, imapMessages.length);"], [126, ""], [127, "            // OrTerm : two matching sub terms"], [128, "            imapMessages = imapFolder.search(new OrTerm(new SubjectTerm(\"foo\"), new SubjectTerm(\"bar\")));"], [129, "            assertEquals(2, imapMessages.length);"], [130, "            assertTrue(imapMessages[0] == m2);"], [131, "            assertTrue(imapMessages[1] == m3);"], [132, ""], [133, "            // OrTerm : no matching"], [134, "            imapMessages = imapFolder.search(new AndTerm(new SubjectTerm(\"nothing\"), new SubjectTerm(\"nil\")));"], [135, "            assertEquals(0, imapMessages.length);"], [136, ""], [137, "            //Search AndTerm - Search Subject which contains test0Search AND test1Search"], [138, "            imapMessages = imapFolder.search(new AndTerm(new SubjectTerm(\"test0Search\"), new SubjectTerm(\"test1Search\")));"], [139, "            assertEquals(1, imapMessages.length);"], [142, ""], [185, "        MimeMessage message0 = new MimeMessage(session);"], [186, "        message0.setSubject(\"#0 test0Search\");"], [187, "        message0.setText(\"content\");"], [188, "        setRecipients(message0, Message.RecipientType.TO, \"to\", 1, 2);"], [189, "        setRecipients(message0, Message.RecipientType.CC, \"cc\", 1, 2);"], [190, "        setRecipients(message0, Message.RecipientType.BCC, \"bcc\", 1, 2);"], [191, "        message0.setFrom(new InternetAddress(\"from2@localhost\"));"], [192, "        message0.setFlag(Flags.Flag.ANSWERED, true);"], [193, "        message0.setFlags(flags, true);"], [194, "        folder.store(message0);"], [195, ""], [197, "        message1.setSubject(\"#1 test0Search test1Search \\u00c4\\u00e4\\u03A0\", \"UTF-8\");"], [198, "        message1.setText(\"content \\u00c4\\u00e4\\u03A0\", \"UTF-8\");"], [199, "        setRecipients(message1, Message.RecipientType.TO, \"to\", 1, 3);"], [200, "        setRecipients(message1, Message.RecipientType.CC, \"cc\", 1, 3);"], [201, "        setRecipients(message1, Message.RecipientType.BCC, \"bcc\", 1, 3);"], [202, "        message1.setFrom(new InternetAddress(\"from3@localhost\"));"], [203, "        message1.setFlag(Flags.Flag.ANSWERED, false);"], [207, "        message2.setSubject(\"#2 OR search : foo\");"], [208, "        message2.setText(\"content foo\");"], [209, "        setRecipients(message2, Message.RecipientType.TO, \"to\", 3);"], [210, "        setRecipients(message2, Message.RecipientType.CC, \"cc\", 4);"], [211, "        setRecipients(message2, Message.RecipientType.BCC, \"bcc\", 5);"], [212, "        message2.setFrom(new InternetAddress(\"from4@localhost\"));"], [214, "        message2.setFlags(flags, false);"], [216, ""], [217, "        MimeMessage message3 = new MimeMessage(session);"], [218, "        message3.setSubject(\"#3 OR search : bar\");"], [219, "        message3.setText(\"content bar\");"], [220, "        setRecipients(message3, Message.RecipientType.TO, \"to\", 3);"], [221, "        setRecipients(message3, Message.RecipientType.CC, \"cc\", 4);"], [222, "        setRecipients(message3, Message.RecipientType.BCC, \"bcc\", 5);"], [223, "        message3.setFrom(new InternetAddress(\"from5@localhost\"));"], [224, "        message3.setFlag(Flags.Flag.ANSWERED, false);"], [225, "        message3.setFlags(flags, false);"], [226, "        folder.store(message3);"]], "deleted": [[15, "import javax.mail.*;"], [16, "import javax.mail.internet.InternetAddress;"], [17, "import javax.mail.internet.MimeMessage;"], [18, "import javax.mail.search.*;"], [19, "import java.util.Date;"], [20, ""], [51, "            assertTrue(null != imapMessages && imapMessages.length == 2);"], [66, "            assertEquals(1, imapMessages.length);"], [95, "            assertEquals(1, imapMessages.length);"], [100, "            assertTrue(imapMessages.length == 2);"], [103, "            assertTrue(imapMessages.length == 2);"], [106, "            assertTrue(imapMessages.length == 2);"], [111, "            assertTrue(imapMessages.length == 2);"], [112, ""], [113, "            //Search OrTerm - Search Subject which contains String1 OR String2"], [114, "            imapMessages = imapFolder.search(new OrTerm(new SubjectTerm(\"test0Search\"),new SubjectTerm(\"String2\")));"], [115, "            assertTrue(imapMessages.length == 2);"], [117, ""], [118, "            //Search AndTerm - Search Subject which contains String1 AND String2"], [119, "            imapMessages = imapFolder.search(new AndTerm(new SubjectTerm(\"test0Search\"),new SubjectTerm(\"test1Search\")));"], [120, "            assertTrue(imapMessages.length == 1);"], [166, "        message1.setSubject(\"test0Search\");"], [167, "        message1.setText(\"content\");"], [168, "        setRecipients(message1, Message.RecipientType.TO, \"to\", 1, 2);"], [169, "        setRecipients(message1, Message.RecipientType.CC, \"cc\", 1, 2);"], [170, "        setRecipients(message1, Message.RecipientType.BCC, \"bcc\", 1, 2);"], [171, "        message1.setFrom(new InternetAddress(\"from2@localhost\"));"], [172, "        message1.setFlag(Flags.Flag.ANSWERED, true);"], [173, "        message1.setFlags(flags, true);"], [177, "        message2.setSubject(\"test0Search test1Search \\u00c4\\u00e4\\u03A0\", \"UTF-8\");"], [178, "        message2.setText(\"content \\u00c4\\u00e4\\u03A0\", \"UTF-8\");"], [179, "        setRecipients(message2, Message.RecipientType.TO, \"to\", 1, 3);"], [180, "        setRecipients(message2, Message.RecipientType.CC, \"cc\", 1, 3);"], [181, "        setRecipients(message2, Message.RecipientType.BCC, \"bcc\", 1, 3);"], [182, "        message2.setFrom(new InternetAddress(\"from3@localhost\"));"]]}, "num_lines_added": 77, "num_lines_removed": 35}