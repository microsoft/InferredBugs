{"hash": "c55f315af98ec2da61a6618b28754ce68d770370", "message": "Don't quit() from within the run() method\n\nThis ensure that cleanup code always gets executed only once, from the calling\nthread.\n\nMain thread calls stopService(), quit(), then quit() will get called\nagain when the thread terminates. On Android this code actually causes\na deadlock since Thread.join() does not release the monitor and quit()\nnever gets called.\n\nThis change also changes the visibility of the quit() method since it is\nonly used internally.", "file_num_lines": 135, "diff_parsed": {"added": [[83, "            serverSocket = openServerSocket();"], [84, "            setRunning(true);"], [85, "            synchronized (this) {"], [86, "                this.notifyAll();"], [88, "        } catch (IOException e) {"], [89, "            throw new RuntimeException(e);"], [90, "        }"], [92, "        while (keepOn()) {"], [93, "            try {"], [94, "                Socket clientSocket = serverSocket.accept();"], [95, "                if (!keepOn()) {"], [96, "                    clientSocket.close();"], [97, "                } else {"], [98, "                    final ProtocolHandler handler = createProtocolHandler(clientSocket);"], [99, "                    addHandler(handler);"], [100, "                    new Thread(new Runnable() {"], [101, "                        @Override"], [102, "                        public void run() {"], [103, "                            handler.run(); // NOSONAR"], [104, "                             // Make sure to deregister, see https://github.com/greenmail-mail-test/greenmail/issues/18"], [105, "                            removeHandler(handler);"], [106, "                        }"], [107, "                    }).start();"], [108, "                }"], [109, "            } catch (IOException ignored) {"], [110, "                //ignored"], [111, "                if(log.isTraceEnabled()) {"], [112, "                    log.trace(\"Error while processing socket\", ignored);"], [137, "    protected synchronized void quit() {"]], "deleted": [[83, "            try {"], [84, "                serverSocket = openServerSocket();"], [85, "                setRunning(true);"], [86, "                synchronized (this) {"], [87, "                    this.notifyAll();"], [88, "                }"], [89, "            } catch (IOException e) {"], [90, "                throw new RuntimeException(e);"], [93, "            while (keepOn()) {"], [94, "                try {"], [95, "                    Socket clientSocket = serverSocket.accept();"], [96, "                    if (!keepOn()) {"], [97, "                        clientSocket.close();"], [98, "                    } else {"], [99, "                        final ProtocolHandler handler = createProtocolHandler(clientSocket);"], [100, "                        addHandler(handler);"], [101, "                        new Thread(new Runnable() {"], [102, "                            @Override"], [103, "                            public void run() {"], [104, "                                handler.run(); // NOSONAR"], [105, "                                 // Make sure to deregister, see https://github.com/greenmail-mail-test/greenmail/issues/18"], [106, "                                removeHandler(handler);"], [107, "                            }"], [108, "                        }).start();"], [109, "                    }"], [110, "                } catch (IOException ignored) {"], [111, "                    //ignored"], [112, "                    if(log.isTraceEnabled()) {"], [113, "                        log.trace(\"Error while processing socket\", ignored);"], [114, "                    }"], [117, "        } finally {"], [118, "            quit();"], [141, "    public synchronized void quit() {"]]}, "num_lines_added": 29, "num_lines_removed": 33}