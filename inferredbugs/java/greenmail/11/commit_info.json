{"hash": "1ce65c2215bc7bca9ebd524431425946a40a758c", "message": "Refactord InMemoryWorkspace\n\nReplaced InMemoryWorkspace, Resource, StringBufferResource and Workspace by a\nString. Workspace seems to have once been used for processing of an mail message,\nwith temporal suspension across SMTP requests.", "file_num_lines": 61, "diff_parsed": {"added": [[24, "    private String content;"], [34, "    public Reader getContent() {"], [35, "        return new StringReader(content);"], [39, "        content = \"\";"], [70, "        StringBuilder buf = new StringBuilder();"], [80, "                println(buf, line.substring(1));"], [82, "                println(buf, line);"], [85, "        content = buf.toString();"], [87, "            message = GreenMailUtil.newMimeMessage(content);"], [92, ""], [93, "    private void println(StringBuilder buf, String line) {"], [94, "        buf.append(line).append(\"\\r\\n\");"], [95, "    }"]], "deleted": [[9, "import com.icegreen.greenmail.foedus.util.Resource;"], [10, "import com.icegreen.greenmail.foedus.util.Workspace;"], [12, "import com.icegreen.greenmail.util.InternetPrintWriter;"], [22, " * <p/>"], [23, " * <p/>"], [24, " * Since a MovingMessage many be passed through many queues and"], [25, " * handlers before it can be safely deleted, destruction it handled"], [26, " * by reference counting. When an object first obtains a reference"], [27, " * to a MovingMessage, it should immediately call {@link #acquire()}."], [28, " * As soon as it has finished processing, that object must call"], [29, " * {@link #releaseContent()}."], [30, " * </p>"], [35, "    private Workspace workspace;"], [36, "    private Resource content;"], [38, "    private int references = 0;"], [39, ""], [40, "    public MovingMessage(Workspace workspace) {"], [41, "        this.workspace = workspace;"], [42, "    }"], [52, "    public Reader getContent()"], [53, "            throws IOException {"], [54, ""], [55, "        return content.getReader();"], [56, "    }"], [57, ""], [58, "    public void acquire() {"], [59, "        references++;"], [63, "        if (references > 0) {"], [64, "            references--;"], [65, "        } else if (content != null) {"], [66, "            workspace.release(content);"], [67, "            content = null;"], [68, "        }"], [72, ""], [100, "        content = workspace.getTmpFile();"], [101, "        Writer data = content.getWriter();"], [102, "        PrintWriter dataWriter = new InternetPrintWriter(data);"], [110, "                dataWriter.close();"], [111, ""], [114, "                dataWriter.println(line.substring(1));"], [116, "                dataWriter.println(line);"], [120, "            message = GreenMailUtil.newMimeMessage(content.getAsString());"]]}, "num_lines_added": 13, "num_lines_removed": 42}