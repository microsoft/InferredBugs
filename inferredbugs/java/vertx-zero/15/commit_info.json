{"hash": "c431dd8ca5607e6f61f3939252207159ab1e5e78", "message": "Date Time Format", "file_num_lines": 88, "diff_parsed": {"added": [[4, "import io.vertx.up.util.Ut;"], [7, "import java.time.LocalDateTime;"], [8, "import java.time.LocalTime;"], [9, "import java.util.Date;"], [10, "import java.util.TimeZone;"], [85, "    /*"], [86, "     * Here are simple rule for excel exporting"], [87, "     * 1) When the cell is NUMERIC, we should determine whether the value is Number or Date"], [88, "     * -- NUMBER, the style pool is DATA-VALUE, the same as other date type"], [89, "     * -- Date, when time equal the min ( 00:00 ), use format of `yyyy-MM-dd`, otherwise: `yyyy-MM-dd HH:mm`"], [90, "     *    The pool name is DATA-DATE & DATA-DATETIME"], [91, "     * 2) Other date type should be pool of DATA-VALUE also."], [92, "     */"], [94, "        final DyeCell dye;"], [95, "        if (CellType.NUMERIC == cell.getCellType()) {"], [96, "            /*"], [97, "             * Buf for date exporting here"], [98, "             */"], [99, "            final double cellValue = cell.getNumericCellValue();"], [100, "            if (DateUtil.isValidExcelDate(cellValue)) {"], [101, "                final Date value = DateUtil.getJavaDate(cellValue, TimeZone.getDefault());"], [102, "                final LocalDateTime datetime = Ut.toDateTime(value);"], [103, "                final LocalTime time = datetime.toLocalTime();"], [104, "                if (LocalTime.MIN == time) {"], [105, "                    /*"], [106, "                     * LocalDate"], [107, "                     */"], [108, "                    dye = this.onDataValue(\"DATA-DATE\").dateFormat(false);"], [109, "                } else {"], [110, "                    /*"], [111, "                     * LocalDateTime"], [112, "                     */"], [113, "                    dye = this.onDataValue(\"DATA-DATETIME\").dateFormat(true);"], [114, "                }"], [115, "            } else {"], [116, "                /*"], [117, "                 * Number"], [118, "                 */"], [119, "                dye = this.onDataValue(\"DATA-VALUE\");"], [120, "            }"], [121, "        } else {"], [122, "            /*"], [123, "             * Other"], [124, "             */"], [125, "            dye = this.onDataValue(\"DATA-VALUE\");"], [126, "        }"], [127, "        cell.setCellStyle(dye.build());"], [128, "    }"], [129, ""], [130, "    private DyeCell onDataValue(final String key) {"], [131, "        return Fn.pool(this.stylePool, key,"]], "deleted": [[81, "        final DyeCell dyeCell = Fn.pool(this.stylePool, \"DATA\","], [86, "        cell.setCellStyle(dyeCell.build());"]]}, "num_lines_added": 51, "num_lines_removed": 2}