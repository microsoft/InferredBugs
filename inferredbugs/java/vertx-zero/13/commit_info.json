{"hash": "3018ac3c8fff757ea749568156cde964c317dc25", "message": "Fetch Finished", "file_num_lines": 157, "diff_parsed": {"added": [[87, "    <T> Future<T> fetchByIdAsync(final Object id) {"], [88, "        return this.fetch.fetchByIdAsync(id);"], [91, "    <T> T fetchById(final Object id) {"], [92, "        return this.fetch.fetchById(id);"], [95, "    // ============ Fetch One Operation ============="], [96, "    /* Async fetch one operation: SELECT */"], [97, "    <T> Future<T> fetchOneAsync(final String field, final Object value) {"], [98, "        return this.fetch.fetchOneAsync(field, value);"], [101, "    <T> T fetchOne(final String field, final Object value) {"], [102, "        return this.fetch.fetchOne(field, value);"], [105, "    <T> Future<T> fetchOneAsync(final JsonObject criteria) {"], [106, "        return this.fetch.fetchOneAsync(criteria);"], [109, "    <T> T fetchOne(final JsonObject criteria) {"], [110, "        return this.fetch.fetchOne(criteria);"]], "deleted": [[87, "    // ============ Fetch One Operation ============="], [88, "    /* Async fetch one operation: SELECT */"], [89, "    <T> Future<T> fetchOneAsync(final String field, final Object value) {"], [90, "        return JqTool.future(this.vertxDAO.fetchOneAsync(this.analyzer.column(field), value));"], [93, "    <T> Future<T> fetchOneAsync(final JsonObject filters) {"], [94, "        final Condition condition = JooqCond.transform(filters, Operator.AND, this.analyzer::column);"], [95, "        return JqTool.future(this.vertxDAO.fetchOneAsync(condition));"], [98, "    /* Sync fetch one operation: SELECT */"], [99, "    <T> T fetchOne(final String field, final Object value) {"], [100, "        return toResult(this.vertxDAO.fetchOne(this.analyzer.column(field), value));"], [103, "    <T> T fetchOne(final JsonObject filters) {"], [104, "        final Condition condition = JooqCond.transform(filters, Operator.AND, this.analyzer::column);"], [105, "        final DSLContext context = JooqInfix.getDSL();"], [106, "        return this.toResult(context.selectFrom(this.vertxDAO.getTable()).where(condition).fetchOne(this.vertxDAO.mapper()));"], [109, "    <T> Future<T> fetchByIdAsync(final Object id) {"], [110, "        return JqTool.future(this.vertxDAO.findByIdAsync(id));"], [113, ""], [114, "    // Cached"], [115, "    <T> T fetchById(final Object id) {"], [116, "        return toResult(this.vertxDAO.findById(id));"]]}, "num_lines_added": 14, "num_lines_removed": 20}