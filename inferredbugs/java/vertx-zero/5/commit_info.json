{"hash": "ce3fa241064dda9aad7082167795121570db82fc", "message": "countByAsync", "file_num_lines": 173, "diff_parsed": {"added": [[34, "    private transient JqAggregator aggregator;"], [35, ""], [36, "    private JqReader(final VertxDAO vertxDAO,"], [37, "                     final JqAnalyzer analyzer) {"], [40, "        this.aggregator = JqAggregator.create(vertxDAO, analyzer);"], [134, "                    return this.aggregator.countAsync(inquiry);"], [146, "        final Integer counter = this.aggregator.count(inquiry);"]], "deleted": [[34, "    private JqReader(final VertxDAO vertxDAO, final JqAnalyzer analyzer) {"], [43, "    JqReader on(final JqAnalyzer analyzer) {"], [44, "        this.analyzer = analyzer;"], [45, "        return this;"], [46, "    }"], [47, ""], [135, "                    return this.countAsync(inquiry);"], [147, "        final Integer counter = this.count(inquiry);"], [152, "    /*"], [153, "     * Basic Method for low tier search/count pair"], [154, "     */"], [155, "    <T> Future<Integer> countAsync(final Inquiry inquiry) {"], [156, "        return this.countAsync(null == inquiry.getCriteria() ? new JsonObject() : inquiry.getCriteria().toJson());"], [157, "    }"], [158, ""], [159, "    <T> Future<Integer> countAsync(final JsonObject filters) {"], [160, "        final Function<DSLContext, Integer> function"], [161, "                = dslContext -> null == filters ? dslContext.fetchCount(this.vertxDAO.getTable()) :"], [162, "                dslContext.fetchCount(this.vertxDAO.getTable(), JooqCond.transform(filters, this.analyzer::column));"], [163, "        return JqTool.future(this.vertxDAO.executeAsync(function));"], [164, "    }"], [165, ""], [186, "    <T> Integer count(final Inquiry inquiry) {"], [187, "        return this.count(null == inquiry.getCriteria() ? new JsonObject() : inquiry.getCriteria().toJson());"], [188, "    }"], [189, ""], [190, "    <T> Integer count(final JsonObject filters) {"], [191, "        final DSLContext context = JooqInfix.getDSL();"], [192, "        return null == filters ? context.fetchCount(this.vertxDAO.getTable()) :"], [193, "                context.fetchCount(this.vertxDAO.getTable(), JooqCond.transform(filters, this.analyzer::column));"], [194, "    }"], [195, ""]]}, "num_lines_added": 7, "num_lines_removed": 32}