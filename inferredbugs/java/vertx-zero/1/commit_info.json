{"hash": "08a3c93a41317786359f2268a9fcfc483d315fb5", "message": "Add new resolver", "file_num_lines": 65, "diff_parsed": {"added": [[10, "import io.vertx.up.uca.rs.mime.Solve;"], [11, "import io.vertx.up.uca.rs.mime.resolver.SolveResolver;"], [20, "/**"], [21, " * # \u300cCo\u300dZero Mime Processing here"], [22, " *"], [23, " * This component will process the request data before your code occurs"], [24, " *"], [25, " * @param <T> generic definition"], [26, " */"], [76, "            /*"], [77, "             * Split workflow"], [78, "             * Resolver or Solve"], [79, "             */"], [80, "            if (Ut.isImplement(resolverCls, Resolver.class)) {"], [81, "                /*"], [82, "                 * Resolver Directly"], [83, "                 */"], [84, "                return Ut.singleton(resolverCls);"], [85, "            } else {"], [86, "                /*"], [87, "                 * Solve component, contract to set Solve<T> here."], [88, "                 */"], [89, "                final Resolver<T> resolver = Ut.singleton(SolveResolver.class);"], [90, "                Ut.contract(resolver, Solve.class, Ut.singleton(resolverCls));"], [91, "                return resolver;"], [92, "            }"]], "deleted": [[67, "            return Ut.singleton(resolverCls);"]]}, "num_lines_added": 26, "num_lines_removed": 1}