{"hash": "30519c791c02fa6605f682b9514442606af30756", "message": "Fixing tests based on sebb's feedback.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/dbutils/trunk@752322 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 89, "diff_parsed": {"added": [[44, "        assertTrue(this.rs.next());"], [45, "        a = processor.toArray(this.rs);"], [46, "        assertEquals(COLS, a.length);"], [47, "        assertEquals(\"1\", a[0]);"], [48, "        assertEquals(\"2\", a[1]);"], [49, "        assertEquals(\"3\", a[2]);"], [50, ""], [51, "        assertTrue(this.rs.next());"], [52, "        a = processor.toArray(this.rs);"], [53, "        assertEquals(COLS, a.length);"], [58, ""], [59, "        assertFalse(this.rs.next());"], [64, "        TestBean row = null;"], [65, "        assertTrue(this.rs.next());"], [66, "        row = (TestBean) processor.toBean(this.rs, TestBean.class);"], [67, "        assertEquals(\"1\", row.getOne());"], [68, "        assertEquals(\"2\", row.getTwo());"], [69, "        assertEquals(\"3\", row.getThree());"], [70, "        assertEquals(\"not set\", row.getDoNotSet());"], [71, ""], [72, "        assertTrue(this.rs.next());"], [73, "        row = (TestBean) processor.toBean(this.rs, TestBean.class);"], [74, ""], [75, "        assertEquals(\"4\", row.getOne());"], [76, "        assertEquals(\"5\", row.getTwo());"], [77, "        assertEquals(\"6\", row.getThree());"], [78, "        assertEquals(\"not set\", row.getDoNotSet());"], [79, "        assertEquals(3, row.getIntTest());"], [80, "        assertEquals(new Integer(4), row.getIntegerTest());"], [81, "        assertEquals(null, row.getNullObjectTest());"], [82, "        assertEquals(0, row.getNullPrimitiveTest());"], [84, "        assertNotNull(row.getNotDate());"], [85, "        assertTrue(!\"not a date\".equals(row.getNotDate()));"], [86, "        datef.parse(row.getNotDate());"], [87, ""], [88, "        assertFalse(this.rs.next());"], [89, ""], [98, "        TestBean b = (TestBean) list.get(0);"], [99, "        assertEquals(\"1\", b.getOne());"], [100, "        assertEquals(\"2\", b.getTwo());"], [101, "        assertEquals(\"3\", b.getThree());"], [102, "        assertEquals(\"not set\", b.getDoNotSet());"], [103, ""], [104, "        b = (TestBean) list.get(1);"], [121, "        assertTrue(this.rs.next());"], [122, "        Map m = processor.toMap(this.rs);"], [123, "        assertEquals(COLS, m.keySet().size());"], [124, "        assertEquals(\"1\", m.get(\"one\"));"], [125, "        assertEquals(\"2\", m.get(\"TWO\"));"], [126, "        assertEquals(\"3\", m.get(\"Three\"));"], [127, ""], [128, "        assertTrue(this.rs.next());"], [129, "        m = processor.toMap(this.rs);"], [130, "        assertEquals(COLS, m.keySet().size());"], [135, ""], [136, "        assertFalse(this.rs.next());"]], "deleted": [[43, "        int rowCount = 0;"], [45, "        while (this.rs.next()) {"], [46, "            a = processor.toArray(this.rs);"], [47, "            assertEquals(COLS, a.length);"], [48, "            rowCount++;"], [49, "        }"], [51, "        assertEquals(ROWS, rowCount);"], [59, "        int rowCount = 0;"], [60, "        TestBean b = null;"], [61, "        while (this.rs.next()) {"], [62, "            b = (TestBean) processor.toBean(this.rs, TestBean.class);"], [63, "            assertNotNull(b);"], [64, "            rowCount++;"], [65, "        }"], [66, ""], [67, "        assertEquals(ROWS, rowCount);"], [68, "        assertEquals(\"4\", b.getOne());"], [69, "        assertEquals(\"5\", b.getTwo());"], [70, "        assertEquals(\"6\", b.getThree());"], [71, "        assertEquals(\"not set\", b.getDoNotSet());"], [72, "        assertEquals(3, b.getIntTest());"], [73, "        assertEquals(new Integer(4), b.getIntegerTest());"], [74, "        assertEquals(null, b.getNullObjectTest());"], [75, "        assertEquals(0, b.getNullPrimitiveTest());"], [77, "        assertNotNull(b.getNotDate());"], [78, "        assertTrue(!\"not a date\".equals(b.getNotDate()));"], [79, "        datef.parse(b.getNotDate());"], [88, "        TestBean b = (TestBean) list.get(1);"], [89, ""], [106, "        int rowCount = 0;"], [107, "        Map m = null;"], [108, "        while (this.rs.next()) {"], [109, "            m = processor.toMap(this.rs);"], [110, "            assertNotNull(m);"], [111, "            assertEquals(COLS, m.keySet().size());"], [112, "            rowCount++;"], [113, "        }"], [115, "        assertEquals(ROWS, rowCount);"]]}, "num_lines_added": 56, "num_lines_removed": 38}