 @Test
	public void findAllByIdReferenceConsistencyTest() {
		when(this.objectToKeyFactory.getKeyFromObject(eq(this.childEntity1), any())).thenReturn(this.childEntity1.id);

		when(this.datastore.fetch(eq(this.key1)))
				.thenReturn(Arrays.asList(this.e1));

		verifyBeforeAndAfterEvents(null,
				new AfterFindByKeyEvent(Collections.singletonList(this.ob1), Collections.singleton(this.key1)),
				() -> {
					TestEntity parentEntity1 = this.datastoreTemplate.findById(this.key1, TestEntity.class);
					assertThat(parentEntity1).isSameAs(this.ob1);
					ChildEntity singularReference1 = parentEntity1.singularReference;
					ChildEntity childEntity1 = parentEntity1.childEntities.get(0);
					assertThat(singularReference1).isSameAs(childEntity1);

					TestEntity parentEntity2 = this.datastoreTemplate.findById(this.key1, TestEntity.class);
					assertThat(parentEntity2).isSameAs(this.ob1);
					ChildEntity singularReference2 = parentEntity2.singularReference;
					ChildEntity childEntity2 = parentEntity2.childEntities.get(0);
					assertThat(singularReference2).isSameAs(childEntity2);

					assertThat(childEntity1).isNotSameAs(childEntity2);
				}, x -> {
				});
	}