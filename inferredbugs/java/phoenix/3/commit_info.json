{"hash": "6f9f4e7e28662cd0a66f47b27db24f2f3518705e", "message": "PHOENIX-901 Ensure ConnectionQueryServices only initialized once (JamesTaylor)", "file_num_lines": 1968, "diff_parsed": {"added": [[194, "    private final StatsManager statsManager;"], [203, ""], [204, "    private HConnection connection;"], [205, "    private volatile boolean initialized;"], [206, "    private volatile boolean closed;"], [207, "    private volatile SQLException initializationException;"], [223, "    public ConnectionQueryServicesImpl(QueryServices services, ConnectionInfo connectionInfo) {"], [253, ""], [254, "    private void openConnection() throws SQLException {"], [255, "        try {"], [256, "            this.connection = HBaseFactoryProvider.getHConnectionFactory().createConnection(this.config);"], [257, "        } catch (IOException e) {"], [258, "            throw new SQLExceptionInfo.Builder(SQLExceptionCode.CANNOT_ESTABLISH_CONNECTION)"], [259, "                .setRootCause(e).build().buildException();"], [260, "        }"], [261, "        if (this.connection.isClosed()) { // TODO: why the heck doesn't this throw above?"], [262, "            throw new SQLExceptionInfo.Builder(SQLExceptionCode.CANNOT_ESTABLISH_CONNECTION).build().buildException();"], [263, "        }"], [264, "    }"], [316, "        if (closed) {"], [317, "            return;"], [318, "        }"], [319, "        synchronized (this) {"], [320, "            if (closed) {"], [321, "                return;"], [322, "            }"], [323, "            closed = true;"], [324, "            SQLException sqlE = null;"], [326, "                // Attempt to return any unused sequences."], [327, "                if (connection != null) returnAllSequences(this.sequenceMap);"], [329, "                sqlE = e;"], [332, "                    // Clear any client-side caches."], [333, "                    statsManager.clearStats();"], [334, "                } catch (SQLException e) {"], [336, "                        sqlE = e;"], [338, "                        sqlE.setNextException(e);"], [342, "                        childServices.clear();"], [343, "                        latestMetaData = null;"], [344, "                        if (connection != null) connection.close();"], [345, "                    } catch (IOException e) {"], [347, "                            sqlE = ServerUtil.parseServerException(e);"], [349, "                            sqlE.setNextException(ServerUtil.parseServerException(e));"], [352, "                        try {"], [353, "                            super.close();"], [354, "                        } catch (SQLException e) {"], [355, "                            if (sqlE == null) {"], [356, "                                sqlE = e;"], [357, "                            } else {"], [358, "                                sqlE.setNextException(e);"], [359, "                            }"], [360, "                        } finally {"], [361, "                            if (sqlE != null) {"], [362, "                                throw sqlE;"], [363, "                            }"], [1425, "        if (initialized) {"], [1426, "            if (initializationException != null) {"], [1427, "                // Throw previous initialization exception, as we won't resuse this instance"], [1428, "                throw initializationException;"], [1429, "            }"], [1430, "            return;"], [1432, "        synchronized (this) {"], [1433, "            if (initialized) {"], [1434, "                if (initializationException != null) {"], [1435, "                    // Throw previous initialization exception, as we won't resuse this instance"], [1436, "                    throw initializationException;"], [1437, "                }"], [1438, "                return;"], [1440, "            if (closed) {"], [1441, "                throw new SQLException(\"The connection to the cluster has been closed.\");"], [1443, "            initialized = true;"], [1444, ""], [1445, "            SQLException sqlE = null;"], [1446, "            PhoenixConnection metaConnection = null;"], [1448, "                openConnection();"], [1449, "                Properties scnProps = PropertiesUtil.deepCopy(props);"], [1450, "                scnProps.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(MetaDataProtocol.MIN_SYSTEM_TABLE_TIMESTAMP));"], [1451, "                scnProps.remove(PhoenixRuntime.TENANT_ID_ATTRIB);"], [1452, "                metaConnection = new PhoenixConnection(this, url, scnProps, newEmptyMetaData());"], [1453, "                try {"], [1454, "                    metaConnection.createStatement().executeUpdate(QueryConstants.CREATE_TABLE_METADATA);"], [1455, "                } catch (NewerTableAlreadyExistsException ignore) {"], [1456, "                    // Ignore, as this will happen if the SYSTEM.TABLE already exists at this fixed timestamp."], [1457, "                    // A TableAlreadyExistsException is not thrown, since the table only exists *after* this fixed timestamp."], [1458, "                }"], [1459, "                try {"], [1460, "                    metaConnection.createStatement().executeUpdate(QueryConstants.CREATE_SEQUENCE_METADATA);"], [1461, "                } catch (NewerTableAlreadyExistsException ignore) {"], [1462, "                    // Ignore, as this will happen if the SYSTEM.SEQUENCE already exists at this fixed timestamp."], [1463, "                    // A TableAlreadyExistsException is not thrown, since the table only exists *after* this fixed timestamp."], [1464, "                }"], [1465, "                upgradeMetaDataTo3_0(url, props);"], [1467, "                sqlE = e;"], [1468, "            } finally {"], [1469, "                try {"], [1470, "                    if (metaConnection != null) metaConnection.close();"], [1471, "                } catch (SQLException e) {"], [1472, "                    if (sqlE != null) {"], [1473, "                        sqlE.setNextException(e);"], [1474, "                    } else {"], [1475, "                        sqlE = e;"], [1476, "                    }"], [1477, "                }"], [1479, "                    initializationException = sqlE;"], [1480, "                    throw sqlE;"]], "deleted": [[193, "    private HConnection connection;"], [194, "    private final StatsManager statsManager;"], [204, ""], [220, "    public ConnectionQueryServicesImpl(QueryServices services, ConnectionInfo connectionInfo) throws SQLException {"], [301, "        SQLException sqlE = null;"], [302, "        try {"], [303, "            // Attempt to return any unused sequences."], [304, "            returnAllSequences(this.sequenceMap);"], [305, "        } catch (SQLException e) {"], [306, "            sqlE = e;"], [307, "        } finally {"], [309, "                // Clear any client-side caches."], [310, "                statsManager.clearStats();"], [312, "                if (sqlE == null) {"], [313, "                    sqlE = e;"], [314, "                } else {"], [315, "                    sqlE.setNextException(e);"], [316, "                }"], [319, "                    childServices.clear();"], [320, "                    latestMetaData = null;"], [321, "                    connection.close();"], [322, "                } catch (IOException e) {"], [324, "                        sqlE = ServerUtil.parseServerException(e);"], [326, "                        sqlE.setNextException(ServerUtil.parseServerException(e));"], [330, "                        super.close();"], [331, "                    } catch (SQLException e) {"], [333, "                            sqlE = e;"], [335, "                            sqlE.setNextException(e);"], [338, "                        if (sqlE != null) {"], [339, "                            throw sqlE;"], [1401, "        try {"], [1402, "          this.connection = HBaseFactoryProvider.getHConnectionFactory().createConnection(this.config);"], [1403, "        } catch (IOException e) {"], [1404, "            throw new SQLExceptionInfo.Builder(SQLExceptionCode.CANNOT_ESTABLISH_CONNECTION)"], [1405, "                .setRootCause(e).build().buildException();"], [1406, "        }"], [1407, "        if (this.connection.isClosed()) { // TODO: why the heck doesn't this throw above?"], [1408, "            throw new SQLExceptionInfo.Builder(SQLExceptionCode.CANNOT_ESTABLISH_CONNECTION).build().buildException();"], [1410, ""], [1411, "        Properties scnProps = PropertiesUtil.deepCopy(props);"], [1412, "        scnProps.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(MetaDataProtocol.MIN_SYSTEM_TABLE_TIMESTAMP));"], [1413, "        scnProps.remove(PhoenixRuntime.TENANT_ID_ATTRIB);"], [1414, "        PhoenixConnection metaConnection = new PhoenixConnection(this, url, scnProps, newEmptyMetaData());"], [1415, "        SQLException sqlE = null;"], [1416, "        try {"], [1417, "            try {"], [1418, "                metaConnection.createStatement().executeUpdate(QueryConstants.CREATE_TABLE_METADATA);"], [1419, "            } catch (NewerTableAlreadyExistsException ignore) {"], [1420, "                // Ignore, as this will happen if the SYSTEM.TABLE already exists at this fixed timestamp."], [1421, "                // A TableAlreadyExistsException is not thrown, since the table only exists *after* this fixed timestamp."], [1423, "            try {"], [1424, "                metaConnection.createStatement().executeUpdate(QueryConstants.CREATE_SEQUENCE_METADATA);"], [1425, "            } catch (NewerTableAlreadyExistsException ignore) {"], [1426, "                // Ignore, as this will happen if the SYSTEM.SEQUENCE already exists at this fixed timestamp."], [1427, "                // A TableAlreadyExistsException is not thrown, since the table only exists *after* this fixed timestamp."], [1429, "        } catch (SQLException e) {"], [1430, "            sqlE = e;"], [1431, "        } finally {"], [1433, "                metaConnection.close();"], [1436, "                    sqlE.setNextException(e);"], [1437, "                } else {"], [1438, "                    sqlE = e;"], [1441, "            if (sqlE != null) {"], [1442, "                throw sqlE;"], [1443, "            }"], [1445, "        upgradeMetaDataTo3_0(url, props);"], [2260, ""]]}, "num_lines_added": 104, "num_lines_removed": 67}