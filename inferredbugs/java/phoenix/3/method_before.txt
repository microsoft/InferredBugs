    @Override
    public void close() throws SQLException {
        SQLException sqlE = null;
        try {
            // Attempt to return any unused sequences.
            returnAllSequences(this.sequenceMap);
        } catch (SQLException e) {
            sqlE = e;
        } finally {
            try {
                // Clear any client-side caches.  
                statsManager.clearStats();
            } catch (SQLException e) {
                if (sqlE == null) {
                    sqlE = e;
                } else {
                    sqlE.setNextException(e);
                }
            } finally {
                try {
                    childServices.clear();
                    latestMetaData = null;
                    connection.close();
                } catch (IOException e) {
                    if (sqlE == null) {
                        sqlE = ServerUtil.parseServerException(e);
                    } else {
                        sqlE.setNextException(ServerUtil.parseServerException(e));
                    }
                } finally {
                    try {
                        super.close();
                    } catch (SQLException e) {
                        if (sqlE == null) {
                            sqlE = e;
                        } else {
                            sqlE.setNextException(e);
                        }
                    } finally {
                        if (sqlE != null) {
                            throw sqlE;
                        }
                    }
                }
            }
        }
    }