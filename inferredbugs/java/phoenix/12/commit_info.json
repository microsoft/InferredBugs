{"hash": "7f6bf10b2cc54279b9210772323dc8f4d2939a19", "message": "PHOENIX-777 Support null value for fixed length ARRAY (Dumindu Buddhika)", "file_num_lines": 583, "diff_parsed": {"added": [[26, "import com.google.common.base.Strings;"], [58, "            Integer length = baseType.getMaxLength(elements[i]);"], [59, "            if (length != null) {"], [60, "                if (length == maxLength) {"], [61, "                    resizedElements[i] = elements[i];"], [62, "                } else {"], [63, "                    resizedElements[i] = baseType.pad(elements[i], maxLength);"], [64, "                }"], [66, "                resizedElements[i] = baseType.pad(elements[i], maxLength);"], [75, "        int maxLength = 0;"], [76, "        boolean resizeElements = false;"], [77, "        for (int i = 0; i < elements.length; i++) {"], [78, "            Integer length = baseType.getMaxLength(elements[i]);"], [79, "            if (length != null) {"], [80, "                if (maxLength == 0){"], [81, "                    maxLength = length;"], [82, "                    continue;"], [83, "                }"], [84, "                if (length > maxLength) {"], [85, "                    maxLength = length;"], [86, "                    resizeElements = true;"], [87, "                } else if (length < maxLength) {"], [88, "                    resizeElements = true;"], [89, "                }"], [90, "            } else {"], [91, "                resizeElements = true;"], [92, "            }"], [93, "        }"], [107, "                    for(int i = 0; i < elements.length; i++) {"], [108, "                        if(elements[i] != null) {"], [109, "                            maxLength = baseType.getMaxLength(elements[i]);"], [110, "                            break;"], [111, "                        }"], [112, "                    }"]], "deleted": [[57, "            int length = baseType.getMaxLength(elements[i]);"], [58, "            if (length == maxLength) {"], [59, "                resizedElements[i] = elements[i];"], [61, "                resizedElements[i] = baseType.pad(elements[i],maxLength);"], [70, "\t    Object element = elements[0];"], [71, "\t    int maxLength = baseType.getMaxLength(element);"], [72, "\t    boolean resizeElements = false;"], [73, "\t    for (int i = 1; i < elements.length; i++) {"], [74, "\t        int length = baseType.getMaxLength(elements[i]);"], [75, "\t        if (length > maxLength) {"], [76, "\t            maxLength = length;"], [77, "\t            resizeElements = true;"], [78, "\t        } else if (length < maxLength) {"], [79, "\t            resizeElements = true;"], [80, "\t        }"], [81, "\t    }"], [95, "    \t\t        this.maxLength = baseType.getMaxLength(elements[0]);"]]}, "num_lines_added": 34, "num_lines_removed": 17}