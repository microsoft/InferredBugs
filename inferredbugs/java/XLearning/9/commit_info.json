{"hash": "7a573de01939219ba94d7b59490ae9a656a0c0af", "message": "support the distribute lightLDA according the ps number", "file_num_lines": 817, "diff_parsed": {"added": [[64, "  private int lightLDALocalPort;"], [65, ""], [66, "  private String lightLDAEndpoint;"], [67, ""], [108, "    if (xlearningAppType.equals(\"LIGHTLDA\")) {"], [109, "      LOG.info(\"LightLDA role is:\" + this.role);"], [110, "    }"], [125, "    if (xlearningAppType.equals(\"LIGHTLDA\")) {"], [126, "      LOG.info(\"LightLDA index is:\" + this.index);"], [127, "    }"], [129, "    this.single = conf.getBoolean(XLearningConfiguration.XLEARNING_MODE_SINGLE, XLearningConfiguration.DEFAULT_XLEARNING_MODE_SINGLE);"], [155, "    if (((\"TENSORFLOW\".equals(xlearningAppType) || \"LIGHTLDA\".equals(xlearningAppType)) && !single) || xlearningAppType.equals(\"DISTLIGHTGBM\")) {"], [422, "    if (xlearningAppType.equals(\"LIGHTLDA\")) {"], [423, "      if (this.role.equals(XLearningConstants.PS)) {"], [424, "        LOG.info(\"Reserved available port: \" + reservedSocket.getLocalPort());"], [425, "        this.lightLDALocalPort = reservedSocket.getLocalPort();"], [426, "        InetAddress address = null;"], [427, "        try {"], [428, "          address = InetAddress.getByName(envs.get(ApplicationConstants.Environment.NM_HOST.toString()));"], [429, "        } catch (UnknownHostException e) {"], [430, "          LOG.info(\"acquire host ip failed \" + e);"], [431, "          reportFailedAndExit();"], [432, "        }"], [433, "        String ipPortStr = this.index + \" \" + address.getHostAddress() + \":\" + this.lightLDALocalPort;"], [434, "        this.lightLDAEndpoint = address.getHostAddress() + \":\" + this.lightLDALocalPort;"], [435, "        LOG.info(\"lightLDA ip port string is: \" + ipPortStr);"], [436, "        amClient.reportLightLDAIpPort(containerId, ipPortStr);"], [437, "      }"], [438, "      if (this.role.equals(XLearningConstants.WORKER)) {"], [439, "        String lightLDAIpPortStr;"], [440, "        while (true) {"], [441, "          lightLDAIpPortStr = amClient.getLightLDAIpPortStr();"], [442, "          if (lightLDAIpPortStr != null) {"], [443, "            LOG.info(\"lightLDA IP PORT list is: \" + lightLDAIpPortStr);"], [444, "            break;"], [445, "          }"], [446, "          Utilities.sleep(this.conf.getInt(XLearningConfiguration.XLEARNING_CONTAINER_UPDATE_APP_STATUS_INTERVAL, XLearningConfiguration.DEFAULT_XLEARNING_CONTAINER_UPDATE_APP_STATUS_INTERVAL));"], [447, "        }"], [448, "        Type type = new TypeToken<ConcurrentHashMap<String, String>>() {"], [449, "        }.getType();"], [450, "        ConcurrentHashMap<String, String> map = new Gson().fromJson(lightLDAIpPortStr, type);"], [451, "        PrintWriter writer = new PrintWriter(\"lightLDAEndPoints.txt\", \"UTF-8\");"], [452, "        for (String str : map.keySet()) {"], [453, "          writer.println(map.get(str));"], [454, "        }"], [455, "        writer.close();"], [456, "      }"], [457, "    }"], [458, ""], [530, "      if (!single) {"], [553, "    } else if (xlearningAppType.equals(\"LIGHTLDA\")) {"], [554, "      envList.add(\"LIGHTLDA_WORKER_NUM=\" + System.getenv(XLearningConstants.Environment.XLEARNING_LIGHTLDA_WORKER_NUM.toString()));"], [555, "      envList.add(\"LIGHTLDA_SERVER_NUM=\" + System.getenv(XLearningConstants.Environment.XLEARNING_LIGHTLDA_PS_NUM.toString()));"], [556, "      envList.add(\"LIGHTLDA_RANK=\" + this.index);"], [557, "      envList.add(\"LIGHTLDA_SERVER_ENDPOINT=\" + this.lightLDAEndpoint);"], [558, "      envList.add(\"LIGHTLDA_ROLE=\" + this.role);"]], "deleted": [[58, "  private Boolean singleMx;"], [59, ""], [121, "    this.single = conf.getBoolean(XLearningConfiguration.XLEARNING_TF_MODE_SINGLE, XLearningConfiguration.DEFAULT_XLEARNING_TF_MODE_SINGLE);"], [122, "    this.singleMx = conf.getBoolean(XLearningConfiguration.XLEARNING_MXNET_MODE_SINGLE, XLearningConfiguration.DEFAULT_XLEARNING_MXNET_MODE_SINGLE);"], [148, "    if ((\"TENSORFLOW\".equals(xlearningAppType) && !single) || xlearningAppType.equals(\"DISTLIGHTGBM\")) {"], [486, "      if (!singleMx) {"]]}, "num_lines_added": 56, "num_lines_removed": 6}