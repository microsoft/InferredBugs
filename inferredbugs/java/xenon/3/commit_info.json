{"hash": "6320d702a5fc2801b16604f7d5f65c00c96f0838", "message": "On demand service load\n\nUseful for single node xenon deployments with large service sets.\n\nhttps://www.pivotaltracker.com/story/show/109937750\n\nChange-Id: If1a1a0f4109b2b87da4422b9f05b8dc43b80694f", "file_num_lines": 3531, "diff_parsed": {"added": [[3971, "        Service factoryService = null;"], [3972, "        if (factoryPath != null) {"], [3973, "            factoryService = this.findService(factoryPath);"], [3974, "        }"], [3975, "        if (factoryService != null"], [3977, "            if (!factoryService.hasOption(ServiceOption.ON_DEMAND_LOAD)) {"], [3978, "                // minor optimization: if the service factory has never experienced a pause for one of the child"], [3979, "                // services, do not bother querying the blob index. A node might never come under memory"], [3980, "                // pressure so this lookup avoids the index query."], [3981, "                return false;"], [3982, "            }"], [3990, "        if (factoryService == null) {"], [3991, "            failRequestServiceNotFound(inboundOp);"], [3992, "            return true;"], [3993, "        }"], [3994, ""], [4017, "                return checkAndOnDemandStartService(inboundOp, factoryService);"], [4061, "    private boolean checkAndOnDemandStartService(Operation inboundOp, Service parentService) {"], [4062, "        String link = inboundOp.getUri().getPath();"], [4063, "        if (!parentService.hasOption(ServiceOption.FACTORY)) {"], [4064, "            failRequestServiceNotFound(inboundOp);"], [4065, "            return true;"], [4066, "        }"], [4067, ""], [4068, "        if (!parentService.hasOption(ServiceOption.ON_DEMAND_LOAD)) {"], [4069, "            return false;"], [4070, "        }"], [4071, ""], [4072, "        FactoryService factoryService = (FactoryService) parentService;"], [4073, ""], [4074, "        // create a POST to the factory and request it to start the service."], [4075, "        Operation onDemandPost = Operation.createPost(inboundOp.getUri());"], [4076, "        onDemandPost.addPragmaDirective(Operation.PRAGMA_DIRECTIVE_INDEX_CHECK)"], [4077, "                .setReferer(inboundOp.getReferer())"], [4078, "                .setExpiration(inboundOp.getExpirationMicrosUtc())"], [4079, "                .setReplicationDisabled(true);"], [4080, ""], [4081, "        onDemandPost.setCompletion((o, e) -> {"], [4082, "            if (e != null) {"], [4083, "                inboundOp.fail(e);"], [4084, "                return;"], [4085, "            }"], [4086, "            // proceed with handling original client request, service now started"], [4087, "            handleRequest(null, inboundOp);"], [4088, "        });"], [4089, ""], [4090, "        log(Level.INFO, \"On demand service start of %s\", link);"], [4091, ""], [4092, "        Service childService = null;"], [4093, "        try {"], [4094, "            childService = factoryService.createServiceInstance();"], [4095, "        } catch (Throwable e1) {"], [4096, "            inboundOp.fail(e1);"], [4097, "            return true;"], [4098, "        }"], [4099, ""], [4100, "        // bypass the factory, directly start service on host. This avoids adding a new"], [4101, "        // version to the index and various factory processes that are invoked on new"], [4102, "        // service creation"], [4103, "        this.startService(onDemandPost, childService);"], [4104, "        return true;"], [4105, "    }"], [4106, ""]], "deleted": [[338, ""], [3972, "        if (factoryPath != null"], [3974, "            // minor optimization: if the service factory has never experienced a pause for one of the child"], [3975, "            // services, do not bother querying the blob index. A node might never come under memory"], [3976, "            // pressure so this lookup avoids the index query."], [3977, "            return false;"], [4007, "                // there is nothing pending and the service index did not have a paused service"], [4008, "                return false;"], [4038, "                                log(Level.INFO, \"%s not paused\", path);"]]}, "num_lines_added": 63, "num_lines_removed": 9}