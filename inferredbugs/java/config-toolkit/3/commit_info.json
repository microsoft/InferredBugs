{"hash": "3e1684d90be6fc563e3047a9b1a279cc66d1a99a", "message": "export and import file with comments", "file_num_lines": 215, "diff_parsed": {"added": [[32, "import org.apache.commons.io.IOUtils;"], [39, "import org.springframework.util.StringUtils;"], [42, "import com.dangdang.config.service.entity.PropertyItemVO;"], [45, "import com.google.common.base.Splitter;"], [47, "import com.google.common.collect.Iterables;"], [48, "import com.google.common.collect.Lists;"], [160, "\t\tString versionedRoot = ZKPaths.makePath(nodeAuth.getAuthedNode(), versionMB.getSelectedVersion());"], [161, "\t\tString versionedRootComment = ZKPaths.makePath(nodeAuth.getAuthedNode(), versionMB.getSelectedVersion() + \"$\");"], [162, ""], [163, "\t\tnodeService.deleteProperty(ZKPaths.makePath(versionedRoot, propertyGroup));"], [164, "\t\tnodeService.deleteProperty(ZKPaths.makePath(versionedRootComment, propertyGroup));"], [165, ""], [211, "\t\tList<PropertyItemVO> items = parseInputFile(inputstream);"], [212, "\t\tif (!items.isEmpty()) {"], [213, "\t\t\tString groupFullPath = ZKPaths.makePath(ZKPaths.makePath(nodeAuth.getAuthedNode(), versionMB.getSelectedVersion()), group);"], [214, "\t\t\tString commentFullPath = ZKPaths.makePath(ZKPaths.makePath(nodeAuth.getAuthedNode(), versionMB.getSelectedVersion() + \"$\"), group);"], [215, ""], [216, "\t\t\tboolean created = nodeService.createProperty(groupFullPath, null);"], [218, "\t\t\t\tfor (PropertyItemVO item : items) {"], [219, "\t\t\t\t\tnodeService.createProperty(ZKPaths.makePath(groupFullPath, item.getName()), item.getValue());"], [220, "\t\t\t\t\tnodeService.createProperty(ZKPaths.makePath(commentFullPath, item.getName()), item.getComment());"], [233, "\tprivate Splitter PROPERTY_SPLITTER = Splitter.on('=').limit(2);"], [234, ""], [235, "\t/**"], [236, "\t * @param inputstream"], [237, "\t * @return"], [238, "\t * @throws IOException"], [239, "\t */"], [240, "\tprivate List<PropertyItemVO> parseInputFile(InputStream inputstream) throws IOException {"], [241, "\t\tList<String> lines = IOUtils.readLines(inputstream, Charsets.UTF_8.name());"], [242, "\t\tList<PropertyItemVO> items = Lists.newArrayList();"], [243, "\t\tString previousLine = null;"], [244, "\t\tfor (int i = 1; i < lines.size(); i++) {"], [245, "\t\t\tString line = lines.get(i);"], [246, "\t\t\tif (!line.startsWith(\"#\")) {"], [247, "\t\t\t\tIterable<String> parts = PROPERTY_SPLITTER.split(line);"], [248, "\t\t\t\tif (Iterables.size(parts) == 2) {"], [249, "\t\t\t\t\tPropertyItemVO item = new PropertyItemVO(Iterables.getFirst(parts, null), Iterables.getLast(parts));"], [250, "\t\t\t\t\tif (previousLine != null && previousLine.startsWith(\"#\")) {"], [251, "\t\t\t\t\t\titem.setComment(StringUtils.trimLeadingCharacter(previousLine, '#').trim());"], [252, "\t\t\t\t\t}"], [253, "\t\t\t\t\titems.add(item);"], [254, "\t\t\t\t}"], [255, "\t\t\t}"], [256, ""], [257, "\t\t\tpreviousLine = line;"], [258, "\t\t}"], [259, "\t\treturn items;"], [260, "\t}"], [261, ""], [311, ""]], "deleted": [[20, "import java.io.InputStreamReader;"], [21, "import java.io.Reader;"], [24, "import java.util.Map;"], [25, "import java.util.Map.Entry;"], [26, "import java.util.Properties;"], [48, "import com.google.common.collect.Maps;"], [160, "\t\tString authedNode = ZKPaths.makePath(nodeAuth.getAuthedNode(), versionMB.getSelectedVersion());"], [161, "\t\tnodeService.deleteProperty(ZKPaths.makePath(authedNode, propertyGroup));"], [207, "\t\tReader reader = new InputStreamReader(inputstream, Charsets.UTF_8);"], [208, "\t\tProperties properties = new Properties();"], [209, "\t\tproperties.load(reader);"], [210, "\t\tif (!properties.isEmpty()) {"], [211, "\t\t\tString authedNode = ZKPaths.makePath(nodeAuth.getAuthedNode(), versionMB.getSelectedVersion());"], [212, "\t\t\tString groupPath = ZKPaths.makePath(authedNode, group);"], [213, "\t\t\tboolean created = nodeService.createProperty(groupPath, null);"], [215, "\t\t\t\tMap<String, String> map = Maps.fromProperties(properties);"], [216, "\t\t\t\tfor (Entry<String, String> entry : map.entrySet()) {"], [217, "\t\t\t\t\tnodeService.createProperty(ZKPaths.makePath(groupPath, entry.getKey()), entry.getValue());"], [279, ""]]}, "num_lines_added": 51, "num_lines_removed": 19}