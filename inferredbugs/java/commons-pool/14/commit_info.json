{"hash": "3ebbb4fafd8f220aeea7ca19dbab38417b27d4b7", "message": "Ensured that when factories are changed, idle instances are destroyed using the original factories. Also deprecated the factory setters.  JIRA: POOL-157.  Reported by David Hu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/pool/trunk@932962 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 723, "diff_parsed": {"added": [[1292, "        destroy(toDestroy, _factory);"], [1296, "     * Private method to destroy all the objects in a collection using the"], [1297, "     * supplied object factory.  Assumes that objects in the collection are"], [1298, "     * instances of ObjectTimestampPair and that the object instances that"], [1299, "     * they wrap were created by the factory."], [1302, "     * @param factory PoolableConnectionFactory used to destroy the objects"], [1304, "    private void destroy(Collection c, PoolableObjectFactory factory) {"], [1307, "                factory.destroyObject(((ObjectTimestampPair)(it.next())).value);"], [1464, "     * throw an {@link IllegalStateException}.  If there are instances idle"], [1465, "     * in the pool when this method is invoked, these will be destroyed"], [1466, "     * using the original factory."], [1470, "     * @deprecated to be removed in version 2.0"], [1474, "        final PoolableObjectFactory oldFactory = _factory;"], [1486, "        destroy(toDestroy, oldFactory);"]], "deleted": [[1292, "        destroy(toDestroy);"], [1296, "     * Private method to destroy all the objects in a collection. Assumes"], [1297, "     * objects in the collection are instances of ObjectTimestampPair"], [1301, "    private void destroy(Collection c) {"], [1304, "                _factory.destroyObject(((ObjectTimestampPair)(it.next())).value);"], [1461, "     * throw an {@link IllegalStateException}."], [1479, "        destroy(toDestroy);"]]}, "num_lines_added": 14, "num_lines_removed": 7}