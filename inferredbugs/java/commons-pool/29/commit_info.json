{"hash": "ce07e11afb88a757035e88e9537cd72c465f9ea8", "message": "Pull up the JMX stats.\nprotected -> package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/pool/trunk@1332415 13f79535-47bb-0310-9956-ffa450edef68", "file_num_lines": 816, "diff_parsed": {"added": [[558, "        updateStatsBorrow(p, waitTime);"], [559, ""]], "deleted": [[23, "import java.util.LinkedList;"], [227, "        initStats();"], [228, ""], [561, "        borrowedCount.incrementAndGet();"], [562, "        synchronized (idleTimes) {"], [563, "            idleTimes.add(Long.valueOf(p.getIdleTimeMillis()));"], [564, "            idleTimes.poll();"], [565, "        }"], [566, "        synchronized (waitTimes) {"], [567, "            waitTimes.add(Long.valueOf(waitTime));"], [568, "            waitTimes.poll();"], [569, "        }"], [570, "        synchronized (maxBorrowWaitTimeMillisLock) {"], [571, "            if (waitTime > maxBorrowWaitTimeMillis) {"], [572, "                maxBorrowWaitTimeMillis = waitTime;"], [573, "            }"], [574, "        }"], [669, "    private void updateStatsReturn(long activeTime) {"], [670, "        returnedCount.incrementAndGet();"], [671, "        synchronized (activeTimes) {"], [672, "            activeTimes.add(Long.valueOf(activeTime));"], [673, "            activeTimes.poll();"], [674, "        }"], [675, "    }"], [676, ""], [1475, "    private void initStats() {"], [1476, "        for (int i = 0; i < AVERAGE_TIMING_STATS_CACHE_SIZE; i++) {"], [1477, "            activeTimes.add(null);"], [1478, "            idleTimes.add(null);"], [1479, "            waitTimes.add(null);"], [1480, "        }"], [1481, "    }"], [1482, ""], [1483, "    private long getMeanFromStatsCache(LinkedList<Long> cache) {"], [1484, "        List<Long> times = new ArrayList<Long>(AVERAGE_TIMING_STATS_CACHE_SIZE);"], [1485, "        synchronized (cache) {"], [1486, "            times.addAll(cache);"], [1487, "        }"], [1488, "        double result = 0;"], [1489, "        int counter = 0;"], [1490, "        Iterator<Long> iter = times.iterator();"], [1491, "        while (iter.hasNext()) {"], [1492, "            Long time = iter.next();"], [1493, "            if (time != null) {"], [1494, "                counter++;"], [1495, "                result = result * ((counter - 1) / (double) counter) +"], [1496, "                        time.longValue()/(double) counter;"], [1497, "            }"], [1498, "        }"], [1499, "        return (long) result;"], [1500, "    }"], [1501, ""], [1522, "    @Override"], [1523, "    public long getBorrowedCount() {"], [1524, "        return borrowedCount.get();"], [1525, "    }"], [1526, ""], [1527, "    @Override"], [1528, "    public long getReturnedCount() {"], [1529, "        return returnedCount.get();"], [1530, "    }"], [1531, ""], [1532, "    @Override"], [1533, "    public long getCreatedCount() {"], [1534, "        return createdCount.get();"], [1535, "    }"], [1536, ""], [1537, "    @Override"], [1538, "    public long getDestroyedCount() {"], [1539, "        return destroyedCount.get();"], [1540, "    }"], [1541, ""], [1542, "    @Override"], [1543, "    public long getDestroyedByEvictorCount() {"], [1544, "        return destroyedByEvictorCount.get();"], [1545, "    }"], [1546, ""], [1547, "    @Override"], [1548, "    public long getDestroyedByBorrowValidationCount() {"], [1549, "        return destroyedByBorrowValidationCount.get();"], [1550, "    }"], [1551, ""], [1552, "    @Override"], [1553, "    public long getMeanActiveTimeMillis() {"], [1554, "        return getMeanFromStatsCache(activeTimes);"], [1555, "    }"], [1556, ""], [1557, "    @Override"], [1558, "    public long getMeanIdleTimeMillis() {"], [1559, "        return getMeanFromStatsCache(idleTimes);"], [1560, "    }"], [1561, ""], [1562, "    @Override"], [1563, "    public long getMeanBorrowWaitTimeMillis() {"], [1564, "        return getMeanFromStatsCache(waitTimes);"], [1565, "    }"], [1566, ""], [1567, "    @Override"], [1568, "    public long getMaxBorrowWaitTimeMillis() {"], [1569, "        return maxBorrowWaitTimeMillis;"], [1570, "    }"], [1571, ""], [1765, "    private static final int AVERAGE_TIMING_STATS_CACHE_SIZE = 100;"], [1766, "    private final AtomicLong borrowedCount = new AtomicLong(0);"], [1767, "    private final AtomicLong returnedCount = new AtomicLong(0);"], [1768, "    private final AtomicLong createdCount = new AtomicLong(0);"], [1769, "    private final AtomicLong destroyedCount = new AtomicLong(0);"], [1770, "    private final AtomicLong destroyedByEvictorCount = new AtomicLong(0);"], [1771, "    private final AtomicLong destroyedByBorrowValidationCount = new AtomicLong(0);"], [1772, "    private final LinkedList<Long> activeTimes = new LinkedList<Long>(); // @GuardedBy(\"activeTimes\") - except in initStats()"], [1773, "    private final LinkedList<Long> idleTimes = new LinkedList<Long>(); // @GuardedBy(\"activeTimes\") - except in initStats()"], [1774, "    private final LinkedList<Long> waitTimes = new LinkedList<Long>(); // @GuardedBy(\"activeTimes\") - except in initStats()"], [1775, ""], [1776, "    private final Object maxBorrowWaitTimeMillisLock = new Object();"], [1777, "    private volatile long maxBorrowWaitTimeMillis = 0; // @GuardedBy(\"maxBorrowWaitTimeMillisLock\")"], [1778, ""]]}, "num_lines_added": 2, "num_lines_removed": 116}