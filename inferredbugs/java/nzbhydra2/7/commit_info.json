{"hash": "b502e5dd48d956e732584adbbf739bd2d791cd11", "message": "Add config repair on startup and fix initialization of invalid initial config", "file_num_lines": 166, "diff_parsed": {"added": [[30, "import net.jodah.failsafe.Failsafe;"], [31, "import net.jodah.failsafe.RetryPolicy;"], [36, "import java.io.*;"], [41, "import java.util.concurrent.TimeUnit;"], [51, "    private final RetryPolicy saveRetryPolicy = new RetryPolicy().retryOn(IOException.class).withDelay(500, TimeUnit.MILLISECONDS).withMaxRetries(3);"], [92, "            Failsafe.with(saveRetryPolicy)"], [93, "                    .onFailure(throwable -> logger.error(\"Unable to save config\", throwable))"], [94, "                    .run(() -> doWrite(targetFile, configAsYamlString))"], [95, "            ;"], [96, "        }"], [97, "    }"], [98, ""], [99, "    private void doWrite(File targetFile, String configAsYamlString) throws IOException {"], [100, "        if (Strings.isNullOrEmpty(configAsYamlString)) {"], [101, "            logger.warn(\"Empty config string provided\");"], [102, "            throw new IOException(\"Empty YAML\");"], [103, "        }"], [104, "        //Make sure correct YAML was provided"], [105, "        try {"], [106, "            objectMapper.readValue(configAsYamlString, BaseConfig.class);"], [107, "        } catch (IOException e) {"], [108, "            logger.warn(\"Unreadable config string provided\", e);"], [109, "            throw e;"], [110, "        }"], [111, ""], [112, ""], [113, "        File tempFile = new File(targetFile.getCanonicalPath() + \".bak\");"], [114, "        Files.write(tempFile.toPath(), configAsYamlString.getBytes(Charsets.UTF_8));"], [115, "        Files.copy(tempFile.toPath(), targetFile.toPath(), StandardCopyOption.REPLACE_EXISTING);"], [116, ""], [117, "        try {"], [118, "            objectMapper.readValue(targetFile, BaseConfig.class);"], [119, "        } catch (IOException e) {"], [120, "            logger.warn(\"Written target config file {} corrupted\", e);"], [121, "            throw e;"], [122, "        }"], [123, "    }"], [124, ""], [125, "    public void initializeIfNeeded(File yamlFile) throws IOException {"], [126, "        if (!yamlFile.exists()) {"], [127, "            logger.info(\"No config file found at {}. Initializing with base config\", yamlFile.getAbsolutePath());"], [128, "            try {"], [129, "                try (InputStream stream = BaseConfig.class.getResource(\"/config/baseConfig.yml\").openStream()) {"], [130, "                    Files.copy(stream, yamlFile.toPath());"], [132, "            } catch (IOException e) {"], [133, "                logger.error(\"Unable to initialize config file\", e);"], [134, "                throw e;"], [135, "            }"], [136, "        }"], [137, "    }"], [138, ""], [139, "    public void validateExistingConfig() {"], [140, "        File configFile = buildConfigFileFile();"], [141, "        if (!configFile.exists()) {"], [142, "            return;"], [143, "        }"], [144, "        try {"], [145, "            objectMapper.readValue(configFile, BaseConfig.class);"], [146, "        } catch (IOException e) {"], [147, "            File tempFile = new File(configFile.getAbsolutePath() + \".bak\");"], [148, "            if (!tempFile.exists()) {"], [149, "                logger.error(\"Config file corrupted: {}\", e.getMessage());"], [150, "                throw new RuntimeException(\"Config file \" + configFile.getAbsolutePath() + \" corrupted. If you find a ZIP in your backup folder restore it from there. Otherwise you'\u00f6\u00f6 have to delete the file and start over. Please contact the developer when you have it running.\");"], [151, "            }"], [152, "            try {"], [153, "                objectMapper.readValue(tempFile, BaseConfig.class);"], [154, "            } catch (IOException e2) {"], [155, "                logger.error(\"Config backup file corrupted: {}\", e.getMessage());"], [156, "                throw new RuntimeException(\"Config file \" + configFile.getAbsolutePath() + \" and its backup are corrupted. If you find a ZIP in your backup folder restore it from there. Otherwise you'\u00f6\u00f6 have to delete the file and start over. Please contact the developer when you have it running.\");"], [157, "            }"], [158, ""], [159, "            logger.warn(\"Invalid config file found. Will try to restore from backup. Error message: {}\", e.getMessage());"], [160, "            try {"], [161, "                Files.copy(tempFile.toPath(), configFile.toPath(), StandardCopyOption.REPLACE_EXISTING);"], [162, "            } catch (IOException e1) {"], [163, "                throw new RuntimeException(\"Error while restoring config file. You'll have to manually copy \" + tempFile.getAbsolutePath() + \" to \" + configFile.getAbsolutePath());"], [192, "        String applicationYmlContent;"], [193, "        try (BufferedReader reader = new BufferedReader(new InputStreamReader(BaseConfig.class.getResource(\"/config/baseConfig.yml\").openStream()))) {"], [194, "            applicationYmlContent = reader.lines().collect(Collectors.joining(\"\\n\"));"], [195, "        }"]], "deleted": [[34, "import java.io.BufferedReader;"], [35, "import java.io.File;"], [36, "import java.io.IOException;"], [37, "import java.io.InputStreamReader;"], [91, "            if (Strings.isNullOrEmpty(configAsYamlString)) {"], [92, "                logger.warn(\"Not writing empty config to file\");"], [93, "            } else {"], [94, "                try {"], [95, "                    File tempFile = new File(targetFile.getCanonicalPath() + \".tmp\");"], [96, "                    Files.write(tempFile.toPath(), configAsYamlString.getBytes(Charsets.UTF_8));"], [97, "                    Files.move(tempFile.toPath(), targetFile.toPath(), StandardCopyOption.REPLACE_EXISTING, StandardCopyOption.ATOMIC_MOVE);"], [98, "                } catch (IOException e) {"], [99, "                    logger.error(\"Unable to write config to temp file or temp file to yml file: \" + e.getMessage());"], [129, "        BufferedReader reader = new BufferedReader(new InputStreamReader(BaseConfig.class.getResource(\"/config/baseConfig.yml\").openStream()));"], [130, "        String applicationYmlContent = reader.lines().collect(Collectors.joining(\"\\n\"));"]]}, "num_lines_added": 80, "num_lines_removed": 15}