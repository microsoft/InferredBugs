{"hash": "b17b8924e81daf7cc05939238b8e7b96513a561c", "message": "Make config file write more robust, don't start in c:\\program files folders", "file_num_lines": 227, "diff_parsed": {"added": [[57, "    private static boolean anySettingsOverwritten = false;"], [60, "    private ConfigProvider configProvider;"], [61, "    @Autowired"], [99, "            startup(args, options);"], [101, "        }"], [102, "    }"], [104, "    protected static void startup(String[] args, OptionSet options) throws IOException {"], [105, "        if (options.has(\"datafolder\")) {"], [106, "            dataFolder = (String) options.valueOf(\"datafolder\");"], [107, "        } else {"], [108, "            dataFolder = \"./data\";"], [109, "        }"], [110, "        File dataFolderFile = new File(dataFolder);"], [111, "        dataFolder = dataFolderFile.getCanonicalPath();"], [112, "        //Check if we can write in the data folder. If not we can just quit now"], [113, "        if (!dataFolderFile.exists() && !dataFolderFile.mkdirs()) {"], [114, "            logger.error(\"Unable to read or write data folder {}\", dataFolder);"], [115, "            System.exit(1);"], [116, "        }"], [117, "        if (isOsWindows()) {"], [118, "            //It may happen that the yaml file is written empty due to some weird write right constraints in c:\\program files or c:\\program files (x86)"], [119, "            if (dataFolderFile.getAbsolutePath().toLowerCase().contains(\":\\\\program files\")) {"], [120, "                String[] split = dataFolderFile.getAbsolutePath().split(\"\\\\\\\\\");"], [121, "                logger.error(\"NZBHydra 2 may not work properly when run in {}\\\\\\\\{}. Please put it somewhere else\", split[0], split[1]);"], [122, "                System.exit(1);"], [124, "        }"], [127, "        System.setProperty(\"nzbhydra.dataFolder\", dataFolder);"], [128, "        System.setProperty(\"spring.config.location\", new File(dataFolder, \"nzbhydra.yml\").getAbsolutePath());"], [129, "        useIfSet(options, \"host\", \"server.address\");"], [130, "        useIfSet(options, \"port\", \"server.port\");"], [131, "        useIfSet(options, \"baseurl\", \"server.contextPath\");"], [132, "        useIfSet(options, \"nobrowser\", BROWSER_DISABLED, \"true\");"], [133, ""], [134, "        SpringApplication hydraApplication = new SpringApplication(NzbHydra.class);"], [135, "        NzbHydra.originalArgs = args;"], [136, "        wasRestarted = Arrays.stream(args).anyMatch(x -> x.equals(\"restarted\"));"], [137, "        if (!options.has(\"quiet\") && !options.has(\"nobrowser\")) {"], [138, "            hydraApplication.setHeadless(false);"], [140, ""], [141, "        applicationContext = hydraApplication.run(args);"], [166, "        boolean isOsWindows = isOsWindows();"], [177, "    private static boolean isOsWindows() {"], [178, "        String osName = System.getProperty(\"os.name\");"], [179, "        return osName.toLowerCase().contains(\"windows\");"], [180, "    }"], [181, ""], [242, "        boolean isOsWindows = isOsWindows();"]], "deleted": [[54, ""], [56, ""], [57, ""], [58, "    @Autowired"], [59, "    private ConfigProvider configProvider;"], [70, "    private static boolean anySettingsOverwritten = false;"], [71, ""], [72, ""], [104, "            if (options.has(\"datafolder\")) {"], [105, "                dataFolder = (String) options.valueOf(\"datafolder\");"], [106, "            } else {"], [107, "                dataFolder = \"./data\";"], [108, "            }"], [109, "            File dataFolderFile = new File(dataFolder);"], [110, "            dataFolder = dataFolderFile.getCanonicalPath();"], [111, "            //Check if we can write in the data folder. If not we can just quit now"], [112, "            if (!dataFolderFile.exists() && !dataFolderFile.mkdirs()) {"], [113, "                logger.error(\"Unable to read or write data folder {}\", dataFolder);"], [114, "                System.exit(1);"], [115, "            }"], [116, ""], [118, "            System.setProperty(\"nzbhydra.dataFolder\", dataFolder);"], [119, "            System.setProperty(\"spring.config.location\", new File(dataFolder, \"nzbhydra.yml\").getAbsolutePath());"], [120, "            useIfSet(options, \"host\", \"server.address\");"], [121, "            useIfSet(options, \"port\", \"server.port\");"], [122, "            useIfSet(options, \"baseurl\", \"server.contextPath\");"], [123, "            useIfSet(options, \"nobrowser\", BROWSER_DISABLED, \"true\");"], [125, "            SpringApplication hydraApplication = new SpringApplication(NzbHydra.class);"], [126, "            NzbHydra.originalArgs = args;"], [127, "            wasRestarted = Arrays.stream(args).anyMatch(x -> x.equals(\"restarted\"));"], [128, "            if (!options.has(\"quiet\") && !options.has(\"nobrowser\")) {"], [129, "                hydraApplication.setHeadless(false);"], [132, "            applicationContext = hydraApplication.run(args);"], [159, "        String osName = System.getProperty(\"os.name\");"], [160, "        boolean isOsWindows = osName.toLowerCase().contains(\"windows\");"], [231, "        String osName = System.getProperty(\"os.name\");"], [232, "        boolean isOsWindows = osName.toLowerCase().contains(\"windows\");"]]}, "num_lines_added": 47, "num_lines_removed": 37}