{"hash": "fa93fcb5a7821dbe29c56b0ca6b1f5e93e930939", "message": "Allow github plugin to read token from external file", "file_num_lines": 104, "diff_parsed": {"added": [[3, "import com.fasterxml.jackson.core.JsonProcessingException;"], [9, "import org.apache.maven.plugin.MojoExecutionException;"], [22, "        MockWebServer server = getMockWebServer();"], [23, "        HttpUrl url = server.url(\"/repos/theotherp/nzbhydra2/releases\");"], [25, "        //Here the magic happens"], [26, "        File pom = getTestFile(\"/src/test/resources/org/nzbhydra/github/mavenreleaseplugin/pomWithToken.xml\");"], [27, "        assertTrue(pom.exists());"], [28, "        ReleaseMojo releaseMojo = new ReleaseMojo();"], [29, "        releaseMojo = (ReleaseMojo) configureMojo(releaseMojo, extractPluginConfiguration(\"github-release-plugin\", pom"], [30, "        ));"], [31, "        releaseMojo.githubReleasesUrl = url.toString();"], [32, "        releaseMojo.windowsAsset = getTestFile(\"src/test/resources/org/nzbhydra/github/mavenreleaseplugin/windowsAsset.txt\");"], [33, "        releaseMojo.linuxAsset = getTestFile(\"src/test/resources/org/nzbhydra/github/mavenreleaseplugin/linuxAsset.txt\");"], [35, "        releaseMojo.execute();"], [36, "        verifyExecution(server);"], [37, "    }"], [39, "    public void testExecuteWithoutToken() throws Exception {"], [40, "        File pom = getTestFile(\"/src/test/resources/org/nzbhydra/github/mavenreleaseplugin/pomWithoutToken.xml\");"], [41, "        assertTrue(pom.exists());"], [42, "        ReleaseMojo releaseMojo = new ReleaseMojo();"], [43, "        releaseMojo = (ReleaseMojo) configureMojo(releaseMojo, extractPluginConfiguration(\"github-release-plugin\", pom"], [44, "        ));"], [45, "        releaseMojo.githubReleasesUrl = \"http://127.0.0.1\";"], [46, "        releaseMojo.windowsAsset = getTestFile(\"src/test/resources/org/nzbhydra/github/mavenreleaseplugin/windowsAsset.txt\");"], [47, "        releaseMojo.linuxAsset = getTestFile(\"src/test/resources/org/nzbhydra/github/mavenreleaseplugin/linuxAsset.txt\");"], [48, ""], [49, "        try {"], [50, "            releaseMojo.execute();"], [51, "            fail(\"Expected mojo exception\");"], [52, "        } catch (MojoExecutionException e) {"], [53, "            //"], [54, "        }"], [55, "    }"], [56, ""], [57, "    public void testExecuteWithTokenFile() throws Exception {"], [58, "        MockWebServer server = getMockWebServer();"], [61, "        File pom = getTestFile(\"/src/test/resources/org/nzbhydra/github/mavenreleaseplugin/pomWithTokenFile.xml\");"], [62, "        assertTrue(pom.exists());"], [63, "        ReleaseMojo releaseMojo = new ReleaseMojo();"], [64, "        releaseMojo = (ReleaseMojo) configureMojo(releaseMojo, extractPluginConfiguration(\"github-release-plugin\", pom"], [65, "        ));"], [66, "        releaseMojo.githubReleasesUrl = url.toString();"], [67, "        releaseMojo.windowsAsset = getTestFile(\"src/test/resources/org/nzbhydra/github/mavenreleaseplugin/windowsAsset.txt\");"], [68, "        releaseMojo.linuxAsset = getTestFile(\"src/test/resources/org/nzbhydra/github/mavenreleaseplugin/linuxAsset.txt\");"], [70, "        releaseMojo.execute();"], [71, ""], [72, "        verifyExecution(server);"], [73, "    }"], [74, ""], [75, "    protected void verifyExecution(MockWebServer server) throws InterruptedException, IOException {"], [93, ""], [94, "    private MockWebServer getMockWebServer() throws JsonProcessingException {"], [95, "        MockWebServer server = new MockWebServer();"], [96, "        Release draftReleaseResponse = new Release();"], [97, "        draftReleaseResponse.setUploadUrl(server.url(\"/repos/theotherp/nzbhydra2/releases/1/assets\").toString());"], [98, "        draftReleaseResponse.setUrl(server.url(\"/repos/theotherp/nzbhydra2/releases/1\").toString());"], [99, "        draftReleaseResponse.setDraft(true);"], [100, ""], [101, "        ArrayList<Asset> assets = new ArrayList<>();"], [102, "        assets.add(new Asset());"], [103, "        assets.add(new Asset());"], [104, "        draftReleaseResponse.setAssets(assets);"], [105, "        Release effectiveReleaseResponse = new Release();"], [106, ""], [107, "        effectiveReleaseResponse.setDraft(false);"], [108, "        MockResponse releaseMockResponse = new MockResponse()"], [109, "                .setResponseCode(200)"], [110, "                .setBody(objectMapper.writeValueAsString(draftReleaseResponse));"], [111, "        server.enqueue(releaseMockResponse);"], [112, "        server.enqueue(new MockResponse().setResponseCode(200)); //Windows asset upload"], [113, "        server.enqueue(new MockResponse().setResponseCode(200)); //Linux asset upload"], [114, "        server.enqueue(new MockResponse().setResponseCode(200).setBody(objectMapper.writeValueAsString(effectiveReleaseResponse))); //Setting the release effective"], [115, "        return server;"], [116, "    }"], [117, ""], [118, ""]], "deleted": [[20, "        MockWebServer server = new MockWebServer();"], [21, "        Release draftReleaseResponse = new Release();"], [22, "        draftReleaseResponse.setUploadUrl(server.url(\"/repos/theotherp/nzbhydra2/releases/1/assets\").toString());"], [23, "        draftReleaseResponse.setUrl(server.url(\"/repos/theotherp/nzbhydra2/releases/1\").toString());"], [24, "        draftReleaseResponse.setDraft(true);"], [26, "        ArrayList<Asset> assets = new ArrayList<>();"], [27, "        assets.add(new Asset());"], [28, "        assets.add(new Asset());"], [29, "        draftReleaseResponse.setAssets(assets);"], [30, "        Release effectiveReleaseResponse = new Release();"], [32, "        effectiveReleaseResponse.setDraft(false);"], [33, "        MockResponse releaseMockResponse = new MockResponse()"], [34, "                .setResponseCode(200)"], [35, "                .setBody(objectMapper.writeValueAsString(draftReleaseResponse));"], [36, "        server.enqueue(releaseMockResponse);"], [37, "        server.enqueue(new MockResponse().setResponseCode(200)); //Windows asset upload"], [38, "        server.enqueue(new MockResponse().setResponseCode(200)); //Linux asset upload"], [39, "        server.enqueue(new MockResponse().setResponseCode(200).setBody(objectMapper.writeValueAsString(effectiveReleaseResponse))); //Setting the release effective"], [43, "        //Here the magic happens"], [44, "        executePlugin(url);"], [77, "    protected void executePlugin(HttpUrl url) throws Exception {"], [78, "        File pom = getTestFile(\"/src/test/resources/org/nzbhydra/github/mavenreleaseplugin/pom.xml\");"], [79, "        assertTrue(pom.exists());"], [80, "        ReleaseMojo releaseMojo = new ReleaseMojo();"], [81, "        releaseMojo = (ReleaseMojo) configureMojo(releaseMojo, extractPluginConfiguration(\"github-release-plugin\", pom"], [82, "        ));"], [83, "        releaseMojo.githubReleasesUrl = url.toString();"], [84, "        releaseMojo.windowsAsset = getTestFile(\"src/test/resources/org/nzbhydra/github/mavenreleaseplugin/windowsAsset.txt\");"], [85, "        releaseMojo.linuxAsset = getTestFile(\"src/test/resources/org/nzbhydra/github/mavenreleaseplugin/linuxAsset.txt\");"], [86, ""], [87, "        releaseMojo.execute();"], [88, "    }"], [89, ""]]}, "num_lines_added": 76, "num_lines_removed": 33}