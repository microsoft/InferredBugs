{"hash": "12f7dace9a65308ca658da0697382716db5c4be6", "message": "PdfAcroForm: Cache fields\n\nAdded cache field, replace ArrayList of PDfFormFields with HashMap<String, PdfFormField>. Added removeField(String fieldName) method.\n\nDEVSIX-224", "file_num_lines": 339, "diff_parsed": {"added": [[12, "import java.util.HashMap;"], [14, "import java.util.Map;"], [25, "    protected HashMap<String, PdfFormField> fields = new HashMap<>();"], [33, "        getFormFields();"], [37, "        super(new PdfDictionary());"], [39, "        getFormFields();"], [98, "        fields.put(field.getFieldName().toUnicodeString(), field);"], [111, "    public HashMap<String, PdfFormField> getFormFields() {"], [112, "        if (fields.size() == 0) {"], [189, "    public PdfFormField getField(String fieldName) {"], [190, "        return fields.get(fieldName);"], [208, "        Map<String, PdfFormField> fields = getFormFields();"], [210, "        for (Map.Entry<String, PdfFormField> entry : fields.entrySet()) {"], [211, "            PdfFormField field = entry.getValue();"], [217, ""], [218, "            page = getPage(pageDic);"], [264, "        if (page != null && page.getPdfObject().getAsArray(PdfName.Annots).isEmpty()) {"], [274, "    public boolean removeField(String fieldName) {"], [275, "        PdfFormField field = getField(fieldName);"], [276, "        if (field == null) {"], [277, "            return false;"], [278, "        }"], [279, ""], [280, "        PdfDictionary pageDic = field.getPdfObject().getAsDictionary(PdfName.P);"], [281, ""], [282, "        if (pageDic != null) {"], [283, "            PdfPage page = getPage(pageDic);"], [284, ""], [285, "            if (page != null) {"], [286, "                PdfArray annots = page.getPdfObject().getAsArray(PdfName.Annots);"], [287, "                if (annots != null) {"], [288, "                    annots.remove(field.getPdfObject().getIndirectReference());"], [289, "                }"], [290, "            }"], [291, "        }"], [292, ""], [293, "        PdfDictionary parent = field.getParent();"], [294, "        if (parent != null) {"], [295, "            parent.getAsArray(PdfName.Kids).remove(field.getPdfObject().getIndirectReference());"], [296, "            fields.remove(fieldName);"], [297, "            return true;"], [298, "        }"], [299, ""], [300, "        if (getFields().remove(field.getPdfObject().getIndirectReference())) {"], [301, "            fields.remove(fieldName);"], [302, "            return true;"], [303, "        }"], [304, "        return false;"], [305, "    }"], [306, ""], [311, "    private HashMap<String, PdfFormField> iterateFields(PdfArray array) {"], [312, "        HashMap<String, PdfFormField> fields = new HashMap<>();"], [314, "        int index = 1;"], [317, "            PdfString fieldName = formField.getFieldName();"], [318, "            String name;"], [319, "            if (fieldName == null) {"], [320, "                name = formField.getParent().getAsString(PdfName.T).toUnicodeString() + \"_\" + index;"], [321, "                index++;"], [322, "            } else {"], [323, "                name = fieldName.toUnicodeString();"], [324, "            }"], [325, "            fields.put(name, formField);"], [327, "                fields.putAll(iterateFields(formField.getKids()));"], [409, ""], [410, "    private PdfPage getPage(PdfDictionary pageDic) {"], [411, "        PdfPage page;"], [412, "        for (int i = 1; i <= document.getNumOfPages(); i++) {"], [413, "            page = document.getPage(i);"], [414, "            if (page.getPdfObject() == pageDic) {"], [415, "                return page;"], [416, "            }"], [417, "        }"], [418, "        return null;"], [419, "    }"]], "deleted": [[23, "    protected List<PdfFormField> fields;"], [34, "        this(new PdfDictionary());"], [106, "    public List<PdfFormField> getFormFields() {"], [107, "        if (fields == null) {"], [184, "    public PdfFormField getField(String fieldName) { // TODO: HashMap instead!"], [185, "        List<PdfFormField> fields = getFormFields();"], [186, "        for (PdfFormField field : fields) {"], [187, "            if (field.getFieldName() != null && field.getFieldName().toUnicodeString().equals(fieldName)) {"], [188, "                return field;"], [189, "            }"], [190, "        }"], [191, ""], [192, "        return null;"], [210, "        List<PdfFormField> fields = getFormFields();"], [212, "        for (PdfFormField field : fields) {"], [218, "            for (int i = 1; i <= document.getNumOfPages(); i++) {"], [219, "                page = document.getPage(i);"], [220, "                if (page.getPdfObject() == pageDic) {"], [221, "                    break;"], [222, "                }"], [223, "            }"], [269, "        if (page.getPdfObject().getAsArray(PdfName.Annots).isEmpty()) {"], [283, "    private ArrayList<PdfFormField> iterateFields(PdfArray array) {"], [284, "        ArrayList<PdfFormField> fields = new ArrayList<>();"], [288, "            fields.add(formField);"], [290, "                fields.addAll(iterateFields(formField.getKids()));"]]}, "num_lines_added": 74, "num_lines_removed": 26}