{"hash": "0f3e74a01f3692e162abe7248437548bf48951fb", "message": "Upgrade to Elasticsearch 7.0.x  (#718)\n\n* Initial port of code to ES 7\r\n\r\n* Removed doc types\r\n\r\n* Removed docType for StatusUpdaterBolt\r\n\r\n* Applied formatting", "file_num_lines": 260, "diff_parsed": {"added": [[101, "    @Override"], [102, "    public void prepare(Map conf, TopologyContext context,"], [103, "            OutputCollector collector) {"], [104, "        super.prepare(conf, context, collector);"], [105, "        _collector = collector;"], [106, "        if (indexName == null) {"], [107, "            indexName = ConfUtils.getString(conf,"], [108, "                    IndexerBolt.ESIndexNameParamName, \"content\");"], [109, "        }"], [111, "        create = ConfUtils.getBoolean(conf, IndexerBolt.ESCreateParamName,"], [112, "                false);"], [113, "        pipeline = ConfUtils.getString(conf,"], [114, "                IndexerBolt.ESIndexPipelineParamName);"], [116, "        try {"], [117, "            connection = ElasticSearchConnection.getConnection(conf, ESBoltType,"], [118, "                    this);"], [119, "        } catch (Exception e1) {"], [120, "            LOG.error(\"Can't connect to ElasticSearch\", e1);"], [121, "            throw new RuntimeException(e1);"], [122, "        }"], [124, "        this.eventCounter = context.registerMetric(\"ElasticSearchIndexer\","], [125, "                new MultiCountMetric(), 10);"], [127, "        this.perSecMetrics = context.registerMetric(\"Indexer_average_persec\","], [128, "                new MultiReducedMetric(new PerSecondReducer()), 10);"], [130, "        waitAck = CacheBuilder.newBuilder()"], [131, "                .expireAfterWrite(60, TimeUnit.SECONDS).removalListener(this)"], [132, "                .build();"], [134, "        context.registerMetric(\"waitAck\", () -> waitAck.size(), 10);"], [135, "    }"], [209, "            String sha256hex = org.apache.commons.codec.digest.DigestUtils"], [210, "                    .sha256Hex(normalisedurl);"], [211, ""], [212, "            IndexRequest indexRequest = new IndexRequest(getIndexName(metadata))"], [213, "                    .source(builder).id(sha256hex);"]], "deleted": [[71, "    static final String ESDocTypeParamName = \"es.indexer.doc.type\";"], [78, "    private String docType;"], [103, "\t@Override"], [104, "\tpublic void prepare(Map conf, TopologyContext context, OutputCollector collector) {"], [105, "\t\tsuper.prepare(conf, context, collector);"], [106, "\t\t_collector = collector;"], [107, "\t\tif (indexName == null) {"], [108, "\t\t\tindexName = ConfUtils.getString(conf, IndexerBolt.ESIndexNameParamName, \"content\");"], [109, "\t\t}"], [110, "\t\tdocType = ConfUtils.getString(conf, IndexerBolt.ESDocTypeParamName, \"doc\");"], [111, "\t\tcreate = ConfUtils.getBoolean(conf, IndexerBolt.ESCreateParamName, false);"], [113, "\t\tpipeline = ConfUtils.getString(conf, IndexerBolt.ESIndexPipelineParamName);"], [115, "\t\ttry {"], [116, "\t\t\tconnection = ElasticSearchConnection.getConnection(conf, ESBoltType, this);"], [117, "\t\t} catch (Exception e1) {"], [118, "\t\t\tLOG.error(\"Can't connect to ElasticSearch\", e1);"], [119, "\t\t\tthrow new RuntimeException(e1);"], [120, "\t\t}"], [122, "\t\tthis.eventCounter = context.registerMetric(\"ElasticSearchIndexer\", new MultiCountMetric(), 10);"], [124, "\t\tthis.perSecMetrics = context.registerMetric(\"Indexer_average_persec\","], [125, "\t\t\t\tnew MultiReducedMetric(new PerSecondReducer()), 10);"], [127, "\t\twaitAck = CacheBuilder.newBuilder().expireAfterWrite(60, TimeUnit.SECONDS).removalListener(this).build();"], [129, "\t\tcontext.registerMetric(\"waitAck\", () -> waitAck.size(), 10);"], [130, "\t}"], [204, "            IndexRequest indexRequest = new IndexRequest("], [205, "                    getIndexName(metadata), docType, docID).source(builder);"]]}, "num_lines_added": 34, "num_lines_removed": 26}