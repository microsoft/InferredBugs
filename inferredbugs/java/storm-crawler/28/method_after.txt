    @Override
    public void open(Map stormConf, TopologyContext context,
            SpoutOutputCollector collector) {

        maxInFlightURLsPerBucket = ConfUtils.getInt(stormConf,
                ESStatusMaxInflightParamName, 1);
        maxBufferSize = ConfUtils.getInt(stormConf,
                ESStatusBufferSizeParamName, 100);
        randomSort = ConfUtils.getBoolean(stormConf, ESRandomSortParamName,
                true);
        maxSecSinceQueriedDate = ConfUtils.getInt(stormConf,
                ESMaxSecsSinceQueriedDateParamName, -1);

        sortField = ConfUtils.getString(stormConf, ESStatusSortFieldParamName,
                "nextFetchDate");

        super.open(stormConf, context, collector);

        partitioner = new URLPartitioner();
        partitioner.configure(stormConf);

        context.registerMetric("beingProcessed", new IMetric() {
            @Override
            public Object getValueAndReset() {
                return beingProcessed.size();
            }
        }, 10);
    }