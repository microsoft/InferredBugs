{"hash": "b4db9fafe5c2c9cc8af8f49173c7d6ea8975a3e7", "message": "Optimise nextFetchDate to speed up queries to Elasticsearch, implements #452", "file_num_lines": 204, "diff_parsed": {"added": [[20, "import java.text.ParseException;"], [21, "import java.text.SimpleDateFormat;"], [22, "import java.util.Calendar;"], [72, "    private static final String ESMostRecentDateIncreaseParamName = \"es.status.recentDate.increase\";"], [73, "    private static final String ESMostRecentDateMinGapParamName = \"es.status.recentDate.min.gap\";"], [77, "    private int recentDateIncrease = -1;"], [78, "    private int recentDateMinGap = -1;"], [83, "        sample = ConfUtils.getBoolean(stormConf, ESStatusSampleParamName,"], [84, "                sample);"], [85, "        recentDateIncrease = ConfUtils.getInt(stormConf,"], [86, "                ESMostRecentDateIncreaseParamName, recentDateIncrease);"], [87, "        recentDateMinGap = ConfUtils.getInt(stormConf,"], [88, "                ESMostRecentDateMinGapParamName, recentDateMinGap);"], [96, "            lastDate = new Date();"], [99, "        String formattedLastDate = String.format(DATEFORMAT, lastDate);"], [100, ""], [102, "                formattedLastDate);"], [105, "                \"nextFetchDate\").lte(formattedLastDate);"], [182, "        Date mostRecentDateFound = null;"], [183, ""], [184, "        SimpleDateFormat formatter = new SimpleDateFormat("], [185, "                \"yyyy-MM-dd'T'HH:mm:ss.SSSX\");"], [186, ""], [203, "                    // 2017-04-06T10:14:28.662Z"], [204, "                    String strDate = (String) keyValues.get(\"nextFetchDate\");"], [205, "                    try {"], [206, "                        Date nextFetchDate = formatter.parse(strDate);"], [207, "                        if (mostRecentDateFound == null"], [208, "                                || nextFetchDate.after(mostRecentDateFound)) {"], [209, "                            mostRecentDateFound = nextFetchDate;"], [210, "                        }"], [211, "                    } catch (ParseException e) {"], [212, "                        throw new RuntimeException(\"can't parse date :\""], [213, "                                + strDate);"], [214, "                    }"], [251, "        // optimise the nextFetchDate by getting the most recent value"], [252, "        // returned in the query and add to it, unless the previous value is"], [253, "        // within n mins in which case we'll keep it"], [254, "        if (mostRecentDateFound != null && recentDateIncrease >= 0) {"], [255, "            Calendar cal = Calendar.getInstance();"], [256, "            cal.setTime(mostRecentDateFound);"], [257, "            cal.add(Calendar.MINUTE, recentDateIncrease);"], [258, "            Date potentialNewDate = cal.getTime();"], [259, "            Date oldDate = null;"], [260, "            // check boundaries"], [261, "            if (this.recentDateMinGap > 0) {"], [262, "                Calendar low = Calendar.getInstance();"], [263, "                low.setTime(lastDate);"], [264, "                low.add(Calendar.MINUTE, -recentDateMinGap);"], [265, "                Calendar high = Calendar.getInstance();"], [266, "                high.setTime(lastDate);"], [267, "                high.add(Calendar.MINUTE, recentDateMinGap);"], [268, "                if (high.before(potentialNewDate)"], [269, "                        || low.after(potentialNewDate)) {"], [270, "                    oldDate = lastDate;"], [271, "                    lastDate = potentialNewDate;"], [272, "                }"], [273, "            } else {"], [274, "                oldDate = lastDate;"], [275, "                lastDate = potentialNewDate;"], [276, "            }"], [277, "            if (oldDate != null) {"], [278, "                LOG.info("], [279, "                        \"{} lastDate changed from {} to {} based on mostRecentDateFound {}\","], [280, "                        logIdprefix, oldDate, lastDate, mostRecentDateFound);"], [281, "            }"], [282, "        }"], [283, ""]], "deleted": [[72, "    private String lastDate;"], [77, "        sample = ConfUtils"], [78, "                .getBoolean(stormConf, ESStatusSampleParamName, false);"], [86, "            lastDate = String.format(DATEFORMAT, new Date());"], [90, "                lastDate);"], [93, "                \"nextFetchDate\").lte(lastDate);"], [186, ""]]}, "num_lines_added": 68, "num_lines_removed": 7}