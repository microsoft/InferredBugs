{"hash": "a546b7b4a4f7491b0baab3eab3b249787b8c58e9", "message": "ES config to accept multiple addresses at host:port format #259", "file_num_lines": 101, "diff_parsed": {"added": [[20, "import java.util.LinkedList;"], [21, "import java.util.List;"], [38, "import clojure.lang.PersistentVector;"], [39, ""], [64, "        List<String> hosts = new LinkedList<>();"], [65, ""], [66, "        Object addresses = stormConf.get(\"es.\" + boltType + \".addresses\");"], [67, "        // list"], [68, "        if (addresses instanceof PersistentVector) {"], [69, "            hosts.addAll((PersistentVector) addresses);"], [70, "        }"], [71, "        // single value?"], [72, "        else {"], [73, "            hosts.add(addresses.toString());"], [74, "        }"], [82, "        if (hosts.size() == 0) {"], [96, "        TransportClient tc = new TransportClient(settings);"], [97, "        for (String host : hosts) {"], [98, "            String[] hostPort = host.split(\":\");"], [99, "            // no port specified? use default one"], [100, "            int port = 9300;"], [101, "            if (hostPort.length == 2) {"], [102, "                port = Integer.parseInt(hostPort[1].trim());"], [103, "            }"], [104, "            InetSocketTransportAddress ista = new InetSocketTransportAddress("], [105, "                    hostPort[0].trim(), port);"], [106, "            tc.addTransportAddress(ista);"], [107, "        }"], [108, ""], [109, "        return tc;"]], "deleted": [[60, "        String host = ConfUtils.getString(stormConf, \"es.\" + boltType"], [61, "                + \".hostname\");"], [69, "        if (StringUtils.isBlank(host)) {"], [83, "        return new TransportClient(settings)"], [84, "                .addTransportAddress(new InetSocketTransportAddress(host, 9300));"]]}, "num_lines_added": 30, "num_lines_removed": 5}