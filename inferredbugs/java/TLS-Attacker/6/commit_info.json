{"hash": "84bc2a232c2d7defc8a98e078412a55a5c3c5076", "message": "Fuzzer can now seed itself with TestVectors", "file_num_lines": 163, "diff_parsed": {"added": [[25, "import de.rub.nds.tlsattacker.tls.config.ClientCommandConfig;"], [26, "import de.rub.nds.tlsattacker.tls.config.CommandConfig;"], [27, "import de.rub.nds.tlsattacker.tls.constants.ConnectionEnd;"], [28, "import de.rub.nds.tlsattacker.tls.workflow.DHWorkflowConfigurationFactory;"], [29, "import de.rub.nds.tlsattacker.tls.workflow.DtlsDhWorkflowConfigurationFactory;"], [30, "import de.rub.nds.tlsattacker.tls.workflow.DtlsEcdhWorkflowConfigurationFactory;"], [31, "import de.rub.nds.tlsattacker.tls.workflow.DtlsRsaWorkflowConfigurationFactory;"], [32, "import de.rub.nds.tlsattacker.tls.workflow.ECDHWorkflowConfigurationFactory;"], [33, "import de.rub.nds.tlsattacker.tls.workflow.RsaWorkflowConfigurationFactory;"], [34, "import de.rub.nds.tlsattacker.tls.workflow.UnsupportedWorkflowConfigurationFactory;"], [35, "import de.rub.nds.tlsattacker.tls.workflow.WorkflowConfigurationFactory;"], [37, "import de.rub.nds.tlsattacker.tls.workflow.action.executor.ExecutorType;"], [38, "import java.util.LinkedList;"], [97, "\tif (list.isEmpty()) {"], [98, "\t    LOG.log(Level.INFO, \"Creating Fuzzer Seed:\");"], [99, "\t    list.addAll(generateSeed());"], [100, "\t}"], [109, "    private List<TestVector> generateSeed() {"], [110, "\tList<TestVector> newList = new LinkedList<TestVector>();"], [111, "\tList<WorkflowConfigurationFactory> factoryList = new LinkedList<>();"], [112, "\tfactoryList.add(new DHWorkflowConfigurationFactory(new ClientCommandConfig()));"], [113, "\tfactoryList.add(new DtlsDhWorkflowConfigurationFactory(new ClientCommandConfig()));"], [114, "\tfactoryList.add(new DtlsEcdhWorkflowConfigurationFactory(new ClientCommandConfig()));"], [115, "\tfactoryList.add(new DtlsRsaWorkflowConfigurationFactory(new ClientCommandConfig()));"], [116, "\tfactoryList.add(new ECDHWorkflowConfigurationFactory(new ClientCommandConfig()));"], [117, "\tfactoryList.add(new RsaWorkflowConfigurationFactory(new ClientCommandConfig()));"], [118, "\tfactoryList.add(new UnsupportedWorkflowConfigurationFactory(new ClientCommandConfig()));"], [119, "\tfor (WorkflowConfigurationFactory factory : factoryList) {"], [120, "\t    WorkflowTrace trace = factory.createClientHelloTlsContext(ConnectionEnd.CLIENT).getWorkflowTrace();"], [121, "\t    newList.add(new TestVector(trace, mutator.getCertMutator().getServerCertificateStructure(), mutator"], [122, "\t\t    .getCertMutator().getClientCertificateStructure(), ExecutorType.TLS, null));"], [123, "\t    trace = factory.createFullServerResponseTlsContext(ConnectionEnd.CLIENT).getWorkflowTrace();"], [124, "\t    newList.add(new TestVector(trace, mutator.getCertMutator().getServerCertificateStructure(), mutator"], [125, "\t\t    .getCertMutator().getClientCertificateStructure(), ExecutorType.TLS, null));"], [126, "\t    trace = factory.createFullTlsContext(ConnectionEnd.CLIENT).getWorkflowTrace();"], [127, "\t    newList.add(new TestVector(trace, mutator.getCertMutator().getServerCertificateStructure(), mutator"], [128, "\t\t    .getCertMutator().getClientCertificateStructure(), ExecutorType.TLS, null));"], [129, "\t    trace = factory.createHandshakeTlsContext(ConnectionEnd.CLIENT).getWorkflowTrace();"], [130, "\t    newList.add(new TestVector(trace, mutator.getCertMutator().getServerCertificateStructure(), mutator"], [131, "\t\t    .getCertMutator().getClientCertificateStructure(), ExecutorType.TLS, null));"], [132, "\t}"], [133, "\treturn newList;"], [134, "    }"], [135, ""], [161, "\t\t\tfor (TLSAction action : list.get(i).getTrace().getTLSActions()) {"], [162, "\t\t\t    action.reset();"], [163, "\t\t\t}"], [164, "\t\t\tlist.get(i).getModificationList().clear();"], [204, "\t\t    if (server != null) {"], [205, "\t\t\tserver.release();"], [206, "\t\t    }"]], "deleted": [[117, "                        for (TLSAction action : list.get(i).getTrace().getTLSActions()) {"], [118, "                            action.reset();"], [119, "                        }"], [120, "                        list.get(i).getModificationList().clear();"], [160, "                    server.release();"]]}, "num_lines_added": 51, "num_lines_removed": 5}