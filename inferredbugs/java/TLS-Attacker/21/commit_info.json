{"hash": "fd0aeed9277e492689c038983d6a65f376c60231", "message": "Fixed TLS-Attacker Certificate usage, TLS-Attacker now only uses bouncy castle crypto.tls certificates and converts them only if necessary. These Certificates contain the complete certificate chain and not only the leaf certificate", "file_num_lines": 171, "diff_parsed": {"added": [[31, "import java.security.cert.CertificateParsingException;"], [35, "import java.util.logging.Level;"], [42, "import org.bouncycastle.crypto.tls.Certificate;"], [43, "import org.bouncycastle.jce.provider.X509CertificateObject;"], [63, "        Certificate cert = tlsContext.getServerCertificate();"], [64, "        X509CertificateObject certObject;"], [65, "        try {"], [66, "            certObject = new X509CertificateObject(cert.getCertificateAt(0));"], [67, "        } catch (CertificateParsingException ex) {"], [68, "            throw new WorkflowExecutionException(\"Could not parse server certificate\", ex);"], [69, "        }"], [70, "        if (!certObject.getPublicKey().getAlgorithm().equals(\"RSA\")) {"], [83, "            } else {"], [84, "                throw new WorkflowExecutionException(\"Cannot use non-RSA public Key in RSA-ClientKeyExchangeHandler\");"], [87, "            publicKey = (RSAPublicKey) certObject.getPublicKey();"]], "deleted": [[59, "        if (!tlsContext.getX509ServerCertificateObject().getPublicKey().getAlgorithm().equals(\"RSA\")) {"], [74, "            publicKey = (RSAPublicKey) tlsContext.getX509ServerCertificateObject().getPublicKey();"]]}, "num_lines_added": 15, "num_lines_removed": 2}