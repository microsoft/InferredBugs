{"hash": "882f3f7e1e6a714b09e2cf2965972ad659c32606", "message": "Introduced generic type to some tests. Close IO streams in tests.", "file_num_lines": 32, "diff_parsed": {"added": [[11, ""], [16, ""], [19, "\t *"], [20, "\t * @param filename"], [21, "\t *            The filename as path."], [24, "\tpublic static List<String> fileToLines(String filename) {"], [25, "\t\tList<String> lines = new LinkedList<String>();"], [26, "\t\tString line = \"\";"], [27, "\t\tBufferedReader in = null;"], [28, "\t\ttry {"], [29, "\t\t\tin = new BufferedReader(new FileReader(filename));"], [30, "\t\t\twhile ((line = in.readLine()) != null) {"], [31, "\t\t\t\tlines.add(line);"], [32, "\t\t\t}"], [33, "\t\t} catch (IOException e) {"], [34, "\t\t\te.printStackTrace();"], [35, "\t\t} finally {"], [36, "\t\t\tif (in != null) {"], [37, "\t\t\t\ttry {"], [38, "\t\t\t\t\tin.close();"], [39, "\t\t\t\t} catch (IOException e) {"], [40, "\t\t\t\t\t// ignore ... any errors should already have been"], [41, "\t\t\t\t\t// reported via an IOException from the final flush."], [42, "\t\t\t\t}"], [43, "\t\t\t}"], [44, "\t\t}"], [45, "\t\treturn lines;"], [46, "\t}"]], "deleted": [[11, ""], [16, ""], [19, "\t * @param filename The filename as path."], [22, "    public static List<String> fileToLines(String filename) {"], [23, "        List<String> lines = new LinkedList<String>();"], [24, "        String line = \"\";"], [25, "        try {"], [26, "            BufferedReader in = new BufferedReader(new FileReader(filename));"], [27, "            while ((line = in.readLine()) != null) {"], [28, "                lines.add(line);"], [29, "            }"], [30, "        } catch (IOException e) {"], [31, "            e.printStackTrace();"], [32, "        }"], [33, "        return lines;"], [34, "    }"]]}, "num_lines_added": 28, "num_lines_removed": 16}