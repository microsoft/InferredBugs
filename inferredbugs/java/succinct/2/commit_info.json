{"hash": "4401e1968d18a1c5c8c0c29ced1adb1913bbf024", "message": "Updated SuccinctShell to recognize succinct encoded data", "file_num_lines": 111, "diff_parsed": {"added": [[3, "import edu.berkeley.cs.succinct.StorageMode;"], [17, "        SuccinctFileBuffer succinctFileBuffer;"], [18, ""], [19, "        if(args[0].endsWith(\".succinct\")) {"], [20, "            succinctFileBuffer = new SuccinctFileBuffer(args[0], StorageMode.MEMORY_ONLY);"], [21, "        } else {"], [22, "            File file = new File(args[0]);"], [23, "            if (file.length() > 1L << 31) {"], [24, "                System.err.println(\"Cant handle files > 2GB\");"], [25, "                System.exit(-1);"], [26, "            }"], [27, "            byte[] fileData = new byte[(int) file.length()];"], [28, "            System.out.println(\"File size: \" + fileData.length + \" bytes\");"], [29, "            DataInputStream dis = new DataInputStream(new FileInputStream(file));"], [30, "            dis.readFully(fileData, 0, (int) file.length());"], [31, ""], [32, "            succinctFileBuffer = new SuccinctFileBuffer(fileData);"]], "deleted": [[16, "        File file = new File(args[0]);"], [17, "        if(file.length() > 1L<<31) {"], [18, "            System.err.println(\"Cant handle files > 2GB\");"], [19, "            System.exit(-1);"], [21, "        byte[] fileData = new byte[(int) file.length()];"], [22, "        System.out.println(\"File size: \" + fileData.length + \" bytes\");"], [23, "        DataInputStream dis = new DataInputStream(new FileInputStream(file));"], [24, "        dis.readFully(fileData, 0, (int)file.length());"], [26, "        SuccinctFileBuffer succinctFileBuffer = new SuccinctFileBuffer(fileData);"]]}, "num_lines_added": 17, "num_lines_removed": 9}