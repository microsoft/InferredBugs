{"hash": "6aa3bb60cebbf75a1261249e782572b175cf95f0", "message": "Fix InputStream parsing", "file_num_lines": 61, "diff_parsed": {"added": [[25, "import java.io.ByteArrayOutputStream;"], [40, "     * Reads all bytes from an InputStream and stores them in an array, up to"], [41, "     * a maximum count."], [42, "     * @param in The InputStream"], [43, "     * @param max The maximum number of bytes to read."], [44, "     **/"], [45, "    static byte[] readAll(InputStream in, int max) throws IOException {"], [46, "\tByteArrayOutputStream buf = new ByteArrayOutputStream();"], [47, "\twhile (max > 0) {"], [48, "\t    int n = in.read();"], [49, "\t    if (n == -1) break; // EOF"], [50, "\t    buf.write(n);"], [51, "\t    max--;"], [52, "\t}"], [53, "\treturn buf.toByteArray();"], [54, "    }"], [55, ""], [56, "    /**"], [64, "        return parse(fis);"], [91, "        byte[] magic = readAll(is, 8);"], [92, "        String magic_string = new String(magic);"], [93, "        if (magic_string.startsWith(\"bplist00\")) {"], [94, "            return BinaryPropertyListParser.parse(is);"], [95, "        } else if(magic_string.startsWith(\"<?xml\")) {"], [96, "            return XMLPropertyListParser.parse(is);"], [98, "            throw new UnsupportedOperationException(\"The given data is neither a binary nor a XML property list. ASCII property lists are not supported.\");"]], "deleted": [[31, "import java.util.Arrays;"], [47, "        byte[] magic = new byte[8];"], [48, "        fis.read(magic);"], [49, "        String magic_string = new String(magic);"], [50, "        fis.close();"], [51, "        if (magic_string.startsWith(\"bplist00\")) {"], [52, "            return BinaryPropertyListParser.parse(f);"], [53, "        } else if (magic_string.startsWith(\"<?xml\")) {"], [54, "            return XMLPropertyListParser.parse(f);"], [55, "        } else {"], [56, "            throw new UnsupportedOperationException(\"The given file is neither a binary nor a XML property list. ASCII property lists are not supported.\");"], [57, "        }"], [84, "        if(is.markSupported()) {"], [85, "            is.mark(10);"], [86, "            byte[] magic = new byte[8];"], [87, "            is.read(magic);"], [88, "            is.reset();"], [89, "            String magic_string = new String(magic);"], [90, "            if (magic_string.startsWith(\"bplist00\")) {"], [91, "                return BinaryPropertyListParser.parse(is);"], [92, "            } else if(magic_string.startsWith(\"<?xml\")) {"], [93, "                return XMLPropertyListParser.parse(is);"], [94, "            } else {"], [95, "                throw new UnsupportedOperationException(\"The given data is neither a binary nor a XML property list. ASCII property lists are not supported.\");"], [96, "            }"], [98, "            if (is.available() > Runtime.getRuntime().freeMemory()) {"], [99, "                throw new Exception(\"To little heap space available! Wanted to read \" + is.available() + \" bytes, but only \" + Runtime.getRuntime().freeMemory() + \" are available.\");"], [100, "            }"], [101, "            byte[] buf = new byte[is.available()];"], [102, "            is.read(buf);"], [103, "            is.close();"], [104, "            return parse(buf);"]]}, "num_lines_added": 26, "num_lines_removed": 32}