{"hash": "2b8634213a89b1e36526d89ab06a12c831ec05d1", "message": "Added low-level fast HTTP interception/listening mechanism.", "file_num_lines": 276, "diff_parsed": {"added": [[105, "\tprivate volatile byte[] path1, path2, path3;"], [107, "\tprivate volatile FastHttpHandler handler1, handler2, handler3;"], [109, "\tprivate volatile FastHttpHandler staticResourcesHandler = new FastStaticResourcesHandler(this);"], [110, ""], [111, "\tprivate final FastHttpListener listener;"], [119, "\tpublic FastHttp(FastHttpListener listener) {"], [120, "\t\tthis.listener = listener;"], [121, "\t}"], [123, "\tpublic synchronized void on(String verb, String path, FastHttpHandler handler) {"], [181, "\t\t// the listener may override all the request dispatching and handler execution"], [182, "\t\tif (!listener.request(this, ctx, isGet, isKeepAlive, body, verb, uri, path, query, protocol, hdrs)) {"], [183, "\t\t\treturn;"], [184, "\t\t}"], [185, ""], [254, "\t\t\tlistener.notFound(this, ctx, isGet, isKeepAlive, body, verb, uri, path, query, protocol, hdrs);"], [344, "\t\tlistener.onOkResponse(contentTypeHeader, content);"], [350, "\t\tlistener.onErrorResponse(500, contentTypeHeader, content);"], [410, "\tpublic FastHttpListener getListener() {"], [411, "\t\treturn listener;"], [412, "\t}"]], "deleted": [[105, "\tprivate byte[] path1, path2, path3;"], [107, "\tprivate FastHttpHandler handler1, handler2, handler3;"], [109, "\tprivate final FastHttpHandler staticResourcesHandler = new FastStaticResourcesHandler(this);"], [117, "\tpublic synchronized void on(String verb, String path, FastHttpHandler handler) {"]]}, "num_lines_added": 20, "num_lines_removed": 4}