{"hash": "7b083a72a31709d06ac1d331d5a1c419ea35b062", "message": "Using global customization when no Req object is available.", "file_num_lines": 193, "diff_parsed": {"added": [[8, "import org.rapidoid.http.customize.Customization;"], [79, "\t\t\tHttpIO.errorAndDone(req, e, Customization.of(req).errorHandler());"], [91, "\t\t\tHttpIO.errorAndDone(req, e, Customization.of(req).errorHandler());"], [120, "\t\t\t\treturn Customization.of(req).rolesProvider().getRolesForUser(req, username);"], [204, "\t\t\t\t\t\tHttpIO.errorAndDone(req, e, Customization.of(req).errorHandler());"], [263, "\t\t\tHttpIO.errorAndDone(req, (Throwable) result, Customization.of(req).errorHandler());"]], "deleted": [[78, "\t\t\tHttpIO.errorAndDone(req, e, req.routes().custom().errorHandler());"], [90, "\t\t\tHttpIO.errorAndDone(req, e, req.custom().errorHandler());"], [119, "\t\t\t\treturn req.routes().custom().rolesProvider().getRolesForUser(req, username);"], [203, "\t\t\t\t\t\tHttpIO.errorAndDone(req, e, req.routes().custom().errorHandler());"], [262, "\t\t\tHttpIO.errorAndDone(req, (Throwable) result, req.routes().custom().errorHandler());"]]}, "num_lines_added": 6, "num_lines_removed": 5}